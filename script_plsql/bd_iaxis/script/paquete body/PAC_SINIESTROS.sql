CREATE OR REPLACE PACKAGE BODY pac_siniestros IS
   /******************************************************************************
   NOMBRE:     PAC_SINIESTROS
   PROPÓSITOSITO:  Cuerpo del paquete de las funciones para
      los mmódulos del area de SINIESTROS
   REVISIONES:
   Ver        Fecha        Autor             Descripción
   ---------  ----------  ---------------  ------------------------------------
   1.0        17/02/2009   XPL / XVM         1. Creacición del package.
   2.0        16/09/2009   FAL               2. 0011100: CRE046 - Revisición de cesionesrea. Crida a la pac_cesionesrea.f_gar_rea per si garantia reasegurable
   3.0        22/09/2009   FAL               3. 0011051: CRE - Pagos sin cesiones - Afegir control de existÃ¿Â¨ncia del pagament a PAGOSSINCES
   4.0        28/09/2009   DCT               4. 10393 Crear parametrizacición de documentacición a solicitar por producto/causa/motivo
   5.0        21/10/2009   XPL               5. F_getunitradefecte, poner como por defecto cunitra y ctramit U000 / T0000
   6.0        23/10/2009   DCT               6. Procesos cambio estado siniestro/tramitacición
   7.0        23/11/2009   AMC               7. Bug 11848 - Se aÃ¿Â±ade el parametro psidepagtemp a f_ins_pago.
   8.0        21/12/2009   RSC               8. 0012199: CRE201 - Incidencia suplemento de anulacición de garantÃ¿Â­a por siniestro
   9.0        15/01/2010   NMM               9. 11845: CRE - Ajustar reasseguranÃ¿Â§a d'estalvi.
   10.0       15/01/2010   AMC              10. Bug 11945 - AGA - Crear columna Previsición Recobro para siniestros
   11.0       18/01/2010   AMC              11. Bug 12753 - CEM - Creacición automÃ¿Â¡tica de destinatario
   12.0       20/01/2010   AMC              12. Bug 11849 - CEM - Crear botción generacición pago automÃ¿Â¡tico en siniestros
   13.0       01/02/2010   AMC              13. Bug 12207 - AGA - Introduccición de reservas en productos de Baja (Salud)
   14.0       15/02/2010   AMC              14. Bug 13166 - CRE - Se crea la funcición f_del_mov paggar para borrar el detalle de los pagos/recobros
   15.0       24/02/2010   JMF              15. 0012822 CEM - RT - Tratamiento fiscal rentas a 2 cabezas
   16.0       03/03/2010   RSC              16. 0013482: CRE - Vencimientos PPJ DinÃ¿Â¡mico / Pla Estudiant
                                                         en fin de semana no se estÃ¿Â¡n contabilizano en Entradas / Salidas
   17.0       11/03/2010   JRH              17. 0012136: CEM - RVI - Verificacición productos RVI
   18.0       31/03/2010   RSC              18. 0014021: CRE - Entran rescates en dias no habiles PPJ DinÃ¿Â¡mico/PLA Estudiant
   19.0       26/02/2010   AMC              19. Bug 12668 - AGA - Normalizacición riesgo tipo direccición
   20.0       03/05/2010   DRA              20. 0014289: CRE200 - Recuperacición de cuenta de abono en siniestros y reembolsos
   21.0       05/05/2010   RSC              21. 0013435: CRE - Ajuste en el cÃ¿Â¡lculo de la fecha de efecto del suplemento automÃ¿Â¡tico
   22.0       31/05/2010   XPL              22. bug : 14607 AGA004 - Conceptos de pago a nivel de detalle del pago de un siniestro
   23.0       03/06/2010   AMC              23. Bug 14766 Se aÃ¿Â±aden nuevas funciones
   24.0       07/06/2010   FAL              24. bug 14347: AGA014 - Sinistres productes VIDA RISC (GENERAL i PREVISIO)
   25.0       15/06/2010   JRH              25. 0014185 ENSA101 - Proceso de carga del fichero (beneficio definido)
   26.0       23/06/2010   AMC              26. Bug 15153 Se aÃ¿Â±aden nuevas funciones
   27.0       10/08/2010   JRH              27. BUG 15669 : Campos nuevos
   28.0       06/10/2010   FAL              28. 0016219: GRC - Pagos de siniestros de dos garantÃ¿Â­as
   29.0       07/10/2010   JMF              29. 0016176: AGA601 - control de reserva mÃ¿Â¡xima por causa, motivo y garantia
   30.0       15/10/2010   JMF              30. 0016285 GRC - Pagos de siniestros de bajas
   31.0       08/11/2010   XPL              31. 15044: AGA202 - Crear pantalla para pagos de rentas
   32.0       09/11/2010   DRA              32. 0016506: CRE - Pantallas de siniestros nuevo mmódulo
   33.0       13/08/2010   PFA              33. 14587: CRT001 - AÃ¿Â±adir campo siniestro compaÃ¿Â±ia
   34.0       17/08/2010   PFA              34. 15006: MDP003 - Incluir nuevos campos en bÃ¿Âºsqueda siniestros
   35.0       22/11/2010   JRH              35. 16455: ENSA101 - GravaciÃ¿Â³ de destinatari
   36.0       14/12/2010   DRA              36. 0016506: CRE - Pantallas de siniestros nuevo mmódulo
   37.0       04/01/2011   ICV              37. 0016455: ENSA101 - GravaciÃ¿Â³ de destinatari
   38.0       21/12/2010   DRA              38. 0016683: AGA003 - destinatario automatico en siniestros de rentas y bajas
   39.0       13/12/2010   SRA              39. 0016924: GRC003 - Siniestros: estado y tipo de pago por defecto
   40.0       01/02/2011   JMP              40. 0017367: GRC003 - Personalizacición del nÃ¿Âºmero de siniestros
   41.0       28/02/2011   DRA              41. 0017799: CRE800 - ProcÃ¿Â©s de pagaments de baixes
   42.0       14/02/2011   JRH              42. 0017247: ENSA103 - Instalar els web-services als entorns CSI
   43.0       24/02/2011   JMP              43. 0017677: AGA800 - Siniestros Generales Previsición
   44.0       14/03/2011   DRA              44. 0017934: CRE - EliminaciÃ¿Â³ reserves de baixa
   45.0       16/03/2011   JMF              45. 0017970: ENSA101- Campos pantallas de siniestros y mejoras
   46.0       29/03/2011   JMF              46. BUG 0013477 ENSA101 - Nueva pantalla de Gestición Pagos Rentas
   47.0       11/04/2011   XPL              47. 11958: Agenda del tramitador. Siniestros
   48.0       04/05/2011   APD              48. 0018286: ENSA101 - Informar el siniestro en pagosrenta. Estados de las prestaciones.
   49.0       12/05/2011   DRA              49. 0018502: CRE800 - AmpliaciÃ¿Â³ del nÃ¿Âºm. de dies de una baixa
   50.0       02/05/2011   JMC              50. 0018379: LCOL701 - Desarrollo TrÃ¿Â¡mites Siniestros. Modificacición funciones de tramitaciones.
   51.0       17/06/2011   APD              51. 0018670: ENSA102- Permitir escoger las formas posibles de prestacición a partir del tipo de siniestro
   52.0       06/06/2011   SRA              52. 0018554: LCOL701 - Desarrollo de Modificacición de datos cabecera siniestro y ver histÃ¿Â³rico (BBDD).
   53.0       12/07/2011   ICV              53. 0018977: LCOL_S001 - SIN -Asignacición automÃ¿Â¡tica de tramitadores
   54.0       21/06/2011   JMF              54. 0018812 ENSA102-Proceso de alta de prestacición en forma de renta actuarial
   55.0       29/09/2011   MDS              55. 0018934: LCOL_S001 - SIN - Ultimo pago
   56.0       13/10/2011   JMC              56. 0019601: LCOL_S001-SIN - Subestado del pago
   57.0       07/11/2011   MDS              57. 0019981: LCOL_S001-SIN - ReteIVA y ReteICA en pagos
   58.0       24/10/2011   JMP              58. 0019832 LCOL_S001-SIN - Carpeta de siniestro
   59.0       10/11/2011   MDS              59. 0019821: LCOL_S001-SIN - Tramitacición judicial
   60.0       25/11/2011   RSC              60. 0020241: LCOL_T004-Parametrizacición de Rescates (retiros)
   61.0       29/11/2011   RSC              61. 0020309: LCOL_T004-Parametrizacición Fondos
   62.0       24/11/2011   JMC              62. 0020254: LCOL_S001-SIN - Rentas de siniestros
   63.0       08/11/2011   JMP              63. 0018423: LCOL000 - Multimoneda
   64.0       14/12/2011   ASN              64. 0019416: LCOL_S001-Siniestros y exoneracición de pago de primas
   65.0       22/12/2011   JMF              65. 0020611: LCOL_S001-SIN - Resumen reservas, pagos y recobros
   66.0       13/01/2012   JMF              66. 0020765: LCOL_S001-SIN - Validaciones cierres siniestros y tramitaciones II
   67.0       16/01/2012   ETM              67. 0019896: LCOL_S001-SIN - Declarante del siniestro
   68.0       16/01/2012   JMP              68. 0018423: LCOL705 - Multimoneda
   69.0       02/02/2012   JMP              69. 0021150: LCOL_S001-LCOL - Validar que no se pueda finalizar siniestro si pago no estÃ¿Â¡ pagado
   70.0       25/01/2012   JMP              70. 18423/104212: LCOL705 - Multimoneda
   71.0       14/02/2012   JMP              71. 21307/107043: Comprobacición de si hay documentacición obligatoria pendiente de adjuntar
   72.0       21/02/2012   ETM              72. 0021430: LCOL898-Ajustos interfases
   73.0       24/02/2012   AVT              73. 0021477: LCOL_A002-REA - Controlar la moneda del pago y la de la reserva respecto a la moneda del producto
   74.0       02/03/2012   MDS              37. 0021172: LCOL_S001-SIN - Alta/Modificacición masiva de reservas
   75.0       03/05/2012   ETM              75.0022048: LCOL_S001-SIN - NÃ¿Âº de juzgado cambiar tipo
   38.0       07/05/2012   MDS              38.0021855: MDP_S001-SIN - Detalle fraude
   39.0       23/05/2012   MDS              39.0022153: MDP_S001-SIN - NÃ¿Âºmero de presiniestro y documentacición
   74.1       16/05/2012   JMF              0021150 LCOL_S001-LCOL - Validar que no se pueda finalizar siniestro si pago no estÃ¿Â¡ pagado
   76.0       24/05/2012   JMF              0022284: MDP_S001-SIN - Retenciones en siniestros de pÃ¿Â³lizas anuladas
   77.0       01/06/2012   JMF              0022372: LCOL_S001-SIN - Cierre de siniestro al cerrar tramitacición
   39.0       22/05/2012   MDS              39. 0021817: MDP_S001-SIN - Agente en el alta de siniestros
   40.0       09/07/2012   JMF              0022490: LCOL_S001-SIN - Poder indicar que se generen los pagos como el Ã¿Âºltimo (Id=4604)
   41.0       19/07/2012   JMF              0022153 MDP_S001-SIN - NÃ¿Âºmero de presiniestro y documentacición
   42.0       31/07/2012   ASN              0023101: LCOL_S001-SIN - Apuntes de agenda automÃ¿Â¡ticos
                                            0023514: Movimientos de siniestros, tramites y tramitaciones
   43.0       30/08/2012   JMF              0023312: MDP_S001-SIN - Guardar documentos salida en creacición siniestro
   44.0       25/09/2012   AVT              0023644: LCOL_A002-Qtracker: 0004565: Cesion de Siniestro no descuenta reserva matematica
   44.1       25/06/2012   ASN              0023615: MDP_S001-SIN - Tramite de Asistencia automatico
   45.1       03/10/2012   MDS              0023805: MDP_S001-SIN - Visualizar/Ocultar casilla de asistencia en la pantalla de alta de siniestros
   46.0       15/10/2012   ASN              0023764: LCOL_S001-LCOL - SIN - PrÃ¿Â©stamos y siniestros
   47.0       11/10/2012   MDS              0024043: LCOL_T001- Qtracker 5161 - Saldos negativos en anulaciones de pago de retiro de ahorro
   48.0       24/10/2012   JMF              0023536 LCOL_S001-SIN - Tramitacición Otros
   49.0       24/10/2012   JMF              0023540 LCOL_S001-SIN - Tramitacición lesionados
   50.0       31/10/2012   ASN              0024491: MDP_S001-SIN - Control siniestros duplicados
   51.0       05/11/2012   JMF              0023643: MDP_S001-SIN - Ocultar tramite global
   52.0       20/11/2012   JMF              0024774 MDP_S001-SIN - Preparacion Pruebas R2 (asn)
   53.0       24/01/2013   ASN              0025812: LCOL_S010-SIN - GarantÃ¿Â­as segÃ¿Âºn tramitacición
   54.0       14/01/2013   ECP              0023644: LCOL_A002-Qtracker: 0004565: Cesion de Siniestro no descuenta reserva matematica
   55.0       21/02/2013   DCT              0025893: LCOL_S001-SIN - Acciones en pÃ¿Â³liza al rechazar siniestro (Id=6142)
   56.0       15/03/2013   ASN              0026108: LCOL_S010-SIN - Tipo de gasto en reservas
   57.0       08/04/2013   DCT              0026456: LCOL_S010-SIN - Parametrizacición documentos necesarios Autos
   58.0       26/04/2013   NSS              0026472: LCOL_S001-SIN - Param. Acciones Vida Grupo (Id=6857-6861-6868-6871)
   59.0       14/05/2013   ECP              0026676: LCOL_T001- QT 7040: Error cierre de provisiones por c?digo de transacci?n en movimiento de anulaciones errado
   60.0       04/06/2013   ETM              0026318: POSS038-(POSIN011)-Interfaces:IAXIS-SAP: Interfaz de Personas
   67.0       12/07/2013   MMM              0025872: LCOL_F002-Revision Qtrackers contabilidad F2 - Nota 0148800
   68.0       18/07/2013   MDS              0024742: (POSDE600)-Desarrollo-GAPS Tecnico-Id 179 - AÃ¿Â±adir siniestralidad a listado cartera
   69.0       30/07/2013   SHA              0027726: LCOL_S001-SIN - Destinatarios en listas restringidas
   70.0       05/08/2013   AVT              0027847: 0027847: LCOL_A004-Qtracker: 0008669: SE GENERO CIERRE DE AUT PARA PROVISIONES, REASEGUROS, XLS, PRESTAMOS, Y REMUNERCION LA CANAL Y NOGE
   71.0       30/10/2013   ASN              0024708: (POSPG500)- Parametrizacion - Sinestros/0157275 actualizar preguntas
   72.0       04/11/2013   ASN              0028813 (ext) - Considerar los movimientos con CMOSEG=5 (recordatorio) en F_ACCION_SINIESTRO
   73.0       09/12/2013   DCG              0026214: RSA003 - Parametrizar PPNC
   74.0       17/12/2013   NSS              0027487/0159742: POSS522 (POSSF200)- Resolucion de Incidencias FASE 1-2: Siniestros
   75.0       24/12/2013   ASN              0029495: LCOL_S010-SIN Considerar el ultimo pago
   76.0       12/02/2014   ASN              0029801: LCOL895-SIN - Cambios en el cÃ¿Â¡lculo de deducibles de autos
   77.0       08/01/2014   LPP              0028409: ENSA998-ENSA - Implementacición de historico de prestaciones
   78.0       08/01/2014   NSS              0028830/0166530: (POSND500)-N. Desarrollo: Siniestros: Compensaci?n cartera vs. Siniestros
   79.0       05/03/2014   JTT              0027487/167683: No funciona la generaciÃ¿Â³ de pagaments automatics quan no hi ha destinataris
   80.0       06/03/2014   NSS              0029224/0166661: (POSAN500)-Analisis-Siniestros-Nuevos Desarrollos
   81.0       07/03/2014   NSS              0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros
   82.0       28/03/2014   ASS              0028108: No recalcular reserva si no es para m.o./repuestos
   83.0       03/04/2014   JTT              27487/167564: AÃ¿Â±adir validacion del estado de tramitacion en los pagos automaticos
   84.0       28/03/2014   JSV              0026981: LCOL_T001-Incidencies comptabilitat de prestecs
   85.0       11/04/2014   JTT              30920/172139 - Correccion de bugs. Liberacion de las reservas al finalizar el siniestro
   86.0       15/04/2014   JTT              0030920: Correccion de bugs. No informar el sidepag cuando realizamos el contravalor
   87.0       16/04/2014   NSS              0031040: POSPG500-Crear un nuevo tipo de destinatario para los colectivos
   88.0       22/04/2014   NSS              0029989/165377: LCOL_S001-SIN - Rechazo de tramitacición Ã¿Âºnica
   89.0       25/04/2014   NSS              0030882/0173358: POSPG500-Informacición del asegurado de productos innominados en alta de siniestros
   90.0       15/05/2014   NSS              0025562/0174873: LCOL_S001-SIN - Revisición errores en UAT - PRE
   91.0       20/05/2014   JTT              0030920/0175342: Al finalizar el siniestro no libera las reservas de gastos 30, 31
   92.0       28/08/2014   JTT              0029224/0175701: Modificacio de la funcio F_ins_documentos
   93.0       20/06/2014   EDA              0024462: LCOL_A004-Qreacker: 11203 y 11707 (176931) Modificacición del circuito de siniestros-coaseguro
   94.0       26/06/2014   JTT              0024708: Modificamos la funcion F_get_capitalgar para que tenga en cuenta la fecha del sinietro
   95.0       26/06/2014   JTT              0031939: Modificamos F_actualiza_pagos para evitar movimientos repetidos en la reserva
   96.0       04/07/2014   JTT              0031294/178338: Revision pagos automaticos de baja diaria.
   97.0       14/07/2014   NSS              0031872/0178559: TRQ - SIN-Parametrizacición Siniestros
   98.0       17/07/2014   JTT              0028830/179900: Revision del proceso de pago de compensaciones
   99.0       24/07/2014   JTT              0029801/0179742: Modificacion AXIS_CORE corresponde con LCOL_4940
  100.0       06/08/2014   ASN              0032511: SIN - retencion poliza al cambiar reserva
  101.0       14/08/2014   EDA              0032159: Consitucición de reservas de coaseguro /180401
  102.0       19/08/2014   GGR              0027314: Cambio funcion f_persona_duplicada_nnumide por f_gubernamental
  103.0       21/08/2014   JTT              0024637/0182009: Modificacio de F_INS_PAGO_GAR per descartar els tipus d'indicadors negatius (pcxxxxx_tipind)
  104.0       21/08/2014   NSS              0032400: IAX998-SIN - Permitir rechazar un siniestro si hay pagos no indemnizatorios pagados
  105.0       27/08/2014   JTT              0031294/177836: AÃ¿Â±adir el campo idres a los objetos OB_IAXX_SIN_TRAMI_RESERVA y OB_IAX_SIN_TRAMI_PAGO_GAR
  106.0       04/09/2014   JTT              0032081/0182672: Modificamos la funcion F_INS_RESERVA para controlar la llamada a F_recalcula
  107.0       29/09/2014   JTT              0029801/0183298: Parche AXIS (LCOL_5231) AÃ¿Â±adimos un nuevo parametro a F_INS_RESERVA para controlar el recalculo de franquicia
  108.0       29/09/2014   JTT              0032935/0188363: Modificamos F_actualiza_pago para no realizar el movimiento de reserva para la moneda de la compaÃ¿Â±ia
  109.0       29/09/2014   JTT              0032428/188259: Cambio tipo PREGUNSINI.nsinies
  110.0       04/11/2014   JTT              0033298/190844: Correccion de las funciones F_movtrami, F_movpago i F_movtramte: al recuperar el nivel de pagos
  111.0       10/02/2015   JTT              0033798/0196746: Nuevas funcion F_getrow_reserva
  112.0       24/02/2015   FRC              0033345/0193484: Generacición de documentos en los eventos de siniestros.
  113.0       26/02/2015   JTT              0034848/0199314: Corregimos la f_ins_reserva
  114.0       02/03/2015   JTT              0034622/0197860: Fecha de formalizacición de siniestros
  115.0       12/03/2015   JTT              0034622/0197860: Fecha de formalizacición de siniestros
  116.0       17/03/2015   JTT              0034848/0200738: Correccion del uso del parametro pmigracion en la funcion F_INS_RESERVA
  117.0       20/03/2015   JTT              0033798/0200603: Compensacición de pagos vs cartera
  118.0        20/04/2015   JBA             0035098/0200436: Numero de cheque
  118.0       14/04/2015   JCP              0035102/200437: Validacion Innominados, ff_hay_lista_innominados
  119.0       19/05/2015   JTT              0033798/0201888: Compensacion de pagos vs cartera - Recibos agrupados
  120.0       23/06/2015   KBR              0036391: LAG8_894-Soporte a usuarios REA - UAT2
  121.0       01/07/2015   KJSC             0035608-207807 Filtro por causa y motivo
  122.0       05/01/2016   JCP              0039475/222692: Modificar la select para recuperar tambiÃ¿Â©n el nuevo campo fdeteccion de sin_siniestro
  123.0       31/05/2016   JTT              0041643/239030: Se modifica la funcion F_GESTIONA_COBPAG para que no comunique la anulacición del pago si previamente no ha sido remesado.
  124.0       10/06/2016   JTT              POSINS-65: Se corrige el suplemento de anulacion de garantia de la funcion F_ACCION_SINIESTRO_GAR
  125.0       22/08/2016   HRE              125 CONF-186: Se incluye manejo para gestion de marcas.
  124.0       02/05/2017   JGONZALEZ        CONF-693: Se incluyen campos de audiencia en agenda de citaciones
  125.0       11/08/2017   JGONZALEZ        CONF-1005: Desarrollo de GAP 67 solicitud de apoyo tecnico
  126.0       05/10/2017   ABENAVIDES       CONF-1133:Cambio en la funcion f_ins_reservadet para la tener los movimientos detallados en la tabla sin_tramita_reservadet.
  127.0       02/02/2018   ACL              0001044: Modificacición en la funcición f_get_reservas para que traiga la reserva de gastos del siniestro.
  128.0       07/02/2018   ACL              0001507: Modificacición en la funcición f_ins_reserva para que inserte cmovres 1 para las reservas de gastos.
  129.0       09/02/2018   ACL              0001877: Se agrega condicición en la funcición f_ins_reserva en cmovres para movimientos de pagos.
  130.0       22/02/2018   ACL              0001915: En la funcición f_ins_reserva se elimina los cambios de las incidencias 1507 y 1877. Se decide dejar modificaciones solo en el pac_propio_conf.
  131.0       22/03/2018   ACL              0001572: Se modifica la funcición f_ins_pago para que valide la moneda de la reserva sobre la cual se va a realizar un pago.
  132.0       04/04/2018   ACL              0001957: Se modifica la funcición f_ins_reserva para que valide si el pago se realiza sobre una reserva con solidaridad.
  133.0       06/04/2018   ACL              0001957: Se modifica la funcición f_ins_reserva para que valide ademÃ¿Â¡s en recobro o salvamento la marca de solidaridad.
  134.0       16/04/2018   ACL              0000780: En la funcición f_estado_tramitacion se deja de usar la validacición de que una tramitacición no informativa tenga alguna reserva.
  135.0       19/04/2018   ACL              0001285: Se modifica la funcición f_ins_citacion para que se llame a pac_agenda.f_set_agenda y pac_agenda.f_set_apunte.
  136.0       20/04/2015   ACL              0001211: Se modifica la funcición f_estado_final, para que no valide el valor de reserva sino el movimiento.
  137.0       01/03/2019   CES              TCS-1554: Convivencia Osiris iAxis
  138.0       19/03/2019   AABC             IAXIS-2066 Modificacion de la consulta de siniestro  .
  139.0       29/03/2019   AABC             IAXIS-2067 Tipo de siniestro.
  140.0       04/04/2019   AABC             IAXIS-2134 ENVIO DE CORREO.
  140.0       12/04/2019   AABC             IAXIS 3663 AABC 12/04/2019 Adicion campo observacion
  141.0       02/05/2019   Swapnil      	Cambio de IAXIS-3642
  142.0       19/07/2019    PK      		Cambio de IAXIS-4844 - Optimizar Petició® “ervicio I017
  143.0       18-11-2019   INFORCOL         Reaseguro Fase 1 Sprint 1
  144.0       19/12/2019    DFRP            IAXIS-7731: LISTENER Cambio de estado del siniestro y creació® ¤e Campos: Valor, Fecha, nÃºmero de pago, que comunica SAP a IAXIS   
  145.0       20/12/2019   IRDR             IAXIS-4131: Se agrega un campo(CMONICAPRIE) a la tabla sin_tramita_amparo para la visualizacion de la moneda que corresponde al Valor asegurado (axissin006 - Listado de Amparos Afectados)  
  146.0		  18/03/2020   SP				Cambios de  tarea IAXIS-13044
  147.0	      27/04/2020   JLTS             IAXIS-13133: Ajuste de los NVLs de la función f_tramita_reserva
   ******************************************************************************/
-- Ini bug 16924 - SRA - 14/12/2010: esta variable tomarÃ¿Â¡ el valor TRUE durante el proceso de alta de un nuevo siniestro y antes de que se
--                                      se cree el primer movimiento de apertura del siniestro para esa tramitacición, utilizÃ¿Â¡ndose para marcar
--                                      que es preciso determinar el estado/substado inicial en que se crea el siniestro (funcición PAC_SINIESTROS.F_ESTADOTRAM_ALTA_SINI)
   vbcalculaestadotramini BOOLEAN := FALSE;
-- Fin bug 16924 - SRA - 14/12/2010
   e_param_error  EXCEPTION;
   e_error        EXCEPTION;

   -- Bug 0023312 - 30/08/2012 - JMF
   FUNCTION ff_mintramite_dif9999(pnsinies IN VARCHAR2, pntramit IN NUMBER)
      RETURN NUMBER IS
      -- Identificar la tramitacion del tramite convencional
      v_ctramte      sin_tramite.ctramte%TYPE;
      v_ret          sin_tramitacion.ntramit%TYPE;
   BEGIN
      v_ret := pntramit;

      IF pac_sin_tramite.ff_hay_tramites(pnsinies) = 1 THEN
         SELECT b.ctramte
           INTO v_ctramte
           FROM sin_tramitacion a, sin_tramite b
          WHERE a.nsinies = pnsinies
            AND a.ntramit = pntramit
            AND b.nsinies = a.nsinies
            AND b.ntramte = a.ntramte;

         IF v_ctramte = 9999 THEN
            -- Identificar la tramitacion del tramite convencional
            SELECT MIN(ta.ntramit)
              INTO v_ret
              FROM sin_tramitacion ta, sin_tramite te
             WHERE ta.nsinies = te.nsinies
               AND ta.nsinies = pnsinies
               AND ta.ntramte = te.ntramte
               AND te.ctramte <> 9999;
         END IF;
      END IF;

      RETURN v_ret;
   END ff_mintramite_dif9999;

   -- cxtagente      VARCHAR2(100) := 'IAX_AGENTE';
   -- BUG 9020 - 10/03/2009 - XPL I XVM - Nou model de dades del Sinistre
--------------------------------------------------------------------
   FUNCTION f_ctipcoa(psseguro IN NUMBER, pctipcoa OUT NUMBER)
      RETURN NUMBER IS
   BEGIN
      SELECT ctipcoa
        INTO pctipcoa
        FROM seguros
       WHERE sseguro = psseguro;

      RETURN 0;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         pctipcoa := 0;
         RETURN 0;
      WHEN OTHERS THEN
         pctipcoa := 0;
         RETURN SQLCODE;
   END f_ctipcoa;

---------------------------------------------------------------------------------
   FUNCTION f_insctactescia(psidepag IN NUMBER, psseguro IN NUMBER)
      RETURN NUMBER IS
      xcempres       NUMBER(2);
      xccompani      NUMBER(3);
      xnnumlin       NUMBER(6);
   BEGIN
      -- Recupera la empresa y la compaÃ¿Â±Ã¿Â­a.
      BEGIN
         SELECT a.cempres, NVL(a.ccompani, b.ccompani)
           INTO xcempres, xccompani
           FROM seguros a, productos b
          WHERE a.cramo = b.cramo
            AND a.ctipseg = b.ctipseg
            AND a.cmodali = b.cmodali
            AND a.ccolect = b.ccolect
            AND a.sseguro = psseguro;
      EXCEPTION
         WHEN OTHERS THEN
            RETURN 101919;   -- Error al llegir dades de la taula SEGUROS
      END;

      -- Recuperar el siguiente nÃ¿Âºmero de lÃ¿Â­nea.
      BEGIN
         SELECT NVL(MAX(nnumlin), 0) + 1
           INTO xnnumlin
           FROM ctactescia
          WHERE ccompani = xccompani
            AND cempres = xcempres;
      EXCEPTION
         WHEN OTHERS THEN
            RETURN 110185;   -- Error al llegir de la taula CTACTESCIA
      END;

      -- Se inserta en ctactescia.
      -- cdebhab -> 1: debe.
      -- cconta --> 5: pago siniestros
      -- cestado --> 1: pendiente
      -- cmanual --> 0: automÃ¿Â¡tico
      INSERT INTO ctactescia
                  (ccompani, nnumlin, cdebhab, cconcta, cestado, ffecmov, iimport, cmanual,
                   cempres, nsinies, sidepag)
         (SELECT xccompani, xnnumlin, DECODE(ctippag, 2, 1, 8, 1, 3, 2, 7, 2, 1), 5, 1,
                 fordpag, isinret, 0, xcempres, nsinies, sidepag
            FROM pagosini
           WHERE sidepag = psidepag);

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN 110187;   -- Error a l' inserir a la taula CTACTESCIA
   END f_insctactescia;

   FUNCTION f_permite_alta_siniestro(
      psseguro IN NUMBER,
      pnriesgo IN NUMBER,
      pfsinies IN DATE,
      pfnotifi IN DATE,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      -- Ini Bug 26676 -- ECP -- 14/05/2013
      pskipfanulac NUMBER DEFAULT 0)
      -- Fin Bug 26676 -- ECP -- 14/05/2013)
   RETURN NUMBER IS
      num_err        NUMBER;
   BEGIN
      num_err := pac_propio.f_permite_alta_siniestro(psseguro, pnriesgo, pfsinies, pfnotifi,
                                                     pccausin, pcmotsin
                                                                       -- Ini Bug 26676 -- ECP -- 14/05/2013
                                                     , pskipfanulac
                                                                   -- Fin Bug 26676 -- ECP -- 14/05/2013
                );
      RETURN num_err;
   END f_permite_alta_siniestro;

-----------------------------------------------------------------------------------
   FUNCTION f_insctaseguro(
      psseguro IN NUMBER,
      pfcontab IN DATE,
      pffecmov IN DATE,
      pfvalmov IN DATE,
      cmovimi IN NUMBER,
      pimporte IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE)
      RETURN NUMBER IS
      num_linea      NUMBER;
      xfcontab       DATE;
-----------Calculamos el nÃ¿Âºmero de lÃ¿Â­nea----------------------------------
   BEGIN
      BEGIN
         SELECT MAX(nnumlin)
           INTO num_linea
           FROM ctaseguro
          WHERE sseguro = psseguro;
      EXCEPTION
         WHEN OTHERS THEN
            NULL;
      END;

      num_linea := NVL(num_linea + 1, 1);

      IF pffecmov >= pfcontab THEN
         xfcontab := pffecmov;
      ELSE
         xfcontab := pfcontab;
      END IF;

      BEGIN
         INSERT INTO ctaseguro
                     (sseguro, fcontab, nnumlin, ffecmov, fvalmov, cmovimi, imovimi,
                      ccalint, imovim2, nrecibo, nsinies, cmovanu, smovrec, cesta, nunidad,
                      cestado, fasign, nparpla, cestpar, iexceso, spermin, sidepag)
              VALUES (psseguro, xfcontab, num_linea, pffecmov, pfvalmov, cmovimi, pimporte,
                      0, 0, NULL, pnsinies, 0, NULL, NULL, NULL,
                      NULL, NULL, NULL, NULL, NULL, NULL, NULL);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            RETURN 102555;
         WHEN OTHERS THEN
            RETURN 102555;
      END;

      RETURN 0;
   END f_insctaseguro;

   FUNCTION f_insctaseguro_shw(
      psseguro IN NUMBER,
      pfcontab IN DATE,
      pffecmov IN DATE,
      pfvalmov IN DATE,
      cmovimi IN NUMBER,
      pimporte IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE)
      RETURN NUMBER IS
      num_linea      NUMBER;
      xfcontab       DATE;
-----------Calculamos el nÃ¿Âºmero de lÃ¿Â­nea----------------------------------
   BEGIN
      BEGIN
         SELECT MAX(nnumlin)
           INTO num_linea
           FROM ctaseguro_shadow
          WHERE sseguro = psseguro;
      EXCEPTION
         WHEN OTHERS THEN
            NULL;
      END;

      num_linea := NVL(num_linea + 1, 1);

      IF pffecmov >= pfcontab THEN
         xfcontab := pffecmov;
      ELSE
         xfcontab := pfcontab;
      END IF;

      BEGIN
         INSERT INTO ctaseguro_shadow
                     (sseguro, fcontab, nnumlin, ffecmov, fvalmov, cmovimi, imovimi,
                      ccalint, imovim2, nrecibo, nsinies, cmovanu, smovrec, cesta, nunidad,
                      cestado, fasign, nparpla, cestpar, iexceso, spermin, sidepag)
              VALUES (psseguro, xfcontab, num_linea, pffecmov, pfvalmov, cmovimi, pimporte,
                      0, 0, NULL, pnsinies, 0, NULL, NULL, NULL,
                      NULL, NULL, NULL, NULL, NULL, NULL, NULL);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            RETURN 102555;
         WHEN OTHERS THEN
            RETURN 102555;
      END;

      RETURN 0;
   END f_insctaseguro_shw;

   /*************************************************************************
      FUNCTION ff_contador_siniestros
         FunciÃ¿Â³ que retorna seqÃ¿Â¼Ã¿Â©ncia interna del sinistre
         param in pcramo   : codi ram
         param in pmodali  : codi modalitat
         param in pccausin : codi causa sinistre
         return            : 1 -> Tot correcte
                             0 -> S'ha produit un error
   *************************************************************************/
   FUNCTION ff_contador_siniestros(pcramo IN NUMBER, pmodali IN NUMBER, pccausin IN NUMBER)
      RETURN NUMBER IS
      v_nsinies      sin_siniestro.nsinies%TYPE;
      v_cagrpro      NUMBER(2);
   BEGIN
      SELECT DISTINCT cagrpro
                 INTO v_cagrpro
                 FROM productos
                WHERE cramo = pcramo;

      --IF pccausin = 1 THEN  -- Siniestro   ||Treiem aquesta part perque en un
      --                                     ||principi nomÃ¿Â©s tindrem sinistres
         -- Si el cramo es de vida riesgo (cagrpro = 1)
      IF v_cagrpro = 1 THEN
         v_nsinies := f_contador('01', pcramo);
      ELSE
         v_nsinies := f_contador('01', 99);
      END IF;

      /*ELSIF pccausin IN (3, 4, 5) THEN  -- Rescate o vencimiento
         v_nsinies := f_contador ('01', lpad(pcramo,2,'0')||pmodali);
      ELSE
         v_nsinies := f_contador ('01', pcramo);
      END IF;
      */
      RETURN v_nsinies;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN NULL;
   END ff_contador_siniestros;

   FUNCTION f_get_dades_sini(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vcont          NUMBER;
      v_tcausin      axis_literales.tlitera%TYPE;
      vsproduc       NUMBER;
      vcagente       NUMBER;
      v_res9999      NUMBER;   -- BUG 0023643 - 05/11/2012 - JMF
   BEGIN
      vcont := 0;

      -- Bug 16387 - 20/10/2010 - AMC
      SELECT sproduc
        INTO vsproduc
        FROM sin_siniestro s, seguros se
       WHERE s.nsinies = pnsinies
         AND s.sseguro = se.sseguro;

      IF NVL(pac_parametros.f_parproducto_n(vsproduc, 'PRESTACION'), 0) = 1 THEN
         v_tcausin := 'f_axis_literales(9900994,' || pidioma || ')';
      ELSE
         v_tcausin := 'tcausin';
      END IF;

      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      END IF;

      -- BUG 0023643 - 05/11/2012 - JMF
      v_res9999 := pac_siniestros.f_ireserva_ctramte(pnsinies, 9999);
      --jbn 19830 sin.falta
      -- BUG 0023643 - 05/11/2012 - JMF: afegir v_res9999
      vsquery :=
         'SELECT sin.nsinies, sin.sseguro, sin.nriesgo, null triesgo, sin.fsinies, TO_CHAR(fsinies,''HH24:MI'') hsinies, sin.falta,
                  sin.fnotifi, sin.ccausin, sin.nsincia, sin.ccompani, (select tcompani from companias where ccompani = sin.ccompani) tcompani, sin.npresin,
                  (select DECODE(ccausin,1,'
         || v_tcausin
         || ',tcausin)  from sin_descausa where ccausin = sin.ccausin and cidioma = '
         || pidioma
         || ') tcausin
                   ,  sin.cmotsin,
                  (select tmotsin from sin_desmotcau where ccausin = sin.ccausin and cmotsin = sin.cmotsin and cidioma = '
         || pidioma
         || ') tmotsin,
                  sin.cevento,
                  (select ttiteve from sin_desevento where cevento = sin.cevento and cidioma = '
         || pidioma
         || ') tevento
                  , sin.creclama,
                  ff_desvalorfijo(318,'
         || pidioma
         || ', creclama) treclama, sin.tsinies,
                  sin.cculpab,
                  ff_desvalorfijo(801,'
         || pidioma
         || ', cculpab) tculpab, sin.nasegur,
                  sin.ctipdec,
                  ff_desvalorfijo(321,'
         || pidioma
         || ', ctipdec) ttipdec,
                  sin.cmeddec,
                  ff_desvalorfijo(319,'
         || pidioma
         || ', cmeddec) tmeddec, sin.tnomdec, sin.tnom1dec, sin.tnom2dec ,sin.tape1dec, sin.tape2dec, sin.tteldec, sin.tmovildec , sin.temaildec,
         sin.ctipide, sin.nnumide,  ff_desvalorfijo (672, PAC_MD_COMMON.F_Get_CXTIDIOMA(),sin.ctipide) ttipide, dec_sperson'
         -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
         || ', sin.cnivel,sin.sperson2, ff_desvalorfijo (1017, PAC_MD_COMMON.F_Get_CXTIDIOMA(),sin.cnivel) tnivel,
                 decode(nvl(sin.sperson2,0),0,null,f_nombre(sin.sperson2,1,'
         || vcagente || ')) tperson2,fechaPP'
         -- Fi Bug 0015669 - JRH - 30/09/2010
         || ',sin.cpolcia, sin.iperit, sin.cfraude, ff_desvalorfijo(1034,' || pidioma
         || ', sin.cfraude) tfraude, sin.ccarpeta '
         --BUG17539 - JTS - 10/02/2011
         || ', sin.cagente '   -- Bug 21817 - MDS - 2/05/2012
                            || ', ' || CHR(39) || v_res9999 || CHR(39) || ' ireserva9999 '
         -- BUG 0024675 - 15/11/2012 - JMF: csalvam
         || ', sin.CSALVAM ' || ', sin.NMOVIMI, sin.fdeteccion '   --29786:NSS:23/01/2014
         || ', sin.tdetpreten ' 
         || 'FROM sin_siniestro sin
                  WHERE sin.nsinies = ' || pnsinies;
      -- Fi Bug 16387 - 20/10/2010 - AMC
      vcont := 2;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vcont, 'F_Get_Dades_Sini', SQLERRM);
         RETURN 1;
   END f_get_dades_sini;

   FUNCTION f_get_localiza(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlocali IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      --XPL#17558#10/02/2011
      END IF;

      -- Bug 20154/98048 - 15/11/2011 - AMC
      -- Bug 24780/130907 - 05/12/2012 - AMC
      vsquery :=
         'SELECT l.nsinies, l.ntramit, l.nlocali, l.sperson, f_nombre(l.sperson, 1,'
         || vcagente
         || ') tnombre, l.csiglas, (select d.TDENOM from
                DESTIPOS_VIA d where d.csiglas = l.csiglas and d.cidioma = '
         || pidioma
         || ')
                     tsiglas
         , l.tnomvia, l.nnumvia,
                  l.tcomple, l.tlocali, l.cpais, decode(l.cpais, null,null, ff_despais(l.cpais,'
         || pidioma
         || ')) tpais, l.cprovin,
            decode(l.cprovin, null,null,
                  F_DESPROVIN2(l.cprovin,l.cpais )) tprovin, l.cpoblac,
                  decode(l.cpoblac, null,null,F_DESPOBLAC2 ( l.cpoblac,l.cprovin)) tpoblac, l.cpostal, l.fbaja,
                  l.cviavp,l.clitvp,l.cbisvp,l.corvp,l.nviaadco,l.clitco,l.corco,l.nplacaco,
                  l.cor2co,l.cdet1ia,l.tnum1ia,l.cdet2ia,l.tnum2ia,l.cdet3ia,l.tnum3ia,l.localidad,
                  (select d.TDENOM from
                DESTIPOS_VIA d where d.csiglas = l.cviavp and d.cidioma = '
         || pidioma || ') tviavp '   --Bug 29889:NSS:29/01/2013
         || '
                  FROM sin_tramita_localiza l
                  WHERE l.nsinies = '
         || pnsinies || '
                  and l.ntramit = ' || pntramit || ' and l.nlocali = ' || pnlocali;
      -- Fi Bug 20154/98048 - 15/11/2011 - AMC
      -- Fi Bug 24780/130907 - 05/12/2012 - AMC

      /*   ELSE pac_persona.f_tdomici(l.csiglas,l.tnomvia,l.nnumvia,l.tcomple) tsiglas
            vsquery :=
               'SELECT l.nsinies, l.ntramit, l.nlocali, l.sperson, f_nombre(l.sperson, 1) tnombre, l.csiglas, (select d.TDENOM from
                DESTIPOS_VIA d where d.csiglas = l.csiglas and d.cidioma = '
               || pidioma
               || ') tsiglas, l.tnomvia, l.nnumvia,
                     l.tcomple, l.tlocali, l.cpais, ff_despais(l.cpais,'
               || pidioma
               || ') tpais, l.cprovin,
                     F_DESPROVIN2(l.cpais, l.cprovin) tprovin, l.cpoblac,
                     F_DESPOBLAC2 (l.cprovin, l.cpoblac) tpoblac, l.cpostal, l.fbaja
                     FROM sin_tramita_localiza l
                     WHERE l.nsinies = '
               || pnsinies || '
                     and l.ntramit = ' || pntramit || '
                     and rownum = 1';
         END IF;*/
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_localiza', SQLERRM);
         RETURN 1;
   END f_get_localiza;

   FUNCTION f_get_movsiniestro(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pnmovsin IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      vsquery :=
         'SELECT sin.nsinies, sin.nmovsin, sin.cestsin,  ff_desvalorfijo(6,' || pidioma
         || ', sin.cestsin)  testsin, sin.festsin,  sin.ccauest,
            (select tcauest from sin_descauest where ccauest = sin.ccauest and
            cestsin = sin.cestsin and cidioma = '
         || pidioma
         || ') tcauest,
            cunitra,
        ( select ttramitad from sin_codtramitador tram
           where tram.ctramitad = sin.cunitra)  tunitra,
            sin.ctramitad, (select ttramitad from sin_codtramitador tram
           where tram.ctramitad = sin.ctramitad) ttramitad, sin.cusualt, sin.falta
         FROM sin_movsiniestro sin
         WHERE sin.nsinies = '
         || pnsinies || ' and sin.nmovsin = ' || pnmovsin;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_movsiniestro', SQLERRM);
         RETURN 1;
   END f_get_movsiniestro;

   FUNCTION f_get_agenda(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlinage IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 12604 - 11/01/2010 - AMC - Detvalores incorrectos
      vsquery :=
         'SELECT sin.nsinies, sin.ntramit, sin.nlinage, sin.ctipreg, sin.cestage, sin.cmanual,
         sin.ffinage, sin.tlinage, sin.cusualt, sin.falta, sin.cusumod, sin.fmodifi, sin.ttitage,
         ff_desvalorfijo(329,'
         || pidioma || ', sin.ctipreg) ttipreg,
         ff_desvalorfijo(29,' || pidioma
         || ', sin.cestage) testage,
         ff_desvalorfijo(693,' || pidioma
         || ', sin.cmanual) tmanual
         FROM sin_tramita_agenda sin
         where sin.nsinies = '
         || pnsinies || '
         and sin.ntramit = ' || pntramit || '
         and sin.nlinage = ' || pnlinage;
      --Fi Bug 12604 - 11/01/2010 - AMC - Detvalores incorrectos
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_agenda', SQLERRM);
         RETURN 1;
   END f_get_agenda;

   /*************************************************************************
      FUNCTION f_get_personarel
         FunciÃ¿Â³ que retorna seqÃ¿Â¼Ã¿Â©ncia interna del sinistre
         param in pnsinies   : codi sinistre
         param in pntramit  : codi tramitaciÃ¿Â³
         param in pnpersrel : nÃ¿Âºm lÃ¿Â­nea persona relacionada
         return            : 1 -> Tot correcte
                             0 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_get_personarel(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnpersrel IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 12604 - 11/01/2010 - AMC - Detvalores incorrectos
      vsquery :=
         'SELECT sin.nsinies, sin.ntramit, sin.npersrel, sin.ctipide, sin.nnumide, sin.tnombre,
         sin.tapelli1, sin.tapelli2, sin.ttelefon, sin.sperson, sin.tdesc '
         --ff_desvalorfijo(329,'
         --|| pidioma || ', sin.ctipreg) ttipreg,
         --ff_desvalorfijo(29,' || pidioma
         --|| ', sin.cestage) testage,
         --ff_desvalorfijo(693,' || pidioma
         --|| ', sin.cmanual) tmanual
         -- bug 22325/115249 - 22/06/2012 - AMC
         || ' ,sin.tnombre2,sin.tmovil,sin.temail '
                                                   -- Fi bug 22325/115249 - 22/06/2012 - AMC
                                                   -- Bug 22256/122456 - 27/09/2012 - AMC
         || ' ,sin.ctiprel '
         -- Fi Bug 22256/122456 - 27/09/2012 - AMC
         || 'FROM sin_tramita_personasrel sin
         where sin.nsinies = ' || pnsinies || '
         and sin.ntramit = ' || pntramit || '
         and sin.npersrel = ' || pnpersrel;
      --Fi Bug 12604 - 11/01/2010 - AMC - Detvalores incorrectos
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_personarel', SQLERRM);
         RETURN 1;
   END f_get_personarel;

   FUNCTION f_get_reserva(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pnmovres IN NUMBER,
      pcgarant IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- 27059 - AÃ¿Â±adir IFRANQ
      -- 26108 - no hace falta modificar PNMOVRES es la clave 'unica'
      -- IAXIS 5454 AABC 12/11/2019 valor de reexpresion 
      vsquery :=
         'SELECT tram.nsinies, tram.ntramit, tram.ctipres, tram.nmovres, tram.cgarant, tram.ccalres, tram.fmovres, tram.cmonres,
         tram.ireserva, tram.ipago, tram.iingreso, tram.irecobro, tram.fresini, tram.fresfin, tram.sidepag, tram.sproces, tram.fcontab,
         tram.falta,F_IAX_NOMBREUSUARIO(tram.cusumod), tram.fmodifi,tram.iprerec,
         ff_desvalorfijo(322,'
         || pidioma
         || ', tram.ctipres) ttipres,
         (select trotgar from garangen where cgarant = tram.cgarant and cidioma = '
         || pidioma || ') trotgar,
         ff_desvalorfijo(693,' || pidioma
         || ', tram.ccalres) tcalres, icaprie, ipenali, fultpag, ctipgas,
         ff_desvalorfijo(1047,'
         || pidioma || ', ctipgas) ttipgas , '
         || ' pac_validaciones_sin.f_sin_val_reser (tram.nsinies,tram.nmovres,tram.idres) IRESERVA_MONCIA    ,        IPAGO_MONCIA    ,    '
         || ' IINGRESO_MONCIA, IRECOBRO_MONCIA, ICAPRIE_MONCIA,IPENALI_MONCIA, IPREREC_MONCIA, IFRANQ, IFRANQ_MONCIA,'
         || ' NDIAS '   --Bug 27487/159742:NSS:26/11/2013
         || ', ITOTIMP, ITOTIMP_MONCIA'   -- 24637/0147756:NSS:05/03/2014
         || ', ITOTRET, ITOTRET_MONCIA,';   -- 24637/0147756:NSS:20/03/2014
      -- IAXIS 5454 AABC 12/11/2019 valor de reexpresion 
      --bug 24637/147756:NSS:03/03/2014
      vsquery :=
         vsquery
         || '(select isl.ctipind
            from sin_imp_sap_log isl
            where tram.nsinies = isl.nsinies(+)
         and tram.ntramit = isl.ntramit(+)
         and tram.nmovres = isl.nmovres(+)
         and tram.ctipres = isl.ctipres(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 1)
           ) iva_ctipind, ';   --IVA
      vsquery :=
         vsquery
         || '     (select isl.ctipind
            from sin_imp_sap_log isl
            where tram.nsinies = isl.nsinies(+)
         and tram.ntramit = isl.ntramit(+)
         and tram.nmovres = isl.nmovres(+)
         and tram.ctipres = isl.ctipres(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 2)
           ) retenc_ctipind, ';   --RETEFUENTE
      vsquery :=
         vsquery
         || '     (select isl.ctipind
            from sin_imp_sap_log isl
            where tram.nsinies = isl.nsinies(+)
         and tram.ntramit = isl.ntramit(+)
         and tram.nmovres = isl.nmovres(+)
         and tram.ctipres = isl.ctipres(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 3)
           ) reteiva_ctipind, ';   --RETEIVA
      vsquery :=
         vsquery
         || '   (select isl.ctipind
            from sin_imp_sap_log isl
            where tram.nsinies = isl.nsinies(+)
         and tram.ntramit = isl.ntramit(+)
         and tram.nmovres = isl.nmovres(+)
         and tram.ctipres = isl.ctipres(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 4)
           ) reteica_ctipind   ';   --RETEICA
      --fin bug 24637/147756:NSS:03/03/2014
      -- IAXIS 5454 AABC 12/11/2019 valor de reexpresion 
      vsquery := vsquery || ', cmovres ';   --0031294/0174788: NSS:26/05/2014
      vsquery := vsquery || ', idres ';   --0031294/0177836: JTT:11/07/2014
    vsquery := vsquery ||
           ', pac_propio.f_desc_movres(tram.nsinies, tram.ntramit, tram.ctipres, tram.nmovres, tram.cmovres, tram.csolidaridad, ' ||
           pidioma || ') ttiptrans, tram.csolidaridad, 
         pac_validaciones_sin.f_sin_val_reexpr(tram.nsinies,tram.nmovres,tram.idres) ivalreex,
         pac_validaciones_sin.f_sin_val_trans(tram.nsinies,tram.nmovres,tram.idres) ivaltran_moncia';
      -- IAXIS 5454 AABC 12/11/2019 valor de reexpresion 
      vsquery := vsquery
                 || '
         FROM sin_tramita_reserva tram
         where tram.nsinies = ' || pnsinies || '
         and tram.ntramit = ' || pntramit || '
         and tram.ctipres = ' || pctipres || '
         and tram.nmovres = ' || pnmovres;

      IF pcgarant IS NOT NULL THEN
      vsquery := vsquery
                 || '
         and tram.cgarant = ' || pcgarant;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_reserva', SQLERRM);
         RETURN 1;
   END f_get_reserva;
 /*************************************************************************
      FUNCTION f_get_amparo
           la tabla sin_tramita_amparo .

      param in pnsinies : Numero Siniestro         
       param in pntramit : Numero Tramitacion Siniestro        
       param in pcgarant : Codigo Garantia         

   -- BUG 004131 - 2019-05-23 - EA 
   *************************************************************************/ 
FUNCTION f_get_amparo(
     pnsinies IN sin_siniestro.nsinies%TYPE,         
       pntramit IN NUMBER,         
       pcgarant IN NUMBER,         
       vsquery OUT VARCHAR2)
      RETURN NUMBER IS 
       BEGIN

	  -- 03/01/2020   I.R.D   IAXIS-4131: Campo CMONICAPRIE 

         vsquery :=
         'SELECT nsinies, ntramit, cgarant, npreten, icaprie, cmonpreten, cusualt, falta, cusumod, fmodifi,
         (select trotgar from garangen where cgarant = sin_tramita_amparo.cgarant and cidioma = 8) trotgar,0 ctipres,0 nmovres,finivig,ffinvig, cmonicaprie from sin_tramita_amparo where
               nsinies='||pnsinies||' and ntramit='||pntramit||' and cgarant='||pcgarant;



RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'f_get_amparo', SQLERRM);
         RETURN 1;  
  END f_get_amparo; 



   FUNCTION f_get_referencia(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      psrefext IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      vsquery :=
         'SELECT srefext, nsinies, ctipref, trefext, frefini, freffin, cusualt, falta, cusumod, fmodifi
         ,ff_desvalorfijo(800022 ,'
         || pidioma
         || ' ,ctipref)
         FROM sin_siniestro_referencias
         where nsinies = ' || pnsinies || '
         and srefext = ' || psrefext;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'f_get_referencia', SQLERRM);
         RETURN 1;
   END f_get_referencia;

   FUNCTION f_get_movtramit(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnmovtra IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      vsquery :=
         'SELECT mov.nsinies, mov.ntramit, mov.nmovtra,  mov.cunitra , mov.ctramitad,
         mov.cesttra, mov.csubtra, mov.festtra, mov.cusualt, mov.falta,
         ff_desvalorfijo(930,'
         || pidioma || ', mov.cesttra) testtra,
         ff_desvalorfijo(665,' || pidioma
         || ', mov.csubtra)  tsubtra,
         (select ttramitad from sin_codtramitador tram
           where tram.ctramitad = mov.cunitra)  tunitra,
         (select ttramitad from sin_codtramitador tram
           where tram.ctramitad = mov.ctramitad)  ttramitad
           , mov.ccauest
           , (SELECT sd.tcauest
             FROM sin_codcauest sc, sin_descauest sd
             WHERE sc.ccauest = sd.ccauest
             AND sc.cestsin = sd.cestsin
             AND sd.cidioma = '
         || pidioma
         || '
             and sc.ccauest = mov.ccauest
             and sc.cestsin = decode(mov.cesttra,0,20,1,22,3,23,-1)
           ) tcauest
         FROM sin_tramita_movimiento mov
         where mov.nsinies = '
         || pnsinies || '
         and mov.ntramit = ' || pntramit || '
         and mov.nmovtra = ' || pnmovtra;
        -- bug21196:ASN:26/03/2012 aÃ¿Â±adimos ccauest
         -- 0 (abierto) --> 20 Tramitacición Apertura
         -- 1 (Terminado) --> 22 Tramitacición Finalizacición
         -- 3 (Rechazado) --> 23 Tramitacición Rechazo
      /*(select f_nombre(tram.sperson,1) from sin_codtramitador tram
           where tram.ctramitad = mov.cunitra) tunitra,
      (select f_nombre(tram.sperson,1) from sin_codtramitador tram
           where tram.ctramitad = mov.ctramitad) ttramitad,*/
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_movtramit', SQLERRM);
         RETURN 1;
   END f_get_movtramit;

   FUNCTION f_get_tramitacion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      vcagente       NUMBER;
      vobj           VARCHAR2(100) := 'PAC_SINIESTROS.f_get_tramitacion';
      vpar           VARCHAR2(900)
                                  := 's=' || pnsinies || ' n=' || pntramit || ' i=' || pidioma;
      vpas           NUMBER(3) := 1;
   BEGIN
      vpas := 100;

      --BUG17539 - JTS - 10/02/2011
      SELECT s.cagente
        INTO vcagente
        FROM seguros s, sin_siniestro si
       WHERE s.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      -- Bug 15260 - 05/07/2010 - AMC
      -- BUG 0023536 - 24/10/2012 - JMF: Afegir csubtiptra
      vpas := 110;
      vsquery :=
         'SELECT tram.nsinies, tram.ntramit, tram.ctramit, tram.ctcausin, tram.cinform,'
         || ' tram.cusualt, tram.falta, tram.cusumod, tram.fmodifi,'
         || ' pac_siniestros.FF_GET_TIPUSTRAM(tram.nsinies,tram.ntramit,codtram.ctiptra,'
         || pidioma || ') ttramit,' || ' ff_desvalorfijo(815,' || pidioma
         || ', tram.ctcausin) ttcausin,' || ' ff_desvalorfijo(326,' || pidioma
         || ', tram.cinform) tinform,' || ' codtram.ctiptra, ff_desvalorfijo(800,' || pidioma
         || ', codtram.ctiptra) ttiptra,'
         || ' codtram.cborrab,tram.cculpab, ff_desvalorfijo(801,' || pidioma
         || ', tram.cculpab) tculpab,' || ' tram.ccompani, f_nombre(comp.sperson, 1,'
         || vcagente || ') tcompani, tram.cpolcia,'
         || ' tram.iperit, tram.nsincia, tram.ntramte' || ' , tram.csubtiptra,'
         || ' pac_siniestros.FF_GET_SUBTIPUSTRAM(tram.ctramit,tram.csubtiptra,' || pidioma
         || ') tsubtiptra, tram.nradica '
         || ' FROM companias comp, sin_codtramitacion codtram, sin_tramitacion tram'
         || ' where tram.nsinies = ' || pnsinies || ' and tram.ntramit = ' || pntramit
         || ' and codtram.ctramit = tram.ctramit AND comp.ccompani(+) = tram.ccompani';
      -- Fi Bug 15260 - 05/07/2010 - AMC
       --Fi BUG17539
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, SQLCODE || ' ' || SQLERRM);
         RETURN 1;
   END f_get_tramitacion;

   FUNCTION f_get_danyo(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndano IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      vsquery :=
         'SELECT trad.nsinies, trad.ntramit, trad.ndano, nvl(trad.ctipinf,0) as ctipinf, ff_desvalorfijo(802, '
         || pidioma
         || ',trad.ctipinf) ttipinf,  trad.tdano
         FROM sin_tramita_dano trad
         where trad.nsinies = '
         || pnsinies || '
         and trad.ntramit = ' || pntramit || '
         and trad.ndano = ' || pndano;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_danyo', SQLERRM);
         RETURN 1;
   END f_get_danyo;

   FUNCTION f_get_detdanyo(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndano IN NUMBER,
      pndetdano IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      vsquery :=
         'SELECT trad.nsinies, trad.ntramit, trad.ndano, trad.ndetdano
         FROM sin_tramita_detdano trad
         where trad.nsinies = '
         || pnsinies || '
         and trad.ntramit = ' || pntramit || '
         and trad.ndano = ' || pndano || '
         and trad.ndetdano = ' || pndetdano;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_detdanyo', SQLERRM);
         RETURN 1;
   END f_get_detdanyo;

   FUNCTION f_get_citacion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pncitacion IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;

      END IF;

      vsquery :=
         'SELECT tracit.nsinies, tracit.ntramit, pd.sperson, pd.tnombre,
          pd.tapelli1, pd.tapelli2, p.nnumide, tracit.ncitacion,
          tracit.fcitacion, tracit.hcitacion,
          tracit.cpais, ff_despais(tracit.cpais,' || pidioma || ') tpais,
          tracit.cprovin, f_desprovin2(tracit.cprovin, tracit.cpais) tprovin,
          tracit.cpoblac, f_despoblac2(tracit.cpoblac, tracit.cprovin) tpoblac,
          tracit.tlugar, tracit.taudien, tracit.coral, tracit.cestado, tracit.cresolu, tracit.fnueva,
          tracit.tresult, tracit.cmedio, tracit.falta, tracit.cusualt, tracit.fmodifi, tracit.cusumod
         FROM sin_tramita_citaciones tracit, per_personas p, per_detper pd
         where tracit.nsinies = ' || pnsinies || '
          and tracit.ntramit = ' || pntramit || '
          and tracit.ncitacion = ' || pncitacion || '
          and tracit.sperson = p.sperson
          and pd.sperson = p.sperson
          AND (( p.swpubli = 0 and pd.fmovimi = (SELECT MAX(fmovimi)
                         FROM per_detper dd, agentes_agente aa2
                        WHERE dd.sperson = pd.sperson
                          AND dd.cagente = aa2.cagente))
          OR(p.swpubli = 1 AND pd.cagente = p.cagente))';

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_destinatario', SQLERRM);
         RETURN 1;
   END f_get_citacion;

   FUNCTION f_get_destinatario(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      --XPL#17558#10/02/2011
      END IF;

      vsquery :=
         'SELECT trades.nsinies, trades.ntramit, pd.sperson, pd.tnombre, pd.tapelli1, pd.tapelli2, trades.ctipdes, trades.cpagdes, trades.cactpro,
         (select tactpro from activiprof where cactpro = trades.cactpro and cidioma = '
         || pidioma || ') tactpro,
         ff_desvalorfijo(10,' || pidioma
         || ', trades.ctipdes) ttipdes,p.nnumide,trades.pasigna, trades.cpaisre,
         ff_despais(trades.cpaisre,'
         || pidioma || ') tpaisre, trades.ctipban, trades.cbancar '
         -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
         || ',trades.CTIPCAP,trades.CRELASE, '
         || 'ff_desvalorfijo (205, PAC_MD_COMMON.F_Get_CXTIDIOMA(),trades.CTIPCAP) ttipcap,ff_desvalorfijo (1018, PAC_MD_COMMON.F_Get_CXTIDIOMA(),trades.CRELASE) trelase'
         || ' , trades.sprofes, trades.cprovin, F_DESPROVIN2(trades.cprovin, trades.cpaisre) tprovin '   -- Bug 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - NSS - 26/02/2014 -
         -- Fi Bug 0015669 - JRH - 30/09/2010
         || ' FROM sin_tramita_destinatario trades, per_personas p, per_detper pd
         where trades.nsinies = '
         || pnsinies || '
         and trades.ntramit = ' || pntramit || '
         and trades.sperson = ' || psperson || '
         and trades.sperson = p.sperson    ' || '
         and trades.ctipdes = ' || pctipdes
         || '
         and  pd.sperson = p.sperson
           AND (( p.swpubli = 0 and pd.fmovimi = (SELECT MAX(fmovimi)
                         FROM per_detper dd, agentes_agente aa2
                        WHERE dd.sperson = pd.sperson
                          AND dd.cagente = aa2.cagente)
                          )
      OR(p.swpubli = 1 AND pd.cagente = p.cagente))';   --Bug 29166/160004 - 29/11/2013 - AMC
      --bug 24822
--         AND ( (pd.fmovimi =
--             (SELECT MAX (fmovimi)
--                FROM per_detper dd
--               WHERE dd.sperson = pd.sperson
--                 AND dd.cagente IN (
--                        SELECT     r.cagente
--                              FROM redcomercial r
--                             WHERE fmovfin IS NULL
--                               AND LEVEL =
--                                      DECODE
--                                         (ff_agente_cpernivel
--                                                             (ff_agenteprod
--                                                                           ()),
--                                          1, LEVEL,
--                                          1
--                                         )
--                        START WITH cagente =
--                                        ff_agente_cpervisio (ff_agenteprod ())
--                        CONNECT BY PRIOR cagente = cpadre
--                               AND PRIOR fmovfin IS NULL))
--      AND pd.cagente IN (
--             SELECT     r.cagente
--                   FROM redcomercial r
--                  WHERE fmovfin IS NULL
--                    AND LEVEL =
--                           DECODE (ff_agente_cpernivel (ff_agenteprod ()),
--                                   1, LEVEL,
--                                   1
--                                  )
--             START WITH cagente = ff_agente_cpervisio (ff_agenteprod ())
--             CONNECT BY PRIOR cagente = cpadre AND PRIOR fmovfin IS NULL))
--             or
--              (p.swpubli = 1  and pd.cagente = pac_persona.f_buscaagente_publica(p.sperson)))';
--fin bug 24822
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_destinatario', SQLERRM);
         RETURN 1;
   END f_get_destinatario;

   FUNCTION f_get_movpago(
      psidepag IN NUMBER,
      pnmovpag IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 13312 - 08/03/2010 - AMC
      vsquery :=
         'SELECT movp.sidepag, movp.nmovpag, movp.cestpag,
          ff_desvalorfijo(3,' || pidioma
         || ', movp.cestpag) testpag, movp.fefepag,
         movp.cestval, movp.fcontab, movp.sproces,
          ff_desvalorfijo(324,'
         || pidioma || ', movp.cestval) testval,cestpagant,'
         || 'csubpag, ff_desvalorfijo(1051,' || pidioma
         || ',csubpag) tsubpag, csubpagant'   --Bug:19601 - 13/10/2011 - JMC
         || ', falta'   --Bug:19601 - 14/06/2013 - NSS
         || ', F_IAX_NOMBREUSUARIO(cusualt)'   --Bug:29804 - 30/01/2014 - NSS
         || ', movp.ndocpag' -- IAXIS-7731 19/12/2019
         || ' FROM sin_tramita_movpago movp
         where movp.sidepag = ' || psidepag || '
         and movp.nmovpag = ' || pnmovpag;
      -- Fi Bug 13312 - 08/03/2010 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_movpago', SQLERRM);
         RETURN 1;
   END f_get_movpago;

   FUNCTION f_get_pagogar(
      psidepag IN NUMBER,
      pctipres IN NUMBER,
      pnmovres IN NUMBER,
      pnorden IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 13513 - 04/03/2010 - AMC
      -- BUG 19981 - 07/11/2011 - MDS - AÃ¿Â±adir campos pagg.preteiva, pagg.preteica, pagg.ireteiva, pagg.ireteica, pagg.ireteivapag, pagg.ireteicapag, pagg.pica, pagg.iica, pagg.iicapag en la query
      -- BUG 31294/177836 - 27/08/2014 - JTT: Recuperamos el campo pagg.idres
      vsquery :=
         'SELECT pagg.sidepag, pagg.ctipres, pagg.nmovres,pagg.cgarant, pagg.fperini, pagg.fperfin, pagg.cmonres, pagg.isinret, pagg.iiva,
         pagg.isuplid, pagg.iretenc, pagg.ifranq,pagg.iresrcm,pagg.iresred, pagg.cmonpag, pagg.isinretpag, pagg.iivapag, pagg.isuplidpag, pagg.iretencpag, pagg.ifranqpag,
         pagg.fcambio, ff_desvalorfijo(322,'
         || pidioma
         || ', pagg.ctipres) ttipres,
         (select gar.trotgar from garangen gar where gar.cgarant = pagg.cgarant and cidioma =  '
         || pidioma
         || ') tgarant,pretenc, piva, pagg.cconpag, (SELECT tconpag
                           FROM SIN_CODCONPAG sc, SIN_DESCONPAG sd
                           WHERE sc.cgarant = sd.cgarant
                           and sc.cconpag = sd.cconpag
                           and sd.cidioma = '
         || pidioma
         || ' and sc.cconpag = pagg.cconpag
                           and sc.cgarant = pagg.cgarant) tconpag,
            pagg.norden,
            pagg.preteiva, pagg.preteica, pagg.ireteiva, pagg.ireteica, pagg.ireteivapag, pagg.ireteicapag, pagg.pica, pagg.iica, pagg.iicapag,'
         ||   --bug 24637/147756:NSS:03/03/2014
           '(select isl.ctipind
            from sin_imp_sap_log isl
            where pagg.sidepag = isl.sidepag(+)
         and pagg.ctipres = isl.ctipres(+)
         and pagg.nmovres = isl.nmovres(+)
         and pagg.norden = isl.norden(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 1)
           ) piva_ctipind, --IVA
           (select isl.ctipind
            from sin_imp_sap_log isl
            where pagg.sidepag = isl.sidepag(+)
         and pagg.ctipres = isl.ctipres(+)
         and pagg.nmovres = isl.nmovres(+)
         and pagg.norden = isl.norden(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 2)
           ) pretenc_ctipind, --RETEFUENTE
           (select isl.ctipind
            from sin_imp_sap_log isl
            where pagg.sidepag = isl.sidepag(+)
         and pagg.ctipres = isl.ctipres(+)
         and pagg.nmovres = isl.nmovres(+)
         and pagg.norden = isl.norden(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 3)
           ) preteiva_ctipind, --RETEIVA
           (select isl.ctipind
            from sin_imp_sap_log isl
            where pagg.sidepag = isl.sidepag(+)
         and pagg.ctipres = isl.ctipres(+)
         and pagg.nmovres = isl.nmovres(+)
         and pagg.norden = isl.norden(+)
         and ctipind IN (SELECT ctipind
                              FROM   tipos_indicadores
                              WHERE  cimpret = 4)
           ) preteica_ctipind, --RETEICA
         pagg.idres '
         ||   --fin bug 24637/147756:NSS:03/03/2014
           ',pagg.iotrosgas ' || ',pagg.iotrosgaspag ' || ',pagg.ibaseipoc ' ||
           ',pagg.ibaseipocpag' || ',pagg.pipoconsumo' || ',
             pagg.iipoconsumo' || ',pagg.iipoconsumopag' || ',(
                                                                SELECT isl.ctipind
                                                                  FROM sin_imp_sap_log isl
                                                                 WHERE pagg.sidepag = isl.sidepag(+)
                                                                   AND pagg.ctipres = isl.ctipres(+)
                                                                   AND pagg.nmovres = isl.nmovres(+)
                                                                   AND pagg.norden = isl.norden(+)
                                                                   AND ctipind IN (
                                                                                    SELECT ctipind
                                                                                      FROM tipos_indicadores
                                                                                     WHERE cimpret = 5) ) pipoconsumo_ctipind ' || '
         FROM sin_tramita_pago_gar pagg
         where pagg.sidepag = ' || psidepag || '
         and pagg.ctipres = ' || pctipres || '
         and pagg.nmovres = ' || pnmovres;

      IF pnorden IS NOT NULL THEN
         vsquery := vsquery || ' and pagg.norden = ' || pnorden;
      END IF;

      -- Fi Bug 13513 - 04/03/2010 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_pagogar', SQLERRM);
         RETURN 1;
   END f_get_pagogar;

   FUNCTION f_get_pagrecob(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psidepag IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      --XPL#17558#10/02/2011
      END IF;

      -- BUG 19981 - 07/11/2011 - MDS - AÃ¿Â±adir campos trap.ireteiva, trap.ireteica, trap.ireteivapag, trap.ireteicapag, trap.iica, trap.iicapag en la query
      -- Bug 22256/122456 - 28/09/2012 - AMC  - AÃ¿Â±adir campos cagente,npersrel,cdomici y ctributa
      --Bug 29166/160004 - 29/11/2013 - AMC
      vsquery :=
         'SELECT trap.sidepag, trap.nsinies, trap.ntramit, p.sperson, trap.ctipdes, trap.ctippag, trap.cconpag, trap.ccauind,
         trap.cforpag, trap.fordpag, trap.ctipban, trap.cbancar, trap.cmonres, NVL(trap.isinret,0), NVL(trap.iretenc,0),
         NVL(trap.iiva,0), NVL(trap.isuplid,0), NVL(trap.ifranq,0), trap.cmonpag, NVL(trap.isinretpag,0),  NVL(trap.iretencpag,0),
         NVL(trap.iivapag,0), NVL(trap.isuplidpag,0), NVL(trap.ifranqpag,0), trap.fcambio, trap.nfacref, trap.ffacref,
         ff_desvalorfijo(10,'
         || pidioma || ', trap.ctipdes) ttipdes,
         ff_desvalorfijo(2,' || pidioma
         || ', trap.ctippag) ttippag,
         ff_desvalorfijo(813,' || pidioma
         || ', trap.cforpag) tforpag,
         trap.ncheque,
         (select TTIPO from tipos_cuentades WHERE CTIPBAN = trap.CTIPBAN AND cidioma = '
         || pidioma || ') ttipban,
         ff_desvalorfijo(803,' || pidioma
         || ', trap.cconpag) tconpag,
         ff_desvalorfijo(325,' || pidioma
         || ', trap.ccauind) tcauind, pd.TNOMBRE, pd.TAPELLI1, pd.TAPELLI2, NVL(trap.iresred,0), NVL(trap.iresrcm,0), trap.ctransfer, trap.cultpag,
         NVL(trap.ireteiva,0), NVL(trap.ireteica,0), NVL(trap.ireteivapag,0), NVL(trap.ireteicapag,0), NVL(trap.iica,0), NVL(trap.iicapag,0),
         trap.cagente, trap.npersrel, trap.cdomici, trap.ctributa,
         trap.cbanco, trap.coficin
         ,d.pasigna
         ,trap.cciudad'
         ||   --Bug 29224:NSS:24/02/2014
           ',d.sprofes' || --Bug 24637/147756:NSS:28/02/2014
           ',trap.sperson_presentador,trap.tobserva ,trap.iotrosgas ,trap.iotrosgaspag ,trap.ibaseipoc ,
             trap.ibaseipocpag ' ||
           ',trap.iipoconsumo ,trap.iipoconsumopag , pd2.tnombre tnombre_presentador, pd2.TAPELLI1 TAPELLI1_presentador' || ',
             pd2.TAPELLI2 TAPELLI2_presentador ';
      vsquery :=
         vsquery
         || ' FROM sin_tramita_pago trap, per_personas p, per_Detper pd, sin_tramita_destinatario d, per_personas p2, per_detper pd2
         where trap.sperson = p.sperson
         and trap.sidepag = '
         || psidepag || '
         and trap.nsinies = ' || pnsinies || '
         and trap.ntramit = ' || pntramit
         || '
         and  pd.sperson = p.sperson
AND((p.swpubli = 0
        AND pd.fmovimi = (SELECT MAX(fmovimi)
                            FROM per_detper dd, agentes_agente aa2
                           WHERE dd.sperson = pd.sperson
                             AND dd.cagente = aa2.cagente))
       OR(p.swpubli = 1
          AND pd.cagente = p.cagente))
and d.nsinies = trap.nsinies
and d.ntramit= trap.ntramit
and d.sperson = trap.sperson
         AND d.ctipdes = trap.ctipdes
         AND p2.sperson = NVL(trap.sperson_presentador, trap.sperson)
         AND pd2.sperson = p2.sperson
         AND ((p2.swpubli = 0
         AND pd2.fmovimi = (
                             SELECT MAX(fmovimi)
                               FROM per_detper dd, agentes_agente aa2
                              WHERE dd.sperson = pd2.sperson
                                AND dd.cagente = aa2.cagente)) OR(p2.swpubli = 1
         AND pd2.cagente = p2.cagente)) ';
-- bug 24822
--
--         AND ( (pd.fmovimi =
--             (SELECT MAX (fmovimi)
--                FROM per_detper dd
--               WHERE dd.sperson = pd.sperson
--                 AND dd.cagente IN (
--                        SELECT     r.cagente
--                              FROM redcomercial r
--                             WHERE fmovfin IS NULL
--                               AND LEVEL =
--                                      DECODE
--                                         (ff_agente_cpernivel
--                                                             (ff_agenteprod
--                                                                           ()),
--                                          1, LEVEL,
--                                          1
--                                         )
--                        START WITH cagente =
--                                        ff_agente_cpervisio (ff_agenteprod ())
--                        CONNECT BY PRIOR cagente = cpadre
--                               AND PRIOR fmovfin IS NULL))
--      AND pd.cagente IN (
--             SELECT     r.cagente
--                   FROM redcomercial r
--                  WHERE fmovfin IS NULL
--                    AND LEVEL =
--                           DECODE (ff_agente_cpernivel (ff_agenteprod ()),
--                                   1, LEVEL,
--                                   1
--                                  )
--             START WITH cagente = ff_agente_cpervisio (ff_agenteprod ())
--             CONNECT BY PRIOR cagente = cpadre AND PRIOR fmovfin IS NULL))
--             or
--              (p.swpubli = 1  and pd.cagente = pac_persona.f_buscaagente_publica(p.sperson)))';
-- fin bug 24822
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros', 1, 'F_Get_pagogar', SQLERRM);
         RETURN 1;
   END f_get_pagrecob;

   FUNCTION f_get_ultimareserva(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 11945 - 16/12/2009 - AMC
      -- Bug 0022790 - 18/07/2012 - JMF: TTRAMITE
      vsquery :=
         'SELECT rese.nsinies, rese.ntramit, rese.ctipres, rese.nmovres, rese.cgarant, rese.ccalres,'
         || ' rese.fmovres, rese.cmonres, rese.ireserva, rese.ipago, rese.iingreso, rese.irecobro, rese.fresini,'
         || ' rese.fresfin, rese.sidepag, rese.sproces, rese.fcontab,rese.iprerec,'
         || ' ff_desvalorfijo(322,' || pidioma || ', rese.ctipres) ttipres,'
         || ' (select g.trotgar from garangen g where g.cgarant = rese.cgarant and cidioma =  '
         || pidioma || ') tgarant,' || ' ff_desvalorfijo(693,' || pidioma
         || ', rese.ccalres) tcalres,' || ' (select max(ff_desvalorfijo(800,' || pidioma
         || ',d.CTIPTRA)) from sin_codtramitacion d where d.CTRAMIT=z.CTRAMIT) TTRAMIT,'
         || ' ctipgas, ff_desvalorfijo(1047,' || pidioma || ', ctipgas) ttipgas,' || ' ('
         || ' select max(c.ttramite)'
         || ' from   sin_tramitacion a, sin_tramite b, sin_destramite c'
         || ' where  a.nsinies = rese.nsinies and a.ntramit = rese.ntramit'
         || ' and    b.nsinies=a.nsinies and b.ntramte=a.ntramte and c.CTRAMTE=b.CTRAMTE and c.cidioma='
         || pidioma || ' ) TTRAMITE' || ', rese.csolidaridad FROM sin_tramita_reserva rese, sin_tramitacion z'
         || ' where (rese.ntramit, rese.ctipres, nvl(rese.cgarant,-1), nvl(rese.ctipgas,-1), rese.nmovres)'   -- 26108
         || ' in (select ntramit, ctipres, nvl(cgarant,-1), nvl(ctipgas, -1), max(nmovres)'   -- 26108
         || ' from sin_tramita_reserva where nsinies =' || pnsinies
         || ' group by ntramit, ctipres, nvl(cgarant,-1) , nvl(ctipgas, -1))'   -- 26108
         || ' and rese.nsinies = ' || pnsinies
         || ' and z.nsinies = rese.nsinies AND z.ntramit = rese.ntramit'
         || ' order by z.NTRAMTE, z.ntramit, rese.CTIPRES, rese.cgarant';
      --Fi Bug 11945 - 16/12/2009 - AMC
              /*        ff_desvalorfijo(681,' || pidioma
              || ', rese.cmonres) tmonres,
      */
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_pagogar', SQLERRM);
         RETURN 1;
   END f_get_ultimareserva;

   FUNCTION f_get_pagosporsiniestro(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pctippag IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      --XPL#17558#10/02/2011
      END IF;

      -- Bug 0022790 - 18/07/2012 - JMF: TTRAMITE
      vsquery :=
         'SELECT tpago.sidepag, tpago.nsinies, tpago.ntramit, tpago.ncheque,'
         || ' (select max(ff_desvalorfijo(800,' || pidioma
         || ',d.CTIPTRA)) from sin_codtramitacion d where d.CTRAMIT=z.CTRAMIT) TTRAMIT,'
         || ' ff_desvalorfijo(813,' || pidioma || ', tpago.cforpag) tforpag,'
         || ' ff_desvalorfijo(3,' || pidioma || ', tmovpago.cestpag) testpag,'
         || ' f_nombre(tpago.sperson,1,' || vcagente || ') tdestinatario,'
         || ' tpago.isinret, tpago.fordpag,' || ' ff_desvalorfijo(2,' || pidioma
         || ',tpago.ctippag) TTIPAG,' || ' ff_desvalorfijo(1051,' || pidioma
         || ',tmovpago.csubpag) tsubpag,'   --Bug: 19601 - 13/10/2011 - JMC
                                         || ' (' || ' select max(c.ttramite)'
         || ' from   sin_tramitacion a, sin_tramite b, sin_destramite c'
         || ' where  a.nsinies = tpago.nsinies and a.ntramit = tpago.ntramit'
         || ' and    b.nsinies=a.nsinies and b.ntramte=a.ntramte and c.CTRAMTE=b.CTRAMTE and c.cidioma='
         || pidioma || ' ) TTRAMITE'
     || ', tpago.cmonres '
         || ' FROM sin_tramita_pago tpago, sin_tramita_movpago tmovpago, sin_tramitacion z'
         || ' where tpago.sidepag = tmovpago.sidepag'
         || ' and nmovpag = (select max(nmovpag) from sin_tramita_movpago stm where stm.sidepag = tpago.sidepag)'
         || ' and tpago.nsinies = ' || pnsinies || ' AND tpago.ctippag = ' || pctippag
         || ' and z.nsinies = tpago.nsinies AND z.ntramit = tpago.ntramit'
         || ' order by z.NTRAMTE, z.ntramit';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_pagosporsinistro',
                     SQLERRM);
         RETURN 1;
   END f_get_pagosporsiniestro;

   FUNCTION f_get_detallespagos(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pctippag IN NUMBER,
      pcgarant IN NUMBER,
      psidepag IN NUMBER,
      pnmovres IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vparam2        VARCHAR2(1000)
         := 'pnsinies = ' || pnsinies || '- pntramit ::' || pntramit || ' pctipres :: '
            || pctipres || 'pctippag : ' || pctippag || ' -pcgarant :: ' || pcgarant
            || ' -psidepag = ' || psidepag || 'pnmovres :: ' || pnmovres;
      vparam         VARCHAR2(1000);
      vcagente       NUMBER;
   BEGIN
      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      --XPL#17558#10/02/2011
      END IF;

      vsquery :=
         '   select stp.sidepag, stm.cestpag,
                   ff_desvalorfijo(3,' || pidioma
         || ', stm.cestpag) testpag, stp.cconpag, stp.sperson, f_nombre(stp.sperson, 1,'
         || vcagente || ') tnombre, stp.cforpag,
             ff_desvalorfijo(803,' || pidioma
         || ', stp.cconpag) tconpag,  stp.ncheque,
             ff_desvalorfijo(813,' || pidioma
         || ', stp.cforpag) tforpag,
            stp.fordpag, stp.nfacref, stp.ffacref, stpg.isinret, stp.ccauind,
         ff_desvalorfijo(325,'
         || pidioma
         || ', stp.ccauind) tcauind,
            stp.CTIPBAN,  (select TTIPO from tipos_cuentades WHERE CTIPBAN = stp.CTIPBAN AND cidioma = '
         || pidioma
         || ' ) AS ttipban, stp.CBANCAR, stp.IRETENC, stp.IIVA, stp.ISUPLID, stp.IFRANQ, stp.IRESRCM, stp.IRESRED,
            stpg.FPERINI, stpg.FPERFIN,stpg.cconpag cconpag_gar,  (SELECT tconpag
                           FROM SIN_CODCONPAG sc, SIN_DESCONPAG sd
                           WHERE sc.cgarant = sd.cgarant
                           and sc.cconpag = sd.cconpag
                           and sd.cidioma = '
         || pidioma
         || ' and sc.cconpag = stpg.cconpag
                           and sc.cgarant = stpg.cgarant) tconpag_gar,stpg.norden '
         || ', ff_desvalorfijo(1051,' || pidioma
         || ',stm.csubpag) tsubpag'   --Bug: 19601 - 13/10/2011 - JMC
         || ' from
            sin_tramita_pago_gar stpg, sin_tramita_pago stp,
            sin_tramita_movpago stm
            where
            stpg.sidepag = stp.sidepag and
            stm.sidepag = stp.sidepag and
            stpg.ctipres = '
         || pctipres || ' and
            stp.nsinies = ' || pnsinies || ' and
            stp.ntramit = ' || pntramit || ' and
            stp.ctippag = ' || pctippag
         || ' and
            stm.nmovpag = (SELECT MAX(nmovpag)
                             FROM sin_tramita_pago stp, sin_tramita_movpago stm
                            WHERE stp.nsinies = '
         || pnsinies || '
                            AND stm.sidepag = stp.sidepag)';

      IF pcgarant IS NOT NULL THEN
         vparam := ' and  stpg.cgarant = ' || pcgarant;
         vsquery := vsquery || vparam;
      END IF;

      IF psidepag IS NOT NULL THEN
         vparam := ' and  stpg.sidepag = nvl(' || psidepag || ',stpg.sidepag)';
         --and stpg.nmovres = '||pnmovres;
         vsquery := vsquery || vparam;
      ELSE
         vparam := ' and  stpg.sidepag = -1';
         vsquery := vsquery || vparam;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_pagosporsinistro',
                     SQLERRM);
         RETURN 1;
   END f_get_detallespagos;

/*   FUNCTION f_get_detalltramitacio(
      pnsinies IN VARCHAR2,
      pctramit IN NUMBER,
      pntramit IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      pctiptra       NUMBER;
   BEGIN
      BEGIN
         SELECT ctiptra
           INTO pctiptra
           FROM sin_codtramitacion
          WHERE ctramit = pctramit;
      EXCEPTION
         WHEN OTHERS THEN
            pctiptra := 0;
      END;
      p_tab_error(f_sysdate, f_user, '11deta', 1, pctramit, pctiptra);
      IF pctiptra <> 0 THEN
         IF pctiptra IN(1, 2, 6, 7) THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra
               || ' ctiptra, null ttiptra,detv.ccompani, f_nombre(comp.sperson, 1) tcompani, detv.cpolcia,
                       detv.iperit, detv.ttramita desctramit, detv.spercon sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.spercon,1) tnombre, detv.cestper, null testper, null tdescdireccion,
                       null ctipdir, null ttipdir, null csiglas, null tsiglas, null tnomvia, null nnumvia, null tcomple,
                       null cdomici, null tdomici, null cpostal, null cprovin, null tprovin, null cpoblac, null tpoblac,
                       null cpais, null tpais, detv.ctipmat, null ttipmat,detv.CMATRIC, detv.CMARCA, null tmarca,
                       detv.smodelo cmodelo, null tmodelo, detv.cversion, null tversion, detv.ctipcon, null ttipcon,
                       detv.ctipcar, null ttipcar, detv.fcarnet, detv.calcohol
               FROM companias comp, sin_tramita_detvehiculo detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.spercon = pd.sperson
                           AND comp.ccompani = detv.ccompani';
         END IF;
         IF pctiptra = 3 THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra
               || ' ctiptra, null ttiptra,
                        detv.ccompani, f_nombre(comp.sperson, 1) tcompani, detv.cpolcia,
                       detv.iperit, detv.ttramita desctramit, detv.sperson sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.sperson,1) tnombre, detv.cestper, null testper, null tdescdireccion,
                       null ctipdir, null ttipdir, null csiglas, null tsiglas, null tnomvia, null nnumvia, null tcomple,
                       null cdomici, null tdomici, null cpostal, null cprovin, null tprovin, null cpoblac, null tpoblac,
                       null cpais, null tpais, null ctipmat, null ttipmat,null CMATRIC, null CMARCA, null tmarca,
                       null  cmodelo, null tmodelo, null cversion, null tversion, null ctipcon, null ttipcon,
                       null ctipcar, null ttipcar, null fcarnet, null calcohol
                          FROM companias comp, sin_tramita_detpersona detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.sperson = pd.sperson
                           AND comp.ccompani = detv.ccompani';
         END IF;
         IF pctiptra = 4 THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra
               || ' ctiptra, null ttiptra,
                        detv.ccompani, f_nombre(comp.sperson, 1) tcompani, detv.cpolcia,
                       detv.iperit, detv.ttramita desctramit, detv.sperson sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.sperson,1) tnombre, null cestper, null testper, null tdescdireccion,
                       null ctipdir, null ttipdir, null csiglas, null tsiglas, null tnomvia, null nnumvia, null tcomple,
                       null cdomici, null tdomici, null cpostal, null cprovin, null tprovin, null cpoblac, null tpoblac,
                       null cpais, null tpais, null ctipmat, null ttipmat,null CMATRIC, null CMARCA, null tmarca,
                       null  cmodelo, null tmodelo, null cversion, null tversion, null ctipcon, null ttipcon,
                       null ctipcar, null ttipcar, null fcarnet, null calcohol
                          FROM companias comp, sin_tramita_detdescripcion detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.sperson = pd.sperson
                           AND comp.ccompani = detv.ccompani';
         END IF;
         IF pctiptra = 5 THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra
               || ' ctiptra, null ttiptra,
                        detv.ccompani, f_nombre(comp.sperson, 1) tcompani, detv.cpolcia,
                       detv.iperit, detv.ttramita desctramit, detv.sperson sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.sperson,1) tnombre, null cestper, null testper, detv.ttramita tdescdireccion,
                       null ctipdir, null ttipdir, detv.csiglas csiglas, null tsiglas, detv.tnomvia tnomvia, detv.nnumvia nnumvia, detv.tcomple tcomple,
                       null cdomici, null tdomici, detv.cpostal cpostal, detv.cprovin cprovin, null tprovin, detv.cpoblac cpoblac, null tpoblac,
                       detv.cpais cpais, null tpais, null ctipmat, null ttipmat,null CMATRIC, null CMARCA, null tmarca,
                       null  cmodelo, null tmodelo, null cversion, null tversion, null ctipcon, null ttipcon,
                       null ctipcar, null ttipcar, null fcarnet, null calcohol
                          FROM companias comp, sin_tramita_detdireccion detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.sperson = pd.sperson
                           AND comp.ccompani = detv.ccompani';
         END IF;
      END IF;
      p_tab_error(f_sysdate, f_user, '11deta', 1, pctramit, vsquery);
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_detalltramitacio',
                     SQLERRM);
         RETURN 1;
   END f_get_detalltramitacio;*/
   FUNCTION f_get_detalltramitacio(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pctramit IN NUMBER,
      pntramit IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2,
      pcagente IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      pctiptra       NUMBER;
      vcagente       NUMBER;
   BEGIN
      -- Bug 12668 - 01/03/2010 - AMC - Se aÃ¿Â±aden los nuevos campos a las consultas
      -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
      BEGIN
         SELECT ctiptra
           INTO pctiptra
           FROM sin_codtramitacion
          WHERE ctramit = pctramit;
      EXCEPTION
         WHEN OTHERS THEN
            pctiptra := 0;
      END;

      vcagente := pcagente;

      IF vcagente IS NULL THEN
         SELECT s.cagente
           INTO vcagente
           FROM seguros s, sin_siniestro si
          WHERE s.sseguro = si.sseguro
            AND si.nsinies = pnsinies;
      --XPL#17558#10/02/2011
      END IF;

      IF pctiptra <> 0 THEN
         IF pctiptra IN(1, 2, 6, 7) THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra || ' ctiptra, null ttiptra, '
               || ' detv.ttramita desctramit, detv.spercon sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.spercon,1,'
               || vcagente
               || ') tnombre, detv.cestper, null testper, null tdescdireccion,
                       null ctipdir, null ttipdir, null csiglas, null tsiglas, null tnomvia, null nnumvia, null tcomple,
                       null cdomici, null tdomici, null cpostal, null cprovin, null tprovin, null cpoblac, null tpoblac,
                       null cpais, null tpais,null cciudad, null fgisx, null fgisy, null fgisz, null cvalida,
                       detv.ctipmat, null ttipmat,detv.cmatric, detv.cmarca,
                       (select tmarca from aut_marcas where cmarca = detv.cmarca) tmarca,
                       detv.smodelo cmodelo,(select tmodelo from aut_modelos where cmodelo = detv.smodelo and cmarca = detv.cmarca) tmodelo,
                       detv.cversion, (select tversion from aut_versiones where cversion = detv.cversion) tversion,
                       detv.ctipcon, null ttipcon, detv.ctipcar, null ttipcar, detv.fcarnet, detv.calcohol,
                       null IRECLAM, null IINDEMN, detv.NANYO,
                       detv.codmotor, detv.cchasis, detv.nbastid, detv.ccilindraje
               FROM sin_tramita_detvehiculo detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.spercon = pd.sperson(+)';
         END IF;

         IF pctiptra = 3 THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra || ' ctiptra, null ttiptra,'
               || 'detv.ttramita desctramit, detv.sperson sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.sperson,1,'
               || vcagente
               || ') tnombre, detv.cestper, null testper, null tdescdireccion,
                       null ctipdir, null ttipdir, null csiglas, null tsiglas, null tnomvia, null nnumvia, null tcomple,
                       null cdomici, null tdomici, null cpostal, null cprovin, null tprovin, null cpoblac, null tpoblac,
                       null cpais, null tpais,null cciudad, null fgisx, null fgisy, null fgisz, null cvalida,
                       null ctipmat, null ttipmat,null CMATRIC, null CMARCA, null tmarca,
                       null  cmodelo, null tmodelo, null cversion, null tversion, null ctipcon, null ttipcon,
                       null ctipcar, null ttipcar, null fcarnet, null calcohol,
                       null IRECLAM, null IINDEMN, null NANYO,
                       NULL, NULL, NULL, NULL
                          FROM sin_tramita_detpersona detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.sperson = pd.sperson(+)';
         END IF;

         IF pctiptra = 4 THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra || ' ctiptra, null ttiptra,'
               || 'detv.ttramita desctramit, detv.sperson sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.sperson,1,'
               || vcagente
               || ') tnombre, null cestper, null testper, null tdescdireccion,
                       null ctipdir, null ttipdir, null csiglas, null tsiglas, null tnomvia, null nnumvia, null tcomple,
                       null cdomici, null tdomici, null cpostal, null cprovin, null tprovin, null cpoblac, null tpoblac,
                       null cpais, null tpais,null cciudad, null fgisx, null fgisy, null fgisz, null cvalida,
                       null ctipmat, null ttipmat,null CMATRIC, null CMARCA, null tmarca,
                       null  cmodelo, null tmodelo, null cversion, null tversion, null ctipcon, null ttipcon,
                       null ctipcar, null ttipcar, null fcarnet, null calcohol,
                       IRECLAM, IINDEMN, null NANYO,
                       NULL, NULL, NULL, NULL
                          FROM sin_tramita_detdescripcion detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.sperson = pd.sperson(+)';
         END IF;

         IF pctiptra = 5 THEN
            vsquery :=
               'SELECT detv.nsinies, detv.ntramit, ' || pctramit || ' ctramit, null ttramit, '
               || pctiptra || ' ctiptra, null ttiptra,'
               || 'detv.ttramita desctramit, detv.sperson sperson, pd.nnumide, pd.ctipide, null ttipide,
                       f_nombre(detv.sperson,1,'
               || vcagente
               || ') tnombre, null cestper, null testper, detv.tdirec tdescdireccion,
                       null ctipdir, null ttipdir, detv.csiglas csiglas, pac_persona.f_tdomici(detv.csiglas,detv.tnomvia,detv.nnumvia,detv.tcomple) tsiglas, detv.tnomvia tnomvia, detv.nnumvia nnumvia, detv.tcomple tcomple,
                       null cdomici, null tdomici, detv.cpostal cpostal, detv.cprovin cprovin, F_DESPROVIN2(detv.cprovin,detv.cpais) tprovin, detv.cpoblac cpoblac,
                       F_DESPOBLAC2 (detv.cpoblac,detv.cprovin)tpoblac, detv.cpais cpais, ff_despais(detv.cpais,'
               || pidioma
               || ') tpais,detv.cciudad cciudad, detv.fgisx fgisx, detv.fgisy fgisy, detv.fgisx fgisz, detv.cvalida cvalida, null ctipmat, null ttipmat,
                       null CMATRIC, null CMARCA, null tmarca, null  cmodelo, null tmodelo, null cversion, null tversion, null ctipcon, null ttipcon,
                       null ctipcar, null ttipcar, null fcarnet, null calcohol,
                       null IRECLAM, null IINDEMN, null NANYO,
                       NULL, NULL, NULL, NULL
                          FROM sin_tramita_detdireccion detv, per_personas pd
                         WHERE detv.nsinies = '
               || pnsinies || '
                           AND detv.ntramit = ' || pntramit
               || '
                           AND detv.sperson = pd.sperson(+)';
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_detalltramitacio',
                     SQLERRM);
         RETURN 1;
   END f_get_detalltramitacio;

   /*************************************************************************
      FUNCTION F_Ins_Siniestro
         Inserta a la taula SIN_SINIESTRO dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in psseguro  : codi del segur
         param in pnriesgo  : codi de la causa del sinistre
         param in pnmovimi  : nÃ¿Âºmero moviment
         param in pfsinies  : data del sinistre
         param in pfnotifi  : data de la notificaciÃ¿Â³
         param in pccausin  : codi causa sinistre
         param in pcmotsin  : codi motiu sinistre
         param in pcevento  : codi event sinistre
         param in pcculpab  : codi culpabilitat
         param in pcreclama : codi reclamaciÃ¿Â³
         param in pnasegur  : nÃ¿Âºmero assegurat
         param in pcmeddec  : codi metge declaraciÃ¿Â³
         param in pctipdec  : codi tipus declarant
         param in ptnomdec  : nom declarant
         param in ptape1dec : primer cognom declarant
         param in ptape2dec : segon cognom declarant
         param in ptteldec  : telefon declarant
         param in ptsinies  : descripcio sinistre
         param in pctipide
         param in pnnumide
         param in pnsincia  : Siniestro compaÃ¿Â±ia
         param in pccompani    : codigo compaÃ¿Â±ia
         param in pnpresin     : numero presiniestro
         param in pnsinies
         param in pcnivel
         param in psperson
        param in psperson_dec
         param in out pnsinies: nÃ¿Âºmero sinistre
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_siniestro(
      psseguro IN NUMBER,
      pnriesgo IN NUMBER,
      pnmovimi IN NUMBER,
      pfsinies IN DATE,
      pfnotifi IN DATE,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      pcevento IN VARCHAR2,
      pcculpab IN NUMBER,
      pcreclama IN NUMBER,
      pnasegur IN NUMBER,
      pcmeddec IN NUMBER,
      pctipdec IN NUMBER,
      ptnomdec IN VARCHAR2,
      ptnom1dec IN VARCHAR2,
      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo 2nombre de declarante
      ptnom2dec IN VARCHAR2,
      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo 2nombre de declarante
      ptape1dec IN VARCHAR2,
      ptape2dec IN VARCHAR2,
      ptteldec IN VARCHAR2,
      ptmovildec IN VARCHAR2,
      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo telefono mov de declarante
      ptemaildec IN VARCHAR2,
      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo email  de declarante
      ptsinies IN VARCHAR2,
      pctipide IN NUMBER,
      pnnumide IN VARCHAR2,
      pnsincia IN VARCHAR2,
      --BUG 14587 - PFA - 13/08/2010 - AÃ¿Â±adir campo siniestro compaÃ¿Â±ia
      pccompani IN NUMBER,
      -- Bug 15006 - PFA - 16/08/2010 - nuevos campos en bÃ¿Âºsqueda siniestros
      pnpresin IN VARCHAR2,
      -- Bug 15006 - PFA - 16/08/2010 - nuevos campos en bÃ¿Âºsqueda siniestros
      pnsinies IN OUT sin_siniestro.nsinies%TYPE,
      pcnivel IN NUMBER DEFAULT NULL,
      psperson IN NUMBER DEFAULT NULL,
      psperson_dec IN NUMBER DEFAULT NULL,
      -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
      pfechapp IN DATE DEFAULT NULL,
      -- Fi Bug 0015669 - JRH - 30/09/2010
      pcpolcia IN VARCHAR2 DEFAULT NULL,
      --BUG17539 - JTS - 10/02/2011
      piperit IN NUMBER DEFAULT NULL,
      --BUG17539 - JTS - 10/02/2011
      pcfraude IN NUMBER DEFAULT NULL,   --BUG18748 - JBN
      pccarpeta IN NUMBER DEFAULT NULL,
      -- BUG 19832 - 24/10/2011 - JMP
      pcagente IN NUMBER DEFAULT NULL,   -- Bug 21817 - MDS - 2/05/2012
      pcsalvam IN NUMBER DEFAULT NULL,   -- BUG 0024675 - 15/11/2012 - JMF
      --BUG 39475/222692
      pfdeteccion DATE DEFAULT NULL,
      psolidaridad IN Number default null, --CONF-249
      ptdetpreten IN VARCHAR2 default null
      )
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Siniestro';
      vparam         VARCHAR2(3000)
         := 'parámetros - nsinies:' || pnsinies || ' sseguro:' || psseguro || ' nriesgo:'
            || pnriesgo || ' nmovimi:' || pnmovimi || ' fsinies:' || pfsinies || ' fnotifi:'
            || pfnotifi || ' ccausin:' || pccausin || ' cmotsin:' || pcmotsin || ' cevento:'
            || pcevento || ' cculpab:' || pcculpab || ' creclama:' || pcreclama
            || ' pnasegur:' || pnasegur || ' pcmeddec:' || pcmeddec || ' pctipdec:'
            || pctipdec || ' ptnomdec:' || ptnomdec || ' ptnom1dec:' || ptnom1dec
            || ' ptnom2dec:' || ptnom2dec || ' ptape1dec:' || ptape1dec || ' ptape2dec:'
            || ptape2dec || ' ptteldec:' || ptteldec || ' ptmovildec:' || ptmovildec
            || ' ptemaildec:' || ptemaildec  || ' pnsincia: '
            || pnsincia || '- pccompani: ' || pccompani || '- pnpresin: ' || pnpresin
            || '- pcpolcia: ' || pcpolcia || '- piperit: ' || piperit || '- pcagente: '
            || pcagente   -- Bug 21817 - MDS - 2/05/2012
                       || ' pcsalvam: ' || pcsalvam || ' pfdeteccion: ' || pfdeteccion || ' psolidaridad: ' || psolidaridad;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vnumerr        NUMBER;
      v_nriesgo      NUMBER(6);
      v_nasegur      NUMBER(6);
      v_cramo        NUMBER(8);
      v_cmodali      NUMBER(2);
      v_sproduc      NUMBER(6);
      vnmovimi       NUMBER(4);
      v_cempres      seguros.cempres%TYPE;
      v_ccompani     seguros.ccompani%TYPE;
      v_ncuacoa      seguros.ncuacoa%TYPE;
      v_ctipsin      NUMBER(3);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¿Â¡metres d'entrada
      IF psseguro IS NULL
         OR pnriesgo IS NULL
         --  OR pnmovimi IS NULL
         OR pfsinies IS NULL
         OR pfnotifi IS NULL THEN
         RETURN 9000505;
      END IF;

      vnmovimi := pnmovimi;

      IF pnmovimi IS NULL THEN
         SELECT MAX(nmovimi)
           INTO vnmovimi
           FROM movseguro
          WHERE sseguro = psseguro;
      END IF;

      -- ini bug 0023187- 21/08/2012 - JMF
      -- buscar si tiene coaseguro
      --SELECT MAX(b.ncuacoa)
      --  INTO v_ncuacoa
      --  FROM coacedido a, seguros b
      -- WHERE a.sseguro = psseguro
      --   AND b.sseguro = a.sseguro;
      SELECT MAX(a.ncuacoa)
        INTO v_ncuacoa
        FROM coacuadro a, seguros b, movseguro m
       WHERE a.sseguro = psseguro
         AND b.sseguro = a.sseguro
         AND m.sseguro = b.sseguro
         AND m.nmovimi = a.ncuacoa
         AND m.fefecto <= pfsinies;

      -- fin bug 0023187- 21/08/2012 Ã¢â¿¬â¿¿ JMF
      -- Fi Bug 23183/126116 - 18/10/2012 - AMC
      IF pnsinies IS NULL THEN   -- INSERT
         BEGIN
            SELECT cramo, cmodali, sproduc, cempres, ccompani
              INTO v_cramo, v_cmodali, v_sproduc, v_cempres, v_ccompani
              FROM seguros
             WHERE sseguro = psseguro;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               v_cramo := NULL;
               v_cmodali := NULL;
         END;

         -- BUG 17367 - 26/01/2011 - JMP - Llamar a PAC_PROPIO.F_CONTADOR2 para la generacición del nÃ¿Âºmero de siniestro
--         pnsinies := pac_propio.f_contador2(v_cempres, '01', v_cramo);

         -- BUG 26810 - 07/05/2013 - NSS
         SELECT MAX(ctipsin)   --0029224/0176912: NSS:06/06/2014
           INTO v_ctipsin
           FROM sin_causa_motivo
          WHERE ccausin = pccausin
            AND cmotsin = pcmotsin;

         IF v_ctipsin = 2 THEN
            pnsinies := pac_propio.f_contador2(v_cempres, '05',   --BUG 26810 - 07/05/2013 - NSS
                                               v_cramo, psseguro);
         ELSIF v_ctipsin = 3 THEN
            pnsinies := pac_propio.f_contador2(v_cempres, '06',   --BUG 26810 - 07/05/2013 - NSS
                                               v_cramo, psseguro);
         ELSE
            pnsinies := pac_propio.f_contador2(v_cempres, '01', v_cramo, psseguro);
         END IF;

         -- FIN BUG 26810 - 07/05/2013 - NSS
         -- 21032:ASN:23/01/2012
         vpasexec := 2;

         IF pnsinies = 0 THEN
            RETURN 9000957;   --Error al generar nÃ¿Âºmero sinistre
         END IF;

         -- Si el producto es a 2_CABEZAS
         v_nriesgo := pnriesgo;

         IF NVL(f_parproductos_v(v_sproduc, 'FISCALIDAD_2_CABEZAS'), 0) = 1 THEN
            -- ini Bug 0012822 - 24/02/2010 - JMF
            IF pccausin = 1
               AND pcmotsin = 12 THEN
               -- Defuncición primer titular.
               v_nasegur := 1;
               v_nriesgo := pnriesgo;
            ELSIF pccausin = 1
                  AND pcmotsin = 13 THEN
               -- Defuncición segundo titular.
               v_nasegur := 2;
               v_nriesgo := pnriesgo;
            ELSE
               v_nasegur := pnriesgo;
               v_nriesgo := 1;
            END IF;
         -- fin Bug 0012822 - 24/02/2010 - JMF
         ELSE   -- Si el producto NO es a 2_CABEZAS
            v_nasegur := NULL;
         END IF;

         vpasexec := 3;

         BEGIN
            -- BUG 18093 - 30/03/2011 - JRB - Se necesita que la compaÃ¿Â±Ã¿Â­a sea siempre la de la pÃ¿Â³liza.
            -- Bug 21817 - MDS - 2/05/2012: cagente
            -- 0023187- 21/08/2012 - JMF : ncuacoa
            -- BUG18748 - JBN
            -- BUG 0024675 - 15/11/2012 - JMF: csalvam
            INSERT INTO sin_siniestro
                        (nsinies, sseguro, nriesgo, nmovimi, fsinies, fnotifi,
                         ccausin, cmotsin, cevento, cculpab, creclama, nasegur,
                         cmeddec, ctipdec, tnomdec, tnom1dec, tnom2dec, tape1dec,
                         tape2dec, tteldec, tmovildec, temaildec, tsinies, ctipide,
                         nnumide, cnivel, sperson2, dec_sperson, fechapp, nsincia,
                         ccompani, npresin, cpolcia, iperit, cfraude, ccarpeta,
                         cagente, ncuacoa, csalvam, fdeteccion, solidaridad,tdetpreten) --CONF-249
                 VALUES (pnsinies, psseguro, v_nriesgo, vnmovimi, pfsinies, pfnotifi,
                         pccausin, pcmotsin, pcevento, pcculpab, pcreclama, v_nasegur,
                         pcmeddec, pctipdec, ptnomdec, ptnom1dec, ptnom2dec, ptape1dec,
                         ptape2dec, ptteldec, ptmovildec, ptemaildec, ptsinies, pctipide,
                         pnnumide, pcnivel, psperson, psperson_dec, pfechapp, pnsincia,
                         v_ccompani, pnpresin, pcpolcia, piperit, pcfraude, pccarpeta,
                         pcagente, v_ncuacoa, pcsalvam, pfdeteccion, psolidaridad,ptdetpreten);--CONF-249
         EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
               UPDATE sin_siniestro
                  SET fsinies = pfsinies,
                      fnotifi = pfnotifi,
                      cevento = pcevento,
                      cculpab = pcculpab,
                      creclama = pcreclama,
                      nasegur = pnasegur,
                      cmeddec = pcmeddec,
                      ctipdec = pctipdec,
                      tnomdec = ptnomdec,
                      tnom1dec = ptnom1dec,
                      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo PRIMER nombre declarante
                      tnom2dec = ptnom2dec,
                      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo segundo nombre declarante
                      tape1dec = ptape1dec,
                      tape2dec = ptape2dec,
                      tteldec = ptteldec,
                      tmovildec = ptmovildec,
                      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo telefono mov de declarante
                      temaildec = ptemaildec,
                      --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo email  de declarante
                      tsinies = ptsinies,
                      ctipide = pctipide,
                      nnumide = pnnumide,
                      cnivel = pcnivel,
                      dec_sperson = psperson_dec,
                      sperson2 = psperson,
                      nsincia = pnsincia,
                      --BUG 14587 - PFA - 13/08/2010 - AÃ¿Â±adir campo siniestro compaÃ¿Â±ia
                      ccompani = v_ccompani,
--BUG 18093 - 30/03/2011 - JRB - Se necesita que la compaÃ¿Â±Ã¿Â­a sea siempre la de la pÃ¿Â³liza.
                      fechapp = pfechapp,
                      npresin = pnpresin,
                      cpolcia = pcpolcia,   --BUG17539 - JTS - 10/02/2011
                      iperit = piperit,   --BUG17539 - JTS - 10/02/2011
                      cfraude = pcfraude,   --BUG18748 - JBN
                      ccarpeta = pccarpeta,
                      ccausin = pccausin,
                      cmotsin = pcmotsin,
                      cagente = pcagente   --- Bug 21817 - MDS - 2/05/2012
                                        ,
                      ncuacoa = v_ncuacoa,   -- 0023187- 21/08/2012 - JMF
                      csalvam = pcsalvam,   -- BUG 0024675 - 15/11/2012 - JMF
                      fdeteccion = pfdeteccion,   -- BUG 39475/222692
                      solidaridad = psolidaridad, -- CONF-249
                      tdetpreten = ptdetpreten
                WHERE nsinies = pnsinies;
         END;

         -- Accion al aperturar siniestro
         vnumerr := pac_siniestros.f_accion_siniestro(pnsinies, 1);

         IF vnumerr <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vpasexec,
                        'f_ins_siniestro nsinies=' || pnsinies, 'error=' || vnumerr);
            RETURN vnumerr;
         END IF;

         -- ini Bug 0012822 - 24/02/2010 - JMF
         IF NVL(f_parproductos_v(v_sproduc, 'FISCALIDAD_2_CABEZAS'), 0) = 1
            AND pccausin = 1
            AND pcmotsin = 13 THEN
            -- Si se trata de un producto de dos cabezas,
            -- y se trata de un siniestro defuncición segundo titular,
            -- finalizamos el siniestro que acabamos de abrir.
            DECLARE
               n_emp          seguros.cempres%TYPE;
               v_uni          sin_movsiniestro.cunitra%TYPE;
               v_tra          sin_movsiniestro.ctramitad%TYPE;
            BEGIN
               SELECT MAX(cempres)
                 INTO n_emp
                 FROM seguros
                WHERE sseguro = psseguro;

               -- 23101:ASN:28/008/2012
               /*
               --Ini Bug.: 18977 - 12/07/2011 - ICV
               vnumerr := pac_siniestros.f_get_tramitador_defecto(n_emp, f_user, psseguro,
                                                                  pccausin, pcmotsin, NULL,
                                                                  NULL,   -- 22108:ASN:04/06/2012
                                                                  NULL, v_uni, v_tra);

               IF NVL(vnumerr, 99999) > 1 THEN
                  RETURN vnumerr;
               END IF;

               vnumerr := 0;
               /*vnumerr := pac_siniestros.f_get_unitradefecte(n_emp, v_uni, v_tra);
               IF vnumerr <> 0 THEN
                  RETURN vnumerr;
               END IF;*/
               --Fin bug.: 18977
               v_uni := 'U000';
               v_tra := 'T000';
               -- 23101:ASN:28/008/2012 fin
               vnumerr := pac_siniestros.f_estado_siniestro(pnsinies, 1, 1, v_uni, v_tra, NULL,
                                                            pfsinies);

               IF vnumerr <> 0 THEN
                  RETURN vnumerr;
               END IF;
            END;
         END IF;
      -- fin Bug 0012822 - 24/02/2010 - JMF
      ELSE   -- UPDATE
         BEGIN
            SELECT ccompani
              INTO v_ccompani
              FROM seguros
             WHERE sseguro = psseguro;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               v_ccompani := NULL;
         END;

         vpasexec := 4;

         UPDATE sin_siniestro
            SET ccausin = pccausin,
                cmotsin = pcmotsin,
                fsinies = pfsinies,
                fnotifi = pfnotifi,
                cevento = pcevento,
                cculpab = pcculpab,
                creclama = pcreclama,
                nasegur = pnasegur,
                cmeddec = pcmeddec,
                ctipdec = pctipdec,
                tnomdec = ptnomdec,
                tnom1dec = ptnom1dec,
                --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo segundo nombre declarnte
                tnom2dec = ptnom2dec,
                --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo segundo nombre declarnte
                tape1dec = ptape1dec,
                tape2dec = ptape2dec,
                tteldec = ptteldec,
                tmovildec = ptmovildec,
                --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo telefono mov de declarante
                temaildec = ptemaildec,
                --BUG 19896 --ETM --20/12/2011-AÃ¿Â±adir campo email  de declarante
                tsinies = ptsinies,
                ctipide = pctipide,
                nnumide = pnnumide,
                cnivel = pcnivel,
                dec_sperson = psperson_dec,
                sperson2 = psperson,
                nsincia = pnsincia,
                --BUG 14587 - PFA - 13/08/2010 - AÃ¿Â±adir campo siniestro compaÃ¿Â±ia
                ccompani = v_ccompani,
--BUG 18093 - 30/03/2011 - JRB - Se necesita que la compaÃ¿Â±Ã¿Â­a sea siempre la de la pÃ¿Â³liza.
                npresin = pnpresin,
                fechapp = pfechapp,
                cpolcia = pcpolcia,   --BUG17539 - JTS - 10/02/2011
                iperit = piperit,   --BUG17539 - JTS - 10/02/2011
                cfraude = pcfraude,   --BUG18748 - JBN
                ccarpeta = pccarpeta,
                cagente = pcagente   --- Bug 21817 - MDS - 2/05/2012
                                  ,
                ncuacoa = v_ncuacoa,   -- 0023187- 21/08/2012 - JMF
                csalvam = pcsalvam,   -- BUG 0024675 - 15/11/2012 - JMF
                fdeteccion = pfdeteccion,   -- BUG 39475/222692
                solidaridad = psolidaridad, -- CONF-249
                tdetpreten = ptdetpreten
          WHERE nsinies = pnsinies;

         IF SQL%ROWCOUNT = 0 THEN
            vpasexec := 5;
            RETURN 9000481;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000857;   --Error al llegir de la taula SIN_SINIESTRO
   END f_ins_siniestro;

   /*************************************************************************
      FUNCTION F_Ins_Movsiniestro movseguro
         Inserta a la taula SIN_MOVSINIESTRO dels parÃ¿Â metres informats.
         param in pnsinies     : nÃ¿Âºmero del sinistre
         param in pcestsin     : codi estat sinistre
         param in pfestsin     : data estat sinistre
         param in pccauest     : codi causa estat sinistre
         param in pcunitra     : codi unitat tramitaciÃ¿Â³
         param in pctramitad   : codi tramitador
         param in out pnmovsin : numero moviment
         return                : 0 -> Tot correcte
                                 1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_movsiniestro(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pcestsin IN NUMBER,
      pfestsin IN DATE,
      pccauest IN NUMBER,
      pcunitra IN VARCHAR2,
      pctramitad IN VARCHAR2,
      pnmovsin IN OUT NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Movsiniestro';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pnmovsin:' || pnmovsin || ' pcestsin:'
            || pcestsin || ' pfestsin:' || pfestsin || ' pccauest:' || pccauest
            || ' pcunitra:' || pcunitra || ' pctramitad:' || pctramitad;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vctipsin       NUMBER; --IAXIS 3597 AABC cambio de estado comunicado
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¿Â¡metres d'entrada
      IF pnsinies IS NULL
         OR pcestsin IS NULL
         OR pfestsin IS NULL
         OR pcunitra IS NULL
         OR pctramitad IS NULL THEN
         RETURN 9000505;
      END IF;

      IF pnmovsin IS NULL THEN
         BEGIN
            SELECT NVL(MAX(nmovsin) + 1, 1)
              INTO pnmovsin
              FROM sin_movsiniestro
             WHERE nsinies = pnsinies;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pnmovsin := 1;
         END;
      ELSIF pnmovsin = 0 THEN   -- 23514:ASN:27/08/2012
         pnmovsin := 1;
      END IF;
      --IAXIS 3597 AABC cambio de estado comunicado
      IF pcestsin = 5 THEN
         --
         vctipsin := 1;
         --
      ELSE
         --
         vctipsin := 0;
         --
      END IF;
      --IAXIS 3597 AABC cambio de estado comunicado
      BEGIN
         -- Inicio IAXIS 3597 AABC cambio de estado comunicado
         INSERT INTO sin_movsiniestro
                     (nsinies, nmovsin, cestsin, festsin, ccauest, cunitra, ctramitad,ctipsin)
              VALUES (pnsinies, pnmovsin, pcestsin, pfestsin, pccauest, pcunitra, pctramitad,vctipsin);

         -- 22156:ASN:28/06/2012 ini
         IF pcestsin = 5 THEN
            UPDATE sin_siniestro
               SET npresin = 'P' || pnsinies
             WHERE nsinies = pnsinies;
         END IF;
      -- 22156:ASN:28/06/2012 fin
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_movsiniestro
               SET cestsin = pcestsin,
                   festsin = pfestsin,
                   ccauest = pccauest,
                   cunitra = pcunitra,
                   ctramitad = pctramitad,
                   ctipsin =  vctipsin
             WHERE nsinies = pnsinies
               AND nmovsin = pnmovsin;
      END;
      -- Fin IAXIS 3597 AABC cambio de estado comunicado

-- 22156:ASN:28/06/2012 ini
/*
      -- Ini Bug 22153 - MDS - 23/05/2012
      IF pcestsin = 5 THEN
         UPDATE sin_siniestro
            SET npresin = 'P' || pnsinies
          WHERE nsinies = pnsinies;
      END IF;
      -- Fin Bug 22153 - MDS - 23/05/2012
*/
-- 22156:ASN:28/06/2012 fin
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000858;   --Error al llegir de la taula SIN_MOVSINIESTRO
   END f_ins_movsiniestro;

   /*************************************************************************
      FUNCTION F_Ins_Tramitacion
         Inserta a la taula SIN_TRAMITACION dels parÃ¿Â metres informats.
         param in pnsinies   : nÃ¿Âºmero del sinistre
         param in pctramit   : codi tramitaciÃ¿Â³
         param in pctcausin  : codi tipus dany
         param in pcinform   : indicador tramitaciÃ¿Â³ informativa
         param in out pntramit : numero tramitaciÃ¿Â³ sinistre
         param in pcsubtiptra : codigo subtipo tramitacion vf_dep.1090
         return              : 0 -> Tot correcte
                               1 -> S'ha produit un error
      -- BUG 0023536 - 24/10/2012 - JMF: Afegir pcsubtiptra
   *************************************************************************/
   FUNCTION f_ins_tramitacion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pctramit IN NUMBER,
      pctcausin IN NUMBER,
      pcinform IN NUMBER,
      pntramit IN OUT NUMBER,
      pcculpab IN NUMBER DEFAULT NULL,
      pccompani IN VARCHAR2 DEFAULT NULL,
      pnsincia IN VARCHAR2 DEFAULT NULL,
      pcpolcia IN VARCHAR2 DEFAULT NULL,
      piperit IN NUMBER DEFAULT NULL,
      pntramte IN NUMBER DEFAULT NULL,   --bug 0018379 - JMC - 02/05/2011
      pcsubtiptra IN NUMBER DEFAULT NULL,
      pnradica IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Tramitacion';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pctramit:'
            || pctramit || ' pctcausin:' || pctcausin || ' pcinform:' || pcinform
            || ' PNTRAMTE=' || pntramte || ' pcsubtiptra=' || pcsubtiptra;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vctcausin      NUMBER;
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pctramit IS NULL
         --OR pctcausin IS NULL
         OR pcinform IS NULL THEN
         RETURN 9000505;
      END IF;

      vctcausin := pctcausin;

      IF pctcausin IS NULL THEN
         vctcausin := 0;
      END IF;

      vpasexec := 2;

      IF pntramit IS NULL THEN
         BEGIN
            SELECT NVL(MAX(ntramit) + 1, 0)
              INTO pntramit
              FROM sin_tramitacion
             WHERE nsinies = pnsinies;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pntramit := 0;
         END;
      END IF;

      BEGIN
         -- BUG 0023536 - 24/10/2012 - JMF: Afegir pcsubtiptra
         INSERT INTO sin_tramitacion
                     (nsinies, ntramit, ctramit, ctcausin, cinform, cculpab, ccompani,
                      nsincia, cpolcia, iperit, ntramte,   --bug 0018379 - JMC - 02/05/2011
                                                        csubtiptra, nradica)
              VALUES (pnsinies, pntramit, pctramit, vctcausin, pcinform, pcculpab, pccompani,
                      pnsincia, pcpolcia, piperit, pntramte,   --bug 0018379 - JMC - 02/05/2011
                                                            pcsubtiptra, pnradica);

         -- Ini bug 16924 - SRA 14/12/2010: una vez creada una nueva tramitacición, marcamos que estÃ¡ pendiente de obtener en quÃ¿Â© estado/subestado
         --                                 inicial se ha de iniciar la tramitacición, cosa que se determinarÃ¡ con funcición PAC_SINIESTROS.F_ESTADOTRAM_ALTA_SINI)
         vbcalculaestadotramini := TRUE;
      -- Fin bug 16924 - SRA - 14/12/2010
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            -- Bug 0022099 - 16/05/2012 - JMF: ,ntramte = pntramte   --bug 0018379 - JMC - 02/05/2011
            -- BUG 0023536 - 24/10/2012 - JMF: Afegir pcsubtiptra
            UPDATE sin_tramitacion
               SET ctramit = pctramit,
                   ctcausin = vctcausin,
                   cinform = pcinform,
                   cculpab = pcculpab,
                   ccompani = pccompani,
                   nsincia = pnsincia,
                   cpolcia = pcpolcia,
                   iperit = piperit,
                   csubtiptra = pcsubtiptra,
                   nradica = pnradica
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000859;   --Error al llegir de la taula SIN_TRAMITACION
   END f_ins_tramitacion;

   /*************************************************************************
      FUNCTION F_Ins_Tramita_Movimiento
         Inserta a la taula SIN_TRAMITA_MOVIMIENTO dels parÃ¿Â metres informats.
         param in pnsinies   : nÃ¿Âºmero del sinistre
         param in pntramit   : numero tramitaciÃ¿Â³ sinistre
         param in pcunitra   : codi unitat tramitaciÃ¿Â³
         param in pctramitad : codi tramitador
         param in pcesttra   : codi estat tramitaciÃ¿Â³
         param in pcsubtra   : codi subestat tramitaciÃ¿Â³
         param in pfesttra   : data estat tramitaciÃ¿Â³
         param in out pnmovtra   : nÃ¿Âºmero moviment tramitaciÃ¿Â³
         return              : 0 -> Tot correcte
                               1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_tramita_movimiento(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pcunitra IN VARCHAR2,
      pctramitad IN VARCHAR2,
      pcesttra IN NUMBER,
      pcsubtra IN NUMBER,
      pfesttra IN DATE,
      pnmovtra IN OUT NUMBER,
      pccauest IN NUMBER DEFAULT NULL,
      pcvalida_ult IN NUMBER DEFAULT NULL   --bug 29989/165377;NSS;13-02-2014
                                         )
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Tramita_Movimiento';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnmovtra:'
            || pnmovtra || ' pcunitra:' || pcunitra || ' pctramitad:' || pctramitad
            || ' pcesttra:' || pcesttra || ' pcsubtra:' || pcsubtra || ' pfesttra:'
            || pfesttra || ' pccauest:' || pccauest;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vcsubtra       NUMBER;
      v_ccauest      sin_tramita_movimiento.ccauest%TYPE;
      num_err        NUMBER;
      vcempres       seguros.cempres%TYPE;
      vcestsin       sin_movsiniestro.cestsin%TYPE;
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pcunitra IS NULL
         OR pctramitad IS NULL
         OR pcesttra IS NULL
         OR pfesttra IS NULL THEN
         RETURN 9000505;
      END IF;

      IF pnmovtra IS NULL THEN
         BEGIN
            SELECT NVL(MAX(nmovtra) + 1, 1)
              INTO pnmovtra
              FROM sin_tramita_movimiento
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pnmovtra := 1;
         END;
      ELSIF pnmovtra = 0 THEN   -- 23514:ASN:27/08/2012
         pnmovtra := 1;
      END IF;

      vcsubtra := pcsubtra;

      IF pcsubtra IS NULL THEN
         vcsubtra := 0;
      END IF;

      -- bug 21196
      IF pccauest IS NOT NULL THEN
         v_ccauest := pccauest;
      ELSE
         IF pcesttra = 0 THEN
            SELECT MIN(ccauest)
              INTO v_ccauest
              FROM sin_codcauest
             WHERE cestsin = 20;
         ELSE
            v_ccauest := NULL;
         END IF;
      END IF;

      ---acciones si ultima tramitacion y va a anular
      BEGIN
         INSERT INTO sin_tramita_movimiento
                     (nsinies, ntramit, nmovtra, cunitra, ctramitad, cesttra, csubtra,
                      festtra, ccauest)   -- 21196:ASN:26/03/2012
              VALUES (pnsinies, pntramit, pnmovtra, pcunitra, pctramitad, pcesttra, vcsubtra,
                      pfesttra, v_ccauest);   -- 21196:ASN:26/03/2012

         -- 23101:04/08/2012 ini
         IF pctramitad <> 'T000' THEN
            num_err := pac_tramitadores.f_reasignacion(pnsinies, pntramit, pnmovtra, pcunitra,
                                                       pctramitad);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         END IF;
        /*
         -- 23101:ASN:06/08/2012 ini
         IF pnmovtra = 1
            OR v_ccauest = 101 THEN   -- Si es alta de tramitacion o si es cambio de tramitador
            num_err := pac_tramitadores.f_mensaje_asignacion(pnsinies, NULL, pntramit,
                                                             pcunitra, pctramitad);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         END IF;
         -- 23101:ASN:06/08/2012 fin
         -- 23101:ASN:03/08/2012 ini
         IF pnmovtra > 1 THEN
            num_err := f_traspasa_agenda(pnsinies, pntramit, pnmovtra);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         END IF;
      -- 23101:ASN:03/08/2012 fin
      */
      -- 23101:04/08/2012 fin
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_movimiento
               SET cunitra = pcunitra,
                   ctramitad = pctramitad,
                   cesttra = pcesttra,
                   csubtra = vcsubtra,
                   festtra = pfesttra,
                   ccauest = pccauest   -- 21196:ASN:26/03/2012
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND nmovtra = pnmovtra;
      END;

      --bug 29989/165377;NSS;13-02-2014
      BEGIN
         SELECT sg.cempres
           INTO vcempres
           FROM sin_siniestro ss, seguros sg
          WHERE sg.sseguro = ss.sseguro
            AND ss.nsinies = pnsinies;
      EXCEPTION
         WHEN OTHERS THEN
            vcempres := NULL;
      END;

      BEGIN
         SELECT cestsin
           INTO vcestsin
           FROM sin_movsiniestro
          WHERE nsinies = pnsinies
            AND nmovsin = (SELECT MAX(nmovsin)
                             FROM sin_movsiniestro
                            WHERE nsinies = pnsinies);
      EXCEPTION
         WHEN OTHERS THEN
            vcempres := NULL;
      END;

      IF pcesttra NOT IN(0, 4)   --abierto, reabierto
         AND vcestsin <> 1   --terminado
         AND NVL(pcvalida_ult, 0) = 1   --realizar acciones de ultima tramitacion
                                     THEN
         num_err := pac_siniestros.f_accult_tramitacion(pnsinies, pntramit, vcempres,
                                                        f_sysdate, pccauest, pcesttra);

         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;
      END IF;

      --FIN bug 29989/165377;NSS;13-02-2014
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000860;   --Error al llegir de la taula SIN_TRAMITA_MOVIMIENTO
   END f_ins_tramita_movimiento;

       /*************************************************************************
         FUNCTION F_Ins_detalltramitacio
            Inserta a les taules de detall de tramitacions dels parÃ¿Â metres informats.
   pctiptra IN NUMBER,
         pnsinies IN VARCHAR2,
         pntramit IN NUMBER,
         psperson IN NUMBER,
         pcestper IN NUMBER,
         pccompani IN VARCHAR2,
         pcpolcia IN VARCHAR2,
         piperit IN NUMBER,
         pttramita IN VARCHAR2,
         pcsiglas IN NUMBER,
         ptnomvia IN VARCHAR2,
         pnnumvia IN NUMBER,
         ptcomple IN VARCHAR2,
         ptdirec IN VARCHAR2,
         pcpais IN NUMBER,
         pcprovin IN NUMBER,
         pcpoblac IN NUMBER,
         pcpostal IN VARCHAR2,
         param in pcciudad
         param in pfgisx
         param in pfgisy
         param in pfgisz
         param in pcvalida
         pspercon IN NUMBER,
         pctipcar IN VARCHAR2,
         pfcarnet IN DATE,
         pctipcon IN NUMBER,
         pcalcohol IN NUMBER,
         pctipmat IN NUMBER,
         pcmatric IN VARCHAR2,
         pcmarca IN VARCHAR2,
         psmodelo IN NUMBER,
         pcversion IN VARCHAR2,
         )
            return             : 1 -> Tot correcte
                                 0 -> S'ha produit un error
      -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
      *************************************************************************/
   FUNCTION f_ins_detalltramitacio(
      pctiptra IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pcestper IN NUMBER,
      pttramita IN VARCHAR2,
      pcsiglas IN NUMBER,
      ptnomvia IN VARCHAR2,
      pnnumvia IN NUMBER,
      ptcomple IN VARCHAR2,
      ptdirec IN VARCHAR2,
      pcpais IN NUMBER,
      pcprovin IN NUMBER,
      pcpoblac IN NUMBER,
      pcpostal IN VARCHAR2,
      pcciudad IN NUMBER,
      pfgisx IN FLOAT,
      pfgisy IN FLOAT,
      pfgisz IN FLOAT,
      pcvalida IN NUMBER,
      pctipcar IN VARCHAR2,
      pfcarnet IN DATE,
      pctipcon IN NUMBER,
      pcalcohol IN NUMBER,
      pctipmat IN NUMBER,
      pcmatric IN VARCHAR2,
      pcmarca IN VARCHAR2,
      psmodelo IN NUMBER,
      pcversion IN VARCHAR2,
      pnanyo IN NUMBER,
      pcodmotor IN VARCHAR2,
      pcchasis IN VARCHAR2,
      pnbastid IN VARCHAR2,
      pccilindraje IN VARCHAR2,
      pireclam IN NUMBER DEFAULT NULL,
      piindemn IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_detalltramitacio';
      vparam         VARCHAR2(1000)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pcestper:' || pcestper || ' pttramita:' || pttramita;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vnumerr        NUMBER(10);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pctiptra <> 0 THEN
         IF pctiptra IN(1, 2, 6, 7) THEN   --autos
            vnumerr := pac_siniestros.f_ins_detvehiculo(pnsinies, pntramit, psperson,
                                                        pcestper, pctipcar, pfcarnet,
                                                        pctipcon, pcalcohol, pctipmat,
                                                        pcmatric, pcmarca, psmodelo,
                                                        pcversion, pnanyo, pcodmotor,
                                                        pcchasis, pnbastid, pccilindraje,
                                                        pttramita);
         END IF;

         IF pctiptra = 3 THEN   --detall personas
            vnumerr := pac_siniestros.f_ins_detpersona(pnsinies, pntramit, psperson, pcestper,
                                                       pttramita);
         END IF;

         IF pctiptra = 4 THEN   -- det descripcio
            -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
            vnumerr := pac_siniestros.f_ins_detdescripcion(pnsinies, pntramit, psperson,
                                                           pttramita, pireclam, piindemn);
         END IF;

         IF pctiptra = 5 THEN   --det direccio
            vnumerr := pac_siniestros.f_ins_detdireccion(pnsinies, pntramit, psperson,
                                                         pcsiglas, ptnomvia, pnnumvia,
                                                         ptcomple, ptdirec, pcpais, pcprovin,
                                                         pcpoblac, pcpostal, pttramita,
                                                         pcciudad, pfgisx, pfgisy, pfgisz,
                                                         pcvalida);
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000861;   --Error al llegir de la taula SIN_TRAMITA_DETPERSONA
   END f_ins_detalltramitacio;

   /*************************************************************************
      FUNCTION F_Ins_Detpersona
         Inserta a la taula SIN_TRAMITA_DETPERSONA dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in psperson  : codi persona
         param in pcestper  : codi estat persona
         param in pccompani : codi companyia asseg. contraria
         param in pcpolcia  : codi pÃ¿Â²lissa companyia asseg. contraria
         param in piperit   : import peritatge
         param in pttramita : desc tramitaciÃ¿Â³
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_detpersona(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pcestper IN NUMBER,
      pttramita IN VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Detpersona';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pcestper:' || pcestper || ' pttramita:' || pttramita;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_detpersona
                     (nsinies, ntramit, sperson, cestper, ttramita)
              VALUES (pnsinies, pntramit, psperson, pcestper, pttramita);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_detpersona
               SET sperson = psperson,
                   cestper = pcestper,
                   ttramita = pttramita
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000861;   --Error al llegir de la taula SIN_TRAMITA_DETPERSONA
   END f_ins_detpersona;

   /*************************************************************************
      FUNCTION F_Ins_Detdireccion
         Inserta a la taula SIN_TRAMITA_DETDIRECCION dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in psperson  : codi persona
         param in pcsiglas  : codi tipus via
         param in ptnomvia  : nom via
         param in pnnumvia  : nÃ¿Âºmero via
         param in ptcomple  : dades complementaries
         param in ptdirec   : direcciÃ¿Â³ no normalitzada
         param in pcpais    : codi paÃ¿Â­s
         param in pcprovin  : codi provincia
         param in pcpoblac  : codi poblaciÃ¿Â³
         param in pcpostal  : codi postal
         param in pccompani : codi companyia asseg. contraria
         param in pcpolcia  : codi pÃ¿Â²lissa companyia asseg. contraria
         param in piperit   : import peritatge
         param in pttramita : desc tramitaciÃ¿Â³
         param in pcciudad  : codigo de ciudad
         param in pfgisx    : codigo gis x
         param in pfgisy    : codigo gis y
         param in pfgisz    : codigo gis z
         param in pcvalida  : codigo de si valida la direccion
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
         Bug 12668 - 26/02/2010 - AMC
   *************************************************************************/
   FUNCTION f_ins_detdireccion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pcsiglas IN NUMBER,
      ptnomvia IN VARCHAR2,
      pnnumvia IN NUMBER,
      ptcomple IN VARCHAR2,
      ptdirec IN VARCHAR2,
      pcpais IN NUMBER,
      pcprovin IN NUMBER,
      pcpoblac IN NUMBER,
      pcpostal IN VARCHAR2,
      pttramita IN VARCHAR2,
      pcciudad IN NUMBER,
      pfgisx IN FLOAT,
      pfgisy IN FLOAT,
      pfgisz IN FLOAT,
      pcvalida IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Detdireccion';
      vparam         VARCHAR2(2000)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pcsiglas:' || pcsiglas || ' ptnomvia:' || ptnomvia
            || ' pnnumvia:' || pnnumvia || ' ptcomple:' || ptcomple || ' ptdirec:' || ptdirec
            || ' pcpais:' || pcpais || ' pcprovin:' || pcprovin || ' pcpoblac:' || pcpoblac
            || ' pcpostal:' || pcpostal || ' pttramita:' || pttramita || ' pcciudad:'
            || pcciudad || ' pfgisx:' || pfgisx || ' pfgisy:' || pfgisy || ' pfgisz:'
            || pfgisz || ' pcvalida:' || pcvalida;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_detdireccion
                     (nsinies, ntramit, sperson, csiglas, tnomvia, nnumvia, tcomple,
                      tdirec, cpais, cprovin, cpoblac, cpostal, ttramita, cciudad,
                      fgisx, fgisy, fgisz, cvalida)
              VALUES (pnsinies, pntramit, psperson, pcsiglas, ptnomvia, pnnumvia, ptcomple,
                      ptdirec, pcpais, pcprovin, pcpoblac, pcpostal, pttramita, pcciudad,
                      pfgisx, pfgisy, pfgisz, pcvalida);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_detdireccion
               SET sperson = psperson,
                   csiglas = pcsiglas,
                   tnomvia = ptnomvia,
                   nnumvia = pnnumvia,
                   tcomple = ptcomple,
                   tdirec = ptdirec,
                   cpais = pcpais,
                   cprovin = pcprovin,
                   cpoblac = pcpoblac,
                   cpostal = pcpostal,
                   ttramita = pttramita,
                   cciudad = pcciudad,
                   fgisx = pfgisx,
                   fgisy = pfgisy,
                   fgisz = pfgisz,
                   cvalida = pcvalida
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000862;
   --Error al llegir de la taula SIN_TRAMITA_DETDIRECCION
   END f_ins_detdireccion;

   /*************************************************************************
      FUNCTION F_Ins_Detvehiculo
         Inserta a la taula SIN_TRAMITA_DETVEHICULO dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in pspercon  : nÃ¿Âºmero persona conductor/propietari
         param in pcestper  : codi estat persona
         param in pctipcar  : codi tipus permÃ¿Â­s conduir
         param in pfcarnet  : data permÃ¿Â­s conduir
         param in pctipcon  : codi tipus conductor
         param in pcalcohol : indicador alcoholemia
         param in pctipmat  : codi tipus matrÃ¿Â­cula
         param in pcmatric  : codi matrÃ¿Â­cula
         param in pcmarca   : codi marca vehÃ¿Â­cle
         param in psmodelo  : seqÃ¿Â¼Ã¿Â©ncia model vehÃ¿Â­cle
         param in pcversion : codi versiÃ¿Â³ vehÃ¿Â­cle
         param in pccompani : codi companyia asseg. contraria
         param in pcpolcia  : codi pÃ¿Â²lissa companyia asseg. contraria
         param in piperit   : import peritatge
         param in pttramita : desc tramitaciÃ¿Â³
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_detvehiculo(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pspercon IN NUMBER,
      pcestper IN NUMBER,
      pctipcar IN VARCHAR2,
      pfcarnet IN DATE,
      pctipcon IN NUMBER,
      pcalcohol IN NUMBER,
      pctipmat IN NUMBER,
      pcmatric IN VARCHAR2,
      pcmarca IN VARCHAR2,
      psmodelo IN NUMBER,
      pcversion IN VARCHAR2,
      pnanyo IN NUMBER,
      pcodmotor IN VARCHAR2,
      pcchasis IN VARCHAR2,
      pnbastid IN VARCHAR2,
      pccilindraje IN VARCHAR2,
      pttramita IN VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Detvehiculo';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pspercon:'
            || pspercon || ' pcestper:' || pcestper || ' pctipcar:' || pctipcar
            || ' pfcarnet:' || pfcarnet || ' pctipcon:' || pctipcon || ' pcalcohol:'
            || pcalcohol || ' pctipmat:' || pctipmat || ' pcmatric:' || pcmatric
            || ' pcmarca:' || pcmarca || ' psmodelo:' || psmodelo || ' pcversion:'
            || pcversion || ' pnanyo:' || pnanyo || ' pttramita:' || pttramita;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_detvehiculo
                     (nsinies, ntramit, spercon, cestper, ctipcar, fcarnet, ctipcon,
                      calcohol, ctipmat, cmatric, cmarca, smodelo, cversion, nanyo,
                      codmotor, cchasis, nbastid, ccilindraje, ttramita)
              VALUES (pnsinies, pntramit, pspercon, pcestper, pctipcar, pfcarnet, pctipcon,
                      pcalcohol, pctipmat, pcmatric, pcmarca, psmodelo, pcversion, pnanyo,
                      pcodmotor, pcchasis, pnbastid, pccilindraje, pttramita);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_detvehiculo
               SET spercon = pspercon,
                   cestper = pcestper,
                   ctipcar = pctipcar,
                   fcarnet = pfcarnet,
                   ctipcon = pctipcon,
                   calcohol = pcalcohol,
                   ctipmat = pctipmat,
                   cmatric = pcmatric,
                   cmarca = pcmarca,
                   smodelo = psmodelo,
                   cversion = pcversion,
                   nanyo = pnanyo,
                   codmotor = pcodmotor,
                   cchasis = pcchasis,
                   nbastid = pnbastid,
                   ccilindraje = pccilindraje,
                   ttramita = pttramita
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000863;   --Error al llegir de la taula SIN_TRAMITA_DETVEHICULO
   END f_ins_detvehiculo;

   /*************************************************************************
      FUNCTION F_Ins_Detdescripcion
         Inserta a la taula SIN_TRAMITA_DETDESCRIPCION dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in psperson  : nÃ¿Âºmero persona propietari
         param in pccompani : codi companyia asseg. contraria
         param in pcpolcia  : codi pÃ¿Â²lissa companyia asseg. contraria
         param in piperit   : import peritatge
         param in pttramita : desc tramitaciÃ¿Â³
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
   *************************************************************************/
   FUNCTION f_ins_detdescripcion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pttramita IN VARCHAR2,
      pireclam IN NUMBER DEFAULT NULL,
      piindemn IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_detdescripcion';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pttramita:' || pttramita || ' pIRECLAM=' || pireclam
            || ' pIINDEMN=' || piindemn;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
         INSERT INTO sin_tramita_detdescripcion
                     (nsinies, ntramit, sperson, ttramita, ireclam, iindemn)
              VALUES (pnsinies, pntramit, psperson, pttramita, pireclam, piindemn);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
            UPDATE sin_tramita_detdescripcion
               SET sperson = psperson,
                   ttramita = pttramita,
                   ireclam = pireclam,
                   iindemn = piindemn
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000864;
   --Error al llegir de la taula SIN_TRAMITA_DETDESCRIPCION
   END f_ins_detdescripcion;
 /*************************************************************************
      FUNCTION f_ins_amparo
         Inserta y actualiza  la tabla sin_tramita_amparo .

      param in pnsinies : Numero Siniestro         
       param in pntramit : Numero Tramitacion Siniestro        
       param in pcgarant : Codigo Garantia         
       param in pnpreten : vAlor de la pretension        
       param in picaprie : Importe Capital Riesgo        
       param in pcmonpreten : Codigo de moneda         
       param in pcusualt : Codigo usuario alta         
       param in pfalta : Fecha Alta        
       param in pcusumod : Có¤©§o Usuario Modificacion         
       param in pfmodifi : Fecha Modificacion        
          return             : 0 -> Tot correcte
                              1 -> Se ha producido un error
   -- BUG 004131 - 2019-05-22 - EA 
   *************************************************************************/ 
FUNCTION f_ins_amparo(pnsinies    IN sin_siniestro.nsinies%TYPE,
                      pntramit    IN NUMBER,
                      pcgarant    IN NUMBER,
                      pnpreten    IN NUMBER,
                      picaprie    IN NUMBER,
                      pcmonpreten IN VARCHAR2) RETURN NUMBER IS
  vobjectname      VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_amparo';
  vparam           VARCHAR2(500) := 'nsinies: ' || pnsinies ||
                                    ' - ntramit: ' || pntramit ||
                                    ' - cgarant: ' || pcgarant ||
                                    ' - npreten: ' || pnpreten ||
                                    ' - icaprie: ' || picaprie ||
                                    ' - cmonpreten: ' || pcmonpreten;
  vpasexec         NUMBER(5) := 1;
  vnumerr          NUMBER(8) := 1;
  v_count          NUMBER(5) := 0;
  v_countpreguntas NUMBER(5) := 0;
  v_pcpregun       NUMBER(5) := 0;
  vcmonres         VARCHAR2(10);
  v_cmonprod       eco_codmonedas.cmoneda%TYPE;
  v_cmultimon      parempresas.nvalpar%TYPE;
  v_finivig        DATE;
  v_ffinvig        DATE;
  v_cmonicaprie     VARCHAR2(10);   -- 03/01/2020   I.R.D   IAXIS-4131 

BEGIN
  SELECT distinct cpregun
    into v_pcpregun
    from sin_gar_pregunta
   where cgarant = pcgarant
     AND cgarant in (select distinct (cgarant) from garanpro);
  select distinct finivig, ffinvig
    into v_finivig, v_ffinvig
    from garanseg
    join sin_siniestro
   using (sseguro)
   where nsinies = pnsinies
     and cgarant = pcgarant
	 and garanseg.nmovimi =(select max(garanseg.nmovimi) from garanseg
    join sin_siniestro
   using (sseguro)
   where nsinies = pnsinies
     and cgarant = pcgarant);
  p_control_error('abj', 'PAC_SINIESTROS desde alta siniestro', 'i1');
  IF pcmonpreten IS NULL THEN

    vcmonres := 'COP';

  ELSE
    vcmonres := 'COP';
  END IF;
  SELECT count(1)
    INTO v_count
    FROM sin_tramita_amparo
   WHERE nsinies = pnsinies
     AND ntramit = pntramit
     AND cgarant = pcgarant;
  /*AND npreten = pnpreten 
  AND icaprie = picaprie 
  AND cmonpreten = pcmonpreten;*/

  IF NVL(v_count, 0) > 0 THEN
    vpasexec := 3;

    p_control_error('abj', 'PAC_SINIESTROS desde alta siniestro', 'i2');
    UPDATE sin_tramita_amparo
       SET nsinies    = pnsinies,
           ntramit    = pntramit,
           cgarant    = pcgarant,
           npreten    = pnpreten,
           icaprie    = picaprie,
           cmonpreten = vcmonres,
           fmodifi    = f_sysdate()
     WHERE nsinies = pnsinies
       AND ntramit = pntramit
       AND cgarant = pcgarant
    /*AND npreten = pnpreten 
    AND icaprie = picaprie 
    AND cmonpreten = pcmonpreten*/
    ;

    update pregunsini
       set pregunsini.crespue =
           (select DISTINCT npreten
              from sin_tramita_amparo
              join sin_gar_pregunta
                on sin_gar_pregunta.cgarant = sin_tramita_amparo.cgarant
               and cactivi = 0
             where sin_tramita_amparo.nsinies = pregunsini.nsinies
               and sin_tramita_amparo.cgarant = pcgarant
               and sin_gar_pregunta.cpregun = pregunsini.cpregun)

          ,
           pregunsini.trespue =
           (select DISTINCT npreten
              from sin_tramita_amparo
              join sin_gar_pregunta
                on sin_gar_pregunta.cgarant = sin_tramita_amparo.cgarant
               and cactivi = 0
             where sin_tramita_amparo.nsinies = pregunsini.nsinies
               and sin_tramita_amparo.cgarant = pcgarant
               and sin_gar_pregunta.cpregun = pregunsini.cpregun)

     where pregunsini.nsinies = pnsinies
       AND EXISTS
     (select npreten
              from sin_tramita_amparo
              join sin_gar_pregunta
                on sin_gar_pregunta.cgarant = sin_tramita_amparo.cgarant
               and cactivi = 0
             where sin_tramita_amparo.nsinies = pregunsini.nsinies
               and sin_tramita_amparo.cgarant = pcgarant
               and sin_gar_pregunta.cpregun = pregunsini.cpregun);

    vnumerr := 0;

  ELSE
    vpasexec := 4;
    p_control_error('abj', 'PAC_SINIESTROS desde alta siniestro', 'i3');

    IF pnpreten IS NOT NULL THEN
      INSERT INTO sin_tramita_amparo
        (nsinies,
         ntramit,
         cgarant,
         npreten,
         icaprie,
         cmonpreten,
         cusualt,
         finivig,
         ffinvig)
      values
        (pnsinies,
         pntramit,
         pcgarant,
         pnpreten,
         picaprie,
         vcmonres,
         f_user(),
         v_finivig,
         v_ffinvig);
    ELSE
      INSERT INTO sin_tramita_amparo
        (nsinies,
         ntramit,
         cgarant,
         npreten,
         icaprie,
         cmonpreten,
         cusualt,
         finivig,
         ffinvig)
      values
        (pnsinies,
         pntramit,
         pcgarant,
         NULL,
         picaprie,
         vcmonres,
         f_user(),
         v_finivig,
         v_ffinvig);
      UPDATE sin_tramita_amparo
         SET sin_tramita_amparo.npreten =
             (select DISTINCT trespue
                from pregunsini
                join sin_gar_pregunta
                  on sin_gar_pregunta.cpregun = pregunsini.cpregun
                 and sin_tramita_amparo.nsinies = pregunsini.nsinies
                 and sin_tramita_amparo.cgarant = sin_gar_pregunta.cgarant)

       WHERE sin_tramita_amparo.nsinies = pnsinies
         AND sin_tramita_amparo.cgarant = pcgarant
         AND EXISTS
       (select trespue
                from pregunsini
                join sin_gar_pregunta
                  on sin_gar_pregunta.cpregun = pregunsini.cpregun
                 and sin_tramita_amparo.nsinies = pregunsini.nsinies
                 and sin_tramita_amparo.cgarant = sin_gar_pregunta.cgarant);

    END IF;

    vnumerr := 0;
  END IF;

  SELECT count(1)
    INTO v_countpreguntas
    from sin_tramita_amparo
    join sin_gar_pregunta
      on sin_gar_pregunta.cgarant = sin_tramita_amparo.cgarant
    JOIN pregunsini
      on pregunsini.cpregun = sin_gar_pregunta.cpregun
     and sin_tramita_amparo.nsinies = pregunsini.nsinies
     and cactivi = 0
     and sin_tramita_amparo.nsinies = pnsinies
     and sin_tramita_amparo.cgarant = pcgarant
   WHERE sin_tramita_amparo.nsinies = pnsinies
     and sin_tramita_amparo.cgarant = pcgarant;

  select DISTINCT cpregun
    into v_pcpregun
    from sin_tramita_amparo
    join sin_gar_pregunta
      on sin_gar_pregunta.cgarant = sin_tramita_amparo.cgarant
     and cactivi = 0
   where sin_tramita_amparo.nsinies = pnsinies
     and sin_tramita_amparo.cgarant = pcgarant;

  IF NVL(v_countpreguntas, 0) = 0 and v_pcpregun > 0 THEN
    IF pnpreten IS NULL THEN
      Insert into pregunsini
        (NSINIES, CPREGUN, CRESPUE, TRESPUE)
      values
        (pnsinies, v_pcpregun, 0, 0);
    ELSE
      Insert into pregunsini
        (NSINIES, CPREGUN, CRESPUE, TRESPUE)
      values
        (pnsinies, v_pcpregun, pnpreten, pnpreten);

    END IF;

  END IF;

   --03/01/2020   I.R.D  IAXIS-4131 Inicio 

BEGIN 

   p_tab_error(f_sysdate, f_user, 'Sin_siniestro', 1,
                        'numerr: ' || ' - ' || pnsinies || ' pnsinies ' || pcgarant || ' pcgarant ', NULL);

      select pac_monedas.f_cmoneda_t(g.cmoncap)
        into v_cmonicaprie
        from sin_siniestro sn, seguros s, garanpro g
       where sn.nsinies = pnsinies 
         and sn.sseguro = s.sseguro
         and s.sproduc = g.sproduc
         and s.cactivi = g.cactivi
         and g.cgarant = pcgarant;

  p_tab_error(f_sysdate, f_user, 'Sin_siniestro', 2,
                        'numerr: ' || ' - ' || v_cmonicaprie || ' v_cmonicaprie ', NULL);


END;

     update sin_tramita_amparo set cmonicaprie = v_cmonicaprie where nsinies=pnsinies and cgarant=pcgarant and ntramit=pntramit;

--03/01/2020   I.R.D  IAXIS-4131 Fin


  p_control_error('abj', 'PAC_SINIESTROS desde alta siniestro', '14');
  RETURN vnumerr;
EXCEPTION
  WHEN OTHERS THEN
    p_tab_error(f_sysdate,
                f_user,
                vobjectname,
                vpasexec,
                vparam,
                'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
    RETURN 1000455;

  END f_ins_amparo;  

   /*************************************************************************
      FUNCTION F_Ins_Reserva
         Inserta a la taula SIN_TRAMITA_RESERVA dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in pctipres  : codi tipus reserva
         param in pnmovres  : nÃ¿Âºmero moviment reserva
         param in pcgarant  : codi garantia
         param in pccalres  : codi cÃ¡lcul reserva (Manual/AutomÃ¿Â tic)
         param in pfmovres  : data moviment reserva
         param in pcmonres  : Codi Moneda Reserva
         param in pireserva : import reserva
         param in pipago    : import pagament
         param in piingreso : import ingres
         param in pirecobro : import recobrament
         param in pfresini  : data inici reserva
         param in pfresfin  : data fi reserva
         param in pfultpag  : data ultim pagament
         param in psidepag  : seqÃ¿Â¼Ã¿Â©ncia identificador pagament
         param in piprerec  : importe prevision recobro
          ...
         param in pcalcfranq : 0 --> Indica que no se debe realizar el recalculo de franquicia para los
                                     gastos de M.O./ Rep. (F_recalculo).
                               1 Ã¿Â³ NULL --> Valor por defecto,  se realiza el calculo de la franquicia.


         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
      Bug 11945 - 16/12/2009 - AMC - Se aÃ¿Â±ade piprerec
   *************************************************************************/
   FUNCTION f_ins_reserva(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pcgarant IN NUMBER,
      pccalres IN NUMBER,
      pfmovres IN DATE,
      pcmonres IN VARCHAR2,
      pireserva IN NUMBER,
      pipago IN NUMBER,
      picaprie IN NUMBER,
      pipenali IN NUMBER,
      piingreso IN NUMBER,
      pirecobro IN NUMBER,
      pfresini IN DATE,
      pfresfin IN DATE,
      pfultpag IN DATE,
      psidepag IN NUMBER,
      piprerec IN NUMBER,
      pctipgas IN NUMBER,
      pnmovres IN OUT NUMBER,
      pcmovres IN NUMBER,   --Bug 31294/174788:NSS:22/05/2014
      pifranq IN NUMBER DEFAULT NULL,   --Bug 27059:NSS:03/06/2013
      pndias IN NUMBER DEFAULT NULL   --Bug 27487/159742:NSS:26/11/2013
                                   ,
      pitotimp IN NUMBER DEFAULT NULL,
------------------------------------- IMPUESTOS
      pitotret IN NUMBER DEFAULT NULL,   -- 24637/0147756:NSS:20/03/2014
      piva_ctipind IN NUMBER DEFAULT NULL,   -- 24637/0147756:NSS:20/03/2014
      pretenc_ctipind IN NUMBER DEFAULT NULL,   -- 24637/0147756:NSS:20/03/2014
      preteiva_ctipind IN NUMBER DEFAULT NULL,   -- 24637/0147756:NSS:20/03/2014
      preteica_ctipind IN NUMBER DEFAULT NULL,   -- 24637/0147756:NSS:20/03/2014
      pcalcfranq IN NUMBER DEFAULT NULL,   -- 29801/0183298:JTT:09/09/2014
      pcsolidaridad IN NUMBER DEFAULT NULL,   -- CONF-431 IGIL
      pmigracion IN NUMBER
            DEFAULT 0   -- indica 0 - No es migracición, envio a sistema remoto. 1- Es migracion no envio a sisemas remotos.
                     )
      RETURN NUMBER IS
      --INI BUG CONF-186  Fecha (22/08/2016) - HRE - proceso de marcas
      CURSOR cur_marcas(psseguro seguros.sseguro%TYPE) IS
         SELECT sperson
           FROM tomadores
          WHERE sseguro = psseguro
         UNION
         SELECT sperson
           FROM asegurados
          WHERE sseguro = psseguro;
      --FIN BUG CONF-186  - Fecha (22/08/2016) - HRE
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Reserva';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pctipres:'
            || pctipres || ' pnmovres:' || pnmovres || ' pcgarant:' || pcgarant
            || ' pccalres:' || pccalres || ' pfmovres:' || pfmovres || ' pcmonres:'
            || pcmonres || ' pireserva:' || pireserva || ' pipago:' || pipago || ' piingreso:'
            || piingreso || ' pirecobro:' || pirecobro || ' pfresini:' || pfresini
            || ' pfresfin:' || pfresfin || ' pfultpag:' || pfultpag || ' psidepag:'
            || psidepag || ' pctipgas:' || pctipgas || ' pifranq:' || pifranq || ' pndias:'
            || pndias || ' pitotret:' || pitotret || ' piva_ctipind:' || piva_ctipind
            || ' pretenc_ctipind:' || pretenc_ctipind || ' preteiva_ctipind:'
            || preteiva_ctipind || ' preteica_ctipind:' || preteica_ctipind || ' pcalcfranq: '
            || pcalcfranq || ' pcsolidaridad: ' || pcsolidaridad;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vcmonres       VARCHAR2(10);
      vfmovres       DATE;
      v_cempres      seguros.sseguro%TYPE;
      v_cmonprod     eco_codmonedas.cmoneda%TYPE;
      v_cmultimon    parempresas.nvalpar%TYPE;
      v_error        axis_literales.slitera%TYPE := 0;
      vexiste        NUMBER;
      vexiste2       NUMBER;
      vireserva      NUMBER;
      vnmovres_orig  NUMBER;
      vntramit       NUMBER;
      v_cidioma      NUMBER;
      vinserta       NUMBER := 0;
      vinserta_conta NUMBER := 0;
      vterminal      VARCHAR2(200);
      vtipopago      NUMBER := 10;
      vemitido       NUMBER;
      perror         VARCHAR2(2000);
      psinterf       NUMBER;
      v_cobjase      NUMBER;
      v_cte          NUMBER;
      v_ireserva30   NUMBER;
      v_ireserva31   NUMBER;
      v_modif_reserva30 NUMBER;
      v_modif_reserva31 NUMBER;
      v_ireserva_70  NUMBER;
      v_ireserva_30  NUMBER;
      dummy          NUMBER;
      v_sseguro      NUMBER;
      v_impfranquicia NUMBER := 0;
      v_nriesgo      NUMBER;
      v_nmovimi      NUMBER;
      v_fsinies      DATE;
      v_ifranq_70    NUMBER;
      v_ifranq_30    NUMBER;
      v_cmoncia_n    monedas.cmoneda%TYPE;
      v_nmovres_insert NUMBER;
      vsimplog       sin_imp_sap_log.simplog%TYPE;
      v_hay_pagos    NUMBER;
      vidres         NUMBER;   --31294/174629:NSS:13/05/2014
      v_insert_res   NUMBER := 0;
      vfcambio       DATE; --CONF-431 IGIL
      v_faceptapago  DATE; --CONF-431 IGIL
    vcsolidaridad       NUMBER;   -- CONF-1957 ACL
      --IAXIS 5454 AABC cmovres para reserva 
      v_ipago_moncia     sin_tramita_reserva.ipago_moncia%TYPE; 
      v_irecobro_moncia  sin_tramita_reserva.ireserva_moncia%TYPE;
      v_ipago            sin_tramita_reserva.ipago%TYPE;
      v_sidepag          sin_tramita_reserva.sidepag%TYPE;
      v_irecobro         sin_tramita_reserva.irecobro%TYPE;
      -- IAxis 5194 AABC 17-01-2020 reservas detalles aum dis Lib
      vcountresdet  NUMBER;
      -- IAxis 5194 AABC 17-01-2020 reservas detalles aum dis Lib
      --IAXIS 5454 AABC cmovres para reserva 
-- 29801:ASN:12/02/2014 ini
      FUNCTION f_recalcula(
         pnsinies IN sin_tramita_reserva.nsinies%TYPE,
         pntramit IN sin_tramita_reserva.ntramit%TYPE,
         pnmovres IN sin_tramita_reserva.nmovres%TYPE,
         pcgarant IN sin_tramita_reserva.cgarant%TYPE,
         pctipgas IN sin_tramita_reserva.ctipgas%TYPE,
         pcmoncia IN NUMBER,
         psseguro IN sin_siniestro.sseguro%TYPE,
         pnriesgo IN sin_siniestro.nriesgo%TYPE,
         pnmovimi IN sin_siniestro.nmovimi%TYPE,
         pfsinies IN sin_siniestro.fsinies%TYPE)
         RETURN NUMBER IS
         vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_reserva(f_recalcula)';
         vparam         VARCHAR2(500)
            := 'parámetros - nsinies: ' || pnsinies || ' pntramit:' || pntramit
               || ' pnmovres:' || pnmovres || ' pcgarant:' || pcgarant || ' pctipgas:'
               || pctipgas || ' pcmoncia:' || pcmoncia || ' psseguro:' || psseguro
               || ' pnriesgo:' || pnriesgo || ' pnmovimi:' || pnmovimi || ' pfsinies:'
               || pfsinies;
         vpasexec       NUMBER := 1;
         vimporte30     NUMBER;
         vimporte31     NUMBER;
         vporc_30       NUMBER;
         vporc_31       NUMBER;
         vtotal_ini     NUMBER;
         vk             NUMBER;
         vtotal_k       NUMBER;
         vtotal_fin     NUMBER;
         vfranquicia    NUMBER;
         vireserv30     NUMBER;
         vireserv31     NUMBER;
         vifranq30      NUMBER;
         vifranq31      NUMBER;
         vcuantos       NUMBER;
      BEGIN
         IF pntramit = 0 THEN   -- No recalculamos en la tramitacion 0 si ya hay registros en otras tramitaciones
            SELECT COUNT(*)
              INTO vcuantos
              FROM sin_tramita_reserva
             WHERE nsinies = pnsinies
               AND ntramit > 0
               AND cgarant = pcgarant
               AND ctipres = 3
               AND ctipgas IN(30, 31);

            IF vcuantos > 0 THEN
               RETURN 0;
            END IF;
         END IF;

         vpasexec := 2;

         BEGIN
            SELECT tr.icaprie
              INTO vimporte30
              FROM sin_tramita_reserva tr
             WHERE tr.nsinies = pnsinies
               AND tr.cgarant = pcgarant
               AND tr.ctipres = 3
               AND tr.ntramit = pntramit
               AND tr.ctipgas = 30
               AND tr.nmovres = (SELECT MAX(tr2.nmovres)
                                   FROM sin_tramita_reserva tr2
                                  WHERE tr2.nsinies = tr.nsinies
                                    AND tr2.ntramit = tr.ntramit
                                    AND tr2.ctipres = tr.ctipres
                                    AND tr2.cgarant = tr.cgarant
                                    AND tr2.ctipgas = tr.ctipgas);
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               vimporte30 := 0;
         END;

         vpasexec := 3;

         BEGIN
            SELECT tr.icaprie
              INTO vimporte31
              FROM sin_tramita_reserva tr
             WHERE tr.nsinies = pnsinies
               AND tr.cgarant = pcgarant
               AND tr.ctipres = 3
               AND tr.ntramit = pntramit
               AND tr.ctipgas = 31
               AND tr.nmovres = (SELECT MAX(tr2.nmovres)
                                   FROM sin_tramita_reserva tr2
                                  WHERE tr2.nsinies = tr.nsinies
                                    AND tr2.ntramit = tr.ntramit
                                    AND tr2.ctipres = tr.ctipres
                                    AND tr2.cgarant = tr.cgarant
                                    AND tr2.ctipgas = tr.ctipgas);
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               vimporte31 := 0;
         END;

         vpasexec := 4;
         vtotal_ini := vimporte30 + vimporte31;

         IF vimporte30 <> 0 THEN
            vporc_30 := vimporte30 / vtotal_ini;
         ELSE
            vporc_30 := 0;
         END IF;

         vporc_31 := 1 - vporc_30;
         vk := vtramo(-1, 5114, 0);
         vtotal_k := vtotal_ini * vk;
         vfranquicia := pac_sin_franquicias.f_fran_tot(psseguro, pnmovimi, pnriesgo, pcgarant,
                                                       vtotal_k,
                                                       TO_NUMBER(TO_CHAR(pfsinies, 'yyyymmdd')));
         vtotal_fin := GREATEST((vtotal_k - vfranquicia) / vk, 0);
         vireserv30 := f_round(vtotal_fin * vporc_30, pcmoncia);
         vireserv31 := f_round(vtotal_fin - vireserv30, pcmoncia);
         vifranq30 := vimporte30 - vireserv30;
         vifranq31 := vimporte31 - vireserv31;
         vpasexec := 5;

         UPDATE sin_tramita_reserva tr
            SET ireserva = DECODE(pctipgas, 30, vireserv30, vireserv31),
                ifranq = DECODE(pctipgas, 30, vifranq30, vifranq31)
          WHERE tr.nsinies = pnsinies
            AND tr.cgarant = pcgarant
            AND tr.ctipres = 3
            AND tr.ntramit = pntramit
            AND tr.ctipgas = pctipgas
            AND tr.nmovres = pnmovres
            AND(tr.ireserva <> DECODE(pctipgas, 30, vireserv30, vireserv31)
                OR tr.ifranq <> DECODE(pctipgas, 30, vifranq30, vifranq31));

         vpasexec := 6;

         SELECT COUNT(*)
           INTO vcuantos
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND cgarant = pcgarant
            AND ctipres = 3
            AND ctipgas IN(30, 31);

         IF pntramit = 0
            AND vcuantos = 2 THEN
            vpasexec := 7;

            UPDATE sin_tramita_reserva tr
               SET ireserva = DECODE(pctipgas, 30, vireserv31, vireserv30),
                   ifranq = DECODE(pctipgas, 30, vifranq31, vifranq30)
             WHERE tr.nsinies = pnsinies
               AND tr.cgarant = pcgarant
               AND tr.ctipres = 3
               AND tr.ntramit = 0
               AND tr.ctipgas = DECODE(pctipgas, 30, 31, 30);
         ELSE
            vpasexec := 8;

            INSERT INTO sin_tramita_reserva
                        (nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres,
                         cmonres, ireserva, ipago, iingreso, irecobro, icaprie, ipenali,
                         fresini, fresfin, fultpag, sidepag, iprerec, ctipgas, ifranq, idres,   --bug 31294/174629:NSS:13/05/2014
                         cmovres)   --bug 31294/174629:NSS:13/05/2014
               SELECT nsinies, ntramit, ctipres, pnmovres + 1, cgarant, ccalres, fmovres,
                      cmonres, DECODE(pctipgas, 30, vireserv31, vireserv30), ipago, iingreso,
                      irecobro, DECODE(pctipgas, 30, vimporte31, vimporte30), ipenali,
                      fresini, fresfin, fultpag, NULL, iprerec, ctipgas,
                      DECODE(pctipgas, 30, vifranq31, vifranq30), idres,   --bug 31294/174629:NSS:13/05/2014
                      14   --bug 31294/174788:NSS:22/05/2014
                 FROM sin_tramita_reserva tr
                WHERE tr.nsinies = pnsinies
                  AND tr.cgarant = pcgarant
                  AND tr.ctipres = 3
                  AND tr.ntramit = pntramit
                  AND tr.ctipgas = DECODE(pctipgas, 30, 31, 30)
                  AND tr.nmovres = (SELECT MAX(tr2.nmovres)
                                      FROM sin_tramita_reserva tr2
                                     WHERE tr2.nsinies = tr.nsinies
                                       AND tr2.ntramit = tr.ntramit
                                       AND tr2.ctipres = tr.ctipres
                                       AND tr2.cgarant = tr.cgarant
                                       AND tr2.ctipgas = tr.ctipgas)
                  AND(tr.ireserva <> DECODE(pctipgas, 30, vireserv31, vireserv30)
                      OR tr.ifranq <> DECODE(pctipgas, 30, vifranq31, vifranq30));   -- si no ha cambiado nada que no cree un nuevo registro
         END IF;

         RETURN 0;
      EXCEPTION
         WHEN OTHERS THEN
            p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                        'v_error: ' || v_error || ' SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
            RETURN 9906472;   --Error al recalcular la franquicia
      END f_recalcula;
--29801:ASN:12/02/2014 fin
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pctipres IS NULL
         OR pccalres IS NULL
                            --       OR pfmovres IS NULL
                            --OR pireserva IS NULL
      THEN
         RETURN 9000505;
      END IF;

      vnmovres_orig := pnmovres;

      SELECT COUNT(1)
        INTO vexiste
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND pnmovres IS NOT NULL
         AND NVL(cgarant, 0) = NVL(pcgarant, 0);

      vpasexec := 2;

      IF (pnmovres IS NULL
          OR vexiste = 0) THEN
         BEGIN
            SELECT NVL(MAX(nmovres) + 1, 1)
              INTO pnmovres
              FROM sin_tramita_reserva
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ctipres = pctipres;   -- 30920
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pnmovres := 1;
         END;
      END IF;

      --- BUG 18423 - 16/12/2012 - JMP - Multimoneda
      SELECT cempres, pac_monedas.f_cmoneda_t(cdivisa), s.cobjase, s.sseguro, ss.nriesgo,
             ss.nmovimi, fsinies, pac_parametros.f_parempresa_n(cempres, 'MONEDAEMP')
        INTO v_cempres, v_cmonprod, v_cobjase, v_sseguro, v_nriesgo,
             v_nmovimi, v_fsinies, v_cmoncia_n
        FROM seguros s, sin_siniestro ss, productos p
       WHERE ss.nsinies = pnsinies
         AND s.sseguro = ss.sseguro
         AND p.sproduc = s.sproduc;

      vpasexec := 3;
      v_cidioma := pac_md_common.f_get_cxtidioma;
      vpasexec := 4;
      v_cmultimon := NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0);

      --INI BUG CONF-186  Fecha (22/08/2016) - HRE - proceso de marcas
    -- IAXIS 4504 AABC se realiza comentarios para cargas ULAE
    --IAXIS 3648 AABC se ajusta para la carga ULAE 
      /*FOR rg_marcas IN cur_marcas(v_sseguro) LOOP
         v_error := pac_marcas.f_set_marca_automatica(v_cempres,
                                  rg_marcas.sperson,
                                  '0025');
      END LOOP;*/
      --FIN BUG CONF-186  - Fecha (22/08/2016) - HRE
      --FIN BUG CONF-186  - Fecha (22/08/2016) - HRE 

      IF pcmonres IS NULL THEN
         IF v_cmultimon = 1 THEN
            vcmonres := v_cmonprod;
         ELSE
            vcmonres := NVL(pac_eco_monedas.f_obtener_moneda_defecto, 'EUR');
         END IF;
      ELSE
         vcmonres := pcmonres;
      END IF;

      -- FIN BUG 18423 - 16/12/2012 - JMP - Multimoneda
      vfmovres := pfmovres;

      IF pfmovres IS NULL THEN
         vfmovres := f_sysdate;
      END IF;

      vpasexec := 5;

      SELECT COUNT(1)
        INTO vexiste
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND NVL(cgarant, 0) = NVL(pcgarant, 0);

      v_error := pac_sin_tramite.f_get_tramite9999(pnsinies, vntramit);
      vpasexec := 6;

      SELECT COUNT(1)
        INTO vexiste2
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND fresini = pfresini   --29891:NSS:31/01/2014
         AND fresfin = pfresfin   --29891:NSS:31/01/2014
         AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND NVL(cgarant, 0) = NVL(pcgarant, 0)
         --AND vexiste > 0
         AND(NVL(ireserva, 0) <> NVL(pireserva, 0)
             OR NVL(ipago, 0) <> NVL(pipago, 0)
             OR NVL(icaprie, 0) <> NVL(picaprie, 0)
             OR NVL(ipenali, 0) <> NVL(pipenali, 0)
             OR NVL(iingreso, 0) <> NVL(piingreso, 0)
             OR NVL(irecobro, 0) <> NVL(pirecobro, 0)
             OR NVL(iprerec, 0) <> NVL(piprerec, 0))
         AND vnmovres_orig IS NOT NULL
         AND(ntramit <> vntramit
             OR vntramit IS NULL)
         AND nmovres IN(SELECT MAX(nmovres)
                          FROM sin_tramita_reserva
                         WHERE nsinies = pnsinies
                           AND ntramit = pntramit
                           AND ctipres = pctipres
                           AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                           AND NVL(cgarant, 0) = NVL(pcgarant, 0));

      IF vexiste2 > 0 THEN
         BEGIN
            SELECT NVL(MAX(nmovres) + 1, 1)
              INTO pnmovres
              FROM sin_tramita_reserva
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ctipres = pctipres;   -- 30920
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pnmovres := 1;
         END;
      END IF;

      vpasexec := 7;

      IF (pireserva IS NULL
          AND vexiste > 0)
         OR pireserva IS NOT NULL THEN
         IF pireserva IS NOT NULL THEN
            vireserva := pireserva;
         ELSE
            vireserva := 0;
         END IF;

         BEGIN
            --ini bug 31294/174629:NSS:13/05/2014
            BEGIN
               SELECT DISTINCT idres
                          INTO vidres
                          FROM sin_tramita_reserva
                         WHERE nsinies = pnsinies
                           AND ntramit = pntramit
                           AND ctipres = pctipres
                           AND NVL(ctipgas, -1) = NVL(pctipgas, -1)
                           AND NVL(cgarant, -1) = NVL(pcgarant, -1)
                           AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
                           AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy'));
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  BEGIN
                     SELECT MAX(idres) + 1
                       INTO vidres
                       FROM sin_tramita_reserva
                      WHERE nsinies = pnsinies;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        vidres := 1;
                  END;
            END;

            IF vidres IS NULL THEN
               vidres := 1;
            END IF;
            --IAXIS 5454 AABC cmovres para reserva
            IF pcmovres = 2 THEN
               --  
               v_ipago_moncia     := 0; 
               v_irecobro_moncia  := 0;
               v_ipago            := 0;
               v_sidepag          := NULL;
               v_irecobro         := 0;
               --
            ELSE
               --
               v_ipago            := pipago;
               v_sidepag          := psidepag;
               v_irecobro         := pirecobro;
              --
            END IF;     
            --IAXIS 5454 AABC cmovres para reserva 
            p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS.', vpasexec,
                        'Ipicaprie ' || picaprie || ' ctipres ' || pctipres, '.');



            -- CONF-431 IGIL
            vfcambio := vfmovres;


       -- CONF-431 IGIL
       --IAXIS 5194 AABC detalle de reservas aumento disminucion liberacion 
       --v_error := pac_siniestros.f_ins_reservadet(pnsinies, vidres, pnmovres, vfcambio, pcmovres, vcmonres, NULL, vireserva);
       --IAXIS 5194 AABC detalle de reservas aumento disminucion liberacion




      -- INI CONF- 1957 - ACL - 04/04/2018
      IF pcmovres in (4, 22) THEN
              SELECT * INTO vcsolidaridad
                FROM (
                SELECT s.csolidaridad
                  FROM sin_tramita_reserva s
                 WHERE s.nsinies = pnsinies
                   AND s.ctipres = pctipres
                   AND s.cmonres = vcmonres
                ORDER BY nmovres desc)
                 WHERE rownum = 1 ;
            ELSE
              vcsolidaridad := pcsolidaridad;
            END IF;
            -- FIN CONF- 1957 - ACL - 04/04/2018
            --fin bug 31294/174629:NSS:13/05/2014
      -- INI CONF- 1507 - ACL - 07/02/2018
      -- INI CONF- 1877 - ACL - 09/02/2018 - Se complementa el bug 1507 agregando condiciones por movimientos de pagos
      -- INI CONF- 1915 - ACL - 22/02/2018 - Se elimina los cambios de las incidencias 1507 y 1877. Se decide dejar modificaciones en el pac_propio_conf.
            INSERT INTO sin_tramita_reserva
                        (nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres,
                         cmonres, ireserva, ipago, iingreso, irecobro, icaprie,
                         ipenali, fresini, fresfin, fultpag, sidepag, iprerec, ctipgas,
                         ifranq,   -- Bug 27059:NSS:03/06/2013
                                ndias   --Bug 27487/159742:NSS:26/11/2013
                                     , itotimp -------------------------------------- IMPUESTOS
            ,            itotret,   -- 24637/0147756:NSS:20/03/2014
                         idres,   -- 31294/174629:NSS:13/05/2014
                               cmovres,   --bug 31294/174788:NSS:22/05/2014
                               csolidaridad -- CONF-431 IGIL
                                      )
                 VALUES (pnsinies, pntramit, pctipres, pnmovres, pcgarant, pccalres, vfmovres,
                         vcmonres,
                                  -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
          -- IAXIS 5454 - 30/10/2019 - AABC - CAMBIO DE PAGO Y SIDEPAG
                                  vireserva, v_ipago, piingreso, v_irecobro, picaprie,
                         pipenali, pfresini, pfresfin, pfultpag, v_sidepag, piprerec, pctipgas,
                         pifranq,   -- Bug 27059:NSS:03/06/2013
                                 pndias   --Bug 27487/159742:NSS:26/11/2013
                                       , pitotimp
------------------------------------- IMPUESTOS
            ,            pitotret,   -- 24637/0147756:NSS:20/03/2014
                         vidres,   -- 31294/174629:NSS:13/05/2014
                                pcmovres,   --bug 31294/174788:NSS:22/05/2014
                                vcsolidaridad -- CONF-431 IGIL
                                        );

                    INSERT INTO sin_tramita_reserva_conta
                        (nsinies, ntramit, ctipres, nmovres,cestado, cgarant,  fmovres,
                         cmonres, ireserva, icaprie,
                          sidepag, 
                         ifranq,   -- Bug 27059:NSS:03/06/2013

                         idres,   -- 31294/174629:NSS:13/05/2014
                               cmovres,   --bug 31294/174788:NSS:22/05/2014
                               csolidaridad -- CONF-431 IGIL
                                      )
                 VALUES (pnsinies, pntramit, pctipres, pnmovres,0, pcgarant, vfmovres,
                         vcmonres,
                                  -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
                                  vireserva, picaprie,
                           psidepag, 
                         pifranq,   -- Bug 27059:NSS:03/06/2013

                         vidres,   -- 31294/174629:NSS:13/05/2014
                                pcmovres,   --bug 31294/174788:NSS:22/05/2014
                                vcsolidaridad -- CONF-431 IGIL
                                );
       -- FIN CONF- 1877 - ACL - 09/02/2018
       -- FIN CONF- 1507 - ACL - 07/02/2018
       -- FIN CONF- 1915 - ACL - 22/02/2018
            -- CONF-431 IGIL
            vfcambio := vfmovres;

            IF pcmovres = 5 THEN -- Anulacición pago
                                --Buscamos el movimiento de aceptacición del pago para obtener la fecha en que se realizÃ¿Â³ Ã¢â¿¬Ë¿v_faceptapagoÃ¢â¿¬â¿¢
              BEGIN
	        --IAXIS 4555 AABC CAMBIOS EN LOS ESTADOS DE PAGO 
                SELECT TRUNC(FALTA )
                  INTO v_faceptapago
                  FROM SIN_TRAMITA_MOVPAGO M
                 WHERE M.SIDEPAG = PSIDEPAG
                   AND M.CESTPAG = 0
                   AND M.NMOVPAG = (SELECT MIN(M2.NMOVPAG)
                                  FROM SIN_TRAMITA_MOVPAGO M2
                                 WHERE M2.SIDEPAG = M.SIDEPAG
                                   AND M2.CESTPAG = M.CESTPAG);                
              EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                          --Si no encontrÃ¡semos datos repetirÃ¿Â­amos la consulta pero buscando el CESTPAG = 9.
                  SELECT TRUNC(FALTA )
                    INTO v_faceptapago
                    FROM SIN_TRAMITA_MOVPAGO M
                   WHERE M.SIDEPAG = PSIDEPAG
                     AND M.CESTPAG = 9
                     AND M.NMOVPAG = (SELECT MIN(M2.NMOVPAG)
                                  FROM SIN_TRAMITA_MOVPAGO M2
                                 WHERE M2.SIDEPAG = M.SIDEPAG
                                   AND M2.CESTPAG = M.CESTPAG);
              --IAXIS 4555 AABC CAMBIOS EN LOS ESTADOS DE PAGO 
	      END;
              vfcambio := v_faceptapago;
            END IF;

            vpasexec := 8;
            v_insert_res := 1;

            IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'RESERVA_ONLINE'), 0) = 1 THEN
               vinserta := 1;
            END IF;

            IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'CONTAB_ONLINE'), 0) = 1 THEN
               vinserta_conta := 1;
            END IF;

            v_nmovres_insert := pnmovres;   -- 29801:ASN:14/02/2014

            --INI BUG  24637/147756:NSS:03/03/2014
            IF piva_ctipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, nsinies, ntramit, ctipres, nmovres, ctipind)
                    VALUES (vsimplog, pnsinies, pntramit, pctipres, pnmovres, piva_ctipind);
            END IF;

            IF pretenc_ctipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, nsinies, ntramit, ctipres, nmovres, ctipind)
                    VALUES (vsimplog, pnsinies, pntramit, pctipres, pnmovres, pretenc_ctipind);
            END IF;

            IF preteiva_ctipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, nsinies, ntramit, ctipres, nmovres, ctipind)
                    VALUES (vsimplog, pnsinies, pntramit, pctipres, pnmovres, preteiva_ctipind);
            END IF;

            IF preteica_ctipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, nsinies, ntramit, ctipres, nmovres, ctipind)
                    VALUES (vsimplog, pnsinies, pntramit, pctipres, pnmovres, preteica_ctipind);
            END IF;
         --FIN BUG 24637/147756:NSS:03/03/2014
         EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
               UPDATE sin_tramita_reserva
                  SET cgarant = pcgarant,
                      ccalres = pccalres,
                      fmovres = vfmovres,
                      cmonres = vcmonres,
                      -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
                      ireserva = vireserva,
                      ipago = pipago,
                      iingreso = piingreso,
                      irecobro = pirecobro,
                      icaprie = picaprie,
                      ipenali = pipenali,
                      fresini = pfresini,
                      fresfin = pfresfin,
                      fultpag = pfultpag,
                      sidepag = psidepag,
                      iprerec = piprerec,
                      ctipgas = pctipgas,
                      ifranq = pifranq,   -- Bug 27059:NSS:03/06/2013
                      ndias = pndias   --Bug 27487/159742:NSS:26/11/2013
                                    ,
                      itotimp = pitotimp
---------------------------------------- IMPUESTOS
               ,
                      itotret = pitotret,   -- 24637/0147756:NSS:20/03/2014
                      cmovres = pcmovres,   -- 31294/0174788:NSS:27/05/2014
                      csolidaridad = pcsolidaridad -- CONF-431 IGIL
                WHERE nsinies = pnsinies
                  AND ntramit = pntramit
                  AND ctipres = pctipres
                  AND nmovres = pnmovres;
         END;
      END IF;

      vpasexec := 9;

      SELECT COUNT(*)
        INTO v_hay_pagos
        FROM sin_tramita_reserva r
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = 3
         AND ctipgas IN(30, 31)
         AND nmovres = (SELECT MAX(nmovres)
                          FROM sin_tramita_reserva r1
                         WHERE r1.nsinies = r.nsinies
                           AND r1.ntramit = r.ntramit
                           AND r1.ctipres = r.ctipres
                           AND r1.ctipgas = r.ctipgas)
         AND ipago <> 0;

      vpasexec := 10;

      -- 29801:ASN:12/02/2014 ini
      -- 32081/182672 - 04/09/2014 - JTT: Solo llamamos a la funcion de recalcular franquicias cuando
      -- insertamos un movimiento de reserva.
      -- 29801/183298 - 29/09/2014 - JTT: pcalcfranq = 1 indica que debe llamarse a F_recalcula
      IF v_insert_res = 1
         AND NVL(pcalcfranq, 1) = 1 THEN
         IF pcgarant IN(760, 761)
            AND pctipgas IN(30, 31)
            AND pccalres = 1   -- Bug 29801 - 24/07/2014 - JTT: Solo para calculos automaticos
            AND v_hay_pagos = 0 THEN   -- 28/03/2014
            v_error := f_recalcula(pnsinies, pntramit, pnmovres, pcgarant, pctipgas,
                                   v_cmoncia_n, v_sseguro, v_nriesgo, v_nmovimi, v_fsinies);

            IF v_error <> 0 THEN
               RETURN v_error;
            END IF;
         END IF;
      END IF;

      vpasexec := 101;

      FOR i IN (SELECT nmovres
                  FROM sin_tramita_reserva
                 WHERE nsinies = pnsinies
                   AND ntramit = pntramit
                   AND ctipres = pctipres
--                   AND nmovres >= v_nmovres_insert  -- 28/03/2014
                   AND TRUNC(falta) = TRUNC(f_sysdate)) LOOP
         vpasexec := 102;

         IF v_cmultimon = 1 THEN
            v_error := pac_oper_monedas.f_contravalores_reserva(pnsinies, pntramit, pctipres,
                                                                i.nmovres,NULL,vfcambio);

            IF v_error <> 0 THEN
               RETURN v_error;
            END IF;
         END IF;
-- AVT inici ----------------------------------------------------
      END LOOP;
      -- IAxis 5194 AABC 17-01-2020 reservas detalles aum dis Lib 
      BEGIN 
         --
         SELECT COUNT(1)
           INTO vcountresdet
           FROM sin_tramita_reservadet
          WHERE nsinies = pnsinies
            AND idres   = vidres
            AND nmovres  = pnmovres;
         --
      EXCEPTION WHEN no_data_found THEN 
         --
         vcountresdet := 0;
         --         
      END;   
      -- IAxis 5194 AABC 17-01-2020 reservas detalles aum dis Lib 
      -- CONF-431 IGIL
      IF vcountresdet = 0 THEN 
         --
      v_error := pac_siniestros.f_ins_reservadet(pnsinies, vidres, pnmovres, vfcambio, pcmovres, vcmonres, 0, vireserva);
         --
      END IF;   
      -- IAxis 5194 AABC 17-01-2020 reservas detalles aum dis Lib
      FOR i IN (SELECT nmovres
                  FROM sin_tramita_reserva
                 WHERE nsinies = pnsinies
                   AND ntramit = pntramit
                   AND ctipres = pctipres
                   --AND nmovres >= v_nmovres_insert -- Bug 33250 -- Quitamos esta condicion. El coaseguro ya comprueba que no lleguen repetidos
                   AND TRUNC(falta) = TRUNC(f_sysdate)) LOOP   -- Bug 34848 - JTT - 26/02/2015.
         -- AVT fi -----------------------
         IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'RESERVA_ONLINE'), 0) = 1
--            AND vinserta = 1
         THEN
            v_error := pac_coa.f_reservas_sin_online(v_cempres, pnsinies, pntramit, pctipres,
                                                     i.nmovres, v_cidioma);

            IF v_error <> 0 THEN
               RETURN v_error;
            END IF;
         END IF;
      END LOOP;

      -- Bug 34848 - JTT - 17/03/2015 - Se separa el bucle de Coaseguro del bucle de Contabilidad, en el bucle de contabilidad
      -- aÃ¿Â±adimos la condicion del NMOVRES necesario para que no ejecute todas la consultas contables para cada movimiento.
      -- No se llama a la contabilidad online si es migracion.
      -- Unicamente llamamos a la contabilidad on-line si acabamos de insertar un registro en la reserva.
      IF pmigracion = 0
         AND v_insert_res = 1 THEN
         FOR i IN (SELECT nmovres
                     FROM sin_tramita_reserva
                    WHERE nsinies = pnsinies
                      AND ntramit = pntramit
                      AND ctipres = pctipres
                      AND nmovres >= v_nmovres_insert
                      AND TRUNC(falta) = TRUNC(f_sysdate)) LOOP
            vpasexec := 11;

            IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'CONTAB_ONLINE'), 0) = 1
               AND NVL(pac_parametros.f_parempresa_n(v_cempres, 'GESTIONA_COBPAG'), 0) = 1 THEN
               v_error := pac_user.f_get_terminal(pac_md_common.f_get_cxtusuario, vterminal);
               v_error := pac_con.f_emision_pagorec(v_cempres, 1, vtipopago, pnsinies,
                                                    i.nmovres, vterminal, vemitido, psinterf,
                                                    perror, f_user, NULL, NULL, NULL, 1);

               IF v_error <> 0
                  OR TRIM(perror) IS NOT NULL THEN
                  IF v_error = 0 THEN
                     v_error := 9903116;   --151323;
                     RETURN v_error;
                  END IF;

                  p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_ins_reserva', vpasexec,
                              'error no controlado', perror || ' ' || v_error);
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- 29801:ASN:12/02/2014 fin
      vpasexec := 12;

      IF vireserva IS NOT NULL THEN
         v_error := f_cancela_reserva_global(pnsinies, pntramit);

         IF v_error <> 0 THEN
            RETURN v_error;
         END IF;
      END IF;

      --- 0032511: SIN - retencion poliza al cambiar reserva INI
      IF pcmovres = 1 THEN
         v_error := pac_propio.f_accion_cambio_reserva(v_cempres, pnsinies);

         IF v_error <> 0 THEN
            RETURN v_error;
         END IF;
      END IF;

      --- 0032511: SIN - retencion poliza al cambiar reserva FIN
      RETURN v_error;
   -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'v_error: ' || v_error || ' SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000865;   --Error al llegir de la taula SIN_TRAMITA_RESERVA
   END f_ins_reserva;

   /*************************************************************************
      FUNCTION F_Ins_Reserva
         Inserta a la taula SIN_TRAMITA_RESERVA dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in pctipres  : codi tipus reserva
         param in pnmovres  : nÃ¿Âºmero moviment reserva
         param in pcgarant  : codi garantia
         param in pccalres  : codi cÃ¡lcul reserva (Manual/AutomÃ¿Â tic)
         param in pfmovres  : data moviment reserva
         param in pcmonres  : Codi Moneda Reserva
         param in pireserva : import reserva
         param in pipago    : import pagament
         param in piingreso : import ingres
         param in pirecobro : import recobrament
         param in pfresini  : data inici reserva
         param in pfresfin  : data fi reserva
         param in pfultpag  : data ultim pagament
         param in psidepag  : seqÃ¿Â¼Ã¿Â©ncia identificador pagament
         param in piprerec  : importe prevision recobro
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
      Bug 11945 - 16/12/2009 - AMC - Se aÃ¿Â±ade piprerec
   *************************************************************************/
   FUNCTION f_ins_referencia(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      psrefext IN NUMBER,
      pctipref IN NUMBER,
      ptrefext IN VARCHAR2,
      pfrefini IN DATE,
      pfreffin IN DATE)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_referencia';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' psrefext:' || psrefext || ' pctipref:'
            || pctipref || ' ptrefext:' || ptrefext || ' pfrefini:' || pfrefini
            || ' pfreffin:' || pfreffin;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vcmonres       VARCHAR2(10);
      vfmovres       DATE;
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR psrefext IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_siniestro_referencias
                     (nsinies, srefext, ctipref, trefext, frefini, freffin)
              VALUES (pnsinies, psrefext, pctipref, ptrefext, pfrefini, pfreffin);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_siniestro_referencias
               SET ctipref = pctipref,
                   trefext = ptrefext,
                   frefini = pfrefini,
                   freffin = pfreffin
             WHERE nsinies = pnsinies
               AND srefext = psrefext;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000865;   --Error al llegir de la taula SIN_TRAMITA_RESERVA
   END f_ins_referencia;

   /*************************************************************************
      FUNCTION F_Ins_pago
         Inserta a la taula SIN_TRAMITA_PAGO dels parÃ¿Â metres informats.
         param in psidepag  : seqÃ¿Â¼Ã¿Â©ncia identificador pagament;
         param in pnsinies  : nÃ¿Âºmero sinistre
         param in pntramit  : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in psperson  : seqÃ¿Â¼Ã¿Â©ncia persona
         param in pctipdes  : codi tipus Tipo Destinatario
         param in pctippag  : codi tipus pagament
         param in pcconpag  : codi concepte pagament
         param in pccauind  : codi causa indemnitzaciÃ¿Â³
         param in pcforpag  : codi forma pagament
         param in pfordpag  : data ordre pagament
         param in pctipban  : codi tipus compte bancaria
         param in pcbancar  : codi compte bancaria
         param in pisinret  : import sense retenciÃ¿Â³
         param in piconret  : import amb retenciÃ¿Â³
         param in piretenc  : import retenciÃ¿Â³
         param in ppretenc  : porcentatge retenciÃ¿Â³
         param in piiva     : import IVA
         param in pisuplid  : import 'Suplido'
         param in pifranq   : import franquicia pagada
         param in pnfacref  : nÃ¿Âºmero factura/referÃ¿Â©ncia
         param in pffacref  : data factura/referÃ¿Â©ncia
         param in psidepagtemp : indica si el sidepag es el real
         param in pcultpag : ultimo pago
         param in pireteiva : Importe de retencición sobre el IVA
         param in pireteica : Importe de retencición sobre el ICA
         param in pireteivapag : Importe de retencición sobre el IVA Moneda Pago
         param in pireteicapag : Importe de retencición sobre el ICA Moneda Pago
         param in piica :
         paran in piicapag :
         param in pcmonres     : Moneda de la reserva
         param in pcagente    : CÃ¿Â³digo del agente/mediador
         param in pnpersrel   : CÃ¿Â³digo persona relacionada/perjudicada
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
    -- Bug 11848 - 23/11/2009  - AMC - Se aÃ¿Â±ade el parametro psidepagtemp
    -- BUG 19981 - 07/11/2011 - MDS - AÃ¿Â±adir campos ireteiva, ireteica, ireteivapag, ireteicapag, piica, piicapag en la cabecera, vparam, insert/update
    -- Bug 22256/122456 - 28/09/2012 - AMC  - AÃ¿Â±adir campos cagente,npersrel,pcdomici y pctributacion
   *************************************************************************/
   FUNCTION f_ins_pago(
      psidepag IN OUT NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pctippag IN NUMBER,
      pcconpag IN NUMBER,
      pccauind IN NUMBER,
      pcforpag IN NUMBER,
      pfordpag IN DATE,
      pctipban IN NUMBER,
      pcbancar IN VARCHAR2,
      pisinret IN NUMBER,
      piretenc IN NUMBER,
      piiva IN NUMBER,
      pisuplid IN NUMBER,
      pifranq IN NUMBER,
      piresrcm IN NUMBER,
      piresred IN NUMBER,
      pnfacref IN VARCHAR2,
      pffacref IN DATE,
      psidepagtemp IN NUMBER,
      pcultpag IN NUMBER,
      pncheque IN VARCHAR2,
      pireteiva IN NUMBER,
      pireteica IN NUMBER,
      pireteivapag IN NUMBER,
      pireteicapag IN NUMBER,
      piica IN NUMBER,
      piicapag IN NUMBER,
      pcmonres IN VARCHAR2 DEFAULT NULL,   --- BUG 18423/104212 - 03/02/2012 - JMP - Multimoneda
      pcagente IN NUMBER DEFAULT NULL,
      pnpersrel IN NUMBER DEFAULT NULL,
      pcdomici IN NUMBER DEFAULT NULL,
      pctributacion IN NUMBER DEFAULT NULL,
      pcbanco IN NUMBER DEFAULT NULL,   --24708:NSS:10/10/2013
      pcofici IN NUMBER DEFAULT NULL,   --24708:NSS:10/10/2013
      pcciudad IN NUMBER DEFAULT NULL, --29224:NSS:24/02/2014
    pspersonpres IN NUMBER DEFAULT NULL,
    ptobserva IN VARCHAR2 DEFAULT NULL,
    piotrosgas IN NUMBER DEFAULT NULL,
    pibaseipoc IN NUMBER DEFAULT NULL,
    piipoconsumo IN NUMBER DEFAULT NULL,
    piotrosgaspag IN NUMBER DEFAULT NULL,
    pibaseipocpag IN NUMBER DEFAULT NULL,
    piipoconsumopag IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_pago';
      vparam         VARCHAR2(500)
         := 'parámetros - psidepag: ' || psidepag || ' pnsinies:' || pnsinies || ' pntramit:'
            || pntramit || ' psperson:' || psperson || ' pctipdes:' || pctipdes
            || ' pctippag:' || pctippag || ' pcconpag:' || pcconpag || ' pccauind:'
            || pccauind || ' pcforpag:' || pcforpag || ' pfordpag:' || pfordpag
            || ' pctipban:' || pctipban || ' pcbancar:' || pcbancar || ' pisinret:'
            || pisinret || ' piretenc:' || piretenc || ' piiva:' || piiva || ' pisuplid:'
            || pisuplid || ' pifranq:' || pifranq || ' pnfacref:' || pnfacref || ' pffacref:'
            || pffacref || ' psidepagtemp:' || psidepagtemp || ' pcultpag:' || pcultpag
            || ' pncheque:' || pncheque || ' pireteiva:' || pireteiva || ' pireteica:'
            || pireteica || ' pireteivapag:' || pireteivapag || ' pireteicapag:'
            || pireteicapag || ' piica:' || piica || ' piicapag:' || piicapag || ' pcbanco:'
            || pcbanco || ' pcofici:' || pcofici || ' pcciudad:' || pcciudad;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      pnmovres       NUMBER(10);
      vnum_err       NUMBER;
      vsidepag       NUMBER(8);
      vcont          NUMBER(3);
      vctipcap       sin_tramita_destinatario.ctipcap%TYPE;
      v_cempres      seguros.cempres%TYPE;
      v_cmonres      sin_tramita_pago.cmonres%TYPE;
      --IAXIS 4504 AABC cambio de solidaridad
      v_nsinies      sin_siniestro.nsinies%TYPE;
      v_sseguro      seguros.sseguro%TYPE;
      v_isinret      sin_tramita_pago.isinret%TYPE;
      v_isinretpag    sin_tramita_pago.isinretpag%TYPE;
      v_iotrogas      sin_tramita_pago.iotrosgas%TYPE;
      v_iotrogaspag   sin_tramita_pago.iotrosgaspag%TYPE;
      v_totalpag      NUMBER;
      vmensaje       VARCHAR2(1000);
      --IAXIS 4504 AABC cambio de solidaridad
      v_countsol      NUMBER;
      --IAXIS 4504 AABC cambio de solidaridad
      BEGIN
      vpasexec := 10;

      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR psperson IS NULL
         OR pctipdes IS NULL
         OR pctippag IS NULL
         OR pcconpag IS NULL
         OR pccauind IS NULL
         OR pcforpag IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
      vpasexec := 15;

  BEGIN
      SELECT NVL(ctipcap, 0)
        INTO vctipcap
        FROM sin_tramita_destinatario
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND sperson = psperson
         AND ctipdes = pctipdes;
  EXCEPTION
         WHEN NO_DATA_FOUND THEN
            vctipcap := 0;
    END;
      vpasexec := 20;

      -- ini Bug 0018812 - 21/06/2011 - JMF
      IF vctipcap = 1 THEN   --JRH En rentas no se permiten pagos
         RETURN 9901544;
      END IF;

      IF vctipcap = 2 THEN   --JRH En rentas no se permiten pagos
         IF pcconpag <> 4 THEN
            RETURN 9901544;
         END IF;
      END IF;

      -- fin Bug 0018812 - 21/06/2011 - JMF
      -- Fi Bug 0015669 - JRH - 30/09/2010
      -- ini Bug 0018812 - 21/06/2011 - JMF :
      -- renta mixta actuarial o sÃ¿Â³lo renta actuarial
      vpasexec := 25;

      IF NVL(vctipcap, 0) NOT IN(2, 4) THEN
         -- Pago renta nuevo
         vpasexec := 30;

         SELECT COUNT(*)
           INTO vcont
           FROM sin_tramita_pago a
          WHERE a.nsinies = pnsinies
            AND a.ntramit = pntramit
            AND a.sperson = psperson
            AND a.ctipdes = pctipdes
            AND a.cconpag = 4
            AND EXISTS(SELECT 1
                         FROM sin_tramita_movpago b
                        WHERE b.sidepag = a.sidepag
                          AND b.nmovpag = (SELECT MAX(b2.nmovpag)
                                             FROM sin_tramita_movpago b2
                                            WHERE b2.sidepag = b.sidepag)
                          AND b.cestval <> 8);

         IF vcont > 0 THEN
            RETURN 9902142;
         END IF;
      END IF;

      vpasexec := 35;
      -- fin Bug 0018812 - 21/06/2011 - JMF :
      -- Bug 11848 - 23/11/2009 - AMC
      /* SELECT COUNT(1)
         INTO vcont
         FROM sin_tramita_pago
         WHERE sidepag = psidepag;
         IF psidepag IS NULL
         OR vcont = 0 THEN
         SELECT sidepag.NEXTVAL
           INTO psidepag
           FROM DUAL;
      END IF;*/
      vpasexec := 60;

      IF psidepagtemp = 1 THEN
         SELECT sidepag.NEXTVAL
           INTO psidepag
           FROM DUAL;
      END IF;

      --Fi Bug 11848 - 23/11/2009 - AMC
      -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      SELECT cempres
        INTO v_cempres
        FROM seguros s, sin_siniestro ss
       WHERE ss.nsinies = pnsinies
         AND s.sseguro = ss.sseguro;

      IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0) = 1 THEN
         -- BUG 18423/104212 - 03/02/2012 - JMP - Multimoneda
         IF pcmonres IS NOT NULL THEN
            --v_cmonres := pcmonres;
      -- INI CONF- 1572 - ACL - 22/03/2018 - Se modifica para que se tome la moneda de la reserva sobre la cual va el pago.
            BEGIN
      SELECT s.cmonres
              INTO v_cmonres
              FROM sin_tramita_reserva s
             WHERE s.nsinies = pnsinies
               AND s.sidepag   = psidepag;
            EXCEPTION WHEN OTHERS THEN 
               v_cmonres := pcmonres;       
      -- FIN CONF- 1572 - ACL - 22/03/2018
            END; 
         ELSE
            -- FIN BUG 18423/104212 - 03/02/2012 - JMP - Multimoneda
            v_cmonres := pac_monedas.f_cmoneda_t(pac_oper_monedas.f_monres(pnsinies));
         END IF;
      ELSE
         v_cmonres := NVL(pac_eco_monedas.f_obtener_moneda_defecto, 'EUR');
      END IF;

      -- FIN BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      BEGIN
         vpasexec := 65;

         INSERT INTO sin_tramita_pago
                     (sidepag, nsinies, ntramit, sperson, ctipdes, ctippag, cconpag,
                      ccauind, cforpag, fordpag, ctipban, cbancar, isinret, iretenc,
                      iiva, isuplid, ifranq, iresrcm, iresred, nfacref, ffacref,
                      cultpag, ncheque,
                                       -- BUG 19981 - 07/11/2011 - MDS
                                       ireteiva, ireteica, ireteivapag, ireteicapag,
                      iica, iicapag, cmonres,   -- BUG 18423 - 07/12/2011 - JMP - Multimoneda
                                             cagente, npersrel, cdomici,
                      ctributa,   -- Bug 22256/122456 - 28/09/2012 - AMC
                               cbanco, coficin,   --24708:NSS:10/10/2013
                                               cciudad   -- 29224:NSS:24/02/2014
                      ,sperson_presentador,tobserva,iotrosgas,iotrosgaspag,ibaseipoc,
            iipoconsumo,ibaseipocpag,iipoconsumopag)
              VALUES (psidepag, pnsinies, pntramit, psperson, pctipdes, pctippag, pcconpag,
                      pccauind, pcforpag, pfordpag, pctipban, pcbancar, pisinret, piretenc,
                      piiva, pisuplid, pifranq, piresrcm, piresred, pnfacref, pffacref,
                      pcultpag, pncheque,
                                         -- BUG 19981 - 07/11/2011 - MDS
                                         pireteiva, pireteica, pireteivapag, pireteicapag,
                      piica, piicapag, v_cmonres,   -- BUG 18423 - 07/12/2011 - JMP - Multimoneda
                                                 pcagente, pnpersrel, pcdomici,
                      pctributacion,   -- Bug 22256/122456 - 28/09/2012 - AMC
                                    pcbanco, pcofici,   --24708:NSS:10/10/2013
                                                     pcciudad,   --29224:NSS:24/02/2014
                      pspersonpres, ptobserva, piotrosgas,piotrosgaspag, pibaseipoc, piipoconsumo,
                      pibaseipocpag, piipoconsumopag);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            vpasexec := 70;

            UPDATE sin_tramita_pago
               SET sperson = psperson,
                   ctipdes = pctipdes,
                   ctippag = pctippag,
                   cconpag = pcconpag,
                   ccauind = pccauind,
                   cforpag = pcforpag,
                   fordpag = pfordpag,
                   ctipban = pctipban,
                   cbancar = pcbancar,
                   isinret = pisinret,
                   iretenc = piretenc,
                   iiva = piiva,
                   isuplid = pisuplid,
                   ifranq = pifranq,
                   iresrcm = piresrcm,
                   iresred = piresred,
                   nfacref = pnfacref,
                   ffacref = pffacref,
                   cultpag = pcultpag,
                   ncheque = pncheque,
                   -- BUG 19981 - 07/11/2011 - MDS
                   ireteiva = pireteiva,
                   ireteica = pireteica,
                   ireteivapag = pireteivapag,
                   ireteicapag = pireteicapag,
                   iica = piica,
                   iicapag = piicapag,
                   cmonres = v_cmonres,
                   -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
                         -- Bug 22256/122456 - 28/09/2012 - AMC
                   cagente = NVL(pcagente, cagente),   --bug 30558#c169162, jds, 19-03-2014
                   npersrel = pnpersrel,
                   cdomici = pcdomici,
                   ctributa = pctributacion,
                   cbanco = pcbanco,   --24708:NSS:10/10/2013
                   coficin = pcofici,   --24708:NSS:10/10/2013
                   cciudad = pcciudad   --29224:NSS:24/02/2014
          ,sperson_presentador = pspersonpres
          ,tobserva            = ptobserva
          ,iotrosgas           = piotrosgas
          ,iotrosgaspag        = pibaseipoc
          ,ibaseipoc           = piipoconsumo
          ,ibaseipocpag        = piotrosgaspag
          ,iipoconsumo         = pibaseipocpag
          ,iipoconsumopag      = piipoconsumopag
             WHERE sidepag = psidepag;
      END;

      vpasexec := 75;

      -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0) = 1 THEN
         vnum_err := pac_oper_monedas.f_contravalores_pagosini(psidepag, 1);

         IF vnum_err <> 0 THEN
            RETURN vnum_err;
         END IF;
      END IF;

      vpasexec := 80;
      -- FIN BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      -- IAXIS 4504 AABC 23/10/2019 Cambio de solidaridad
      SELECT x.nsinies, s.sseguro,  p.isinret,
             p.isinretpag, p.iotrosgas,p.iotrosgaspag
        INTO v_nsinies, v_sseguro, v_isinret,
             v_isinretpag,v_iotrogas,v_iotrogaspag
        FROM seguros s, sin_siniestro x, sin_tramita_pago p
       WHERE p.sidepag = psidepag
         AND x.nsinies = p.nsinies
         AND s.sseguro = x.sseguro;
      --   
      v_totalpag := v_isinretpag + nvl(piotrosgaspag,piotrosgas);
      --
      BEGIN 
         --
         SELECT COUNT(*)
           INTO v_countsol
           FROM sin_solidaridad_pago sp
          WHERE sp.nsinies = v_nsinies
            AND sp.sidepag = psidepag;
         --
      END;   
      --
      IF v_countsol = 0 THEN
         -- 
         vnum_err := pac_validaciones_sin.f_pago_sol_sini(v_sseguro , psidepag ,v_nsinies, v_iotrogas ,vmensaje);       
         --
      END IF;   
      -- IAXIS 4504 AABC 23/10/2019 Cambio de solidaridad
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000866;   --Error al llegir de la taula SIN_TRAMITA_PAGO
   END f_ins_pago;

   -- ini Bug 0018812 - 21/06/2011 - JMF
   FUNCTION f_detalle_ulk(pnsinies IN sin_siniestro.nsinies%TYPE)
      RETURN NUMBER IS
      ntraza         NUMBER;
      v_obj          VARCHAR2(500) := 'PAC_SINIESTROS.F_DETALLE_ULK';
      v_sseguro      seguros.sseguro%TYPE;
      v_sproduc      seguros.sproduc%TYPE;
      xnnumlin       NUMBER;
      seqgrupo       NUMBER;
      xcmovimi       NUMBER;
      fcuenta        DATE;
      xivalora       NUMBER;
      v_ipenali      sin_tramita_reserva.ipenali%TYPE;
      v_icaprisc     NUMBER;
      num_err        NUMBER;
      v_icaprisc_pa  NUMBER;
      v_icaprisc_shw NUMBER;
   BEGIN
      ntraza := 1;

      SELECT sseguro
        INTO v_sseguro
        FROM sin_siniestro
       WHERE nsinies = pnsinies;

      --{Insertamos el movimiento en la libreta ctaseguro}
      --{obtenemos el numero de linea de ctaseguro}
      ntraza := 5;
      -- Bug 0018812 - 21/06/2011 - JMF
      --pac_ctaseguro.f_numlin_next(v_sseguro);
      xnnumlin := NULL;
      -- Buscamos el tipo de movimiento
      ntraza := 7;

      BEGIN
         SELECT scm.cmovimi, i.fsinies, str.ipago, NVL(str.ipenali, 0), NVL(str.icaprie, 0),
                s.sproduc
           INTO xcmovimi, fcuenta, xivalora, v_ipenali, v_icaprisc,
                v_sproduc
           FROM sin_siniestro i, seguros s, sin_causa_motivo scm, sin_gar_causa_motivo sgcm,
                sin_tramita_reserva str
          WHERE scm.ccausin = i.ccausin
            AND scm.cmotsin = i.cmotsin
            AND scm.scaumot = sgcm.scaumot
            AND s.sseguro = i.sseguro
            AND s.sproduc = sgcm.sproduc
            AND i.nsinies = pnsinies
            AND str.nsinies = i.nsinies
            AND str.ctipres = 1
-- 18423 - 25/01/2012 - JMP - Multimoneda: Garantizamos que la reserva estarÃ¡ en la moneda del producto
            AND str.cgarant = sgcm.cgarant
            AND scm.cmovimi IS NOT NULL
            AND str.nmovres = (SELECT MAX(nmovres)
                                 FROM sin_tramita_reserva
                                WHERE nsinies = str.nsinies
                                  AND ntramit = str.ntramit
                                  AND str.ctipres = 1
-- 18423 - 25/01/2012 - JMP - Multimoneda: Garantizamos que la reserva estarÃ¡ en la moneda del producto
                                  AND cgarant = str.cgarant);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            xcmovimi := NULL;
         WHEN OTHERS THEN
            ntraza := 6;
            p_tab_error(f_sysdate, f_user, v_obj, ntraza, 'Error no controlado', SQLERRM);
            RETURN 140999;   -- Error no controlado
      END;

      ntraza := 9;

      SELECT scagrcta.NEXTVAL
        INTO seqgrupo
        FROM DUAL;

      -- Generamos los movimientos de detalle en caso de producto Unit Linked
      ntraza := 11;

      IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
         IF NVL(f_parproductos_v(v_sproduc, 'PRODUCTO_MIXTO'), 0) <> 1 THEN
            ntraza := 13;
            num_err := pac_propio.f_reparto_shadow(v_sseguro, NULL, NULL, v_icaprisc,
                                                   v_icaprisc_pa, v_icaprisc_shw);
            ntraza := 14;
            ntraza := 14;
            num_err := pac_ctaseguro.f_insctaseguro(v_sseguro, f_sysdate, xnnumlin, fcuenta,
                                                    fcuenta, xcmovimi, v_icaprisc_pa, 0, NULL,
                                                    seqgrupo, 0, pnsinies, NULL, NULL);

            IF num_err <> 0 THEN
               p_tab_error(f_sysdate, f_user, v_obj, ntraza, 'err=' || num_err,
                           's=' || v_sseguro || ' l=' || xnnumlin || ' c=' || fcuenta || ' m='
                           || xcmovimi || ' c=' || v_icaprisc || ' g=' || seqgrupo || ' s='
                           || pnsinies);
               RETURN 102555;
            END IF;

            ntraza := 15;
            num_err := pac_sin_rescates.f_distribuye_ctaseguro(v_sseguro, xnnumlin, fcuenta,
                                                               xcmovimi, v_icaprisc_pa,
                                                               seqgrupo, pnsinies);

            IF num_err <> 0 THEN
               p_tab_error(f_sysdate, f_user, v_obj, ntraza, 'err=' || num_err,
                           's=' || v_sseguro || ' l=' || xnnumlin || ' c=' || fcuenta || ' m='
                           || xcmovimi || ' c=' || v_icaprisc || ' g=' || seqgrupo || ' s='
                           || pnsinies);
               RETURN 102555;
            END IF;

            IF pac_ctaseguro.f_tiene_ctashadow(v_sseguro, NULL) = 1 THEN
               num_err := pac_ctaseguro.f_insctaseguro_shw(v_sseguro, f_sysdate, xnnumlin,
                                                           fcuenta, fcuenta, xcmovimi,
                                                           v_icaprisc_shw, 0, NULL, seqgrupo,
                                                           0, pnsinies, NULL, NULL);

               IF num_err <> 0 THEN
                  p_tab_error(f_sysdate, f_user, v_obj, ntraza, 'err=' || num_err,
                              's=' || v_sseguro || ' l=' || xnnumlin || ' c=' || fcuenta
                              || ' m=' || xcmovimi || ' c=' || v_icaprisc || ' g=' || seqgrupo
                              || ' s=' || pnsinies);
                  RETURN 102555;
               END IF;

               ntraza := 15;
               num_err := pac_sin_rescates.f_distribuye_ctaseguro_shw(v_sseguro, xnnumlin,
                                                                      fcuenta, xcmovimi,
                                                                      v_icaprisc_shw, seqgrupo,
                                                                      pnsinies);

               IF num_err <> 0 THEN
                  p_tab_error(f_sysdate, f_user, v_obj, ntraza, 'err=' || num_err,
                              's=' || v_sseguro || ' l=' || xnnumlin || ' c=' || fcuenta
                              || ' m=' || xcmovimi || ' c=' || v_icaprisc || ' g=' || seqgrupo
                              || ' s=' || pnsinies);
                  RETURN 102555;
               END IF;
            END IF;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, v_obj, ntraza, 'Error no controlado', SQLERRM);
         RETURN 140999;
   END f_detalle_ulk;

   -- fin Bug 0018812 - 21/06/2011 - JMF
   /*************************************************************************
      FUNCTION f_ins_movpago
         Inserta a la taula SIN_TRAMITA_MOVPAGO dels parÃ¿Â metres informats.
         param in psidepag : seqÃ¿Â¼Ã¿Â©ncia identificador pagament
         param in pnmovpag : nÃ¿Âºmero moviment pagament
         param in pcestpag : estat pagament
         param in pfefepag : data efecte pagament
         param in pcestval : estat validaciÃ¿Â³ pagament
         param in pfcontab : data contabilitat
         param in psproces : seqÃ¿Â¼Ã¿Â©ncia proces
         param in pcestpagant :  estat pagament anterior
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
     -- Bug 13312 - 08/03/2010 - AMC - Se aÃ¿Â±ade el parametro pcestpagant
     -- Bug 18934 - 29/09/2011 - MDS - LCOL_S001 - SIN - Ultimo pago
   *************************************************************************/
   FUNCTION f_ins_movpago(
      psidepag IN NUMBER,
      pcestpag IN sin_tramita_movpago.cestpag%TYPE,
      pfefepag IN DATE,
      pcestval IN NUMBER,
      pfcontab IN DATE,
      psproces IN NUMBER,
      pcestpagant IN NUMBER,
      pnmovpag IN OUT NUMBER,
      pcsubpag IN NUMBER,
      pcsubpagant IN NUMBER,
      pndocpag IN NUMBER DEFAULT NULL) -- IAXIS-7731 19/12/2019
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_movpago';
      vparam         VARCHAR2(500)
         := 'parámetros - psidepag: ' || psidepag || ' pnmovpag:' || pnmovpag || ' pcestpag:'
            || pcestpag || ' pfefepag:' || pfefepag || ' pcestval:' || pcestval
            || ' pfcontab:' || pfcontab || ' psproces:' || psproces || ' pcestpagant:'
            || pcestpagant || ' pcsubpag:' || pcsubpag || ' pcsubpagant:' || pcsubpagant;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vcforpag       NUMBER(8);
      vempresa       seguros.cempres%TYPE;
      verror         NUMBER;
      vterminal      VARCHAR2(200);
      perror         VARCHAR2(2000);
      -- Bug 0018812 - 21/06/2011 - JMF
      v_cconpag      sin_tramita_pago.cconpag%TYPE;
      v_gestiona_cobpag NUMBER;
      v_nsinies      sin_siniestro.nsinies%TYPE;
      v_sproduc      seguros.sproduc%TYPE;
      v_sproduc_old  seguros.sproduc%TYPE;
      v_cpagdef      productos.cpagdef%TYPE;
      v_cagente      seguros.cagente%TYPE;
      v_cidioma      seguros.cidioma%TYPE;
      v_cbancar      seguros.cbancar%TYPE;
      v_sseguro      seguros.sseguro%TYPE;
      v_pertom       tomadores.sperson%TYPE;
      v_domtom       tomadores.cdomici%TYPE;
      v_perase       asegurados.sperson%TYPE;
      v_domase       asegurados.cdomici%TYPE;
      v_sclauben     claubenseg.sclaben%TYPE;
      v_tclaesp      clausuesp.tclaesp%TYPE;
      --
      v_outseg       seguros.sseguro%TYPE;
      v_outpol       seguros.npoliza%TYPE;
      v_outcer       seguros.ncertif%TYPE;
      v_outsol       seguros.nsolici%TYPE;
      v_outsit       seguros.csituac%TYPE;
      v_outcod       NUMBER;
      v_outmsg       VARCHAR2(500);
      v_isinret      sin_tramita_pago.isinret%TYPE;
      v_tfuncio      prodrentas.tfuncio%TYPE;
      v_ctippag      sin_tramita_pago.ctippag%TYPE;
      -- fin Bug 0018812 - 21/06/2011 - JMF

      -- ini Bug 18934 - 29/09/2011 - MDS : Declarar nuevas variables v_cultpag, v_ntramit_pago, v_ccausin, v_cmotsin
      v_cultpag      sin_tramita_pago.cultpag%TYPE;
      v_ntramit_pago sin_tramita_pago.ntramit%TYPE;
      v_ccausin      sin_siniestro.ccausin%TYPE;
      v_cmotsin      sin_siniestro.cmotsin%TYPE;
      -- fin Bug 18934 - 29/09/2011 - MDS
      v_ult_pago     NUMBER;
      --26981/0171128
      v_cmonres      NUMBER;
      v_penali       sin_tramita_reserva.ipenali%TYPE;
      -- inicio axis 4504 - EA - 2019-07-17 - para validar para que solo se tomen los subselect especificos en pac_cuadre_adm.f_contabiliza_interf

      vmensaje       VARCHAR2(1000);
      vcousap         NUMBER(5);
      CURSOR cur (vsidepag NUMBER, vnsinies NUMBER)
      IS
      SELECT p.sperson,p.cconpag,s.cramo,s.cempres, x.nsinies, p.isinret, s.ctipcoa, p.ctippag, p.cmonpag, p.ctipdes, sr.csolidaridad,s.sseguro         
        FROM seguros s, sin_siniestro x, sin_tramita_pago p, sin_tramita_reserva sr
       WHERE p.sidepag = nvl(vsidepag,0)
        AND sr.nsinies = x.nsinies
         AND sr.sidepag = p.sidepag
         AND x.nsinies = p.nsinies
         AND s.sseguro = x.sseguro
         and x.nsinies = vnsinies 
         AND rownum = 1;
        -- fin axis 4504 - EA - 2019-07-17 - para validar para que solo se tomen los subselect especificos en pac_cuadre_adm.f_contabiliza_interf

   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF psidepag IS NULL
         OR pcestpag IS NULL
         OR pcestval IS NULL THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      IF pnmovpag IS NULL THEN
         BEGIN
            SELECT NVL
                      (MAX(nmovpag) + 1, 0)   -- Bug 28830 - 17/07/2014 - JTT: Los movimientos de pago empiezan en el 0
              INTO pnmovpag
              FROM sin_tramita_movpago
             WHERE sidepag = psidepag;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pnmovpag := 0;
         END;
      END IF;

      vpasexec := 3;

      BEGIN
         INSERT INTO sin_tramita_movpago
                     (sidepag, nmovpag, cestpag, fefepag,
                      cestval, fcontab, sproces, cestpagant, csubpag, csubpagant, ndocpag) -- IAXIS-7731 19/12/2019
              VALUES (psidepag, pnmovpag, pcestpag, NVL(pfefepag, TRUNC(f_sysdate)),
                      pcestval, pfcontab, psproces, pcestpagant, pcsubpag, pcsubpagant, pndocpag); -- IAXIS-7731 19/12/2019

         vpasexec := 4;
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_movpago
               SET cestpag = pcestpag,
                   fefepag = pfefepag,
                   cestval = pcestval,
                   fcontab = pfcontab,
                   sproces = psproces,
                   cestpagant = pcestpagant,
                   csubpag = pcsubpag,
                   csubpagant = pcsubpagant,
                   ndocpag = pndocpag --IAXIS-7731 19/12/2019
             WHERE sidepag = psidepag
               AND nmovpag = pnmovpag;

            vpasexec := 5;
      END;

      -- Cuando se acepta el pago, si la forma de pago es Transferencia se debe modificar
         -- ctransfer = 1 (pendiente de transferir)
      -- Bug 0018812 - 21/06/2011 - JMF: aÃ¿Â±adir cconpag
      SELECT cforpag, cconpag
        INTO vcforpag, v_cconpag
        FROM sin_tramita_pago
       WHERE sidepag = psidepag;

      vpasexec := 6;

      -- bug 13296 - 22/02/2010 - AMC
      IF vcforpag = 1   --transferencia
         AND pcestpag = 1   -- aceptado
                         THEN
         UPDATE sin_tramita_pago
            SET ctransfer = 1
          WHERE sidepag = psidepag;

         vpasexec := 7;
      END IF;

      --Fi bug 13296 - 22/02/2010 - AMC

      -- BUG 17247-  02/2011 - JRH  - 0017247: Envio pagos SAP
      -- Bug 18934 - 29/09/2011 - MDS : AÃ¿Â±adir en la consulta los campos p.cultpag, p.ntramit, x.ccausin, x.cmotsin
      SELECT cempres, x.nsinies, s.sseguro, s.sproduc, p.isinret, p.sperson, s.cidioma,
             p.ctippag, p.cultpag, p.ntramit, x.ccausin, x.cmotsin
        INTO vempresa, v_nsinies, v_sseguro, v_sproduc_old, v_isinret, v_pertom, v_cidioma,
             v_ctippag, v_cultpag, v_ntramit_pago, v_ccausin, v_cmotsin
        FROM seguros s, sin_siniestro x, sin_tramita_pago p
       WHERE p.sidepag = psidepag
         AND x.nsinies = p.nsinies
         AND s.sseguro = x.sseguro;

      vpasexec := 8;

      -- ini Bug 0018812 - 21/06/2011 - JMF
      vpasexec := 1025;
      v_gestiona_cobpag := NVL(pac_parametros.f_parempresa_n(vempresa, 'GESTIONA_COBPAG'), 0);
      vpasexec := 9;

      IF v_cconpag = 4 THEN
         -- Pago de prestacición de renta, no se envia a SAP.
         v_gestiona_cobpag := 0;
      END IF;

      -- fin Bug 0018812 - 21/06/2011 - JMF

      -- BUG 17247-  02/2011 - JRH  - 0017247: Envio pagos SAP No se permite conbrar recibos
      IF v_gestiona_cobpag = 1
         AND NVL(pac_parametros.f_parempresa_n(vempresa, 'COBPAG_PANTALLA'), 0) = 0 THEN
         IF pcestpag = 2 THEN
            IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                 'MODIF_PRESTA'),
                   1) = 1 THEN
               RETURN 110300;
            END IF;
         END IF;
      END IF;

      vpasexec := 10;

      -- 0029495: LCOL_S010-SIN Considerar el ultimo pago : ASN : 24/12/2013 ini
      IF v_cultpag = 0 THEN   -- Si no es el ultimo pago comprobamos si ya hay un ultimo pago anterior
         BEGIN
            SELECT p.sidepag
              INTO v_ult_pago
              FROM sin_tramita_pago p, sin_tramita_movpago m
             WHERE m.sidepag = p.sidepag
               AND m.cestpag = 2
               AND m.nmovpag = (SELECT MAX(m1.nmovpag)
                                  FROM sin_tramita_movpago m1
                                 WHERE m1.sidepag = m.sidepag)
               AND p.nsinies = v_nsinies
               AND p.cultpag = 1;
         EXCEPTION
            WHEN OTHERS THEN
               NULL;
         END;

         vpasexec := 11;

         IF v_ult_pago IS NOT NULL THEN
            v_cultpag := 1;
         END IF;
      END IF;

      vpasexec := 12;

      -- 0029495: LCOL_S010-SIN Considerar el ultimo pago : ASN : 24/12/2013  fin
      IF pcestpag = 1
         AND pcestval = 1 THEN
         --JRH El estado validado

         -- Bug 0018812 - 21/06/2011 - JMF
         -- Bug 0018812 - 21/06/2011 - JMF
         -- Bug 19887 - 20/12/2011 - JRB - Se elimina la llamada desde aquÃ¿Â­ a las interfaces, se harÃ¡ desde la nueva funcición f_gestiona_cobpag
         IF v_cconpag = 4
            AND v_ctippag = 2
            AND v_gestiona_cobpag <> 1 THEN   --PAGO DE RENTA
            -- ini Bug 0018812 - 21/06/2011 - JMF
            -- Pago de prestacición de renta, no se envia a SAP.
            vpasexec := 13;

            INSERT INTO sin_tramita_movpago
                        (sidepag, nmovpag, cestpag, fefepag, cestval, fcontab, sproces,
                         cestpagant)
                 VALUES (psidepag, pnmovpag + 1, 2, pfefepag, 1, pfcontab, psproces,
                         pcestpag);

            vpasexec := 14;
            -- ... en CTASEGURO el importe (cmovimi=31) (y el detalle de Unit Link,
            -- como hace en el PAC_SIN_RESCATES.f_finaliza_sin). Para el insert en ctaseguro
            -- del pago (31) existe PAC_CTASEGURO.f_ins_ctaseguro y la distribucición de ulk es
            -- f_distribuye_ctaseguro del PAC_SIN_RESCATES.
            verror := pac_siniestros.f_detalle_ulk(v_nsinies);

            IF NVL(verror, 0) <> 0 THEN
               p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, 'error no controlado',
                           perror || ' ' || verror);
               RETURN verror;
            END IF;

            vpasexec := 15;

            --** crear pÃ¿Â²lissa renda
            -- Tomador y asegurado es el destinatario.
            SELECT NVL(MAX(cdomici), 1)
              INTO v_domtom
              FROM per_direcciones
             WHERE sperson = v_pertom;

            vpasexec := 16;
            v_perase := v_pertom;
            v_domase := v_domtom;
            vpasexec := 17;

            SELECT MAX(sclaben)
              INTO v_sclauben
              FROM claubenseg b1
             WHERE sseguro = v_sseguro
               AND nmovimi = (SELECT MAX(b2.nmovimi)
                                FROM claubenseg b2
                               WHERE sseguro = v_sseguro);

            vpasexec := 18;

            SELECT MAX(tclaesp)
              INTO v_tclaesp
              FROM clausuesp b1
             WHERE sseguro = v_sseguro
               AND nmovimi = (SELECT MAX(b2.nmovimi)
                                FROM clausuesp b2
                               WHERE sseguro = v_sseguro);

            BEGIN
               vpasexec := 19;

               SELECT sproren, tfuncio
                 INTO v_sproduc, v_tfuncio
                 FROM prodrentas
                WHERE sproduc = v_sproduc_old;
            EXCEPTION
               WHEN OTHERS THEN
                  p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                              v_sproduc_old || ' ' || vparam, SQLCODE || ' ' || SQLERRM);
                  RETURN 9901065;
            END;

            vpasexec := 20;

            IF v_tfuncio IS NOT NULL THEN
               DECLARE
                  n_seg          NUMBER := v_sseguro;
                  n_pag          NUMBER := psidepag;
                  n_pro          NUMBER := v_sproduc;
                  d_fec          DATE := pfefepag;
                  v_sent         VARCHAR2(500);
               BEGIN
                  vpasexec := 22;
                  v_sent := 'begin :verror := ' || v_tfuncio
                            || '(:n_seg, :n_pag, :n_pro, :d_fec, :v_outseg); end;';

                  EXECUTE IMMEDIATE v_sent
                              USING OUT verror, IN n_seg, IN n_pag, IN n_pro, IN d_fec,
                                    OUT v_outseg;
               EXCEPTION
                  WHEN OTHERS THEN
                     p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, v_sent,
                                 SQLCODE || ' ' || SQLERRM);
                     RETURN 9901065;
               END;
            END IF;

            IF NVL(verror, 0) <> 0 THEN
               p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                           v_sproduc || ' ' || vparam, SQLCODE || ' ' || SQLERRM);
               RETURN verror;
            END IF;

            vpasexec := 23;

            DECLARE
               v_segold       seguros_ren_prest.sseguro%TYPE;
               v_renold       seguros_ren_prest.ssegren%TYPE;
            BEGIN
               vpasexec := 24;

               SELECT MAX(sseguro), MAX(ssegren)
                 INTO v_segold, v_renold
                 FROM seguros_ren_prest
                WHERE sidepag = psidepag;

               IF v_segold IS NULL THEN
                  vpasexec := 25;

                  INSERT INTO seguros_ren_prest
                              (sseguro, ssegren, sidepag)
                       VALUES (v_sseguro, v_outseg, psidepag);
               ELSE
                  p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                              f_axis_literales(1000155, v_cidioma),
                              'segold=' || v_segold || ' renold=' || v_renold || ' segnew='
                              || v_sseguro || ' rennew=' || v_outseg);
                  vpasexec := 26;

                  UPDATE seguros_ren_prest
                     SET sseguro = v_sseguro,
                         ssegren = v_outseg
                   WHERE sidepag = psidepag;
               END IF;
            END;
         END IF;

         vpasexec := 27;

         -- fin Bug 0018812 - 21/06/2011 - JMF

         -- 23764:ASN:18/10/2012 ini
         -- Si hay un prestamo, se cancela pues ya se habra penalizado el pago
         FOR i IN (SELECT p.ctapres, p.falta
                     FROM prestamos p, prestamoseg ps
                    WHERE ps.ctapres = p.ctapres
                      AND p.cestado = 1
                      AND ps.sseguro = (SELECT sseguro
                                          FROM sin_siniestro
                                         WHERE nsinies = v_nsinies)) LOOP
            --26981/0171128 - INI
            --verror := pac_prestamos.f_anulacion(i.ctapres, 5);
            SELECT NVL(SUM(ipenali), 0)
              INTO v_penali
              FROM sin_tramita_reserva
             WHERE nsinies = v_nsinies
               AND sidepag = psidepag;

            v_cmonres := pac_oper_monedas.f_monres(v_nsinies);
            verror := pac_prestamos.f_insert_cuota(i.ctapres, psidepag, pfefepag, v_penali,
                                                   i.falta, v_cmonres, vempresa, 5);

            --26981/0171128 - FIN
            IF verror <> 0 THEN
               RETURN verror;
            END IF;
         END LOOP;

         vpasexec := 28;
      -- 23764:ASN:18/10/2012 fin

      -- ini Bug 18934 - 29/09/2011 - MDS
      ELSIF pcestpag = 2
            AND v_cultpag = 1 THEN
         vpasexec := 29;
         -- Bug 28203/153145 - 25/09/2013 - AMC
         -- Antes de ir a f_ultimo_pago validamos el pago
         COMMIT;
         -- Fi Bug 28203/153145 - 25/09/2013 - AMC

         -- el parametro pcesttra de la funcición f_ultimo_pago ha de ser 1=Finalizado
         verror := pac_siniestros.f_ultimo_pago(v_nsinies, v_ntramit_pago, 1, vempresa,
                                                v_sseguro, v_ccausin, v_cmotsin);

         IF NVL(verror, 0) <> 0 THEN
            p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, 'error no controlado',
                        verror || ' ' || vparam);
            RETURN verror;
         END IF;

         vpasexec := 30;
      -- fin Bug 18934 - 29/09/2011 - MDS
      END IF;

      --JRH El estado anulado, lo hacemos a parte
      IF pcestpag = 8 THEN
         -- Bug 0018812 - 21/06/2011 - JMF
         -- Bug 19887 - 20/12/2011 - JRB - Se elimina la llamada desde aquÃ¿Â­ a las interfaces, se harÃ¡ desde la nueva funcición f_gestiona_cobpag

         -- inicio axis 4504 - EA - 2019-07-17 - para validar para que solo se tomen los subselect especificos en pac_cuadre_adm.f_contabiliza_interf
         IF pcestpag=8 THEN
         --
          SELECT COUNT(*)
            INTO vcousap
            FROM MOVCONTASAP
           WHERE NRECIBO = psidepag
             AND estado = 0;
           --  
          if vcousap = 0 THEN
            --

            --
          FOR reg IN cur(psidepag,v_nsinies) LOOP
            --

            --
            Insert into MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,SINTERF,NSINIES,CCONCEP) 
            values                  (psidepag,reg.sperson,1,v_sseguro,reg.cramo, reg.cconpag,reg.csolidaridad
                                     -- IAxis 4555 AABC 21/01/2020 Anulaciones de pagos de siniestros cconpag codigo de pago, 0 todos los ramos, pcestpag estado de pago 
                                     ,pac_subtablas.f_vsubtabla( pac_contexto.f_inicializarctx(pac_parametros.f_parempresa_t(24,'F_USER_BBDD')) ,9000016,333,1,reg.cconpag,0,pcestpag)
                                     ,0,'SINIESTROS',f_SYSDATE,NULL,NULL,v_nsinies,reg.cconpag);
           END LOOP;
           --
           end if;
           --
         END IF;
         -- fin axis 4504 - EA - 2019-07-17 - para validar para que solo se tomen los subselect especificos en pac_cuadre_adm.f_contabiliza_interf
         IF v_cconpag = 4
            AND v_gestiona_cobpag <> 1 THEN
            -- ini Bug 0018812 - 21/06/2011 - JMF
            -- Anulacición de prestacición de renta, no se envia a SAP.
            vpasexec := 31;

            DECLARE
               CURSOR c1 IS
                  SELECT ssegren
                    FROM seguros_ren_prest
                   WHERE sidepag = psidepag;
            BEGIN
               FOR f1 IN c1 LOOP
                  -- Anula poliza de rentas relacionada, anula posibles recibos pendientes y no extorna.
                  vpasexec := 32;
                  verror := pac_anulacion.f_anulacion_automatica(f1.ssegren, pfefepag);

                  IF NVL(verror, 0) <> 0 THEN
                     p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                                 'segren=' || f1.ssegren, perror || ' ' || verror);
                     RETURN verror;
                  END IF;
               END LOOP;
            END;

            vpasexec := 33;
            verror := pac_siniestros.f_detalle_ulk(v_nsinies);

            IF NVL(verror, 0) <> 0 THEN
               p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, 'error no controlado',
                           perror || ' ' || verror);
               RETURN verror;
            END IF;
         END IF;
      -- fin Bug 0018812 - 21/06/2011 - JMF
      END IF;

      vpasexec := 34;
      -- Fi BUG 17247-  02/2011 - JRH
      -- inicio axis 4504 - EA - 2019-07-17 - para validar para que solo se tomen los subselect especificos en pac_cuadre_adm.f_contabiliza_interf
       IF pcestpag =0 THEN
         --
          SELECT COUNT(*)
            INTO vcousap
            FROM MOVCONTASAP , sin_tramita_movpago
           WHERE NRECIBO = sidepag
             AND sidepag = psidepag
             AND cestpag = 0;
           --  
          if vcousap = 0 THEN
            --

            --
          FOR reg IN cur(psidepag,v_nsinies) LOOP
            --

            --
            Insert into MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,SINTERF,NSINIES,CCONCEP) 
            values                  (psidepag,reg.sperson,1,v_sseguro,reg.cramo, reg.cconpag,reg.csolidaridad
                                     -- IAxis 4555 AABC 21/01/2020 Anulaciones de pagos de siniestros cconpag codigo de pago, 0 todos los ramos, pcestpag estado de pago 
                                     ,pac_subtablas.f_vsubtabla( pac_contexto.f_inicializarctx(pac_parametros.f_parempresa_t(24,'F_USER_BBDD')) ,9000016,333,1,reg.cconpag,0,pcestpag)
                                     ,0,'SINIESTROS',f_SYSDATE,NULL,NULL,v_nsinies,reg.cconpag);
           END LOOP;
           --
           end if;
          --
        END IF;
       -- fin axis 4504 - EA - 2019-07-17 - para validar para que solo se tomen los subselect especificos en pac_cuadre_adm.f_contabiliza_interf
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam, 9000505);
         RETURN 9000505;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000867;   --Error al llegir de la taula SIN_TRAMITA_MOVPAGO
   END f_ins_movpago;

  /*************************************************************************
      FUNCTION f_ins_citacion
         Inserta a la taula SIN_TRAMITA_DESTINATARIO dels parÃ¿Â metres informats.
         param in pnsinies : nÃ¿Âºmero sinistre
         param in pntramit : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pncitacion : numero citacion
         param in pfcitacion : fecha citacion
         param in phcitacion : hora citacion
         param in pcpais : codigo pais
         param in pcprovin : codigo provincia
         param in pcpoblac : codigo poblacion
         param in ptlugar : lugar citacion
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_citacion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pncitacion IN NUMBER,
      psperson IN NUMBER,
      pfcitacion IN DATE,
      phcitacion IN VARCHAR2,
      pcpais IN NUMBER,
      pcprovin IN NUMBER,
      pcpoblac IN NUMBER,
      ptlugar IN VARCHAR2,
      ptaudien IN VARCHAR2,
      pcoral IN NUMBER,
      pcestado IN NUMBER,
      pcresolu IN NUMBER,
      pfnueva IN DATE,
      ptresult IN VARCHAR2,
      pcmedio IN NUMBER)

      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_citacion';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pncitacion:' || pncitacion || ' pfcitacion:' || pfcitacion
            || ' phcitacion:' || phcitacion || ' phcitacion:' || phcitacion || ' pcpais:'
            || pcpais || ' pcprovin:' || pcprovin || ' pcpoblac:' || pcpoblac || ' ptlugar:' || ptlugar
            || ' ptaudien:' || ptaudien || ' pcoral:' || pcoral || ' pcestado:' || pcestado
            || ' pcresolu:' || pcresolu || ' pfnueva:' || pfnueva || ' ptresult:' || ptresult || ' pcmedio:' || pcmedio;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      vidapunte      NUMBER;
      pasunto        VARCHAR2(1500) := '';
      pcuerpo        VARCHAR2(1500) := '';
      pcuerpo_aux    VARCHAR2(1500) := '';
      ptarea         VARCHAR2(1500) := '';
      mail_grc       VARCHAR2(500) := '';
      vusuari        VARCHAR2(20);
      tramitador     VARCHAR2(20);
      premitente     VARCHAR2(500)  := '';
      envio_tarea    NUMBER := 0;
      envio_correo   NUMBER := 0;
      pos            NUMBER(8) := 0;
      vcount         NUMBER(5);
      conn           utl_smtp.connection;
      vcterminal     usuarios.cterminal%TYPE;
      psinterf       NUMBER;
      terror         VARCHAR2(300);
      v_host         VARCHAR2(10);
      num_err        NUMBER;
      vsperson       NUMBER;
      vfcitacion     DATE;
      vhcitacion     VARCHAR2(5);
      vcpais         NUMBER;
      vcprovin       NUMBER;
      vcpoblac       NUMBER;
      vtlugar        VARCHAR2(200);
      vtaudien       VARCHAR2(200);
      vcoral         NUMBER;
      vcestado       NUMBER;
      vcresolu       NUMBER;
      vfnueva        DATE;
      vtresult       VARCHAR2(200);
      vcmedio        NUMBER;

   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR psperson IS NULL
         OR pncitacion IS NULL THEN
         RETURN 9000505;
      END IF;
--jgonzalez
      SELECT asunto,
             cuerpo
        INTO pasunto,
             pcuerpo
        FROM desmensaje_correo
       WHERE scorreo = 330
         AND cidioma = pac_md_common.f_get_cxtidioma;

      pos := INSTR(pasunto, '#CODIGO#', 1);
      IF pos > 0
      THEN
         pasunto := REPLACE(pasunto, '#CODIGO#', '' || pnsinies || ' - ' || pntramit);
      END IF;

      pos := INSTR(pcuerpo, '#RECLAMO#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#RECLAMO#', '' || pnsinies);
      END IF;

      pos := INSTR(pcuerpo, '#TRAMITACION#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#TRAMITACION#', '' || pntramit);
      END IF;

      pos := INSTR(pcuerpo, '#FECHA_AUDIENCIA#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#FECHA_AUDIENCIA#', '' || pfcitacion);
      END IF;

      pos := INSTR(pcuerpo, '#HORA_AUDIENCIA#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#HORA_AUDIENCIA#', '' || phcitacion);
      END IF;

      pos := INSTR(pcuerpo, '#NAPUNTE#', 1);
      IF pos > 0
      THEN
         pcuerpo_aux := pcuerpo;
         pcuerpo_aux := REPLACE(pcuerpo_aux, '#NAPUNTE#', '');
      END IF;

      ptarea := REPLACE(pcuerpo_aux, '<br/>', CHR(13));
--jgonzalez

        SELECT COUNT(ncitacion)
           INTO vcount
           FROM sin_tramita_citaciones
          WHERE nsinies   = pnsinies
            AND ntramit   = pntramit
            AND ncitacion = pncitacion;


         IF vcount = 0 THEN

              INSERT INTO sin_tramita_citaciones
                     (nsinies, ntramit, ncitacion, sperson, fcitacion, hcitacion, cpais, cprovin, cpoblac, tlugar, taudien, coral, cestado, cresolu, fnueva, tresult, cmedio)
              VALUES (pnsinies, pntramit, pncitacion, psperson, pfcitacion, phcitacion, pcpais, pcprovin, pcpoblac, ptlugar, ptaudien, pcoral, pcestado, pcresolu, pfnueva, ptresult, pcmedio);

         ELSE
              UPDATE sin_tramita_citaciones
                 SET sperson   = psperson,
                     fcitacion = pfcitacion,
                     hcitacion = phcitacion,
                     cpais     = pcpais,
                     cprovin   = pcprovin,
                     cpoblac   = pcpoblac,
                     tlugar    = ptlugar,
                     taudien   = ptaudien,
                     coral     = pcoral,
                     cestado   = pcestado,
                     cresolu   = pcresolu,
                     fnueva    = pfnueva,
                     tresult   = ptresult,
                     cmedio    = pcmedio
               WHERE nsinies   = pnsinies
                 AND ntramit   = pntramit
                 AND ncitacion = pncitacion;

      SELECT c.sperson,
                   c.fcitacion,
                   c.hcitacion
              INTO tramitador,
                   vfcitacion,
                   vhcitacion
              FROM sin_tramita_citaciones c
             WHERE nsinies   = pnsinies
               AND ntramit   = pntramit
               AND ncitacion = pncitacion;
          END IF;



            IF tramitador <> psperson THEN
               envio_tarea  := 1;
               envio_correo := 1;
            END IF;

            IF vfcitacion <> pfcitacion OR vhcitacion <> phcitacion THEN
               envio_correo := 1;
               pcuerpo := pcuerpo_aux;
            END IF;

   --INI Inc. 1285 - ACL - 19/04/2018
   IF envio_tarea = 0 and vcount = 0
   --FIN Inc. 1285 - ACL - 19/04/2018
   THEN


      BEGIN
         SELECT u.cusuari
           INTO vusuari
           FROM usuarios u
          WHERE u.sperson = psperson;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
             vusuari := NULL;
      END;

      vnumerr := pac_agenda.f_set_apunte(pidapunte      => NULL,
                                         pidagenda      => NULL,
                                         pcclagd        => NULL,
                                         ptclagd        => NULL,
                                         pcconapu       => 1,
                                         pcestapu       => 0,
                                         pcgrupo        => NULL,
                                         ptgrupo        => NULL,
                                         pttitapu       => pasunto,
                                         ptapunte       => ptarea,
                                         pctipapu       => 0,
                                         pcperagd       => NULL,
                                         pcambito       => NULL,
                                         pcpriori       => NULL,
                                         pcusuari       => NULL,
                                         pfapunte       => NULL,
                                         pfestapu       => f_sysdate,
                                         pfalta         => f_sysdate,
                                         pfrecordatorio => NULL,
                                         pidapunte_out  => vidapunte);

      vnumerr := pac_agenda.f_set_agenda(pidapunte    => vidapunte,
                                         pidagenda    => NULL,
                                         pcusuari     => vusuari,
                                         pcgrupo      => NULL,
                                         ptgrupo      => NULL,
                                         pcclagd      => 0,
                                         ptclagd      => pnsinies,
                                         pcperagd     => NULL,
                                         pcusuari_ori => f_user,
                                         pcgrupo_ori  => NULL,
                                         ptgrupo_ori  => NULL,
                                         pcempres     => pac_md_common.f_get_cxtempresa,
                                         pcidioma     => pac_md_common.f_get_cxtidioma,
                                         ptevento     => NULL,
                                         pntramit     => pntramit,
                                         ptresp       => NULL);

      pos := INSTR(pcuerpo, '#NAPUNTE#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#NAPUNTE#', 'No.: ' || vidapunte);
      END IF;

   END IF;

   BEGIN

      SELECT mail_usu
      INTO premitente
      FROM usuarios
      WHERE cusuari = f_user;

      SELECT mail_usu
        INTO mail_grc
        FROM usuarios
       WHERE sperson = psperson;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         mail_grc   := NULL;
         premitente := NULL;
   END;

   IF mail_grc IS NOT NULL AND premitente IS NOT NULL AND envio_correo = 1
   THEN
      --AIXIS-2134 AABC ENVIO DE CORREO DESTINATARIO
      p_enviar_correo(p_from => premitente,
                      p_to => mail_grc,
                      p_from2 => premitente,
                      p_to2 => NULL,
                      p_subject => pasunto,
                      p_message => pcuerpo,
                      p_cc => NULL);
      conn := pac_send_mail.begin_mail(sender     => premitente,
                                       recipients => mail_grc,
                                       cc         => NULL,
                                       subject    => pasunto,
                                       mime_type  => pac_send_mail.multipart_mime_type || '; charset=UTF-8');

      pac_send_mail.attach_text(conn      => conn,
                                data      => pcuerpo,
                                mime_type => 'text/html');
      pac_send_mail.end_mail(conn => conn);

   END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000868;
   END f_ins_citacion;

   /*************************************************************************
      FUNCTION f_ins_destinatario
         Inserta a la taula SIN_TRAMITA_DESTINATARIO dels parÃ¿Â metres informats.
         param in pnsinies : nÃ¿Âºmero sinistre
         param in pntramit : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in psperson : estat pagament
         param in pctipdes : codi tipus destinatari
         param in pcpagdes : indicador acceptaciÃ¿Â³ pagaments
         param in pcactpro : codi activitat professional
         param in pctipcap : tipo prestacición
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_destinatario(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pcbancar IN VARCHAR2,
      pctipban IN NUMBER,
      ppasigna IN NUMBER,
      pcpaisre IN NUMBER,
      pctipdes IN NUMBER,
      pcpagdes IN NUMBER,
      pcactpro IN NUMBER,
      pctipcap IN NUMBER DEFAULT NULL
                                     -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
   ,
      pcrelase IN NUMBER DEFAULT NULL,
      -- Fi Bug 0015669 - JRH - 30/09/2010
      psprofes IN NUMBER DEFAULT NULL,   -- Bug 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - NSS - 26/02/2014
      pcprovin IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_destinatario';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pctipdes:' || pctipdes || ' pcpagdes:' || pcpagdes
            || ' pcactpro:' || pcactpro || ' pctipcap:' || pctipcap || ' pcrelase:'
            || pcrelase || ' psprofes:' || psprofes || ' pcprovin:' || pcprovin;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vcterminal     usuarios.cterminal%TYPE;
      psinterf       NUMBER;
      terror         VARCHAR2(300);
      v_host         VARCHAR2(10);
      num_err        NUMBER;
      /* Cambio de IAXIS-4844 start */
    VPERSON_NUM_ID PER_PERSONAS.NNUMIDE%TYPE;    
      VDIGITOIDE     PER_PERSONAS.TDIGITOIDE%TYPE;    
      VCTIPIDE       PER_PERSONAS.CTIPIDE%TYPE;
    /* Cambio de IAXIS-4844 end */

   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR psperson IS NULL
         OR pctipdes IS NULL
         OR pcpagdes IS NULL THEN
         RETURN 9000505;
      END IF;

      --
      -- ini BUG 0018967 - 08/11/2011 - JMF
      DECLARE
         v_emp          seguros.cempres%TYPE;
         vsubfi         VARCHAR2(100);
         ss             VARCHAR2(3000);
         num_err        NUMBER;
         ptmensaje      VARCHAR2(1000);
-- fin BUG 0018967 - 08/11/2011 - JMF
--
      BEGIN
         INSERT INTO sin_tramita_destinatario
                     (nsinies, ntramit, sperson, cbancar, ctipban, pasigna, cpaisre,
                      ctipdes, cpagdes, cactpro, ctipcap, crelase, sprofes, cprovin)   -- BUG 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - 26/02/2014 - NSS
              VALUES (pnsinies, pntramit, psperson, pcbancar, pctipban, ppasigna, pcpaisre,
                      pctipdes, pcpagdes, pcactpro, pctipcap, pcrelase, psprofes, pcprovin);   -- BUG 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - 26/02/2014 - NSS

         -- ini BUG 27726 - 30/07/2013 - SHA
         BEGIN
            vpasexec := 100;

            SELECT MAX(cempres)
              INTO v_emp
              FROM seguros s, sin_siniestro x
             WHERE x.nsinies = pnsinies
               AND s.sseguro = x.sseguro;

            vpasexec := 110;
            vsubfi := pac_parametros.f_parempresa_t(v_emp, 'SUFIJO_EMP');
            vpasexec := 120;
            ss := 'BEGIN :num_err := PAC_LISTARESTRINGIDA_' || vsubfi
                  || '.F_AVISO_DESTINATARIO_SIN (:psperson, null, :PTMENSAJE);' || 'END;';

            BEGIN
               vpasexec := 130;

               EXECUTE IMMEDIATE ss
                           USING OUT num_err, IN psperson, OUT ptmensaje;
            EXCEPTION
               WHEN OTHERS THEN
                  NULL;
            END;

            IF num_err = 1 THEN
               p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, 'psperson=' || psperson,
                           ptmensaje);
               RETURN 9902460;
            END IF;

            vpasexec := 140;
         END;
      -- fin BUG 27726 - 30/07/2013 - SHA
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_destinatario
               SET cpagdes = pcpagdes,
                   cactpro = pcactpro,
                   sperson = psperson,
                   cbancar = pcbancar,
                   ctipban = pctipban,
                   pasigna = ppasigna,
                   cpaisre = pcpaisre,
                   ctipdes = pctipdes,
                   ctipcap = pctipcap,
                   crelase = pcrelase,
                   cprovin = pcprovin
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND sperson = psperson
               AND ctipdes = pctipdes;
      END;

      /* Cambios de IAXIS-4844 : start */
        BEGIN
    SELECT PP.NNUMIDE,PP.TDIGITOIDE
      INTO VPERSON_NUM_ID,VDIGITOIDE
      FROM PER_PERSONAS PP
     WHERE PP.SPERSON = psperson
       AND ROWNUM = 1;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      SELECT PP.CTIPIDE, PP.NNUMIDE
      INTO VCTIPIDE, VPERSON_NUM_ID
      FROM PER_PERSONAS PP
       WHERE PP.SPERSON = psperson;
      VDIGITOIDE := PAC_IDE_PERSONA.F_DIGITO_NIF_COL(VCTIPIDE,
                             UPPER(VPERSON_NUM_ID));
  END;
        /* Cambios de IAXIS-4844 : end */

      -- ini BUG 0026318 -- ETM -- 28/05/2013
      v_host := pac_parametros.f_parempresa_t(pac_md_common.f_get_cxtempresa, 'ALTA_DEST_HOST');

      IF v_host IS NOT NULL THEN
         IF pac_persona.f_gubernamental(psperson) = 1 THEN
            v_host := pac_parametros.f_parempresa_t(pac_md_common.f_get_cxtempresa,
                                                    'DUPL_ACREEDOR_HOST');
         END IF;

         num_err := pac_user.f_get_terminal(f_user, vcterminal);
     /* Cambios de IAXIS-4844 : start */
         num_err := pac_con.f_alta_persona(pac_md_common.f_get_cxtempresa, psperson,
                                           vcterminal, psinterf, terror,
                                           pac_md_common.f_get_cxtusuario, 1, 'ALTA', VDIGITOIDE,
                                           v_host);
    /* Cambios de IAXIS-4844 : end */

         IF num_err <> 0 THEN
            RETURN 9906167;   --24708:NSS:21/10/2013
         END IF;
      END IF;

      --fin BUG 0026318 -- ETM -- 28/05/2013
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000868;
   --Error al llegir de la taula SIN_TRAMITA_DESTINATARIO
   END f_ins_destinatario;

   /*************************************************************************
      FUNCTION f_ins_documento
         Inserta a la taula SIN_TRAMITA_DOCUMENTO dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero sinistre
         param in pntramit  : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pndocume  : nÃ¿Âºmero document sinistre
         param in pcdocume  : cÃ¿Â³digo document sinistre
         param in pfreclama : data reclamaciÃ¿Â³ document
         param in pfrecibe  : data recepciÃ¿Â³ document
         param in pfcaduca  : data caducitat document
         param in pcobliga  : codi document obligatori/opcional
         param in pdescripcion    : descripcion del usuario para el documento
         param in pcaccion  : Codigo de accición
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
         28/09/2009   DCT    BUG 10393 Crear parametrizacición de documentacición a solicitar por producto/causa/motivo
   *************************************************************************/
   FUNCTION f_ins_documento(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndocume IN NUMBER,
      pcdocume IN NUMBER,
      pfreclama IN DATE,
      pfrecibe IN DATE,
      pfcaduca IN DATE,
      pcobliga IN NUMBER,
      pdescripcion IN VARCHAR2,
      pcaccion IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_documento';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pndocume:'
            || pndocume || ' pcdocume:' || pcdocume || ' pfreclama:' || pfreclama
            || ' pfrecibe:' || pfrecibe || ' pfcaduca:' || pfcaduca || ' pcobliga:'
            || pcobliga || ' pdescripcion:' || pdescripcion || ' pcaccion: ' || pcaccion;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      -- Bug 0023312 - 30/08/2012 - JMF
      v_tramitecal   sin_tramita_documento.ntramit%TYPE;
   -- tramite que se debe guardar.
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pndocume IS NULL
         OR pcdocume IS NULL
         OR pfreclama IS NULL
         OR pcobliga IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Bug 0023312 - 30/08/2012 - JMF
      -- Validamos que no sea una tramitacion del tramite 9999
      v_tramitecal := ff_mintramite_dif9999(pnsinies, pntramit);

      -- Bug 34622 - JTT - 03/03/2015 - AÃ¿Â±adimos el campo sin_tramita_documento.caccion. Este campo no se actualiza desde pantalla.
      BEGIN
         INSERT INTO sin_tramita_documento
                     (nsinies, ntramit, ndocume, cdocume, freclama, frecibe,
                      fcaduca, cobliga, cdescdoc, caccion)
              VALUES (pnsinies, v_tramitecal, pndocume, pcdocume, pfreclama, pfrecibe,
                      pfcaduca, pcobliga, pdescripcion, pcaccion);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_documento
               SET freclama = pfreclama,
                   frecibe = pfrecibe,
                   fcaduca = pfcaduca,
                   cobliga = pcobliga,
                   cdocume = pcdocume,
                   cdescdoc = pdescripcion
             WHERE nsinies = pnsinies
               AND ntramit = v_tramitecal
               AND ndocume = pndocume;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000869;   --Error al llegir de la taula SIN_TRAMITA_DOCUMENTO
   END f_ins_documento;

   /*************************************************************************
      FUNCTION f_ins_localizacion
         Inserta a la taula SIN_TRAMITA_LOCALIZA dels parÃ¿Â metres informats.
         param in pnsinies : nÃ¿Âºmero sinistre
         param in pntramit : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pnlocali : nÃ¿Âºmero localitzaciÃ¿Â³ sinistre
         param in psperson : nÃ¿Âºmero persona
         param in pcsiglas : tipus via
         param in ptnomvia : nom via
         param in pnnumvia : nÃ¿Âºmero via
         param in ptcomple : descripciÃ¿Â³ complementaria
         param in ptlocali : direcciÃ¿Â³ no normalitzada
         param in pcpais   : codi paÃ¿Â­s
         param in pcprovin : codi provincia
         param in pcpoblac : codi poblaciÃ¿Â³
         param in pcpostal : codi postal

         -- Bug 18940/92686 - 27/09/2011 - AMC
        param in cviavp,    -- CÃ¿Â³digo de via predio - via principal
        param in clitvp,    -- CÃ¿Â³digo de literal predio - via principal
        param in cbisvp,    -- CÃ¿Â³digo BIS predio - via principal
        param in corvp,     -- CÃ¿Â³digo orientacición predio - via principal
        param in nviaadco,  -- NÃ¿Âºmero de via adyacente predio - coordenada
        param in clitco,    -- CÃ¿Â³digo de literal predio - coordenada
        param in corco,     -- CÃ¿Â³digo orientacición predio - coordenada
        param in nplacaco,  -- NÃ¿Âºmero consecutivo placa predio - ccordenada
        param in cor2co,    -- CÃ¿Â³digo orientacición predio 2 - coordenada
        param in cdet1ia,   -- CÃ¿Â³digo detalle 1 - informacición adicional
        param in tnum1ia,   -- NÃ¿Âºmero predio 1 - informacion adicional
        param in cdet2ia,   -- CÃ¿Â³digo detalle 2 - informacición adicional
        param in tnum2ia,   -- NÃ¿Âºmero predio 2 - informacion adicional
        param in cdet3ia,   -- CÃ¿Â³digo detalle 3 - informacición adicional
        param in tnum3ia    -- NÃ¿Âºmero predio 3 - informacion adicional
        -- Fi Bug 18940/92686 - 27/09/2011 - AMC
        param in plocalidad -- Localidad-- Bug 24780/130907 - 05/12/2012 - AMC

         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_localiza(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlocali IN NUMBER,
      psperson IN NUMBER,
      pcsiglas IN NUMBER,
      ptnomvia IN VARCHAR2,
      pnnumvia IN NUMBER,
      ptcomple IN VARCHAR2,
      ptlocali IN VARCHAR2,
      pcpais IN NUMBER,
      pcprovin IN NUMBER,
      pcpoblac IN NUMBER,
      pcpostal IN VARCHAR2,
      -- Bug 20154/98048 - 15/11/2011 - AMC
      pcviavp IN NUMBER,
      pclitvp IN NUMBER,
      pcbisvp IN NUMBER,
      pcorvp IN NUMBER,
      pnviaadco IN NUMBER,
      pclitco IN NUMBER,
      pcorco IN NUMBER,
      pnplacaco IN NUMBER,
      pcor2co IN NUMBER,
      pcdet1ia IN NUMBER,
      ptnum1ia IN VARCHAR2,
      pcdet2ia IN NUMBER,
      ptnum2ia IN VARCHAR2,
      pcdet3ia IN NUMBER,
      ptnum3ia IN VARCHAR2,
      -- Fi Bug 20154/98048- 15/11/2011 - AMC
      plocalidad IN VARCHAR2   -- Bug 24780/130907 - 05/12/2012 - AMC
                            )
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_localiza';
      vparam         VARCHAR2(1000)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnlocali:'
            || pnlocali || ' psperson:' || psperson || ' pcsiglas:' || pcsiglas
            || ' ptnomvia:' || ptnomvia || ' pnnumvia:' || pnnumvia || ' ptcomple:'
            || ptcomple || ' ptlocali:' || ptlocali || ' pcpais:' || pcpais || ' pcprovin:'
            || pcprovin || ' pcpoblac:' || pcpoblac || ' pcpostal:' || pcpostal || ' pcviavp:'
            || pcviavp || ' pclitvp:' || pclitvp || ' pcbisvp:' || pcbisvp || ' pcorvp:'
            || pcorvp || ' pnviaadco:' || pnviaadco || ' pclitco:' || pclitco || ' pcorco:'
            || pcorco || ' pnplacaco:' || pnplacaco || 'pcor2co:' || pcor2co || ' pcdet1ia:'
            || pcdet1ia || ' ptnum1ia:' || ptnum1ia || ' pcdet2ia:' || pcdet2ia
            || ' ptnum2ia:' || ptnum2ia || 'pcdet3ia:' || pcdet3ia || ' ptnum3ia:' || ptnum3ia
            || ' plocalidad:' || plocalidad;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pnlocali IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Bug 20154/98048 - 15/11/2011 - AMC
      BEGIN
         INSERT INTO sin_tramita_localiza
                     (nsinies, ntramit, nlocali, sperson, csiglas, tnomvia, nnumvia,
                      tcomple, tlocali, cpais, cprovin, cpoblac, cpostal, cviavp,
                      clitvp, cbisvp, corvp, nviaadco, clitco, corco, nplacaco,
                      cor2co, cdet1ia, tnum1ia, cdet2ia, tnum2ia, cdet3ia, tnum3ia,
                      localidad   -- Bug 24780/130907 - 05/12/2012 - AMC
                               )
              VALUES (pnsinies, pntramit, pnlocali, psperson, pcsiglas, ptnomvia, pnnumvia,
                      ptcomple, ptlocali, pcpais, pcprovin, pcpoblac, pcpostal, pcviavp,
                      pclitvp, pcbisvp, pcorvp, pnviaadco, pclitco, pcorco, pnplacaco,
                      pcor2co, pcdet1ia, ptnum1ia, pcdet2ia, ptnum2ia, pcdet3ia, ptnum3ia,
                      plocalidad   -- Bug 24780/130907 - 05/12/2012 - AMC
                                );
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_localiza
               SET sperson = psperson,
                   csiglas = pcsiglas,
                   tnomvia = ptnomvia,
                   nnumvia = pnnumvia,
                   tcomple = ptcomple,
                   tlocali = ptlocali,
                   cpais = pcpais,
                   cprovin = pcprovin,
                   cpoblac = pcpoblac,
                   cpostal = pcpostal,
                   cviavp = pcviavp,
                   clitvp = pclitvp,
                   cbisvp = pcbisvp,
                   corvp = pcorvp,
                   nviaadco = pnviaadco,
                   clitco = pclitco,
                   corco = pcorco,
                   nplacaco = pnplacaco,
                   cor2co = pcor2co,
                   cdet1ia = pcdet1ia,
                   tnum1ia = ptnum1ia,
                   cdet2ia = pcdet2ia,
                   tnum2ia = ptnum2ia,
                   cdet3ia = pcdet3ia,
                   tnum3ia = ptnum3ia,
                   localidad = plocalidad   -- Bug 24780/130907 - 05/12/2012 - AMC
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND nlocali = pnlocali;
      END;

      -- Fi Bug 20154/98048 - 15/11/2011 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000871;
   --Error al llegir de la taula SIN_TRAMITA_LOCALIZA
   END f_ins_localiza;

   /*************************************************************************
      FUNCTION f_ins_dano
         Inserta a la taula SIN_TRAMITA_DANO dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero sinistre
         param in pntramit  : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pndano    : nÃ¿Âºmero dany sinistre
         param in pctipdano : codi tipus dany
         param in ptdano    : descripciÃ¿Â³ dany
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_dano(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndano IN NUMBER,
      pctipinf IN NUMBER,
      ptdano IN VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_dano';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pndano:'
            || pndano || ' pctipinf:' || pctipinf || ' ptdano:' || ptdano;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pndano IS NULL
         OR ptdano IS NULL
         OR pctipinf IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_dano
                     (nsinies, ntramit, ndano, tdano, ctipinf)
              VALUES (pnsinies, pntramit, pndano, ptdano, pctipinf);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_dano
               SET tdano = ptdano,
                   ctipinf = pctipinf
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ndano = pndano;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000872;
   --Error al llegir de la taula SIN_TRAMITA_DANO
   END f_ins_dano;

   /*************************************************************************
      FUNCTION f_ins_detdano
         Inserta a la taula SIN_TRAMITA_DANO dels parÃ¿Â metres informats.
         param in pnsinies  : nÃ¿Âºmero sinistre
         param in pntramit  : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pndano    : nÃ¿Âºmero dany sinistre
         param in pctipdano : codi tipus dany
         param in ptdano    : descripciÃ¿Â³ dany
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_detdano(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndano IN NUMBER,
      pndetdano IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_detdano';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pndano:'
            || pndano || ' pndetdano:' || pndetdano;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pndano IS NULL
         OR pndetdano IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_detdano
                     (nsinies, ntramit, ndano, ndetdano)
              VALUES (pnsinies, pntramit, pndano, pndetdano);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_detdano
               SET ndetdano = pndetdano
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ndano = pndano
               AND ndetdano = pndetdano;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000872;
   --Error al llegir de la taula SIN_TRAMITA_DANO
   END f_ins_detdano;

   /*************************************************************************
      FUNCTION f_ins_profesional
         Inserta a la taula SIN_TRAMITA_PROFESIONAL dels parÃ¿Â metres informats.
         param in pnsinies : nÃ¿Âºmero sinistre
         param in pntramit : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pnlocali : nÃ¿Âºmero localitzaciÃ¿Â³ sinistre
         param in psperson : codi persona
         param in pcactpro : codi activitat professional
         param in pfinivig : data inici vigencia
         param in pffinvig : data fi vigencia
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_profesional(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlocali IN NUMBER,
      psperson IN NUMBER,
      pcactpro IN NUMBER,
      pfinivig IN DATE,
      pffinvig IN DATE)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_profesional';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnlocali:'
            || pnlocali || ' psperson:' || psperson || ' pcactpro:' || pcactpro
            || ' pfinivig:' || pfinivig || ' pffinvig:' || pffinvig;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pnlocali IS NULL
         OR psperson IS NULL
         OR pcactpro IS NULL
         OR pfinivig IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_profesional
                     (nsinies, ntramit, nlocali, sperson, cactpro, finivig, ffinvig)
              VALUES (pnsinies, pntramit, pnlocali, psperson, pcactpro, pfinivig, pffinvig);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_profesional
               SET ffinvig = pffinvig
             WHERE nsinies = pnsinies
               AND nlocali = pnlocali
               AND sperson = psperson
               AND cactpro = pcactpro
               AND finivig = pfinivig;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000873;
   --Error al llegir de la taula SIN_TRAMITA_PROFESIONAL
   END f_ins_profesional;

   /*************************************************************************
      FUNCTION f_valida_cab
         FunciÃ¿Â³ que valida la capÃ¿Â§alera d'un sinistre
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in psseguro  : codi del segur
         param in pnriesgo  : codi de la causa del sinistre
         param in pnmovimi  : nÃ¿Âºmero moviment
         param in pfsinies  : data del sinistre
         param in pfnotifi  : data de la notificaciÃ¿Â³
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in pctramit  : codi tramitaciÃ¿Â³
         param in pctcausin : codi tipus dany
         param in pcinform  : indicador tramitaciÃ¿Â³ informativa
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_cap(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      psseguro IN NUMBER,
      pnriesgo IN NUMBER,
      pnmovimi IN NUMBER,
      pfsinies IN DATE,
      pfnotifi IN DATE,
      pntramit IN NUMBER,
      pnlocali IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_cap';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' sseguro:' || psseguro || ' nriesgo:'
            || pnriesgo || ' nmovimi:' || pnmovimi || ' fsinies:' || pfsinies || ' fnotifi:'
            || pfnotifi || ' pntramit:' || pntramit || ' pnlocali:' || pnlocali;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL THEN
         RETURN 9000916;
      ELSIF pnriesgo IS NULL THEN
         RETURN 9000917;
      ELSIF pnmovimi IS NULL THEN
         RETURN 1;
      ELSIF pfsinies IS NULL THEN
         RETURN 9000915;
      ELSIF pfnotifi IS NULL THEN
         RETURN 9000918;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_cap;

   /*************************************************************************
      FUNCTION f_valida_tram
         FunciÃ¿Â³ que valida una tramitaciÃ¿Â³ d'un sinistre
         param in pnsinies   : nÃ¿Âºmero del sinistre
         param in pntramit   : numero tramitaciÃ¿Â³ sinistre
         param in pctramit   : codi tramitaciÃ¿Â³
         param in pctcausin  : codi tipus dany
         param in pcinform   : indicador tramitaciÃ¿Â³ informativa
         return              : 0 -> Tot correcte
                               1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_tram(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pctramit IN NUMBER,
      pctcausin IN NUMBER,
      pcinform IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_tram';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' pntramit:' || pntramit || ' pctramit:'
            || pctramit || ' pctcausin:' || pctcausin || ' pcinform:' || pcinform;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pctramit IS NULL THEN
         RETURN 9000922;
      ELSIF pctcausin IS NULL THEN
         RETURN 9000923;
      ELSIF pcinform IS NULL THEN
         RETURN 9000924;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_tram;

   /*************************************************************************
      FUNCTION f_valida_trammov
         FunciÃ¿Â³ que valida un moviment de tramitaciÃ¿Â³ d'un sinistre
            param in pnsinies   : nÃ¿Âºmero del sinistre
            param in pntramit   : numero tramitaciÃ¿Â³ sinistre
            param in pnmovtra   : nÃ¿Âºmero moviment tramitaciÃ¿Â³
            param in pcunitra   : codi unitat tramitaciÃ¿Â³
            param in pctramitad : codi tramitador
            param in pcesttra   : codi estat tramitaciÃ¿Â³
            param in pcsubtra   : codi subestat tramitaciÃ¿Â³
            param in pfesttra   : data estat tramitaciÃ¿Â³
            return              : 0 -> Tot correcte
                                  1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_trammov(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnmovtra IN NUMBER,
      pcunitra IN NUMBER,
      pctramitad IN NUMBER,
      pcesttra IN NUMBER,
      pcsubtra IN NUMBER,
      pfesttra IN DATE)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_trammov';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' pntramit:' || pntramit || ' pnmovtra:'
            || pnmovtra || ' pcunitra:' || pcunitra || ' pctramitad:' || pctramitad
            || ' pcesttra:' || pcesttra || ' pcsubtra:' || pcsubtra || ' pfesttra:'
            || pfesttra;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pcunitra IS NULL THEN
         RETURN 9000925;
      ELSIF pctramitad IS NULL THEN
         RETURN 9000926;
      ELSIF pcesttra IS NULL THEN
         RETURN 9000927;
      ELSIF pcsubtra IS NULL THEN
         RETURN 9000928;
      ELSIF pfesttra IS NULL THEN
         RETURN 9000929;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_trammov;

   /*************************************************************************
      FUNCTION f_valida_tramdano
         FunciÃ¿Â³ que valida els danys per tramitaciÃ¿Â³ d'un sinistre
         param in pnsinies  : nÃ¿Âºmero sinistre
         param in pntramit  : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pndano    : nÃ¿Âºmero dany sinistre
         param in pctipdano : codi tipus dany
         param in ptdano    : descripciÃ¿Â³ dany
            return              : 0 -> Tot correcte
                                  1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_tramdano(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndano IN NUMBER,
      pctipdano IN NUMBER,
      ptdano IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_tramdano';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' pntramit:' || pntramit || ' pndano:'
            || pndano || ' pctipdano:' || pctipdano || ' ptdano:' || ptdano;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pctipdano IS NULL THEN
         RETURN 9000931;
      ELSIF ptdano IS NULL THEN
         RETURN 9000932;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_tramdano;

   /*************************************************************************
      FUNCTION f_valida_tramres
         FunciÃ¿Â³ que valida les reserves per tramitaciÃ¿Â³ d'un sinistre
         param in pnsinies  : nÃ¿Âºmero del sinistre
         param in pntramit  : numero tramitaciÃ¿Â³ sinistre
         param in pctipres  : codi tipus reserva
         param in pnmovres  : nÃ¿Âºmero moviment reserva
         param in pfmovres  : data moviment reserva
         param in pireserva : import reserva
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_tramres(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pnmovres IN NUMBER,
      pccalres IN NUMBER,
      pfmovres IN DATE,
      pcmonres IN VARCHAR2,
      pireserva IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_tramres';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' pntramit:' || pntramit || ' pctipres:'
            || pctipres || ' pnmovres:' || pnmovres || ' pccalres:' || pccalres
            || ' pfmovres:' || pfmovres || ' pcmonres:' || pcmonres || ' pireserva:'
            || pireserva;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pccalres IS NULL THEN
         RETURN 9000933;
      ELSIF pfmovres IS NULL THEN
         RETURN 9000934;
      ELSIF pcmonres IS NULL THEN
         RETURN 9000935;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_tramres;

   /*************************************************************************
      FUNCTION f_valida_tramdes
         FunciÃ¿Â³ que valida els destinataris per tramitaciÃ¿Â³ d'un sinistre
         param in pnsinies : nÃ¿Âºmero sinistre
         param in pntramit : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in psperson : nÃ¿Âºmero persona
         param in pctipdes : codi tipus destinatari
         param in pcpagdes : indicador acceptaciÃ¿Â³ pagaments
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_tramdes(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pcpagdes IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_tramres';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pctipdes:' || pctipdes || ' pcpagdes:' || pcpagdes;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF psperson IS NULL THEN
         RETURN 9000941;
      ELSIF pctipdes IS NULL THEN
         RETURN 9000934;
      ELSIF pcpagdes IS NULL THEN
         RETURN 9000942;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_tramdes;

   /*************************************************************************
         FUNCTION f_valida_trampag
            FunciÃ¿Â³ que valida els pagaments per tramitaciÃ¿Â³ d'un sinistre
            param in pnsinies  : nÃ¿Âºmero del sinistre
            param in psidepag  : seqÃ¿Â¼Ã¿Â©ncia identificador pagament;
            param in pnsinies  : nÃ¿Âºmero sinistre
            param in pntramit  : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
            param in psperson  : seqÃ¿Â¼Ã¿Â©ncia persona
            param in pctipdes  : codi tipus Tipo Destinatario
            param in pctippag  : codi tipus pagament
            param in pcconpag  : codi concepte pagament
            param in pccauind  : codi causa indemnitzaciÃ¿Â³
            param in pcforpag  : codi forma pagament
            return             : 0 -> Tot correcte
                                 1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_trampag(
      psidepag IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pctippag IN NUMBER,
      pcconpag IN NUMBER,
      pccauind IN NUMBER,
      pcforpag IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_trampag';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies:' || pnsinies || ' pntramit:' || pntramit || ' psperson:'
            || psperson || ' pctipdes:' || pctipdes || ' pctippag:' || pctippag
            || ' pcconpag:' || pcconpag || ' pccauind:' || pccauind || ' pcforpag:'
            || pcforpag;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF psperson IS NULL THEN
         RETURN 9000941;
      ELSIF pctipdes IS NULL THEN
         RETURN 9000934;
      ELSIF pctippag IS NULL THEN
         RETURN 9000943;
      ELSIF pcconpag IS NULL THEN
         RETURN 9000944;
      ELSIF pccauind IS NULL THEN
         RETURN 9000945;
      ELSIF pcforpag IS NULL THEN
         RETURN 9000946;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_trampag;

   /*************************************************************************
         FUNCTION f_valida_trampagogar
            FunciÃ¿Â³ que valida el detall dels pagaments per tramitaciÃ¿Â³ d'un sinistre
            param in psidepag : seqÃ¿Â¼Ã¿Â©ncia identificador pagament
            param in pctipres : codi tipus reserva
            param in pnmovres : nÃ¿Âºmero movimient reserva
            return            : 0 -> Tot correcte
                                1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_trampagogar(psidepag IN NUMBER, pctipres IN NUMBER, pnmovres IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_trampagogar';
      vparam         VARCHAR2(500)
         := 'parámetros - psidepag:' || psidepag || ' pctipres:' || pctipres || ' pnmovres:'
            || pnmovres;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pctipres IS NULL THEN
         RETURN 9000947;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_trampagogar;

   /*************************************************************************
         FUNCTION f_valida_tramagen
            FunciÃ¿Â³ que valida l'agenda per tramitaciÃ¿Â³ d'un sinistre
            param in pnsinies : nÃ¿Âºmero sinistre
            param in pntramit : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
            param in pnlinage : nÃ¿Âºmero linia
            param in pctipreg : codi tipus registre
            param in pcsubtip : codi subtipus
            param in pfmovage : data moviment agenda
            param in pcestage : codi estat agenda
            return            : 0 -> Tot correcte
                                1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_valida_tramagen(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlinage IN NUMBER,
      pctipreg IN NUMBER,
      pcsubtip IN NUMBER,
      pfmovage IN NUMBER,
      pcestage IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_valida_tramagen';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies:' || pnsinies || ' pntramit:' || pntramit || ' pnlinage:'
            || pnlinage || ' pctipreg:' || pctipreg || ' pcsubtip:' || pcsubtip
            || ' pfmovage:' || pfmovage || ' pcestage:' || pcestage;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pctipreg IS NULL THEN
         RETURN 9000950;
      ELSIF pcsubtip IS NULL THEN
         RETURN 9000951;
      ELSIF pfmovage IS NULL THEN
         RETURN 9000952;
      ELSIF pcestage IS NULL THEN
         RETURN 9000953;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000919;   --Error al validar el sinistre
   END f_valida_tramagen;

   /*************************************************************************
      FUNCTION f_ins_pago_gar
         Inserta a la taula SIN_TRAMITA_PAGO_GAR dels parÃ¿Â metres informats.
         param in psidepag    : seqÃ¿Â¼Ã¿Â©ncia identificador pagament
         param in pctipres    : codi tipus reserva
         param in pnmovres    : nÃ¿Âºmero moviment reserva
         param in pcgarant    : codi garantia
         param in pfperini    : data periode inici
         param in pfperfin    : data periode fi
         param in pcmonres    : codi moneda reserva
         param in pisinret    : import sense retenciÃ¿Â³
         param in piiva       : import IVA
         param in pisuplid    : import 'suplido'
         param in piretenc    : import retenciÃ¿Â³
         param in pifranq     : import franquicia pagada
         param in pcmonpag    : codi moneda pagament
         param in pisinretpag :
         param in piivapag    : import IVA moneda pagament
         param in pisuplidpag : import 'suplido' moneda pagament
         param in piretencpag : import retenciÃ¿Â³ moneda pagament
         param in pifranqpag  : import franquicia moneda pagament
         param in pfcambio    : data cambi
         param in ppreteiva   : Porcentaje de retencición sobre el IVA
         param in ppreteica   : Porcentaje de retencición sobre el ICA
         param in pireteiva   : Importe de retencición sobre el IVA
         param in pireteica   : Importe de retencición sobre el ICA
         param in pireteivapag : Importe de retencición sobre el IVA Moneda Pago
         param in pireteicapag : Importe de retencición sobre el ICA Moneda Pago
         param in ppica :
         param in piica :
         param in piicapag :
         return               : 0 -> Tot correcte
                                1 -> S'ha produit un error
    -- BUG 19981 - 07/11/2011 - MDS - AÃ¿Â±adir campos preteiva, preteica, ireteiva, ireteica, ireteivapag, ireteicapag, ppica, piica, piicapag en la cabecera, vparam, insert/update
   *************************************************************************/
   FUNCTION f_ins_pago_gar(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psidepag IN NUMBER,
      pctipres IN NUMBER,
      pnmovres IN NUMBER,
      pcgarant IN NUMBER,
      pfperini IN DATE,
      pfperfin IN DATE,
      pcmonres IN VARCHAR2,
      pisinret IN NUMBER,
      piiva IN NUMBER,
      pisuplid IN NUMBER,
      piretenc IN NUMBER,
      pifranq IN NUMBER,
      piresrcm IN NUMBER,
      piresred IN NUMBER,
      ppretenc IN NUMBER,
      ppiva IN NUMBER,
      pcmonpag IN VARCHAR2,
      pisinretpag IN NUMBER,
      piivapag IN NUMBER,
      pisuplidpag IN NUMBER,
      piretencpag IN NUMBER,
      pifranqpag IN NUMBER,
      pfcambio IN DATE,
      pcconpag IN NUMBER,
      pnorden IN NUMBER,
      ppreteiva IN NUMBER,
      ppreteica IN NUMBER,
      pireteiva IN NUMBER,
      pireteica IN NUMBER,
      pireteivapag IN NUMBER,
      pireteicapag IN NUMBER,
      ppica IN NUMBER,
      piica IN NUMBER,
      piicapag IN NUMBER,
      pciva_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
      pcretenc_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
      pcreteiva_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
      pcreteica_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
    piotrosgas IN NUMBER DEFAULT NULL,
    pibaseipoc IN NUMBER DEFAULT NULL,
    ppipoconsumo IN NUMBER DEFAULT NULL,
    pctipind IN NUMBER DEFAULT NULL,
    piipoconsumo IN NUMBER DEFAULT NULL,
    piotrosgaspag IN NUMBER DEFAULT NULL,
    pibaseipocpag IN NUMBER DEFAULT NULL,
    piipoconsumopag IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_pago_gar';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit: ' || pntramit
            || ' psidepag: ' || psidepag || ' pctipres:' || pctipres || ' pnmovres:'
            || pnmovres || ' pcgarant:' || pcgarant || ' pisinret:' || pisinret
            || ' pfperini:' || pfperini || ' pfperfin:' || pfperfin || ' piiva:' || piiva
            || ' pisuplid:' || pisuplid || ' piretenc:' || piretenc || ' pifranq:' || pifranq
            || ' piretenc:' || piretenc || ' pifranq:' || pifranq || ' pcmonpag:' || pcmonpag
            || ' pisinretpag:' || pisinretpag || ' piivapag:' || piivapag || ' pisuplidpag:'
            || pisuplidpag || ' piretencpag:' || piretencpag || ' pifranqpag:' || pifranqpag
            || ' pfcambio:' || pfcambio || ' ppreteiva:' || ppreteiva || ' ppreteica:'
            || ppreteica || ' pireteiva:' || pireteiva || ' pireteica:' || pireteica
            || ' pireteivapag:' || pireteivapag || ' pireteicapag:' || pireteicapag
            || ' ppica:' || ppica || ' piica:' || piica || ' piicapag:' || piicapag
            || ' pnorden: ' || pnorden;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vnorden        NUMBER(4);
      v_cempres      seguros.cempres%TYPE;
      v_error        axis_literales.slitera%TYPE;
      v_cmonres      sin_tramita_pago_gar.cmonres%TYPE;
      v_actualiza_cab NUMBER(1);
      vnmovres       sin_tramita_reserva.nmovres%TYPE;   --BUG 31294/174788:NSS:20/05/2014
      vnmovres_act   sin_tramita_reserva.nmovres%TYPE;   --BUG 31294/174788:NSS:20/05/2014
      vsimplog       sin_imp_sap_log.simplog%TYPE;   --BUG 31294/174788:NSS:20/05/2014
      valta          NUMBER := NULL;   --BUG 31294/174788:NSS:20/05/2014
      vcmovres       NUMBER := NULL;   --BUG 31294/174788:NSS:20/05/2014
      vctipgas       sin_tramita_reserva.ctipgas%TYPE;   --BUG 31294/174788:NSS:20/05/2014
      v_pagos_coa_pen parempresas.nvalpar%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vnmoneda       monedas.cmoneda%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      visinret       sin_tramita_pago.isinret%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vnsinies       sin_siniestro.nsinies%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vctipcoa       seguros.ctipcoa%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vctippag       sin_tramita_pago.ctippag%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vnmovpag       sin_tramita_movpago.nmovpag%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vcmonpag       sin_tramita_pago.cmonpag%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vcestpag       sin_tramita_movpago.cestpag%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      vctipdes       sin_tramita_pago.ctipdes%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      v_idres        sin_tramita_pago_gar.idres%TYPE;
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
      v_estpag       NUMBER;      
      mensajes       t_iax_mensajes; 
      v_countgar     NUMBER;
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF psidepag IS NULL
         OR pctipres IS NULL
         OR pnmovres IS NULL THEN
         RETURN 9000505;
      END IF;

      vnorden := pnorden;
      vpasexec := 2;

      IF pnorden IS NULL THEN
         -- 35982 - 12/05/2015 - JTT:  Asignamos un NORDEN unico para cada uno de los detalles del pago / recobro (SIDEPAG)
         BEGIN
            SELECT NVL(MAX(norden), 0) + 1
              INTO vnorden
              FROM sin_tramita_pago_gar
             WHERE sidepag = psidepag;
         --AND ctipres = pctipres  -- Bug 35982 - 25/05/2015 - JTT
         --AND nmovres = pnmovres;
         EXCEPTION
            WHEN OTHERS THEN
               vnorden := 1;
         END;

         vnmovres := pnmovres;   --BUG 31294/174788:NSS:20/05/2014
         vpasexec := 3;
      ELSE   --Se obtiene el nmovres que tenia anteriormente el detalle del pago,
             --ya que el que llega ya no coincide, al haberse actualizado la reserva
             --INI BUG 31294/174788:NSS:20/05/2014
          --BUG 32977 si se quieren insertar dos detalles de un pago, no se encuentra nada por el norden que llega en
         --sin_tramita_pago_gar por que aun no se ha insertado. Por lo tanto, se cogen como buenos los parametros que llegan de entrada.
         BEGIN
            SELECT nmovres
              INTO vnmovres
              FROM sin_tramita_pago_gar
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND norden = pnorden;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               vnmovres := pnmovres;   --BUG
         END;

         --FIN BUG 31294/174788:NSS:20/05/2014
         vpasexec := 4;
      END IF;

      -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      SELECT cempres
        INTO v_cempres
        FROM seguros s, sin_siniestro ss
       WHERE ss.nsinies = pnsinies
         AND s.sseguro = ss.sseguro;

      vpasexec := 5;

      IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0) = 1 THEN
         -- BUG 18423/104212 - 03/02/2012 - JMP - Multimoneda
         IF pcmonres IS NOT NULL THEN
            v_cmonres := pcmonres;
         ELSE
            -- FIN BUG 18423/104212 - 03/02/2012 - JMP - Multimoneda
            v_cmonres := pac_monedas.f_cmoneda_t(pac_oper_monedas.f_monres(pnsinies));
         END IF;

         vpasexec := 6;
      ELSE
         v_cmonres := NVL(pcmonres, NVL(pac_eco_monedas.f_obtener_moneda_defecto, 'EUR'));
         vpasexec := 7;
      END IF;

      -- Bug 31294 - 11/07/2014 - JTT: Recuperamos el IDRES correspondiente a la reserva
      -- para informar SIN_TRAMITA_PAGO_GAR.idres
      BEGIN
         vpasexec := 71;

         SELECT DISTINCT idres
                    INTO v_idres
                    FROM sin_tramita_reserva
                   WHERE nsinies = pnsinies
                     AND ntramit = pntramit
                     AND ctipres = pctipres
                     AND nmovres = vnmovres;
      EXCEPTION
         WHEN OTHERS THEN
            p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS.f_ins_pago_gar', 1,
                        'Obtener IDRES. nsinies = ' || pnsinies || ' ntramit = ' || pntramit
                        || ' ctipres = ' || pctipres || ' nmovres = ' || vnmovres,
                        SQLCODE || ' ' || SQLERRM);
            v_idres := NULL;
      END;

      vpasexec := 72;

      -- FIN BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
      BEGIN
         --
         SELECT COUNT(*)
           INTO v_countgar
           FROM sin_tramita_pago_gar 
          WHERE sidepag = psidepag
            AND ctipres = pctipres
            AND nmovres = vnmovres
            AND cgarant = pcgarant;
         --
      END;
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
      IF v_countgar = 0 THEN
         --   
      BEGIN
         INSERT INTO sin_tramita_pago_gar
                     (sidepag, ctipres, nmovres, cgarant, fperini, fperfin, cmonres,
                      isinret, iiva, isuplid, iretenc, ifranq, cmonpag, isinretpag,
                      iivapag, isuplidpag, iretencpag, ifranqpag, fcambio, iresrcm,
                      iresred, pretenc, piva, cconpag, norden,
                                                              -- BUG 19981 - 07/11/2011 - MDS
                                                              preteiva, preteica,
                      ireteiva, ireteica, ireteivapag, ireteicapag, pica, iica,
                      iicapag, idres ,iotrosgas ,iotrosgaspag ,ibaseipoc ,ibaseipocpag ,pipoconsumo
                      ,iipoconsumo ,iipoconsumopag)
              VALUES (psidepag, pctipres, vnmovres, pcgarant, pfperini, pfperfin, v_cmonres,
                      pisinret, piiva, pisuplid, piretenc, pifranq, pcmonpag, pisinretpag,
                      piivapag, pisuplidpag, piretencpag, pifranqpag, pfcambio, piresrcm,
                      piresred, ppretenc, ppiva, pcconpag, vnorden,
                                                                   -- BUG 19981 - 07/11/2011 - MDS
                                                                   ppreteiva, ppreteica,
                      pireteiva, pireteica, pireteivapag, pireteicapag, ppica, piica,
                      piicapag, v_idres,piotrosgas ,piotrosgaspag ,pibaseipoc ,pibaseipocpag ,ppipoconsumo
                     ,piipoconsumo ,piipoconsumopag);

         valta := 1;
         vpasexec := 8;
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
--INI BUG 31294/174788:NSS:20/05/2014
  /****+++***/
            SELECT ctipgas
              INTO vctipgas
              FROM sin_tramita_reserva
             WHERE nsinies = pnsinies
               AND nmovres = vnmovres
               AND ctipres = pctipres
               AND ntramit = pntramit;

            vpasexec := 10;

            /*Al actualizar el detalle del pago, el nmovres deberÃ¡ pasar a ser el nmovres de la reserva sobre el cual se realiza
              la modificacion.
              Para ello se obtien el movimiento de reserva anterior al ultimo realizado.
              (ya que el ultimo es el de la actualizacion del pago, que ya se ha realizado)*/
            SELECT nmovres
              INTO vnmovres_act
              FROM (SELECT ROW_NUMBER() OVER(ORDER BY nmovres DESC) AS orden, nmovres
                      FROM sin_tramita_reserva
                     WHERE nsinies = pnsinies
                       AND ntramit = pntramit
                       AND ctipres = pctipres
                       AND NVL(ctipgas, -1) = NVL(vctipgas, -1)
                       AND NVL(cgarant, -1) = NVL(pcgarant, -1)
                       AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
                       AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfperfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')))
             WHERE orden = 2;

            vpasexec := 11;

            UPDATE sin_tramita_pago_gar
               SET cconpag = pcconpag,
                   cgarant = pcgarant,
                   fperini = pfperini,
                   fperfin = pfperfin,
                   cmonres = v_cmonres,
                   isinret = pisinret,
                   iiva = piiva,
                   isuplid = pisuplid,
                   iretenc = piretenc,
                   ifranq = pifranq,
                   cmonpag = pcmonpag,
                   isinretpag = pisinretpag,
                   iivapag = piivapag,
                   isuplidpag = pisuplidpag,
                   iretencpag = piretencpag,
                   ifranqpag = pifranqpag,
                   fcambio = pfcambio,
                   iresrcm = piresrcm,
                   iresred = piresred,
                   pretenc = ppretenc,
                   piva = ppiva,
                   -- BUG 19981 - 07/11/2011 - MDS
                   preteiva = ppreteiva,
                   preteica = ppreteica,
                   ireteiva = pireteiva,
                   ireteica = pireteica,
                   ireteivapag = pireteivapag,
                   ireteicapag = pireteicapag,
                   pica = ppica,
                   iica = piica,
                   iicapag = piicapag,
                   nmovres = vnmovres_act
          ,iotrosgas      = piotrosgas
          ,iotrosgaspag   = piotrosgaspag
          ,ibaseipoc      = pibaseipoc
          ,ibaseipocpag   = pibaseipocpag
          ,pipoconsumo    = ppipoconsumo
          ,iipoconsumo    = piipoconsumo
          ,iipoconsumopag = piipoconsumopag
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = vnmovres
               AND norden = NVL(vnorden, norden);

            COMMIT;   --32977:NSS:03/10/2014
            valta := 0;
            vpasexec := 12;
      --FIN BUG 31294/174788:NSS:20/05/2014
      END;
      END IF;
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
      IF valta = 1 THEN   --INI BUG  24637/147756:NSS:03/03/2014
         UPDATE sin_tramita_reserva
            SET sidepag = psidepag
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipres = pctipres
            AND nmovres = (SELECT MAX(nmovres)   --INI BUG 31294/174788:NSS:20/05/2014
                             FROM sin_tramita_reserva r2
                            WHERE r2.nsinies = pnsinies
                              AND r2.ntramit = pntramit
                              AND r2.ctipres = pctipres
                              AND r2.cmovres IN(4, 22));   --el ultimo pago / recobro (JTT- 28/11/2014) que se ha creado

         vpasexec := 122;

         -- Bug 24637/182009 - 21/08/2014 - JTT: Descartamos los valores negativos de los Tipos de Indicadores  pcxxxxx_tipindic,
         -- En capa WEB se ha aÃ¿Â±adiro la opcion -1 para  "0% Sin retencion en pantalla"
         IF pciva_tipind IS NOT NULL
            AND pciva_tipind >= 0 THEN
            BEGIN
               SELECT simplog.NEXTVAL
                 INTO vsimplog
                 FROM DUAL;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vsimplog := 1;
            END;

            INSERT INTO sin_imp_sap_log
                        (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                 VALUES (vsimplog, psidepag, pctipres, pnmovres, vnorden, pciva_tipind);

            vpasexec := 13;
         END IF;

         IF pcretenc_tipind IS NOT NULL
            AND pcretenc_tipind >= 0 THEN
            BEGIN
               SELECT simplog.NEXTVAL
                 INTO vsimplog
                 FROM DUAL;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vsimplog := 1;
            END;

            INSERT INTO sin_imp_sap_log
                        (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                 VALUES (vsimplog, psidepag, pctipres, pnmovres, vnorden, pcretenc_tipind);

            vpasexec := 14;
         END IF;

         IF pcreteiva_tipind IS NOT NULL
            AND pcreteiva_tipind >= 0 THEN
            BEGIN
               SELECT simplog.NEXTVAL
                 INTO vsimplog
                 FROM DUAL;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vsimplog := 1;
            END;

            INSERT INTO sin_imp_sap_log
                        (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                 VALUES (vsimplog, psidepag, pctipres, pnmovres, vnorden, pcreteiva_tipind);

            vpasexec := 15;
         END IF;

         IF pcreteica_tipind IS NOT NULL
            AND pcreteica_tipind >= 0 THEN
            BEGIN
               SELECT simplog.NEXTVAL
                 INTO vsimplog
                 FROM DUAL;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vsimplog := 1;
            END;

            INSERT INTO sin_imp_sap_log
                        (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                 VALUES (vsimplog, psidepag, pctipres, pnmovres, vnorden, pcreteica_tipind);

            vpasexec := 16;
         END IF;

     IF pctipind IS NOT NULL
            AND pctipind >= 0 THEN
            BEGIN
               SELECT simplog.NEXTVAL
                 INTO vsimplog
                 FROM DUAL;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vsimplog := 1;
            END;


            INSERT INTO sin_imp_sap_log
                        (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                 VALUES (vsimplog, psidepag, pctipres, pnmovres, vnorden, pctipind);

            vpasexec := 16;
         END IF;

         -- Fi Bug 24637/182009
      --FIN BUG 24637/147756:NSS:03/03/2014
      ELSIF valta = 0 THEN
         --bug 0024637/0147756: NSS:03/03/2014
         -- Bug 24637/182009 - 21/08/2014 - JTT: No considerem els valors negatius dels Tipus d'indicadors, pcxxxxx_tipind
         IF pciva_tipind IS NOT NULL
            AND pciva_tipind >= 0 THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pciva_tipind,
                   nmovres = vnmovres   --BUG 31294/174788:NSS:20/05/2014
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = NVL(vnorden, norden)
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 1);   --IVA

            vpasexec := 17;
         END IF;

         IF pcretenc_tipind IS NOT NULL
            AND pcretenc_tipind >= 0 THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pcretenc_tipind,
                   nmovres = vnmovres   --BUG 31294/174788:NSS:20/05/2014
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = NVL(vnorden, norden)
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 2);   --RETEFUENTE

            vpasexec := 18;
         END IF;

         IF pcreteiva_tipind IS NOT NULL
            AND pcreteiva_tipind >= 0 THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pcreteiva_tipind,
                   nmovres = vnmovres   --BUG 31294/174788:NSS:20/05/2014
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = NVL(vnorden, norden)
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 3);   --RETEIVA

            vpasexec := 19;
         END IF;

         IF pcreteica_tipind IS NOT NULL
            AND pcreteica_tipind >= 0 THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pcreteica_tipind,
                   nmovres = vnmovres   --BUG 31294/174788:NSS:20/05/2014
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = NVL(vnorden, norden)
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 4);   --RETEICA

            vpasexec := 20;
         END IF;

     IF pctipind IS NOT NULL
            AND pctipind >= 0 THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pctipind,
                   nmovres = vnmovres   --BUG 31294/174788:NSS:20/05/2014
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = NVL(vnorden, norden)
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 5);   --RETEICA

            vpasexec := 20;
         END IF;
         -- Fi Bug 24637/182009
      --FIN bug 0024637/0147756: NSS:03/03/2014
      END IF;

      -- BUG 18423/104212 - 30/01/2012 - JMP - Multimoneda
      SELECT DECODE(COUNT(*), 1, 1, 0)
        INTO v_actualiza_cab
        FROM sin_tramita_pago_gar
       WHERE sidepag = psidepag;

      vpasexec := 21;

      -- Si se estÃ¡ insertando el primer detalle del pago actualizamos la moneda de su cabecera
      IF v_actualiza_cab = 1 THEN
         UPDATE sin_tramita_pago
            SET cmonres = v_cmonres
          WHERE sidepag = psidepag;
      END IF;

      vpasexec := 22;

      -- FIN BUG 18423/104212 - 30/01/2012 - JMP - Multimoneda

      -- BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0) = 1 THEN
         v_error := pac_oper_monedas.f_contravalores_pagosini(psidepag, 2);

         IF v_error <> 0 THEN
            RETURN v_error;
         END IF;
      END IF;

      vpasexec := 23;
      -- FIN BUG 18423 - 08/11/2011 - JMP - LCOL000 - Multimoneda
      -- INICIO 20/06/2014 EDA Bug 24462/176931
      vpasexec := 6049;

      SELECT s.cempres, x.nsinies, p.isinret, s.ctipcoa, p.ctippag, p.cmonpag, p.ctipdes,
             t.nmovpag, t.cestpag
        INTO v_cempres, vnsinies, visinret, vctipcoa, vctippag, vcmonpag, vctipdes,
             vnmovpag, vcestpag
        FROM seguros s, sin_siniestro x, sin_tramita_pago p, sin_tramita_movpago t
       WHERE p.sidepag = psidepag
         AND x.nsinies = p.nsinies
         AND s.sseguro = x.sseguro
         AND t.sidepag = p.sidepag
         AND t.nmovpag = (SELECT MAX(st2.nmovpag)
                            FROM sin_tramita_movpago st2
                           WHERE st2.sidepag = t.sidepag);

      v_pagos_coa_pen := NVL(pac_parametros.f_parempresa_n(v_cempres, 'PAGOS_COA_PEN'), 0);

      IF vctipcoa != 0
         AND vcestpag = 0
         AND v_pagos_coa_pen = 1 THEN
         vpasexec := 5845;
         vnmoneda := pac_monedas.f_cmoneda_n(vcmonpag);
         vpasexec := 5847;
         v_error := f_pagocoa(v_cempres, vnsinies, psidepag, visinret, vctipcoa, vctippag,
                              vnmoneda, vcestpag);

         IF v_error <> 0 THEN
            RETURN v_error;
         END IF;
      END IF;

      -- FIN 20/06/2014 EDA Bug 24462/176931
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
      BEGIN 
         --
         SELECT sp.cestpag
           INTO v_estpag
           FROM sin_tramita_movpago sp
          WHERE sp.sidepag = psidepag
            AND sp.nmovpag = (SELECT MAX(sp1.nmovpag)
                                FROM sin_tramita_movpago sp1
                               WHERE sp1.sidepag = sp.sidepag);
         --
      EXCEPTION WHEN OTHERS THEN
         --
         v_estpag := NULL;
         --   
      END;
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado
      IF v_estpag = 0 THEN
         --      
         v_error := pac_iax_validaciones_sin.f_movpago(psidepag => psidepag,pcestpag => 1,pcestval => 1,pcsubpag => 0,mensajes => mensajes);
         p_control_error('AABC','estado_pago verror* ', v_error ); 
         --
         IF v_error = 0 THEN 
            --
            v_error := pac_iax_siniestros.f_set_obj_sintram_movpagrecob(pntramit => 0,psidepag => psidepag,pnmovpag => NULL,pcestpag => 1,pfefepag => NULL,pcestval => 1,
                                                                       pfcontab => NULL, pctippag => 2,pcestpagant => 0,pcsubpag => 0,pcsubpagant => 0,mensajes => mensajes);
            p_control_error('AABC','estado_pago verror** ',v_error);
            --
         END IF; 
         --
      END IF;      
      -- IAXIS-12562 AABC Cambio de estado pagos de siniestos pendiente - aceptado - remesado 
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000954;   --Error al llegir de la taula SIN_TRAMITA_PAGO_GAR
   END f_ins_pago_gar;

   /*************************************************************************
      FUNCTION f_ins_agenda
         Inserta a la taula SIN_TRAMITA_AGENDA dels parÃ¿Â metres informats.
         param in pnsinies    : nÃ¿Âºmero sinistre
         param in pntramit    : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pnlinage    : nÃ¿Âºmero linia
         param in pctipreg    : codi tipus registre
         param in pcmanual    : codi registre manual
         param in pcestage    : codi estat agenda
         param in pffinage    : data finalitzaciÃ¿Â³
         param in pttitage    : tÃ¿Â­tol anotaciÃ¿Â³
         param in ptlinage    : descripciÃ¿Â³ anotaciÃ¿Â³
         return               : 0 -> Tot correcte
                                1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_agenda(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlinage IN NUMBER,
      pctipreg IN NUMBER,
      pcmanual IN NUMBER,
      pcestage IN NUMBER,
      pffinage IN DATE,
      pttitage IN VARCHAR2,
      ptlinage IN VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_agenda';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnlinage:'
            || pnlinage || ' pctipreg:' || pctipreg || ' pcmanual:' || pcmanual
            || ' pcestage:' || pcestage || ' pffinage:' || pffinage || ' pttitage:'
            || pttitage || ' ptlinage:' || ptlinage;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pnlinage IS NULL
         OR pctipreg IS NULL
         OR pcmanual IS NULL
         OR pcestage IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_agenda
                     (nsinies, ntramit, nlinage, ctipreg, cmanual, cestage, ffinage,
                      ttitage, tlinage)
              VALUES (pnsinies, pntramit, pnlinage, pctipreg, pcmanual, pcestage, pffinage,
                      pttitage, ptlinage);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_agenda
               SET ctipreg = pctipreg,
                   cmanual = pcmanual,
                   cestage = pcestage,
                   ffinage = pffinage,
                   tlinage = ptlinage,
                   ttitage = pttitage
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND nlinage = pnlinage;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000954;   --Error al llegir de la taula SIN_TRAMITA_AGENDA
   END f_ins_agenda;

    /*************************************************************************
      FUNCTION f_ins_personarel
         Inserta a la taula SIN_TRAMITA_PERSONAREL dels parÃ¿Â metres informats.
         param in pnsinies     : nÃ¿Âºmero sinistre
         param in pntramit     : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pnpersrel    : nÃ¿Âºmero linia
         param in pctipide     : codi tipus registre
         param in pnnumide     : codi registre manual
         param in ptnombre     : codi estat agenda
         param in ptapelli1    : data finalitzaciÃ¿Â³
         param in ptapelli2    : tÃ¿Â­tol anotaciÃ¿Â³
         param in pttelefon    : descripciÃ¿Â³ anotaciÃ¿Â³
         param in psperson     : descripciÃ¿Â³ anotaciÃ¿Â³
         param in ptdesc       : descripciÃ¿Â³ anotaciÃ¿Â³
         param in ptnombre2    : segundo nombre
         param in ptmovil      : telf. movil
         param in ptemail      : email
         return                : 0 -> Tot correcte
                                1 -> S'ha produit un error

         Bug 22325/115249 - 05/06/2012 - AMC
   *************************************************************************/
   FUNCTION f_ins_personarel(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnpersrel IN NUMBER,
      pctipide IN NUMBER,
      pnnumide IN VARCHAR2,
      ptnombre IN VARCHAR2,
      ptapelli1 IN VARCHAR2,
      ptapelli2 IN VARCHAR2,
      pttelefon IN VARCHAR2,
      psperson IN NUMBER,
      ptdesc IN VARCHAR2,
      ptnombre2 IN VARCHAR2,
      ptmovil IN VARCHAR2,
      ptemail IN VARCHAR2,
      pctiprel IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_personarel';
      vparam         VARCHAR2(1000)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnpersrel:'
            || pnpersrel || ' pctipide:' || pctipide || ' pnnumide:' || pnnumide
            || ' ptnombre:' || ptnombre || ' ptapelli1:' || ptapelli1 || ' ptapelli2:'
            || ptapelli2 || ' pttelefon:' || pttelefon || ' sperson:' || psperson
            || ' ptdesc:' || ptdesc || ' ptnombre2:' || ptnombre2 || ' ptmovil:' || ptmovil
            || ' ptemail:' || ptemail || ' tr=' || pctiprel;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vppersrel      NUMBER;
   BEGIN
      vppersrel := pnpersrel;

      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;

       -- JAMR - Bug: 40310
      -- AÃ¿Â±adir validacición para que no permite ingresar dos asegurados innominados como personas relacionadas
      IF vppersrel IS NULL and pctiprel = 4 THEN
         SELECT COUNT(1) INTO vcount
         FROM sin_tramita_personasrel
         WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ctiprel = 4;

         IF vcount>0 THEN
             RETURN 9908772;
         END IF;

      elsif vppersrel IS NOT NULL and pctiprel = 4 THEN
         SELECT COUNT(1) INTO vcount
         FROM sin_tramita_personasrel
         WHERE nsinies = pnsinies
               AND ntramit = pntramit
               and npersrel <> vppersrel
               AND ctiprel = 4;

         IF vcount>0 THEN
             RETURN 9908772;
         END IF;

      END IF;

      IF vppersrel IS NULL THEN
         BEGIN
            --SELECT MAX(npersrel) + 1
            SELECT NVL(MAX(npersrel) + 1, 1)
              INTO vppersrel
              FROM sin_tramita_personasrel
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               vppersrel := 1;
            WHEN OTHERS THEN
               vppersrel := 1;
         END;
      END IF;

      --Bug 22325/115249 - 05/06/2012 - AMC
      -- Bug 0024690 - 13/11/2012 - JMF
      BEGIN
         INSERT INTO sin_tramita_personasrel
                     (nsinies, ntramit, npersrel, ctipide, nnumide, tnombre, tapelli1,
                      tapelli2, ttelefon, sperson, tdesc, tnombre2, temail, tmovil,
                      ctiprel)
              VALUES (pnsinies, pntramit, vppersrel, pctipide, pnnumide, ptnombre, ptapelli1,
                      ptapelli2, pttelefon, psperson, ptdesc, ptnombre2, ptemail, ptmovil,
                      pctiprel);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_personasrel
               SET ctipide = pctipide,
                   nnumide = pnnumide,
                   tnombre = ptnombre,
                   tapelli1 = ptapelli1,
                   tapelli2 = ptapelli2,
                   ttelefon = pttelefon,
                   sperson = psperson,
                   tdesc = ptdesc,
                   tnombre2 = ptnombre2,
                   temail = ptemail,
                   tmovil = ptmovil,
                   ctiprel = pctiprel
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND npersrel = vppersrel;
      END;

      -- Fi Bug 22325/115249 - 05/06/2012 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000954;   --Error al llegir de la taula SIN_TRAMITA_PERSONAREL
   END f_ins_personarel;

   /*************************************************************************
      FUNCTION f_del_personarel
         Inserta a la taula SIN_TRAMITA_PERSONAREL dels parÃ¿Â metres informats.
         param in pnsinies    : nÃ¿Âºmero sinistre
         param in pntramit    : nÃ¿Âºmero tramitaciÃ¿Â³ sinistre
         param in pnpersrel   : nÃ¿Âºmero linia persona rel
         return               : 0 -> Tot correcte
                                1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_del_personarel(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnpersrel IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_personarel';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnpersrel:'
            || pnpersrel;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pnpersrel IS NULL THEN
         RETURN 9000505;
      END IF;

      DELETE      sin_tramita_personasrel
            WHERE npersrel = pnpersrel
              AND ntramit = pntramit
              AND nsinies = nsinies;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000954;   --Error al llegir de la taula SIN_TRAMITA_PERSONAREL
   END f_del_personarel;

   /*************************************************************************
      FUNCTION f_get_documento
         Recupera un document
         param in pnsinies  : nÃ¿Âºmero del siniestro
         param in pntramit  : nÃ¿Âºmero tramitacición siniestro
         param in pndocume  : nÃ¿Âºmero de documento
         param out vsquery  : text consulta
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_get_documento(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pndocume IN NUMBER,
      pcidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 0022153 - 19/07/2012 - JMF: afegir camps
      vsquery :=
         'SELECT s.nsinies, s.ntramit, s.ndocume, s.cdocume, s.iddoc, s.freclama, s.frecibe, s.fcaduca,'
         || ' s.cobliga, d.ttitdoc, s.cusualt, s.falta, s.cusumod, s.fmodifi, s.cdescdoc, s.caccion, s.corigen '
         || ' ,DECODE(s.iddoc, null, null, (select tusunom from usuarios u where u.cusuari = pac_axisgedox.f_get_usuario(s.iddoc))) tusualtdoc '
         || ' FROM sin_tramita_documento s, doc_desdocumento d'
         || ' WHERE s.cdocume = d.cdocume ' || ' AND d.cidioma = ' || pcidioma
         || ' AND nsinies = ' || pnsinies || ' AND ntramit = ' || pntramit
         || ' AND ndocume = ' || pndocume;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS', 1, 'F_Get_documento', SQLERRM);
         RETURN 1;
   END f_get_documento;

/*************************************************************************
   FUNCTION f_get_unitradefecte
   Recupera la unitat de tramitaciÃ¿Â³ i el tramitador generats per defecte
   param in pcempres  : codi empresa
   param out pcunitra : codi unitat tramitadora
   param out pctramit : codi tramitador
   param out mensajes : missatges d'error
   return             : 0 -> Tot correcte
                        1 -> S'ha produit un error
*************************************************************************/
   FUNCTION f_get_unitradefecte(
      pcempres IN NUMBER,
      pcunitra OUT VARCHAR2,
      pctramit OUT VARCHAR2)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(500) := 'parámetros - pcempres: ' || pcempres;
      vobjectname    VARCHAR2(50) := 'PAC_SINIESTROS.F_Get_unitradefecte';
      vnumerr        NUMBER(10) := 0;
   BEGIN
      -- ComprovaciÃ¿Â³ pas de parÃ¿Â metres
      IF pcempres IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         SELECT ctramitad
           INTO pctramit
           FROM sin_codtramitador
          WHERE cempres = pcempres
            AND cusuari = f_user;
      --AND ctiptramit = 3;
      EXCEPTION
         WHEN OTHERS THEN
            pcunitra := 'U000';
            pctramit := 'T000';
            RETURN 0;
      END;

      --Bug.: 18977
      BEGIN
         /*SELECT     ctramitad
               INTO pcunitra
               FROM sin_redtramitador
              WHERE cempres = pcempres
                AND ctiptramit = 2
                AND TRUNC(fmovini) <= f_sysdate
                AND(TRUNC(fmovfin) IS NULL
                    OR TRUNC(fmovfin) >= f_sysdate)
         START WITH ctramitad = pctramit
         CONNECT BY PRIOR ctramitpad = ctramitad;*/
         SELECT DISTINCT ctramitad
                    INTO pcunitra
                    FROM sin_redtramitador
                   WHERE cempres = pcempres
                     AND ctiptramit = (SELECT     MAX(ctiptramit)
                                             FROM sin_redtramitador
                                            WHERE cempres = pcempres
                                              AND TRUNC(fmovini) <= f_sysdate
                                              AND(TRUNC(fmovfin) IS NULL
                                                  OR TRUNC(fmovfin) >= f_sysdate)
                                              AND ctiptramit <
                                                    (SELECT DISTINCT ctiptramit
                                                                FROM sin_redtramitador
                                                               WHERE ctramitad = pctramit
                                                                 AND cempres = pcempres
                                                                 AND TRUNC(fmovini) <=
                                                                                      f_sysdate
                                                                 AND(TRUNC(fmovfin) IS NULL
                                                                     OR TRUNC(fmovfin) >=
                                                                                      f_sysdate))
                                       START WITH ctramitad = pctramit
                                       CONNECT BY PRIOR ctramitpad = ctramitad)
                     AND TRUNC(fmovini) <= f_sysdate
                     AND(TRUNC(fmovfin) IS NULL
                         OR TRUNC(fmovfin) >= f_sysdate)
              START WITH ctramitad = pctramit
              CONNECT BY PRIOR ctramitpad = ctramitad;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            vnumerr := 9001371;
      END;

      --Fi Bug.: 18977
      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001371;
   --Error al cercar la unitat de tramitaciÃ¿Â³ i el tramitador per defecte
   END f_get_unitradefecte;

   /***********************************************************************
      Inserta o actualiza en sin_causa_motivo
      param  in  pscaumot : cÃ¿Â³digo de la causa/motivo
      param  in  pccausin : cÃ¿Â³digo de la causa del siniestro
      param  in  pcmotsin : cÃ¿Â³digo del motivo del siniestro
      param  in  pcpagaut : si los pagos son automaticos
      param  in  pcmotmov : cÃ¿Â³digo motivo del movimiento
      param  in  pcmotfin : cÃ¿Â³digo motivo movimiento fin
      param  in  pcmovimi : cÃ¿Â³digo motivo movimiento inicial
      param  in  pcdesaut : si genera destinatario automaticamente
      param  in  pcultpag: Pago se crea marcado como Ã¿Âºltimo pago
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      25/05/2009   AMC                 Sinistres.  Bug: 8816
      Bug 12753     18/01/2010  AMC Se aÃ¿Â±ade el parametro pcdesaut
      -- Bug 0022490 - 09/07/2012 - JMF: aÃ¿Â±adir pcultpag
   ***********************************************************************/
   FUNCTION f_set_sin_causa_motivo(
      pscaumot IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      pcpagaut IN NUMBER,
      pcmotmov IN NUMBER,
      pcmotfin IN NUMBER,
      pcmovimi IN NUMBER,
      pcdesaut IN NUMBER,
      pcultpag IN NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(500)
         := 'parámetros - pscaumot: ' || pscaumot || ' pccausin:' || pccausin || ' pcmotsin:'
            || pcmotsin || ' pcpagaut:' || pcpagaut || ' pcmotmov:' || pcmotmov
            || ' pcmotfin:' || pcmotfin || ' pcmovimi:' || pcmovimi;
      vobjectname    VARCHAR2(50) := 'PAC_SINIESTROS.f_set_sin_causa_motivo';
      vnumerr        NUMBER(10) := 0;
   BEGIN
      -- ComprovaciÃ¿Â³ pas de parámetros
      IF pscaumot IS NULL
         OR pccausin IS NULL
         OR pcmotsin IS NULL THEN
         RETURN 9000505;
      END IF;

      INSERT INTO sin_causa_motivo
                  (scaumot, ccausin, cmotsin, cpagaut, cmotmov, cmotfin, cmovimi,
                   cdesaut, cultpag)
           VALUES (pscaumot, pccausin, pcmotsin, pcpagaut, pcmotmov, pcmotfin, pcmovimi,
                   pcdesaut, pcultpag);

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         UPDATE sin_causa_motivo
            SET ccausin = pccausin,
                cmotsin = pcmotsin,
                cpagaut = pcpagaut,
                cmotmov = pcmotmov,
                cmotfin = pcmotfin,
                cmovimi = pcmovimi,
                cdesaut = pcdesaut,
                cultpag = pcultpag
          WHERE scaumot = pscaumot;

         COMMIT;
         RETURN vnumerr;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001707;   --Error al insertar en sin_causa_motivo
   END f_set_sin_causa_motivo;

   /***********************************************************************
      Recupera un registro de sin_causa_motivo
      param  in  pscaumot : cÃ¿Â³digo de la causa/motivo
      param  out  pccausin : cÃ¿Â³digo de la causa del siniestro
      param  out  pcmotsin : cÃ¿Â³digo del motivo del siniestro
      param  out  pcpagaut : si los pagos son automaticos
      param  out  pcmotmov : cÃ¿Â³digo motivo del movimiento
      param  out  pcmotfin : cÃ¿Â³digo motivo movimiento fin
      param  out  pcmovimi : cÃ¿Â³digo motivo movimiento inicial
      param  out  pcdesaut : si genera destinatario automaticamente
      param  out  pcultpag : Pago se crea marcado como Ã¿Âºltimo pago
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      26/05/2009   AMC                 Sinistres.  Bug: 8816
      Bug 12753     18/01/2010  AMC Se aÃ¿Â±ade el parametro pcdesaut
      -- Bug 0022490 - 09/07/2012 - JMF: aÃ¿Â±adir pcultpag
   ***********************************************************************/
   FUNCTION f_get_caumot(
      pscaumot IN NUMBER,
      pccausin OUT NUMBER,
      pcmotsin OUT NUMBER,
      pcpagaut OUT NUMBER,
      pcmotmov OUT NUMBER,
      pcmotfin OUT NUMBER,
      pcmovimi OUT NUMBER,
      pcdesaut OUT NUMBER,
      pcultpag OUT NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(500) := 'parámetros - pscaumot: ' || pscaumot;
      vobjectname    VARCHAR2(50) := 'PAC_SINIESTROS.f_get_caumot';
      vnumerr        NUMBER(10) := 0;
   BEGIN
      -- ComprovaciÃ¿Â³ pas de parámetros
      IF pscaumot IS NULL THEN
         RETURN 9000505;
      END IF;

      SELECT ccausin, cmotsin, cpagaut, cmotmov, cmotfin, cmovimi, cdesaut, cultpag
        INTO pccausin, pcmotsin, pcpagaut, pcmotmov, pcmotfin, pcmovimi, pcdesaut, pcultpag
        FROM sin_causa_motivo
       WHERE scaumot = pscaumot;

      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001717;   --Error al recuperar de sin_causa_motivo
   END f_get_caumot;

   /***********************************************************************
      Guarda a la taula una nova conf. per el producte
      param  in  pscaumot :  cÃ¿Â³digo de la causa
      param  in  psproduc  : cÃ¿Â³digo del producto
      param  in  pcactivi  : cÃ¿Â³digo de la actividad
      param  in  pcgarant  : cÃ¿Â³digo de la garantia
      param  in  pctramit  : cÃ¿Â³digo de la tramitacición
      param out mensajes  : mensajes de error
      return              : NUMBER
      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_set_caumot_producte(
      pscaumot IN NUMBER,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pcgarant IN NUMBER,
      pctramit IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_set_caumot_producte';
      vparam         VARCHAR2(500)
         := 'parámetros - pscaumot: ' || pscaumot || ' psproduc:' || psproduc || ' pcactivi:'
            || pcactivi || ' pcgarant:' || pcgarant || ' pctramit:' || pctramit;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pscaumot IS NULL
         OR psproduc IS NULL
         OR pcactivi IS NULL
         OR pcgarant IS NULL
         OR pctramit IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_gar_causa_motivo
                     (scaumot, sproduc, cactivi, cgarant, ctramit)
              VALUES (pscaumot, psproduc, pcactivi, pcgarant, pctramit);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            RETURN 9001710;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001709;
   --Error al llegir de la taula sin_gar_causa_motivo
   END f_set_caumot_producte;

   /***********************************************************************
      Borra la conf. per el producte
      param  in  pscaumot :  cÃ¿Â³digo de la causa
      param  in  psproduc  : cÃ¿Â³digo del producto
      param  in  pcactivi  : cÃ¿Â³digo de la actividad
      param  in  pcgarant  : cÃ¿Â³digo de la garantia
      param  in  pctramit  : cÃ¿Â³digo de la tramitacición
      param out mensajes  : mensajes de error
      return              : NUMBER
      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot_producte(
      pscaumot IN NUMBER,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pcgarant IN NUMBER,
      pctramit IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_del_caumot_producte';
      vparam         VARCHAR2(500)
         := 'parámetros - pscaumot: ' || pscaumot || ' psproduc:' || psproduc || ' pcactivi:'
            || pcactivi || ' pcgarant:' || pcgarant || ' pctramit:' || pctramit;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pscaumot IS NULL
         OR psproduc IS NULL
         OR pcactivi IS NULL
         OR pcgarant IS NULL
         OR pctramit IS NULL THEN
         RETURN 9000505;
      END IF;

      DELETE      sin_gar_causa_motivo
            WHERE scaumot = pscaumot
              AND sproduc = psproduc
              AND cactivi = pcactivi
              AND cgarant = pcgarant
              AND ctramit = pctramit;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001709;
   --Error al llegir de la taula sin_gar_causa_motivo
   END f_del_caumot_producte;

   FUNCTION f_set_caumot_destformula(
      pscaumot IN NUMBER,
      pctipdes IN NUMBER,
      pccampo IN VARCHAR2,
      pcclave IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_set_caumot_destformula';
      vparam         VARCHAR2(500)
         := 'parámetros - pscaumot: ' || pscaumot || ' pctipdes:' || pctipdes || ' pccampo:'
            || pccampo || ' pcclave:' || pcclave;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pscaumot IS NULL
         OR pctipdes IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_for_causa_motivo
                     (scaumot, ctipdes, ccampo, cclave)
              VALUES (pscaumot, pctipdes, pccampo, pcclave);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            RETURN 9001721;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001709;
   --Error al llegir de la taula sin_gar_causa_motivo
   END f_set_caumot_destformula;

   /***********************************************************************
      Eliminar de la taula una conf. formula
      scaumot  IN  NUMBER,
      pctipdes  IN  NUMBER,
      pccampo   IN  VARCHAR2,
      pcclave   IN  NUMBER,
      param out mensajes  : mensajes de error
      return              : NUMBER
      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot_destformula(
      pscaumot IN NUMBER,
      pctipdes IN NUMBER,
      pccampo IN VARCHAR2,
      pcclave IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_del_caumot_destformula';
      vparam         VARCHAR2(500)
         := 'parámetros - pscaumot: ' || pscaumot || ' pctipdes:' || pctipdes || ' pccampo:'
            || pccampo || ' pcclave:' || pcclave;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pscaumot IS NULL
         OR pctipdes IS NULL THEN
         RETURN 9000505;
      END IF;

      DELETE      sin_for_causa_motivo
            WHERE scaumot = pscaumot
              AND ctipdes = pctipdes
              AND ccampo = pccampo
              AND cclave = pcclave;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001709;
   --Error al llegir de la taula sin_gar_causa_motivo
   END f_del_caumot_destformula;

   /***********************************************************************
      Inserta un registro en sin_det_causa_motivo
      param  in  pscaumot : cÃ¿Â³digo de la causa/motivo
      param  in  pctipdes : cÃ¿Â³digo tipo destinatario
      param  in  pcmodfis : cÃ¿Â³digo del modelo fiscal
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      27/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_set_sindetcausamot(pscaumot IN NUMBER, pctipdes IN NUMBER, pcmodfis IN NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(500)
         := 'parámetros - pscaumot: ' || pscaumot || ' pctipdes:' || pctipdes || ' pcmodfis:'
            || pcmodfis;
      vobjectname    VARCHAR2(50) := 'PAC_SINIESTROS.f_set_sindetcausamot';
      vnumerr        NUMBER(10) := 0;
   BEGIN
      -- ComprovaciÃ¿Â³ pas de parámetros
      IF pscaumot IS NULL
         OR pctipdes IS NULL
         OR pcmodfis IS NULL THEN
         RETURN 9000505;
      END IF;

      INSERT INTO sin_det_causa_motivo
                  (scaumot, ctipdes, cmodfis)
           VALUES (pscaumot, pctipdes, pcmodfis);

      RETURN vnumerr;
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         UPDATE sin_det_causa_motivo
            SET cmodfis = pcmodfis
          WHERE scaumot = pscaumot
            AND ctipdes = pctipdes;

         RETURN 0;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001723;   --Error al recuperar de sin_det_causa_motivo
   END f_set_sindetcausamot;

   /***********************************************************************
      Devuelve el siguiente codigo de causa/motivo
      param  out  pscaumot : PrÃ¿Â³ximo cÃ¿Â³digo de la causa/motivo
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      27/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_get_nextscaumot(pscaumot OUT NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(500) := '';
      vobjectname    VARCHAR2(50) := 'PAC_SINIESTROS.f_get_nextscaumot';
      vnumerr        NUMBER(10) := 0;
   BEGIN
      SELECT MAX(scaumot) + 1
        INTO pscaumot
        FROM sin_causa_motivo;

      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001717;   --Error al recuperar de sin_causa_motivo
   END f_get_nextscaumot;

   /***********************************************************************
      Eliminar de la taula sin_det_causa_motivo
      param  in  pscaumot : cÃ¿Â³digo de la causa/motivo
      param  in  pctipdes : cÃ¿Â³digo tipo destinatario
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      27/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot_destinatario(pscaumot IN NUMBER, pctipdes IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_del_caumot_destformula';
      vparam         VARCHAR2(500)
                          := 'parámetros - pscaumot: ' || pscaumot || ' pctipdes:' || pctipdes;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pscaumot IS NULL
         OR pctipdes IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Primero borramos los registro de la tabla hija sin_for_causa_motivo
      DELETE FROM sin_for_causa_motivo
            WHERE scaumot = pscaumot
              AND ctipdes = pctipdes;

      DELETE FROM sin_det_causa_motivo
            WHERE scaumot = pscaumot
              AND ctipdes = pctipdes;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001723;
   END f_del_caumot_destinatario;

   /***********************************************************************
      Eliminar de la taula sin_causa_motivo
      param  in  pscaumot : cÃ¿Â³digo de la causa/motivo
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      28/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot(pscaumot IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_del_caumot';
      vparam         VARCHAR2(500) := 'parámetros - pscaumot: ' || pscaumot;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --ComprovaciÃ¿Â³ dels parÃ¡metres d'entrada
      IF pscaumot IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Primero borramos los registro de la tabla hija sin_for_causa_motivo
      DELETE FROM sin_for_causa_motivo
            WHERE scaumot = pscaumot;

      -- Despues borramos los registros de la tabla hija sin_det_causa_motivo
      DELETE FROM sin_det_causa_motivo
            WHERE scaumot = pscaumot;

      -- Borramos todas las formulas asociadas
      DELETE FROM sin_gar_causa_motivo
            WHERE scaumot = pscaumot;

      DELETE      sin_causa_motivo
            WHERE scaumot = pscaumot;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001723;
   END f_del_caumot;

/***********************************************************************
   F_SIN_REA:    Aquesta funciÃ¿Â³ permet crear moviments d'abonament, per
                   part de les companyies de reasseguranÃ¿Â§a, en concepte dels
                   pagaments de sinistres.
                   Busca el desglos d'un pagament en seguro/riscos/garanties
                   i, per cada garantia, crida a la funciÃ¿Â³ F_PAGSINREA.
   ALLIBREA
***********************************************************************/
   FUNCTION f_sin_rea(
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      pmoneda IN eco_codmonedas.cmoneda%TYPE,
      pnsinies IN sin_siniestro.nsinies%TYPE DEFAULT NULL,
      pctippag IN sin_tramita_pago.ctippag%TYPE DEFAULT NULL,
      pfefepag IN sin_tramita_movpago.fefepag%TYPE DEFAULT NULL,
      pcpagcoa IN NUMBER DEFAULT NULL,
      pcestpag IN sin_tramita_movpago.cestpag%TYPE DEFAULT NULL)
      RETURN NUMBER IS

      codi_error     NUMBER := 0;
      w_nsinies      sin_siniestro.nsinies%TYPE;
      w_sseguro      seguros.sseguro%TYPE;
      w_nriesgo      riesgos.nriesgo%TYPE;
      w_fsinies      sin_siniestro.fsinies%TYPE;
      w_ctippag      sin_tramita_pago.ctippag%TYPE;
      w_cramo        productos.cramo%TYPE;
      w_cmodali      productos.cmodali%TYPE;
      w_ctipseg      productos.ctipseg%TYPE;
      w_ccolect      productos.ccolect%TYPE;
      w_cactivi      seguros.cactivi%TYPE;
      w_creaseg      productos.creaseg%TYPE;
      w_ctipcoa      seguros.ctipcoa%TYPE;
      w_plocal       coacuadro.ploccoa%TYPE;
      w_isinret      sin_tramita_pago_gar.isinret%TYPE;
      w_fefepag      sin_tramita_movpago.fefepag%TYPE;
      w_ctiprea      seguros.ctiprea%TYPE;
--   w_cpagcoa    NUMBER (2);
      v_cestpag      sin_tramita_movpago.cestpag%TYPE;
      hiha           NUMBER;
      -- 11845.15/01/2010.
      w_sproduc      productos.sproduc%TYPE;
      -- 21477 AVT 27-02-2012
      v_itasa        eco_tipocambio.itasa%TYPE;
      v_cmonpro      sin_tramita_pago.cmonpag%TYPE;
      v_per_pago     NUMBER;   -- 23644 AVT 25/09/2012

      -- Cursor en funcición de tipo de reserva (sÃ¿Â³lo estarÃ¡ informada la garantÃ¿Â­a cuando el tipo sea 1.-Indemnizatoria)
      CURSOR cur_gar IS
         SELECT DISTINCT ctipres, cgarant, cmonres, isinret, cmonpag, isinretpag
                    FROM sin_tramita_pago_gar
                   WHERE sidepag = psidepag;
   BEGIN

-- ES BUSCA EL NÃ¿Âº DE SINISTRE DEL PAGAMENT...
      IF pnsinies IS NOT NULL THEN
         w_nsinies := pnsinies;
         w_ctippag := pctippag;
         w_fefepag := pfefepag;

--      w_cpagcoa := pcpagcoa;
      ELSE

         BEGIN
            SELECT nsinies, ctippag, fordpag   --, cpagcoa
              INTO w_nsinies, w_ctippag, w_fefepag   --, w_cpagcoa
              FROM sin_tramita_pago
             WHERE sidepag = psidepag;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               codi_error := 104756;
               RETURN(codi_error);
            WHEN OTHERS THEN
               codi_error := 102697;
               RETURN(codi_error);
         END;
      END IF;

-- ES BUSCA EL SEGURO, EL RISC DEL SINISTRE I LA DATA DEL SINISTRE...
      BEGIN
         SELECT sseguro, nriesgo, fsinies
           INTO w_sseguro, w_nriesgo, w_fsinies
           FROM sin_siniestro
          WHERE nsinies = w_nsinies;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            codi_error := 104755;
            RETURN(codi_error);
         WHEN OTHERS THEN
            codi_error := 102694;
            RETURN(codi_error);
      END;

-- AQUI ES MIRA SI EL PRODUCTE GLOBAL ES REASSEGURA, O BE SI LA REASSEGURANÃ¿â¿¡A
-- INDIVIDUALMENT ES REASSEGURA...
      BEGIN
         SELECT cramo, cmodali, ctipseg, ccolect, cactivi, ctipcoa, ctiprea,
                sproduc
           INTO w_cramo, w_cmodali, w_ctipseg, w_ccolect, w_cactivi, w_ctipcoa, w_ctiprea,
                w_sproduc
           FROM seguros
          WHERE sseguro = w_sseguro;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            codi_error := 101903;
            RETURN(codi_error);
         WHEN OTHERS THEN
            codi_error := 101919;
            RETURN(codi_error);
      END;

      IF w_ctiprea = 2 THEN
         RETURN(0);   -- Seguro no reassegurat...
      END IF;

      -- Mantis 11845.12/2009.NMM.CRE - Ajustar reasseguranÃ¿Â§a d'estalvi .i.
      IF pac_cesionesrea.producte_reassegurable(w_sproduc) = 0 THEN
         RETURN(0);   -- Producte no reassegurat...
      END IF;

       -- AQUI ES MIRA SI L'ASSEGURANÃ¿â¿¡A ES DE COASSEGURO...
       -- Bug 23187/141771 - 03/04/2013 - AMC
      --w_plocal := 100;
      IF NVL(w_ctipcoa, 0) = 1 THEN
         BEGIN
            SELECT NVL(c.ploccoa, 100)
              INTO w_plocal
              FROM coacuadro c, seguros s
             WHERE c.sseguro = s.sseguro
               AND c.ncuacoa = s.ncuacoa
               AND s.ctipcoa <> 0
               AND s.sseguro = w_sseguro;
         EXCEPTION
            WHEN OTHERS THEN
               w_plocal := 100;   -- No hay coaseguro cedido
         END;
      ELSE
         w_plocal := 100;
      END IF;

      -- Fi Bug 23187/141771 - 03/04/2013 - AMC

      -- Es busca l'estat de l'Ã¿Âºltim moviment del pagament
      BEGIN
         SELECT cestpag
           INTO v_cestpag
           FROM sin_tramita_movpago
          WHERE sidepag = psidepag
            AND nmovpag = (SELECT MAX(nmovpag)
                             FROM sin_tramita_movpago
                            WHERE sidepag = psidepag);
      EXCEPTION
         WHEN OTHERS THEN
            v_cestpag := pcestpag;
      END;

-- ES BUSQUEN LES GARANTIES I IMPORTS AFECTADES PEL PAGAMENT...
      FOR reggar IN cur_gar LOOP

         -- 21477 - 24/02/2012 - AVT busquem la moneda del producte i la comparem amb la de la reserva i la del pagament ---
         IF pac_monedas.f_cmoneda_n(reggar.cmonres) = pac_monedas.f_moneda_producto(w_sproduc)
            OR NVL(pac_monedas.f_cmoneda_n(reggar.cmonpag), 0) = 0 THEN
            w_isinret := (reggar.isinret * w_plocal) / 100;
         ELSIF pac_monedas.f_cmoneda_n(reggar.cmonres) <>
                                                       pac_monedas.f_moneda_producto(w_sproduc)
               AND pac_monedas.f_cmoneda_n(reggar.cmonres) <>
                                                        pac_monedas.f_cmoneda_n(reggar.cmonpag) THEN
            w_isinret := (reggar.isinretpag * w_plocal) / 100;
         ELSE
            v_cmonpro := pac_monedas.f_cmoneda_t(pac_monedas.f_moneda_producto(w_sproduc));
            v_itasa := pac_eco_tipocambio.f_cambio(reggar.cmonpag, v_cmonpro, w_fefepag);
            w_isinret := f_round(NVL(reggar.isinret, 0) * v_itasa,
                                 pac_monedas.f_moneda_producto(w_sproduc));
         END IF;

         -- 21477 - 24/02/2012 - AVT  fi ----------------------------------------------------------------
         IF reggar.ctipres = 3 THEN   -- despeses sinistre
            w_creaseg := 1;   -- es reassegura sempre...
         ELSIF reggar.ctipres = 1 THEN
            -- BUG 11100 - 16/09/2009 - FAL - Crida a la pac_cesionesrea.f_gar_rea per si garantia reasegurable
            codi_error := pac_cesionesrea.f_gar_rea(w_cramo, w_cmodali, w_ctipseg, w_ccolect,
                                                    w_cactivi, reggar.cgarant, w_creaseg);

            IF codi_error <> 0 THEN
               RETURN codi_error;
            END IF;
--FI BUG 11100 - 16/09/2009 Ã¿Â¿ FAL
         END IF;

         IF w_creaseg <> 0 THEN   -- GarantÃ¿Â­a que es reassegura...
-- BUG 11051 - 22/09/2009 - FAL - Afegir control de existÃ¿Â¨ncia del pagament a PAGOSSINCES

            SELECT COUNT(*)
              INTO hiha
              FROM pagossinces
             WHERE sidepag = psidepag;

            IF hiha = 0 THEN
               -- 23644 - AVT - 25/09/2012 s'aplica el percentatge corresponen a la reserva - reserva matemÃ¿Â tica
               IF NVL(f_pargaranpro_v(w_cramo, w_cmodali, w_ctipseg, w_ccolect, w_cactivi,
                                      reggar.cgarant, 'CALCULA_PROVI'),
                      0) = 1 THEN
                  -- Bug 23644 -- ECP -- 14/01/2013 Se agrega el parÃ¡metro reggar.cgarant a la funcición pac_propio.f_calc_perc_reserva_pm
                  --v_per_pago := pac_propio.f_calc_perc_reserva_pm(w_sseguro, psidepag, 2);
                  v_per_pago := pac_propio.f_calc_perc_reserva_pm(w_sseguro, psidepag, 2,
                                                                  reggar.cgarant);

                  IF v_per_pago > 0 THEN
                     w_isinret := w_isinret * v_per_pago;
                  END IF;
               END IF;

-- 23644 - AVT - 25/09/2012 FI
               codi_error := f_sin_pagrea(w_sseguro, w_nriesgo, reggar.cgarant, reggar.ctipres,
                                          w_nsinies, w_fsinies, w_isinret, pmoneda, w_ctippag,
                                          v_cestpag, w_fefepag, psidepag);

            ELSE
               p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_sin_rea', 1,
                           'parámetros - psidepag:' || psidepag,
                           'Pago ya existe en pagossinces');
            END IF;
--FI BUG 11051 - 22/09/2009 Ã¿Â¿ FAL
            IF codi_error = 105595 THEN   -- No sÃ¿Â´ha trobat cap cessiÃ¿Â³ de prima.
--           ALTA A TAULA...
               BEGIN
                  INSERT INTO pagossinces
                              (sidepag, nsinies, fsinies, sseguro, nriesgo,
                               cgarant, ctippag, fefepag, isinret,
                               fgenera, crevisi, frevisi, cusuari)
                       VALUES (psidepag, w_nsinies, w_fsinies, w_sseguro, w_nriesgo,
                               reggar.cgarant, w_ctippag, w_fefepag, reggar.isinret,
                               f_sysdate, 1, NULL, NULL);
               EXCEPTION
                  WHEN OTHERS THEN
                     codi_error := 105612;
                     RETURN(codi_error);
               END;

               codi_error := 0;
            ELSIF codi_error <> 0 THEN
               RETURN(codi_error);
            END IF;
         END IF;
      END LOOP;

      RETURN(codi_error);
   END f_sin_rea; 

/***********************************************************************
   F_SIN_PAGREA: Aquesta funciÃƒÂ³ permet crear moviments d'abonament, per
                   part de les companyies de reasseguranÃƒÂ§a, en concepte dels
                   pagaments de sinistres.
                   Aquests moviments queden a CESIONESREA.
                   Es realitzen a partir de les dades i percentatges de
                   cessiÃƒÂ³ que figuren en els moviments de cessions
                   efectuades, sempre en funciÃƒÂ³ de les dates cobertes per la
                   cessiÃƒÂ³ amb relaciÃƒÂ³ a la data en que s'ha produit el
                   sinistre.
                   Primer buscarem cessions de igual garantÃƒÂ­a i, si no en
                   trobem, buscarem cessions del risc afectat amb la garantÃƒÂ­a
                   a NULL.
                   Si pctippag = 3 (anul.laciÃƒÂ³ pagament) o = 7 (recobrament),
                   es crea un moviment de signe contrari.
               Els tipus o motius de moviment considerats (cessions) son:
                   01 - regularitzaciÃƒÂ³
                   02 - pagaments de sinistres
                   03 - nova producciÃƒÂ³
                   04 - suplement
                   05 - cartera
                   09 - rehabilitaciÃƒÂ³ pÃƒÂ²lissa
                   40 - canvi data renovaciÃƒÂ³
               Casos especials:
                  - Si el pagament de sinistre ÃƒÂ©s d'una reserva tipus despeses (ctipres=3),
                    no es tÃƒÂ© en compte la garantia de la cessiÃƒÂ³ a CESIONESREA.
   ALLIBREA
***********************************************************************/
   FUNCTION f_sin_pagrea(
      psseguro IN seguros.sseguro%TYPE,
      pnriesgo IN riesgos.nriesgo%TYPE,
      pcgarant IN garanseg.cgarant%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pfsinies IN sin_siniestro.fsinies%TYPE,
      pimportsin IN sin_tramita_pago.isinret%TYPE,
      pmoneda IN VARCHAR2,
      pctippag IN sin_tramita_pago.ctippag%TYPE,
      pcestpag IN sin_tramita_movpago.cestpag%TYPE,
      pefepag IN sin_tramita_movpago.fefepag%TYPE,
      psidepag IN sin_tramita_pago.sidepag%TYPE)
      RETURN NUMBER IS
      codi_error     NUMBER(10) := 0;
      w_scesrea      cesionesrea.scesrea%TYPE;
      w_ncesion      cesionesrea.ncesion%TYPE;
      w_icesion      cesionesrea.icesion%TYPE;
      w_pcesion      cesionesrea.pcesion%TYPE;
      w_trovat       NUMBER(1);
      w_cgarant      garanseg.cgarant%TYPE;
      avui           DATE;
      lcforpag       seguros.cforpag%TYPE;
      lsproduc       seguros.sproduc%TYPE;
      vnmovigen      NUMBER;
      --
      w_cempres      NUMBER;
      w_cramo        seguros.cramo%TYPE;
      w_cmodali      seguros.cmodali%TYPE;
      w_ctipseg      seguros.ctipseg%TYPE;
      w_ccolect      seguros.ccolect%TYPE;
      w_cactivi      seguros.cactivi%TYPE;
      w_scontra      contratos.scontra%TYPE;
      w_nversio      contratos.nversio%TYPE;
      w_ipleno       NUMBER;
      w_icapaci      NUMBER;
      w_cdetces      NUMBER;
      w_nerr         NUMBER;

      CURSOR cur_cesion1 IS
         SELECT *
           FROM cesionesrea
          WHERE sseguro = psseguro
            AND nriesgo = pnriesgo
            AND(cgarant IS NOT NULL
                AND cgarant = pcgarant)
            AND(cgenera IN(01, 03, 04, 05, 09, 40))
            AND fefecto <= pfsinies
            AND fvencim > pfsinies
            AND(fanulac > pfsinies
                OR fanulac IS NULL)
            AND(fregula > pfsinies
                OR fregula IS NULL);

      CURSOR cur_cesion2(pscontra IN NUMBER, pnversio IN NUMBER) IS
         SELECT *
           FROM cesionesrea
          WHERE sseguro = psseguro
            AND nriesgo = pnriesgo
            AND cgarant IS NULL
            AND(cgenera IN(01, 03, 04, 05, 09))
            AND fefecto <= pfsinies
            AND fvencim > pfsinies
            AND(fanulac > pfsinies
                OR fanulac IS NULL)
            AND(fregula > pfsinies
                OR fregula IS NULL)
            AND scontra = pscontra
            AND nversio = pnversio
            --INI IAXIS BUG 11914 AABG: Ajuste para tomar el maximo movimiento
            AND nmovimi = (SELECT MAX(cr.nmovimi) FROM cesionesrea cr WHERE sseguro = psseguro);
            --FIN IAXIS BUG 11914 AABG: Ajuste para tomar el maximo movimiento

      CURSOR cur_garant IS   -- Cursor per la garantia 9999...
         SELECT UNIQUE cgarant
                  FROM cesionesrea
                 WHERE sseguro = psseguro
                   AND nriesgo = pnriesgo
                   AND(cgenera IN(01, 03, 04, 05, 09))
                   AND fefecto <= pfsinies
                   AND fvencim > pfsinies
                   AND(fanulac > pfsinies
                       OR fanulac IS NULL)
                   AND(fregula > pfsinies
                       OR fregula IS NULL);

      CURSOR cur_cesion6 IS   -- Cursor per la garantia 9999...
         SELECT *
           FROM cesionesrea
          WHERE sseguro = psseguro
            AND nriesgo = pnriesgo
            AND cgarant = w_cgarant
            AND(cgenera IN(01, 03, 04, 05, 09))
            AND fefecto <= pfsinies
            AND fvencim > pfsinies
            AND(fanulac > pfsinies
                OR fanulac IS NULL)
            AND(fregula > pfsinies
                OR fregula IS NULL);
   BEGIN
      avui := f_sysdate;
      w_cempres := f_parinstalacion_n('EMPRESADEF');

      BEGIN
         SELECT cforpag, sproduc, cramo, cmodali, ctipseg, ccolect, cactivi
           INTO lcforpag, lsproduc, w_cramo, w_cmodali, w_ctipseg, w_ccolect, w_cactivi
           FROM seguros
          WHERE sseguro = psseguro;
      EXCEPTION
         WHEN OTHERS THEN
            RETURN 101919;
      END;

      -- Bug 13312 - 09/03/2010 - AMC
      SELECT NVL(MAX(nmovigen), 0)
        INTO vnmovigen
        FROM cesionesrea
       WHERE nsinies = pnsinies
         AND sidepag = psidepag;

-- 31318 AVT 13/05/2014 --------------------------------------------------------------------
-- Es treu el tractament de "Despeses" diferenciat. NomÃƒÂ©s es gestionarÃƒÂ  la reassegurnaÃƒÂ§a ---
-- dels pagaments sobre garanties (on podem mirar si es reassegura o no per pcgarant     ---
--------------------------------------------------------------------------------------------
      IF NVL(pcgarant, 0) > 0 THEN
         w_trovat := 0;

         FOR regcesion IN cur_cesion1 LOOP
            w_trovat := 1;

            SELECT scesrea.NEXTVAL
              INTO w_scesrea
              FROM DUAL;

            -- Faltaria tener en cuenta la moneda
            w_icesion := (pimportsin * regcesion.pcesion) / 100;
            w_icesion := f_round_forpag(w_icesion, lcforpag,
                                        pac_monedas.f_moneda_producto(lsproduc), lsproduc);

            IF (pctippag = 2
                AND pcestpag = 8)
               OR pctippag = 7 THEN
               w_icesion := w_icesion * -1;
            END IF;

            BEGIN
            
               INSERT INTO cesionesrea
                           (scesrea, ncesion, icesion, icapces, sseguro,
                            nversio, scontra, ctramo,
                            sfacult, nriesgo, scumulo,
                            cgarant, spleno, ccalif1,
                            ccalif2, nmovimi, nsinies, fefecto, fvencim,
                            pcesion, sproces, cgenera, fgenera, sidepag,
                            nmovigen)
                    VALUES (w_scesrea, regcesion.ncesion, w_icesion, 0, psseguro,
                            regcesion.nversio, regcesion.scontra, regcesion.ctramo,
                            regcesion.sfacult, pnriesgo, regcesion.scumulo,
                            regcesion.cgarant, regcesion.spleno, regcesion.ccalif1,
                            regcesion.ccalif2, NULL, pnsinies, pefepag, pefepag,
                            regcesion.pcesion, regcesion.scesrea, 02, avui, psidepag,
                            vnmovigen + 1);
            EXCEPTION
               WHEN OTHERS THEN
                  codi_error := 104747;
                  RETURN(codi_error);
            END;
         END LOOP;

         IF w_trovat = 0 THEN
            --Se busca por cesiones que agrupan garantÃƒÂ­as
               /*obtenemos el contrato que ampara la garantÃƒÂ­a - primero un contrato proporcional*/
               --motivo (3: Reaseguro Prop. 11: Reaseguro XL)
            w_nerr := f_buscacontrato(psseguro, pfsinies, w_cempres, pcgarant, w_cramo,
                                      w_cmodali, w_ctipseg, w_ccolect, w_cactivi, 3,
                                      w_scontra, w_nversio, w_ipleno, w_icapaci, w_cdetces, 0);

            IF w_nerr = 104485 THEN
               w_nerr := f_buscacontrato(psseguro, pfsinies, w_cempres, pcgarant, w_cramo,
                                         w_cmodali, w_ctipseg, w_ccolect, w_cactivi, 11,
                                         w_scontra, w_nversio, w_ipleno, w_icapaci, w_cdetces,
                                         0);
            END IF;

            IF w_nerr <> 0 THEN
               codi_error := w_nerr;
               RETURN(codi_error);
            END IF;
            
            FOR regcesion IN cur_cesion2(w_scontra, w_nversio) LOOP
               w_trovat := 1;

               SELECT scesrea.NEXTVAL
                 INTO w_scesrea
                 FROM DUAL;

               -- Faltaria tener en cuenta la moneda
               w_icesion := (pimportsin * regcesion.pcesion) / 100;
               w_icesion := f_round_forpag(w_icesion, lcforpag,
                                           pac_monedas.f_moneda_producto(lsproduc), lsproduc);

               IF (pctippag = 2
                   AND pcestpag = 8)
                  OR pctippag = 7 THEN
                  w_icesion := w_icesion * -1;
               END IF;

               BEGIN
 			   
                  INSERT INTO cesionesrea
                              (scesrea, ncesion, icesion, icapces, sseguro,
                               nversio, scontra, ctramo,
                               sfacult, nriesgo, scumulo, cgarant,
                               spleno, ccalif1, ccalif2, nmovimi,
                               nsinies, fefecto, fvencim, pcesion,
                               sproces, cgenera, fgenera, sidepag, nmovigen)
                       VALUES (w_scesrea, regcesion.ncesion, w_icesion, 0, psseguro,
                               regcesion.nversio, regcesion.scontra, regcesion.ctramo,
                               regcesion.sfacult, pnriesgo, regcesion.scumulo, pcgarant,
                               regcesion.spleno, regcesion.ccalif1, regcesion.ccalif2, NULL,
                               pnsinies, pefepag, pefepag, regcesion.pcesion,
                               regcesion.scesrea, 02, avui, psidepag, vnmovigen + 1);
               EXCEPTION
                  WHEN OTHERS THEN
                     codi_error := 104747;
                     RETURN(codi_error);
               END;
            END LOOP;
         END IF;
      END IF;

      IF w_trovat = 0 THEN   -- Si no es trova cap cessiÃƒÂ³ en
         codi_error := 105595;   -- positiu, es torna situaciÃƒÂ³ especial...
      END IF;

      RETURN(codi_error);
   END f_sin_pagrea;

   /***********************************************************************
     FUNCTION F_TRAMITA_RESERVA:
      Devuelve la reserva pendiente de una tramitacición
      param  in  pnsinies : NÃ¿Âºmero Siniestro
      param  in  pntramit : NÃ¿Âºmero Tramitacición
      param  in  pctipres : CÃ¿Â³digo Tipo Reserva
      param  in  pcgarant : CÃ¿Â³digo GarantÃ¿Â­a
      param  in  pcmonres : Moneda de la reserva
      param  in  pdata    : Fecha
      param  out pireserva: Importe Reserva Pendiente
      param  in  pidres   : Identificador de reserva
      param  in  prestot   :
      param  in  pmoneda_origen :
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      Bug 31294 - 04/07/2014 - JTT: AÃ¿Â±adimos el parametro pidres
   ***********************************************************************/
   FUNCTION f_tramita_reserva(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN sin_tramitacion.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pctipgas IN sin_tramita_reserva.ctipgas%TYPE,   -- 26108
      pcgarant IN codigaran.cgarant%TYPE,
      pcmonres IN VARCHAR2,   -- BUG 18423/104212 - 25/01/2012 - JMP -
      pdata IN DATE,
      pireserva OUT NUMBER,
      pidres IN sin_tramita_reserva.idres%TYPE,
      prestot IN NUMBER DEFAULT 0,   --Bug.: 21715 - 28/03/2012 - ICV
      pmoneda_origen IN NUMBER DEFAULT 0)
      -- 27847 - AVT - 05/08/2013 separem el import original del comptable
   RETURN NUMBER IS
      v_sseguro      seguros.sseguro%TYPE;
      v_sproduc      seguros.sproduc%TYPE;
      v_cactivi      seguros.cactivi%TYPE;
      v_fnotifi      siniestros.fnotifi%TYPE;
      v_cramo        seguros.cramo%TYPE;
      v_cmodali      seguros.cmodali%TYPE;
      v_ctipseg      seguros.ctipseg%TYPE;
      v_ccolect      seguros.ccolect%TYPE;
      v_cvalpar      pargaranpro.cvalpar%TYPE;
      v_error        NUMBER(10);
      v_resconsu     NUMBER := 0;
      v_resconsu_moncia NUMBER := 0;   -- 27847 - AVT - 05/08/2013
      v_ireserva_moncia NUMBER := 0;   -- 27847 - AVT - 05/08/2013
   BEGIN
      -- Bug 8744 - 03/03/2009 - JRB - Se cambia la forma de recuperar la valoracición cuando el producto es baja
      -- Bug 9685 - APD - 11/05/2009 - en lugar de coger la actividad de la tabla seguros, llamar a la funcición pac_seguros.ff_get_actividad
      SELECT seg.sseguro, sproduc, pac_seguros.ff_get_actividad(ss.sseguro, ss.nriesgo),
             ss.fnotifi, seg.cramo, seg.cmodali, seg.ctipseg, seg.ccolect, seg.cactivi
        INTO v_sseguro, v_sproduc, v_cactivi,
             v_fnotifi, v_cramo, v_cmodali, v_ctipseg, v_ccolect, v_cactivi
        FROM seguros seg, sin_siniestro ss
       WHERE ss.nsinies = pnsinies
         AND seg.sseguro = ss.sseguro;

      -- Bug 9685 - APD - 11/05/2009 - fin
      v_error := f_pargaranpro(v_cramo, v_cmodali, v_ctipseg, v_ccolect, v_cactivi, pcgarant,
                               'BAJA', v_cvalpar);

      IF NVL(v_cvalpar, 0) <> 1 THEN
         -- INI -IAXIS-13133 -27/04/2020. Se colocan los NVL
         SELECT NVL(str.ireserva,0), NVL(str.ireserva_moncia,0),
                NVL(str.ipago,0) - NVL(str.irecobro,0) - NVL(str.iingreso,0) iresconsu,
                NVL(str.ipago_moncia,0) - NVL(str.irecobro_moncia,0) - NVL(str.iingreso_moncia,0) iresconsu_moncia
           INTO pireserva, v_ireserva_moncia,   -- 27847 - AVT - 05/08/2013 separem el import original del comptable
                v_resconsu,
                v_resconsu_moncia   -- 27847 - AVT - 05/08/2013 separem el import original del comptable
           FROM sin_tramita_reserva str
          WHERE str.nsinies = pnsinies
            AND str.ntramit = pntramit
            AND str.ctipres = pctipres
            AND NVL(str.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
            AND(pcgarant IS NULL
                OR str.cgarant = pcgarant)
            AND str.cmonres = pcmonres
            -- BUG 18423/104212 - 25/01/2012 - JMP -
            AND str.nmovres = (SELECT MAX(nmovres)
                                 FROM sin_tramita_reserva
                                WHERE nsinies = str.nsinies
                                  AND ntramit = str.ntramit
                                  AND ctipres = str.ctipres
                                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                                  AND(pcgarant IS NULL
                                      OR cgarant = str.cgarant)
                                  AND cmonres = str.cmonres
                                  -- BUG 18423/104212 - 25/01/2012 - JMP -
                                  AND(pdata IS NULL
                                      OR TRUNC(fmovres) <= pdata));
        -- FIN -IAXIS-13133 -27/04/2020.
      ELSE
         SELECT NVL(SUM(str.ireserva), 0) ireserva,
                NVL(SUM(str.ireserva_moncia), 0) ireserva_moncia,
                NVL(SUM(str.ipago - str.irecobro - str.iingreso), 0) iresconsu,
                NVL(SUM(str.ipago_moncia - str.irecobro_moncia - str.iingreso_moncia), 0)
                                                                              iresconsu_moncia
           INTO pireserva,
                v_ireserva_moncia,   -- 27847 - AVT - 05/08/2013 separem el import original del comptable
                v_resconsu,
                v_resconsu_moncia   -- 27847 - AVT - 05/08/2013 separem el import original del comptable
           FROM sin_tramita_reserva str
          WHERE str.nsinies = pnsinies
            AND str.ntramit = pntramit
            AND str.ctipres = pctipres
            AND NVL(str.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
            AND(pcgarant IS NULL
                OR str.cgarant = pcgarant)
            AND str.cmonres = pcmonres
            AND str.idres = pidres   -- Bug 31294
            AND str.nmovres = (SELECT MAX(nmovres)
                                 FROM sin_tramita_reserva
                                WHERE nsinies = str.nsinies
                                  AND ntramit = str.ntramit
                                  AND ctipres = str.ctipres
                                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                                  AND(pcgarant IS NULL
                                      OR cgarant = str.cgarant)
                                  AND cmonres = str.cmonres
                                  AND idres = str.idres);   -- Bug 31294
      END IF;

      -- 27847 - AVT - 05/08/2013 separem el import original del comptable
      IF NVL(pmoneda_origen, 0) = 1 THEN
         --Bug.: 21715 - 28/03/2012 - ICV
         IF NVL(prestot, 0) = 1 THEN
            pireserva := pireserva + v_resconsu;
         ELSE
            pireserva := pireserva;
         END IF;
      ELSE
         --Bug.: 21715 - 28/03/2012 - ICV
         IF NVL(prestot, 0) = 1 THEN
            --Bug.: 26214 - 09/12/2013 - DCG
--            pireserva := NVL(pireserva, v_ireserva_moncia)
--                         + NVL(v_resconsu, v_resconsu_moncia);
            pireserva := NVL(v_ireserva_moncia, pireserva)
                         + NVL(v_resconsu_moncia, v_resconsu);
         ELSE
--            pireserva := NVL(pireserva, v_ireserva_moncia);
            pireserva := NVL(v_ireserva_moncia, pireserva);
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         pireserva := 0;
         p_Control_Error ('PAC_SINIESTROS','F_TRAMITA_RESERVA','PASO 7777_1,
         pnsinies:'||pnsinies||' pntramit:'||pntramit||' pctipres:'||pctipres||
         ' pctipgas:'||pctipgas||' pcgarant:'||pcgarant||' pcmonres:'||pcmonres);
         -- INICIO INFORCOL 18-11-2019
         RETURN 0;
         -- FIN INFORCOL 18-11-2019
      WHEN OTHERS THEN
         pireserva := 0;
         RETURN SQLCODE;
   END f_tramita_reserva;

   /***********************************************************************
      FUNCTION F_SIN_RESERVA:
       Devuelve la reserva pendiente de un siniestro.
       param  in  pnsinies : Número Siniestro
       param  in  pdata    : Fecha
       param  out pireserva: Importe Reserva Pendiente
       return              : 0 -> Tot correcte
                             1 -> S'ha produit un error
    ***********************************************************************/
   FUNCTION f_sin_reserva(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pdata IN DATE,
      pireserva OUT NUMBER,
      prestot IN NUMBER DEFAULT 0,   --Bug.: 21715 - 28/03/2012 - ICV
      pcgarant IN NUMBER DEFAULT NULL   -- bug 0035670 - 08/05/2015 - JMF
                                     )
      RETURN NUMBER IS
      vnerror        NUMBER(10);
      vireserva      sin_tramita_reserva.ireserva%TYPE;

      -- Bug 14200 - 22/04/2010 - ASN
      -- Bug 31294 - 04/07/2014 - JTT: Recuperamos el campo idres para llamar a f_tramita_reserva
      CURSOR c_tramita IS
         SELECT DISTINCT ntramit, ctipres, cgarant, cmonres, ctipgas, idres
                    FROM sin_tramita_reserva
                   WHERE nsinies = pnsinies
                     AND(pcgarant IS NULL
                         OR cgarant = pcgarant)
                ORDER BY ntramit, ctipres, cgarant;
   --Fi Bug 14200 - 22/04/2010 - ASN
   BEGIN
      FOR v_tramita IN c_tramita LOOP
         vnerror := pac_siniestros.f_tramita_reserva(pnsinies, v_tramita.ntramit,
                                                     v_tramita.ctipres, v_tramita.ctipgas,   -- 26108
                                                     v_tramita.cgarant, v_tramita.cmonres,
                                                     pdata, vireserva, v_tramita.idres,   -- 31294
                                                     prestot);
         pireserva := NVL(pireserva, 0) + NVL(vireserva, 0);
      END LOOP;

      RETURN 0;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         pireserva := 0;
         RETURN 101667;
      WHEN OTHERS THEN
         pireserva := 0;
         RETURN SQLCODE;
   END f_sin_reserva;

   /***********************************************************************
     FUNCTION
      Acciones a realizar si finalizamos ultima tramitación.
      param in pnsinies : Número siniestro
      param in pntramit : Número tramitación
      param in pcempres : Codigo empresa.
      return            : 0 -> Tot correcte
                          1 -> S'ha produit un error
   -- Bug 0022372 - 01/06/2012 - JMF
   ***********************************************************************/
   FUNCTION f_accult_tramitacion(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pcempres IN NUMBER,
      pfsinfin IN DATE,
      pccauest IN NUMBER,
      pcesttra IN NUMBER)   --bug 29989/165377;NSS;23-04-2014
      RETURN NUMBER IS
      vobj           VARCHAR2(100) := 'PAC_SINIESTROS.f_accult_tramitacion';
      vpar           VARCHAR2(500) := 's=' || pnsinies || ' t=' || pntramit;
      vpas           NUMBER := 1;

      CURSOR c1 IS
         SELECT a.ntramit, a.ntramte, b.nmovtra, b.cesttra
           FROM sin_tramitacion a, sin_tramita_movimiento b
          WHERE a.nsinies = pnsinies
            AND a.ntramit <> pntramit
            AND b.nsinies = a.nsinies
            AND b.ntramit = a.ntramit
            AND b.nmovtra = (SELECT MAX(b2.nmovtra)
                               FROM sin_tramita_movimiento b2
                              WHERE b2.nsinies = b.nsinies
                                AND b2.ntramit = b.ntramit);

      v_tra9999      NUMBER(1);
      v_abierto      NUMBER(1);
      vnerror        NUMBER;
      vnmovtra       sin_tramita_movimiento.nmovtra%TYPE;
      vcsubtra       sin_tramita_movimiento.csubtra%TYPE;
      vcunitra       sin_tramita_movimiento.cunitra%TYPE;
      vctramitad     sin_tramita_movimiento.ctramitad%TYPE;
      vsproduc       seguros.sproduc%TYPE;
      vcestsin_ant   sin_movsiniestro.cestsin%TYPE;
      vfresfin       sin_tramita_reserva.fresfin%TYPE;
      vfefepag       sin_tramita_pago.fordpag%TYPE;
      vauxcont       NUMBER;
      vsseguro       seguros.sseguro%TYPE;
      vnmovsin       sin_movsiniestro.nmovsin%TYPE;
      v_cagente      redcomercial.cagente%TYPE;
      v_ctipage      redcomercial.ctipage%TYPE;
      vcidioma       seguros.cidioma%TYPE;
      vidapunte      NUMBER;

      CURSOR c_movimiento(p_nsinies IN sin_siniestro.nsinies%TYPE) IS
         SELECT   ntramit, NVL(MAX(nmovtra) + 1, 0) nnmovtra
             FROM sin_tramita_movimiento
            WHERE nsinies = p_nsinies
         GROUP BY ntramit;

      CURSOR c_reserva(
         p_nsinies IN sin_siniestro.nsinies%TYPE,
         p_ntramit IN sin_tramitacion.ntramit%TYPE) IS
         SELECT DISTINCT ctipres, cgarant, cmonres, ctipgas   -- 26108
                    FROM sin_tramita_reserva
                   WHERE nsinies = p_nsinies
                     AND ntramit = p_ntramit;
   BEGIN
      -- ini Bug 0022372 - 01/06/2012 - JMF
      vpas := 1000;
      v_tra9999 := 0;
      v_abierto := 0;
      vpas := 1010;

      FOR f1 IN c1 LOOP
         IF f1.cesttra IN(0, 4)
            AND f1.ntramte = 9999
            AND f1.ntramit = 0 THEN
            v_tra9999 := 1;
         ELSIF f1.cesttra IN(0, 4) THEN
            v_abierto := 1;
         END IF;
      END LOOP;

      vpas := 1020;

      IF v_abierto = 0
         AND v_tra9999 = 1 THEN
         -- Si estamos finalizando la ultima tramitación, pero queda la 9999 abierta, entonces cerramos tramitación.
         vpas := 1030;
         -- 23101:ASN:28/008/2012 ini
         /*
         vnerror := pac_siniestros.f_get_tramitador_defecto(pcempres, f_user, NULL, NULL,
                                                            NULL, pnsinies, NULL,   -- 22108:ASN:04/06/2012
                                                            pntramit, vcunitra, vctramitad);

         IF NVL(vnerror, 99999) > 1 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas, vpar || ' e=' || pcempres,
                        'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;
         */
         vnerror := pac_siniestros.f_get_tramitador(pnsinies, NULL, pntramit, vcunitra,
                                                    vctramitad);

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas, vpar || ' e=' || pcempres,
                        'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;

         -- 23101:ASN:28/008/2012 fin
         vnerror := 0;
         vnmovtra := NULL;
         -- Finalizo tramitación con 1-Liquidación siniestro
         vpas := 1040;
         vnerror := pac_siniestros.f_ins_tramita_movimiento(pnsinies, 0, vcunitra, vctramitad,
                                                            1, vcsubtra, f_sysdate, vnmovtra,
                                                            1);

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas,
                        vpar || ' u=' || vcunitra || ' t=' || vctramitad,
                        'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;
      END IF;

      vpas := 1050;

      IF v_abierto = 0 THEN
         -- Si estamos finalizando la ultima tramitación, entonces cerramos siniestro.
         vpas := 1060;
         -- 23101:ASN:28/08/2012 ini
         /*
         vnerror := pac_siniestros.f_get_tramitador_defecto(pcempres, f_user, NULL, NULL,
                                                            NULL, pnsinies, NULL,   -- 22108:ASN:04/06/2012
                                                            pntramit, vcunitra, vctramitad);

         IF NVL(vnerror, 99999) > 1 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas, vpar || ' e=' || pcempres,
                        'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;
         */
         vnerror := pac_siniestros.f_get_tramitador(pnsinies, NULL, pntramit, vcunitra,
                                                    vctramitad);

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas, vpar || ' e=' || pcempres,
                        'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;

         -- 23101:ASN:28/08/2012 fin
         vpas := 1070;
         vnerror :=
            pac_siniestros.f_estado_siniestro(pnsinies, pcesttra,   --bug 29989/165377;NSS;23-04-2014
                                              pccauest, vcunitra, vctramitad, NULL, f_sysdate,
                                              NULL, NULL);

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, 'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;
      END IF;

      vpas := 1310;
      -- fin Bug 0022372 - 01/06/2012 - JMF
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, SQLCODE || ' ' || SQLERRM);
         RETURN 9903658;
   END f_accult_tramitacion;

   /***********************************************************************
     FUNCTION F_ESTADO_TRAMITACION:
      Cambia el estado de una tramitación
      param in pnsinies : Número siniestro
      param in pntramit : Número tramitación
      param in pcesttra : CÃ¿Â³digo estado
      param in pciesini : Indica si viene del cierre de siniestro (0=No, 1=Si).
      return            : 0 -> Tot correcte
                          1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
      Bug 12298 - 15/12/2009 - AMC
      -- Bug 0022906 - 17/07/2012 - JMF: pciesini
   ***********************************************************************/
   FUNCTION f_estado_tramitacion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pcesttra IN NUMBER,
      porigen IN VARCHAR2 DEFAULT NULL,
      pccauest IN NUMBER DEFAULT NULL,
      pciesini IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      -- ini Bug 0020765 - 13/01/2012 - JMF
      vobj           VARCHAR2(100) := 'pac_siniestros.f_estado_tramitacion';
      vpar           VARCHAR2(500)
         := 's=' || pnsinies || ' t=' || pntramit || ' e=' || pcesttra || ' o=' || porigen
            || ' c=' || pccauest;
      vpas           NUMBER := 1;
      vsproduc       seguros.sproduc%TYPE;
      -- fin Bug 0020765 - 13/01/2012 - JMF
      vnerror        NUMBER(10);
      vcinform       sin_tramitacion.cinform%TYPE;
      vcontreserva   NUMBER(5);
      vpagopendiente NUMBER(5);
      vireserva      sin_tramita_reserva.ireserva%TYPE;
      reg_reserva    sin_tramita_reserva%ROWTYPE;
      vnmovtra       sin_tramita_movimiento.nmovtra%TYPE;
      vcunitra       sin_tramita_movimiento.cunitra%TYPE;
      vctramitad     sin_tramita_movimiento.ctramitad%TYPE;
      vcsubtra       sin_tramita_movimiento.csubtra%TYPE;
      vcempres       empresas.cempres%TYPE;
      vnmovres       sin_tramita_reserva.nmovres%TYPE;
      vcesttra       sin_tramita_movimiento.cesttra%TYPE;
      vcont          NUMBER;
      vhaypagos      NUMBER;
      vcmovres       sin_tramita_reserva.cmovres%TYPE;   --Bug 31294/174788:NSS:22/05/2014
      vcesttra_ant   sin_tramita_movimiento.cesttra%TYPE;   --29495/176814:NSS:05/06/2014

      -- Bug 11945 - 16/12/2009 - AMC
      CURSOR c_res IS
         SELECT nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres, cmonres,
                ireserva, ipago, iingreso, irecobro, icaprie, ipenali, fresini, fresfin,
                fultpag, sidepag, sproces, fcontab, cusualt, falta, cusumod, fmodifi, iprerec,
                ctipgas, ifranq,   --Bug 27059:NSS:03/06/2013
                                ndias   --Bug 27487/159742:NSS:26/11/2013
           FROM sin_tramita_reserva str
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND(ctipres, NVL(ctipgas, -1),   --26108
                                          NVL(cgarant, -1), cmonres, nmovres) IN(
                  SELECT   ctipres, NVL(ctipgas, -1), NVL(cgarant, -1), cmonres,
                           MAX(nmovres)   -- 26108
                      FROM sin_tramita_reserva
                     WHERE nsinies = str.nsinies
                       AND ntramit = str.ntramit
                  GROUP BY ctipres, ctipgas,   -- 26108
                                            cgarant, cmonres);
   --Fi Bug 11945 - 16/12/2009 - AMC
   BEGIN
      vpas := 2;

      --ini bug 29495/176814:NSS:05/06/2014
      BEGIN
         SELECT cesttra
           INTO vcesttra_ant
           FROM sin_tramita_movimiento
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND nmovtra = (SELECT MAX(nmovtra)
                             FROM sin_tramita_movimiento
                            WHERE nsinies = pnsinies
                              AND ntramit = pntramit);
      EXCEPTION
         WHEN OTHERS THEN
            vcesttra_ant := NULL;
      END;

      IF vcesttra_ant = pcesttra THEN
         RETURN 0;
      END IF;

      --fin bug 29495/176814:NSS:05/06/2014

      -- ini Bug 0020765 - 13/01/2012 - JMF
      IF pcesttra = 1 THEN   --Estado Finalizado
         SELECT b.sproduc
           INTO vsproduc
           FROM sin_siniestro a, seguros b
          WHERE a.nsinies = pnsinies
            AND b.sseguro = a.sseguro;

         vpas := 3;

		 IF NVL(f_parproductos_v(vsproduc, 'SIN_VALAGEPROGRAM'), 0) = 1 and pntramit=0 THEN
			--
			 -- Validamos que no tenga tareas en estado pendiente.
			 --
			 SELECT count(*) into vnerror
			   FROM agd_movapunte x
			  WHERE idapunte IN (SELECT idapunte
								   FROM agd_agenda
								  WHERE tclagd = pnsinies AND ntramit = 0)
								  AND nmovapu = (SELECT MAX (nmovapu)
									FROM agd_movapunte
								   WHERE idapunte = x.idapunte)
				   AND cestapu = 0;

			 IF vnerror <> 0 THEN
				-- No cumple tiene tareas pendientes
				vnerror := 89906274;
				RETURN vnerror;
			 ELSE
				vnerror := NULL;
			 END IF;

			 --
			 -- Validamos que no tenga tramitaciones abiertas.
			 --
			 select count(*) into vnerror from sin_tramita_movimiento sm where ntramit<>0
			and (sm.nmovtra,sm.ntramit) in (select max(nmovtra),ntramit from sin_tramita_movimiento where  sm.ntramit=ntramit and sm.nsinies=nsinies group by ntramit,nsinies)
			and cesttra<>1 and nsinies=pnsinies;

			 IF vnerror <> 0 THEN
				-- No cumple no tiene todas sus tramitaciones excepto la general finalizadas
				vnerror := 89908016;
				RETURN vnerror;
			 ELSE
				vnerror := NULL;
			 END IF;
		END IF;

         --
         -- Validamos si tiene apuntes abiertos.
         --
         IF NVL(f_parproductos_v(vsproduc, 'SIN_VALAGEPROGRAM'), 0) = 1 THEN
            SELECT COUNT(1)
              INTO vnerror
              FROM agd_observaciones ao, agd_movobs am
             WHERE ao.nsinies = pnsinies
               AND ao.ntramit = pntramit
               AND ao.ctipagd = 5   -- tramita
               AND am.cempres = ao.cempres
               AND am.idobs = ao.idobs
               AND am.nmovobs = (SELECT MAX(am2.nmovobs)
                                   FROM agd_movobs am2
                                  WHERE am2.cempres = am.cempres
                                    AND am2.idobs = am.idobs)
               AND am.cestobs = 0;

            IF vnerror > 0 THEN
               -- Existen apuntes agenda pendientes
               vnerror := 9903073;
               RETURN vnerror;
            ELSE
               vnerror := NULL;
            END IF;
         END IF;
      END IF;

      vpas := 4;

      -- fin Bug 0020765 - 13/01/2012 - JMF
      BEGIN
         SELECT cinform
           INTO vcinform
           FROM sin_tramitacion
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            vcinform := NULL;
      END;

      vpas := 5;

      -- Inici BFP:
      -- canvi de la condición de IF  (vcinform = 0)  THEN
      -- a IF ( (vcinform = 0) and (pcesttra IN(2, 3)) ) THEN
      -- bug: 20803   data:13/01/2012
      -- Fi BFP
    -- INI Inc. 780 - ACL - 16/04/2018
     /* IF ((vcinform = 0)
          AND(pcesttra NOT IN(2, 3))) THEN
         --si la tramitación no es informativa, ha de tener alguna reserva
         BEGIN
            SELECT COUNT(1)
              INTO vcontreserva
              FROM sin_tramita_reserva
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               vcontreserva := 0;
         END;

         IF vcontreserva = 0 THEN
            RETURN 9001921;   -- La tramitación necessita una reserva
         END IF;
      END IF;   */
    -- FIN Inc. 780 - ACL - 16/04/2018

      vpas := 6;

-- 22059:ASN:20/04/2012 ini  (no dejamos anular ni rechazar si hay pagos aunque esten finalizados)
      IF pcesttra IN(2, 3) THEN
         SELECT COUNT(1)
           INTO vhaypagos
           FROM sin_tramita_movpago mov, sin_tramita_pago pag,
                sin_tramita_pago_gar pagg   --32400:NSS:20/08/2014
          WHERE pag.nsinies = pnsinies
            AND pag.ntramit = pntramit
            AND mov.sidepag = pag.sidepag
            AND mov.sidepag = pagg.sidepag   --32400:NSS:20/08/2014
            AND pagg.ctipres = 1   --32400:NSS:20/08/2014
            AND mov.cestpag NOT IN(8)   -- bug 0022741: No se consideran pagos anulados
            AND mov.nmovpag IN(SELECT MAX(nmovpag)
                                 FROM sin_tramita_movpago
                                WHERE sidepag = pag.sidepag);

         IF vhaypagos > 0 THEN
            RETURN 9901545;   -- Existen pagos realizados
         END IF;
      END IF;

      vpas := 7;

-- 22059:ASN:20/04/2012 fin
      IF pcesttra IN(1, 2, 3) THEN
         IF pac_parametros.f_parproducto_n(vsproduc, 'SIN_VAL_PAG_FINSIN') = 1 THEN   -- 28/06/2012
            --Si el estado es: 1.-Finalizado, 2.-Anulado o 3.-Rechazado ENTONCES
            BEGIN
               SELECT COUNT(1)
                 INTO vpagopendiente
                 FROM sin_tramita_movpago mov, sin_tramita_pago pag
                WHERE pag.nsinies = pnsinies
                  AND pag.ntramit = pntramit
                  AND mov.sidepag = pag.sidepag
                  AND mov.nmovpag IN(SELECT MAX(nmovpag)
                                       FROM sin_tramita_movpago
                                      WHERE sidepag = pag.sidepag)
                  AND mov.cestpag IN(1, 9)
-- BUG 21150 - 02/02/2012 - JMP - Tampoco se permite el cambio de estado si hay pagos aceptados o remesados
                  AND pag.ctippag = 2;   -- BUG-12528
            EXCEPTION
               WHEN OTHERS THEN
                  vpagopendiente := 1;
            END;

            IF vpagopendiente > 0 THEN
               RETURN 9001929;   --Existeix algun pagament pendent
            END IF;

            vpas := 8;

            -- Bug 18934 - 29/09/2011 - MDS
            -- si hay gestiones abiertas
            IF pac_gestiones.f_val_gestiones_abiertas(pnsinies, pntramit) > 0 THEN
               RETURN 9902439;   -- Existe alguna gestición abierta
            END IF;
         -- Fi Bug 18934 - 29/09/2011 - MDS
         END IF;

         -- ini bug 0021150 10-07-2012 JMF
         BEGIN
            vpas := 81;

            SELECT COUNT(1)
              INTO vpagopendiente
              FROM sin_tramita_movpago mov, sin_tramita_pago pag
             WHERE pag.nsinies = pnsinies
               AND pag.ntramit = pntramit
               AND mov.sidepag = pag.sidepag
               AND mov.nmovpag IN(SELECT MAX(nmovpag)
                                    FROM sin_tramita_movpago
                                   WHERE sidepag = pag.sidepag)
               AND mov.cestpag IN(0)
               AND pag.ctippag = 2;   -- BUG-12528
         EXCEPTION
            WHEN OTHERS THEN
               vpagopendiente := 1;
         END;

         IF vpagopendiente > 0 THEN
            RETURN 9901545;   -- Existen pagos
         END IF;

         vpas := 82;

         -- Bug 18934 - 29/09/2011 - MDS
         -- si hay gestiones abiertas
         IF pac_gestiones.f_val_gestiones_abiertas(pnsinies, pntramit) > 0 THEN
            RETURN 9902439;   -- Existe alguna gestiÃ³n abierta
         END IF;
      -- Fi Bug 18934 - 29/09/2011 - MDS
      -- fin bug 0021150 10-07-2012 JMF
      END IF;

      vpas := 9;

      IF (porigen IS NULL
          OR(porigen IS NOT NULL
             AND pcesttra <> 4)) THEN
         FOR v_res IN c_res LOOP
            IF NVL(v_res.ireserva, 0) <> 0 THEN
               --Si hi ha una reserva pendent, llavors es deixa a 0
               -- Bug 11945 - 16/12/2009 - AMC
               -- 30920 - 11/04/2014 - JTT: Inicializamos la variable dentro del bucle.
               --                           Al informar vnmovres con NULL indicamos que se cree un nuevo movimiento de reserva
               -- 30920 - 20/05/2014 - JTT: Al finalizar la reserva tambien informamos con 0 el ICAPRIE
               vnmovres := NULL;

               --Ini Bug 31294/174788:NSS:22/05/2014
               IF pciesini = 1 THEN
                  IF pcesttra = 1 THEN   --Terminado
                     vcmovres := 6;
                  ELSIF pcesttra = 2 THEN   --Anulado
                     vcmovres := 7;
                  ELSIF pcesttra = 3 THEN   --Rechazado
                     vcmovres := 8;
                  END IF;
               ELSE
                  IF pcesttra = 1 THEN   --Terminado
                     vcmovres := 17;
                  ELSIF pcesttra = 2 THEN   --Anulado
                     vcmovres := 18;
                  ELSIF pcesttra = 3 THEN   --Rechazado
                     vcmovres := 19;
                  END IF;
               END IF;

               --Fin Bug 31294/174788:NSS:22/05/2014
               vnerror :=
                  pac_siniestros.f_ins_reserva
                     (pnsinies,   -- pnsinies
                      pntramit,   -- pntramit
                      v_res.ctipres,   -- pctipres
                      v_res.cgarant,   -- pcgarant
                      1,   -- pccalres
                      f_sysdate,   -- pfmovres
                      v_res.cmonres,   -- pcmonres
                      0,   -- pireserva
                      v_res.ipago,   -- pipago
                      0,   --picaprie -- Bug 30920 - 20/05/2014 - JTT
                      v_res.ipenali,   -- pipenali
                      v_res.iingreso,   -- piingreso
                      v_res.irecobro,   -- pirecobro
                      v_res.fresini,   -- pfresini
                      v_res.fresfin,   -- pfresfin
                      v_res.fultpag,   -- pfultpag
                      NULL,   -- psidepag
                      v_res.iprerec,   -- piprerec
                      v_res.ctipgas,   -- pctipgas
                      vnmovres,   -- pnmovres
                      vcmovres,   -- pcmovres  --Bug 31294/174788:NSS:22/05/2014
                      v_res.ifranq,   -- pifranq  --Bug 27059:NSS:03/06/2013
                      v_res.ndias,   -- pndias  --Bug 27487/159742:NSS:26/11/2013
                      NULL,   -- pitotimp
                      NULL,   -- pitotret
                      NULL,   -- piva_ctipind
                      NULL,   -- pretenc_ctipind
                      NULL,   -- preteiva_ctipind
                      NULL,   -- preteica_ctipind
                      0   --pcalcfranq  -- Bug 29801 - 29/09/2014 - JTT - Forcem a que no s'executi el recalcul de franquicies
                       );
--------------------------------------------IMPUESTOS
            --Fi Bug 11945 - 16/12/2009 - AMC
--            IF v_res.cgarant IS NOT NULL THEN
--               vnerror := pac_siniestros.f_accion_siniestro(pnsinies, 2, v_res.cgarant);
--            END IF;
            END IF;
         END LOOP;
      END IF;

      vpas := 10;

      -- bug 13296 - 22/02/2010 - AMC
      IF pcesttra IN(2, 3) THEN
         DELETE FROM primas_consumidas
               WHERE nsinies = pnsinies;
      END IF;

      vpas := 11;

      -- Fi bug 13296 - 22/02/2010 - AMC

      -- 22108:ASN:21/05/2012
      -- Se recupera la unidad de tramitación y el tramitador del usuario
      --Recuperamos la select para tener la empresa
      BEGIN
         SELECT sg.cempres
           INTO vcempres
           FROM sin_siniestro ss, seguros sg
          WHERE sg.sseguro = ss.sseguro
            AND ss.nsinies = pnsinies;
      EXCEPTION
         WHEN OTHERS THEN
            vcempres := NULL;
      END;

      -- 22108:ASN:21/05/2012 fin

      -- SÃ¿Â³lo insertamos si el estado inicial es abierto/reabierto o el estado inicial es Finalizado y el nuevo estado Reabierto.
      --TambiÃ©n si el estaod inicial es Rechazado y el nuevo Reabierto
      BEGIN
         SELECT MAX(cesttra)
           INTO vcesttra
           FROM sin_tramita_movimiento
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;
      EXCEPTION
         WHEN OTHERS THEN
            vcesttra := NULL;
      END;

      vpas := 12;

      IF vcesttra IN(0, 4)
         OR(vcesttra IN(1, 3)   --24708 - 29/10/2013 - JAMF
            AND pcesttra = 4) THEN
         -- 22108:ASN:21/05/2012 ini
         /*
         vnerror := pac_siniestros.f_get_tramitador_defecto(vcempres, f_user, NULL, NULL,
                                                            NULL, pnsinies, pntramit,
                                                            vcunitra, vctramitad); */
         vnerror := pac_siniestros.f_get_tramitador(pnsinies, NULL, pntramit, vcunitra,
                                                    vctramitad);

         -- 22108:ASN:21/05/2012 fin
         IF NVL(vnerror, 99999) > 1 THEN
            RETURN vnerror;
         END IF;

         vnerror := 0;

         --Fin bug.: 18977
         SELECT COUNT(1)
           INTO vcont
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ireserva > 0;

         vpas := 13;

         IF (porigen IS NULL
             OR(porigen IS NOT NULL
                AND vcont > 0)) THEN
            vnerror := pac_siniestros.f_ins_tramita_movimiento(pnsinies, pntramit, vcunitra,
                                                               vctramitad, pcesttra, vcsubtra,
                                                               f_sysdate, vnmovtra, pccauest);
         END IF;

         IF vnerror <> 0 THEN
            RETURN vnerror;
         END IF;
      END IF;

      vpas := 14;

      -- Bug 0022372 - 01/06/2012 - JMF
      -- Bug 0022906 - 17/07/2012 - JMF
      IF pcesttra = 1
         AND NVL(pciesini, 0) = 0 THEN
         vnerror := f_accult_tramitacion(pnsinies, pntramit, vcempres, f_sysdate, 1, pcesttra);   --bug 29989/165377;NSS;23-04-2014

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, 'vnerror=' || vnerror);
            RETURN vnerror;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, SQLCODE || ' ' || SQLERRM);
         RETURN 9001916;
   END f_estado_tramitacion;

   /***********************************************************************
     FUNCTION F_ESTADO_SINIESTRO:
      Cambia el estado de un siniestro
      param in  pnsinies  : Número Siniestro
      param in pcestsin   : codi estat sinistre
      param in pccauest   : codi causa estat sinistre
      param in pcunitra   : codi unitat tramitación
      param in pctramitad : codi tramitador
      param in pcsubtra   : codi subestat tramitación
      param in pfsinfin   : data fin sinistre
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_estado_siniestro(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pcestsin IN NUMBER,
      pccauest IN NUMBER,
      pcunitra IN VARCHAR2,
      pctramitad IN VARCHAR2,
      pcsubtra IN NUMBER,
      pfsinfin IN DATE,
      porigen IN VARCHAR2 DEFAULT NULL,
      pccautra IN NUMBER DEFAULT NULL,
      pobserv  IN VARCHAR2 DEFAULT NULL) -- AXIS 3663 AABC 12/04/2019 Adicion campo observacion
      RETURN NUMBER IS
      vnerror        NUMBER;
      vcestsin_ant   sin_movsiniestro.cestsin%TYPE;
      vnmovsin       sin_movsiniestro.nmovsin%TYPE;
      vfefepag       sin_tramita_movpago.fefepag%TYPE;
      vfresfin       sin_tramita_reserva.fresfin%TYPE;
      vauxcont       NUMBER(5);
      vsseguro       sin_siniestro.sseguro%TYPE;
      vsproduc       productos.sproduc%TYPE;
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies:' || pnsinies || ' - pcestsin:' || pcestsin
            || ' - pccauest:' || pccauest || ' - pcunitra:' || pcunitra || ' - pctramitad:'
            || pctramitad || ' - pcsubtra:' || pcsubtra || ' - pfsinfin:' || pfsinfin;
      vobjectname    VARCHAR2(50) := 'PAC_SINIESTROS.f_estado_siniestro';
      vcont          NUMBER := 1;
      vidapunte      NUMBER;
      v_ctipage      NUMBER;
      v_cagente      NUMBER;
      vcempres       NUMBER;
      vcidioma       NUMBER;
      vcesttra       NUMBER;   -- 20803:ASN:23/01/2012
      pidobs_out     VARCHAR2(20); -- IAXIS 3663 AABC estado de observacion siniestro Objetado

      CURSOR c_movimiento(p_nsinies IN sin_siniestro.nsinies%TYPE) IS
         SELECT   ntramit, NVL(MAX(nmovtra) + 1, 0) nnmovtra
             FROM sin_tramita_movimiento
            WHERE nsinies = p_nsinies
         GROUP BY ntramit;

      CURSOR c_reserva(
         p_nsinies IN sin_siniestro.nsinies%TYPE,
         p_ntramit IN sin_tramitacion.ntramit%TYPE) IS
         SELECT DISTINCT ctipres, cgarant, cmonres, ctipgas   -- 26108
                    FROM sin_tramita_reserva
                   WHERE nsinies = p_nsinies
                     AND ntramit = p_ntramit;
   BEGIN
      -- ini Bug 0020765 - 13/01/2012 - JMF
      IF pcestsin = 1 THEN   --Estado Finalizado
         --
         -- Validamos si cumple con el mÃ­nino de dias abierto.
         --
         SELECT b.sproduc,
                SIGN((f_sysdate - a.falta)
                     - NVL(f_parproductos_v(b.sproduc, 'SIN_DIASANTESCIERRE'), 0))
           INTO vsproduc,
                vnerror
           FROM sin_siniestro a, seguros b
          WHERE a.nsinies = pnsinies
            AND b.sseguro = a.sseguro;

         IF vnerror = -1 THEN
            -- No cumple el tiempo mÃ­nimo entre apertura y cierre siniestro
            vnerror := 9903072;
            RETURN vnerror;
         ELSE
            vnerror := NULL;
         END IF;

         --
         -- Validamos si tiene apuntes abiertos.
         --
         IF NVL(f_parproductos_v(vsproduc, 'SIN_VALAGEPROGRAM'), 0) = 1 THEN
            SELECT COUNT(1)
              INTO vnerror
              FROM agd_observaciones ao, agd_movobs am
             WHERE ao.nsinies = pnsinies
               AND(ao.ctipagd = 4   -- siniestro
                   OR ao.ctipagd = 5   -- tramita
                                    )
               AND am.cempres = ao.cempres
               AND am.idobs = ao.idobs
               AND am.nmovobs = (SELECT MAX(am2.nmovobs)
                                   FROM agd_movobs am2
                                  WHERE am2.cempres = am.cempres
                                    AND am2.idobs = am.idobs)
               AND am.cestobs = 0;

            IF vnerror > 0 THEN
               -- Existen apuntes agenda pendientes
               vnerror := 9903073;
               RETURN vnerror;
            ELSE
               vnerror := NULL;
            END IF;
         END IF;

         --- Bug 34622 - JTT - 03/03/2015 - Validamos la fecha de formalizacion del siniestro
         vnerror := pac_validaciones_sin.f_validar_fecha_formalizacion(pnsinies);

         IF vnerror > 0 THEN
            RETURN vnerror;
         END IF;
      END IF;

      -- fin Bug 0020765 - 13/01/2012 - JMF
      BEGIN
         SELECT cestsin
           INTO vcestsin_ant
           FROM sin_movsiniestro
          WHERE nsinies = pnsinies
            AND nmovsin = (SELECT MAX(nmovsin)
                             FROM sin_movsiniestro
                            WHERE nsinies = pnsinies);
      EXCEPTION
         WHEN OTHERS THEN
            vcestsin_ant := NULL;
      END;

      vcont := 2;

      FOR v_movimiento IN c_movimiento(pnsinies) LOOP
         IF pcestsin = 1 THEN   --Estado Finalizado
            -- BUG-12528 PodrÃ­a haber mÃ¡s de una reserva o pago en la misma tramitación
            -- Se recorren las diferentes reservas que haya en la tramitación
            FOR v_reserva IN c_reserva(pnsinies, v_movimiento.ntramit) LOOP
               BEGIN
                  SELECT str.fresfin
                    INTO vfresfin
                    FROM sin_tramita_reserva str
                   WHERE str.nsinies = pnsinies
                     AND str.ntramit = v_movimiento.ntramit
                     AND str.ctipres = v_reserva.ctipres
                     AND NVL(str.ctipgas, -1) = NVL(v_reserva.ctipgas, -1)   -- 26108
                     AND(str.cgarant = v_reserva.cgarant
                         OR(str.cgarant IS NULL
                            AND v_reserva.cgarant IS NULL))
                     AND str.cmonres = v_reserva.cmonres
                     -- BUG 18423/104212 - 25/01/2012 - JMP -
                     AND str.nmovres IN(SELECT MAX(str1.nmovres)
                                          FROM sin_tramita_reserva str1
                                         WHERE str1.nsinies = str.nsinies
                                           AND str1.ntramit = str.ntramit
                                           AND str1.ctipres = str.ctipres
                                           AND NVL(str1.ctipgas, -1) =
                                                                    NVL(str.ctipgas, -1)   -- 26108
                                           AND(str1.cgarant = str.cgarant
                                               OR(str1.cgarant IS NULL
                                                  AND str.cgarant IS NULL))
                                           AND str1.cmonres = str.cmonres
                                           -- BUG 18423/104212 - 25/01/2012 - JMP -
                                           AND str1.fresfin IS NOT NULL)
                     AND str.fresfin IS NOT NULL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vfresfin := NULL;
               END;

               vcont := 4;

               IF (TRUNC(pfsinfin) < TRUNC(vfresfin)
                   AND vfresfin IS NOT NULL) THEN
                  vnerror := 9001934;   --Data finalitzación incorrecte
                  RETURN vnerror;
               END IF;
            END LOOP;

            BEGIN
               SELECT MAX(fordpag)
                 INTO vfefepag
                 FROM sin_tramita_pago pag
                WHERE pag.nsinies = pnsinies
                  AND pag.ntramit = v_movimiento.ntramit
                  AND pag.ctippag = 2;   -- BUG-12528
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vfefepag := NULL;
            END;

            vcont := 3;

            IF TRUNC(pfsinfin) < TRUNC(vfefepag) THEN
               vnerror := 9001934;   --Data finalitzación incorrecte
               RETURN vnerror;
            END IF;

            vcont := 5;

            BEGIN
               SELECT COUNT(1)
                 INTO vauxcont
                 FROM sin_tramita_movpago mov, sin_tramita_pago pag
                WHERE pag.nsinies = pnsinies
                  AND pag.ntramit = v_movimiento.ntramit
                  AND mov.sidepag = pag.sidepag
                  AND mov.cestpag IN(1, 2)   -- BUG-12528
                  AND mov.nmovpag IN(SELECT MAX(nmovpag)
                                       FROM sin_tramita_movpago
                                      WHERE sidepag = pag.sidepag)
                  AND pag.ctippag = 2;   -- BUG-12528
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vauxcont := NULL;
            END;

            vcont := 6;

            SELECT sproduc
              INTO vsproduc
              FROM sin_siniestro n, seguros s
             WHERE n.nsinies = pnsinies
               AND s.sseguro = n.sseguro;

            IF NVL(f_parproductos_v(vsproduc, 'CUENTA_SEGURO'), 0) = 1
               AND vauxcont > 0 THEN
               SELECT seg.sseguro, seg.sproduc
                 INTO vsseguro, vsproduc
                 FROM sin_siniestro sini, seguros seg
                WHERE sini.nsinies = pnsinies
                  AND seg.sseguro = sini.sseguro;

               vcont := 7;
               vnerror := f_reajustar_ctaseguro(pnsinies, vsseguro);
               vcont := 8;

               IF vnerror = 0 THEN   -- Se debe finalizar el rescate
                  vnerror := pac_sin_rescates.f_finaliza_rescate(vsseguro, 1, pnsinies, 1);

                  IF vnerror <> 0 THEN
                     RETURN vnerror;
                  END IF;
               ELSIF vnerror = 1 THEN   -- No se debe finalizar el rescate
                  NULL;
               ELSE   -- Se debe mostrar mensaje de error
                  RETURN vnerror;
               END IF;
            END IF;
         END IF;

         vcont := 9;

         --CJMR CONF-287  IF pcestsin <> 0 THEN   --OR PORIGEN IS NOT NULL AND PAREMPRESA = 1 THEN
     IF pcestsin NOT IN (0,3, 5) THEN   --CJMR CONF-287
            -- 20803:ASN:23/01/2012 ini
            SELECT cesttra
              INTO vcesttra
              FROM sin_tramita_movimiento
             WHERE nsinies = pnsinies
               AND ntramit = v_movimiento.ntramit
               AND nmovtra = v_movimiento.nnmovtra - 1;

            --IF vcesttra NOT IN(2, 3) THEN --Bug 24708/157146 : NSS : 29/10/2013
            IF vcesttra NOT IN(2) THEN   --Bug 24708/157146 : NSS : 29/10/2013
               -- 20803:ASN:23/01/2012 fin
               -- Bug 0022906 - 17/07/2012 - JMF
               vnerror := pac_siniestros.f_estado_tramitacion(pnsinies, v_movimiento.ntramit,
                                                              pcestsin, porigen, pccautra, 1);
               vcont := 10;

               IF vnerror <> 0 THEN
                  RETURN vnerror;
               END IF;
            END IF;   --- 20803:ASN:23/01/2012
         END IF;
      END LOOP;

      vnerror := pac_siniestros.f_ins_movsiniestro(pnsinies, pcestsin, f_sysdate, pccauest,
                                                   pcunitra, pctramitad, vnmovsin);
      vcont := 11;

      IF vnerror <> 0 THEN
         RETURN vnerror;
      END IF;

      IF pcestsin = 1 THEN   -- Se finaliza el siniestro
         --bug 24708/173179:NSS:28/04/2014
         IF vcestsin_ant = 1 THEN
            RETURN 9906731;
         END IF;

         --fin bug 24708/173179:NSS:28/04/2014

         -- Bug 18286 - APD - 04/05/2011 - Al cerrar un siniestro validar que si el ctipcap
         -- de algun destinatario in (1,3) ha de existir su prestaren, y no ha de existir
         -- en caso contrario.
         DECLARE
            v_contador     NUMBER;
         BEGIN
            SELECT COUNT(1)
              INTO v_contador
              FROM sin_tramita_destinatario d
             WHERE d.nsinies = pnsinies
               AND d.ctipcap IN(1, 3)
               AND NOT EXISTS(SELECT 1
                                FROM prestaren p
                               WHERE p.nsinies = d.nsinies
                                 AND p.ntramit = d.ntramit
                                 AND p.ctipdes = d.ctipdes
                                 AND p.sperson = d.sperson);

            IF v_contador <> 0 THEN   -- No existe una prestacion para el destinatario
               RETURN 109421;
            -- Existen beneficiarios sin prestaciones asignadas
            END IF;

            SELECT COUNT(1)
              INTO v_contador
              FROM sin_tramita_destinatario d
             WHERE d.nsinies = pnsinies
               AND d.ctipcap NOT IN(1, 3)
               AND EXISTS(SELECT 1
                            FROM prestaren p
                           WHERE p.nsinies = d.nsinies
                             AND p.ntramit = d.ntramit
                             AND p.ctipdes = d.ctipdes
                             AND p.sperson = d.sperson);

            IF v_contador <> 0 THEN   -- No puede existir una prestacion para el destinatario
               RETURN 109572;
            -- Las prestaciones de los beneficiarios no son correctas.
            END IF;

-- ini Bug 0018812 - 21/06/2011 - JMF :
            DECLARE
               CURSOR c1 IS
                  SELECT *
                    FROM sin_tramita_destinatario
                   WHERE nsinies = pnsinies;
            BEGIN
               FOR r1 IN c1 LOOP
                  vnerror := pac_validaciones_sin.f_dest(r1.nsinies, r1.ntramit, pccauest,
                                                         r1.ctipdes, r1.cactpro, r1.sperson,
                                                         r1.pasigna, r1.cpaisre, r1.cbancar,
                                                         r1.ctipcap, r1.crelase);
               END LOOP;
            END;
-- fin Bug 0018812 - 21/06/2011 - JMF :
         END;

         vcont := 100;
         -- fin Bug 18286 - APD - 04/05/2011
         vnerror := pac_siniestros.f_accion_siniestro(pnsinies, 2);

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vcont,
                        'F_estado_siniestro nsinies=' || pnsinies, 'error=' || vnerror);
            RETURN vnerror;
         END IF;
      ELSIF pcestsin = 2 THEN   -- Se anula el siniestro -- bug 25893:DCT:21/02/2013
         vcont := 110;
         vnerror := pac_siniestros.f_accion_siniestro(pnsinies, 4);

         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vcont,
                        'F_estado_siniestro nsinies=' || pnsinies, 'error=' || vnerror);
            RETURN vnerror;
         END IF;
      ELSIF pcestsin = 3 THEN   -- Se echaza el siniestro  -- bug 25893:DCT:21/02/2013
         vcont := 120;
         --vnerror := pac_siniestros.f_accion_siniestro(pnsinies, 3);
		vnerror:=0;
         IF vnerror <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vcont,
                        'F_estado_siniestro nsinies=' || pnsinies, 'error=' || vnerror);
            RETURN vnerror;
         END IF;
      -- 26316:ASN:14/03/2012 ini
      ELSIF pcestsin = 4 THEN   -- Reapertura
         UPDATE sin_tramita_pago
            SET cultpag = NULL
          WHERE nsinies = pnsinies;
      -- 26316:ASN:14/03/2012 fin
      END IF;

      -- Bug 18286 - APD - 20/04/2011 - se llama a la funcion f_estado_prestacion
      -- para cambiar el estado de la prestacion si existe
      vnerror := pac_siniestros.f_estado_prestacion(pnsinies, pcestsin, vcestsin_ant);

      IF vnerror <> 0 THEN
         RETURN vnerror;
      END IF;

      BEGIN
         -- pcclagd := 0;   -- CÃ³digo Clave Agenda 0:siniestro / 1:poliza
          -- ptclagd := pnsinies;   -- Valor Clave Agenda
         SELECT r.cagente, r.ctipage, ss.cempres, ss.cidioma
           INTO v_cagente, v_ctipage, vcempres, vcidioma
           FROM sin_siniestro s, usuarios u, redcomercial r, seguros ss
          WHERE s.nsinies = pnsinies
            AND s.sseguro = ss.sseguro
            AND s.cusualt = u.cusuari
            AND r.cagente = u.cdelega
            AND r.fmovini = (SELECT MAX(rr.fmovini)
                               FROM redcomercial rr
                              WHERE rr.cempres = ss.cempres
                                AND rr.cagente = u.cdelega);

         IF pcestsin = 6 THEN   -- DECLARADO
            vnerror :=
               pac_agenda.f_set_apunte(NULL, NULL, 0, pnsinies, 0, 0, 0,
                                       pac_parametros.f_parempresa_t(vcempres,
                                                                     'ENV_TAREAS_DEF'),
                                       f_axis_literales(9902336, vcidioma),
                                       f_axis_literales(9902336, vcidioma) || ' - '
                                       || pnsinies,
                                       0, 0, NULL, NULL, f_user, NULL, f_sysdate, f_sysdate,
                                       NULL, vidapunte);
            vnerror :=
               pac_agenda.f_set_agenda(vidapunte, NULL, NULL, 0,
                                       pac_parametros.f_parempresa_t(vcempres,
                                                                     'ENV_TAREAS_DEF'),
                                       0, pnsinies, NULL, f_user, v_ctipage, v_cagente,
                                       vcempres, vcidioma, 'DECLARACION');
         ELSIF pcestsin = 4 THEN   --REAPERTURA
            vnerror :=
               pac_agenda.f_set_apunte(NULL, NULL, 0, pnsinies, 0, 0, 0,
                                       pac_parametros.f_parempresa_t(vcempres,
                                                                     'ENV_TAREAS_DEF'),
                                       f_axis_literales(9902336, vcidioma),
                                       f_axis_literales(9902336, vcidioma) || ' - '
                                       || pnsinies,
                                       0, 0, NULL, NULL, f_user, NULL, f_sysdate, f_sysdate,
                                       NULL, vidapunte);
            vnerror :=
               pac_agenda.f_set_agenda(vidapunte, NULL, NULL, 0,
                                       pac_parametros.f_parempresa_t(vcempres,
                                                                     'ENV_TAREAS_DEF'),
                                       0, pnsinies, NULL, f_user, v_ctipage, v_cagente,
                                       vcempres, vcidioma, 'REAPERTURA');
         ELSIF pcestsin = 5 THEN   -- PRESINIESTRO
            SELECT r.cagente, r.ctipage
              INTO v_cagente, v_ctipage
              FROM sin_siniestro s, usuarios u, redcomercial r
             WHERE nsinies = pnsinies
               AND s.cusualt = u.cusuari
               AND r.cagente = u.cdelega
               AND r.fmovini = (SELECT MAX(rr.fmovini)
                                  FROM redcomercial rr
                                 WHERE rr.cempres = r.cempres
                                   AND rr.cagente = u.cdelega);

            vnerror := pac_agenda.f_set_apunte(NULL, NULL, 0, pnsinies, 0, 0, v_ctipage,
                                               v_cagente, f_axis_literales(9902338, vcidioma),
                                               f_axis_literales(9902337, vcidioma) || ' - '
                                               || pnsinies,
                                               0, 0, NULL, NULL, f_user, NULL, f_sysdate,
                                               f_sysdate, NULL, vidapunte);
            vnerror :=
               pac_agenda.f_set_agenda(vidapunte, NULL, NULL, v_ctipage, v_cagente,   --9216,
                                       0, pnsinies, NULL, f_user, 0,
                                       pac_parametros.f_parempresa_t(vcempres,
                                                                     'ENV_TAREAS_DEF'),
                                       vcempres, vcidioma, 'CAMBIO_ESTADO');
         ELSE   -- OTROS ESTADOS, COMO OBSERVACIONES
            SELECT r.cagente, r.ctipage
              INTO v_cagente, v_ctipage
              FROM sin_siniestro s, usuarios u, redcomercial r
             WHERE nsinies = pnsinies
               AND s.cusualt = u.cusuari
               AND r.cagente = u.cdelega
               AND r.fmovini = (SELECT MAX(rr.fmovini)
                                  FROM redcomercial rr
                                 WHERE rr.cempres = r.cempres
                                   AND rr.cagente = u.cdelega);
            -- Inicio IAXIS 3663 AABC estado de observacion siniestro Objetado
            IF pcestsin = 3 THEN
               --
               vnerror := pac_agenda.f_set_obs(vcempres, NULL, 40, 0, f_axis_literales(9902338, vcidioma),
                                               f_axis_literales(9902337, vcidioma) || ' - ' || pnsinies || ' - '|| pobserv,
                                               NULL, NULL, 5, NULL, NULL,
                                               NULL, 1, 1, SYSDATE, pidobs_out, NULL, NULL, NULL,
                                               NULL ,NULL ,NULL,pnsinies);
               --
            ELSE
               --
            vnerror := pac_agenda.f_set_apunte(NULL, NULL, 0, pnsinies, 1, 0, v_ctipage,
                                               v_cagente, f_axis_literales(9902338, vcidioma),
                                               f_axis_literales(9902337, vcidioma) || ' - '
                                               || pnsinies || ' - '|| pobserv,
                                               0, 0, NULL, NULL, f_user, NULL, f_sysdate,
                                               f_sysdate, NULL, vidapunte);
            vnerror :=
               pac_agenda.f_set_agenda(vidapunte, NULL, NULL, v_ctipage, v_cagente,   --9216,
                                       0, pnsinies, NULL, f_user, 0,
                                       pac_parametros.f_parempresa_t(vcempres,
                                                                     'ENV_TAREAS_DEF'),
                                       vcempres, vcidioma, 'CAMBIO_ESTADO');
            END IF;
            -- Fin IAXIS 3663 AABC estado de observacion siniestro Objetado
         END IF;
      EXCEPTION
         WHEN OTHERS THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros agenda', vcont,
                        'F_estado_siniestro', SQLERRM);
      END;

      -- fin Bug 18286 - APD - 20/04/2011
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vcont, 'F_estado_siniestro',
                     SQLERRM);
         RETURN 9001916;
   END f_estado_siniestro;

   /***********************************************************************
     FUNCTION F_INS_DOCUMENTOS:
         Inserta a la taula SIN_TRAMITA_DOCUMENTO dels parámetros informats.
         param in psproduc  : CÃ³digo producto
         param in pcactivi  : CÃ³digo actividad
         param in pccausin  : CÃ³digo causa
         param in pcmotsin  : CÃ³digo motivo
         param in pcidioma  : CÃ³digo idioma
         param in pctramit  : CÃ³digo tramitación (opcional, sinÃ¿Â³ = 0)
         return             : 0 -> Tot correcte
                              1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_ins_documentos(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      pcidioma IN NUMBER,
      pntramit IN NUMBER DEFAULT 0,
      pfreclama IN DATE DEFAULT NULL)
      RETURN NUMBER IS
      v_ndocume      sin_tramita_documento.ndocume%TYPE := 0;
      v_cdocume_ant  doc_pro_documento.cdocume%TYPE := 0;
      v_tramitecal   sin_tramita_documento.ntramit%TYPE;
      v_regins       NUMBER := 0;

      -- Bug 29224 - 28/05/2014 - JTT: Se aÃ¿Â±ade el criterio de busqueda 2. Se modifica la función intentando siplificar el codigo.

      -- Definimos 3 cursores para buscar los documentos que deben aÃ¿Â±adirse al siniestro para su gestion
-- se ejecutaran por orden de prioridad
--             Producto      Activida d     Garantia    Causa      Motivo
--             ---------- --------------- ------------ --------- ----------
-- Cursor 1,   psproduc      pcactivi      Garantias   pccausin   pcmotsin
-- Cursor 2,   psproduc      pcactivi      Garantias      0          0
-- Cursor 3,      0             0          Garantias      0          0
--
-- Se ordena por cobliga pues el cursor podria devolver dos registros con el mismo codigo de documento
-- con cobliga = 0 i 1 al realizar la busqueda por cactivi = n i 0. Se da prioridad a cobliga = 1.

      -- Bug 34622 - 03/03/2015 - JTT: Recuperamos el campo doc_pro_documento.caccion.
      CURSOR c_documentos1 IS
         SELECT DISTINCT dpd.cdocume, dpd.cobliga, dd.ttitdoc, dd.tdocume, dpd.caccion
                    FROM doc_pro_documento dpd, doc_desdocumento dd
                   WHERE dpd.sproduc = psproduc
                     AND dpd.cactivi = pcactivi
                     AND dpd.cgarant IN(SELECT DISTINCT (cgarant)
                                                   FROM sin_tramita_reserva
                                                  WHERE nsinies = pnsinies)
                     AND dpd.ccausin = pccausin
                     AND dpd.cmotsin = pcmotsin
                     AND dpd.cmodul = 1   -- Siniestros
                     AND dd.cdocume = dpd.cdocume
                     AND dd.cidioma = pcidioma
                ORDER BY dpd.cdocume, dpd.cobliga DESC;

      CURSOR c_documentos2 IS
         SELECT DISTINCT dpd.cdocume, dpd.cobliga, dd.ttitdoc, dd.tdocume, dpd.caccion
                    FROM doc_pro_documento dpd, doc_desdocumento dd
                   WHERE dpd.sproduc = psproduc
                     AND dpd.cactivi = pcactivi
                     AND dpd.cgarant IN(SELECT DISTINCT (cgarant)
                                                   FROM sin_tramita_reserva
                                                  WHERE nsinies = pnsinies)
                     AND dpd.ccausin = 0
                     AND dpd.cmotsin = 0
                     AND dpd.cmodul = 1
                     AND dd.cdocume = dpd.cdocume
                     AND dd.cidioma = pcidioma
                ORDER BY dpd.cdocume, dpd.cobliga DESC;

      CURSOR c_documentos3 IS
         SELECT DISTINCT dpd.cdocume, dpd.cobliga, dd.ttitdoc, dd.tdocume, dpd.caccion
                    FROM doc_pro_documento dpd, doc_desdocumento dd
                   WHERE dpd.sproduc = 0
                     AND dpd.cactivi = 0
                     AND dpd.cgarant IN(SELECT DISTINCT (cgarant)
                                                   FROM sin_tramita_reserva
                                                  WHERE nsinies = pnsinies)
                     AND dpd.ccausin = 0
                     AND dpd.cmotsin = 0
                     AND dpd.cmodul = 1
                     AND dd.cdocume = dpd.cdocume
                     AND dd.cidioma = pcidioma
                ORDER BY dpd.cdocume, dpd.cobliga DESC;

      -- Bug 35608-207807 24/06/2015 - KJSC: Filtro por causa y motivo
      CURSOR c_documentos4 IS
         SELECT DISTINCT dpd.cdocume, dpd.cobliga, dd.ttitdoc, dd.tdocume, dpd.caccion
                    FROM doc_pro_documento dpd, doc_desdocumento dd
                   WHERE dpd.sproduc = psproduc
                     AND dpd.cactivi = pcactivi
                     AND dpd.cgarant IN(SELECT DISTINCT (cgarant)
                                                   FROM sin_tramita_reserva
                                                  WHERE nsinies = pnsinies)
                     AND dpd.ccausin = pccausin
                     AND dpd.cmotsin = 0
                     AND dpd.cmodul = 1   -- Siniestros
                     AND dd.cdocume = dpd.cdocume
                     AND dd.cidioma = pcidioma
                ORDER BY dpd.cdocume, dpd.cobliga DESC;
   BEGIN
      v_tramitecal := ff_mintramite_dif9999(pnsinies, pntramit);

      BEGIN
         SELECT NVL(MAX(ndocume) + 1, 0)
           INTO v_ndocume
           FROM sin_tramita_documento
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;
      EXCEPTION
         WHEN OTHERS THEN
            v_ndocume := 0;
      END;

      -- Cursor 1
      FOR v_documentos IN c_documentos1 LOOP
         -- El cursor puede devolver dos registros para el mismo codigo de documento, con prioridad 1 y 0, solo
         -- Grabamos el primer registro dando prioridad a cobliga = 1.
         IF v_documentos.cdocume <> v_cdocume_ant THEN
            BEGIN
               INSERT INTO sin_tramita_documento
                           (nsinies, ntramit, ndocume, cdocume,
                            cobliga, freclama, caccion)
                    VALUES (pnsinies, v_tramitecal, v_ndocume, v_documentos.cdocume,
                            v_documentos.cobliga, pfreclama, v_documentos.caccion);

               v_ndocume := v_ndocume + 1;
               v_cdocume_ant := v_documentos.cdocume;
               v_regins := v_regins + 1;
            EXCEPTION
               WHEN OTHERS THEN
                  RETURN 102555;
            END;
         END IF;
      END LOOP;

      -- Cursor 2
      IF v_regins = 0 THEN
         FOR v_documentos IN c_documentos2 LOOP
            IF v_documentos.cdocume <> v_cdocume_ant THEN
               BEGIN
                  INSERT INTO sin_tramita_documento
                              (nsinies, ntramit, ndocume, cdocume,
                               cobliga, freclama, caccion)
                       VALUES (pnsinies, v_tramitecal, v_ndocume, v_documentos.cdocume,
                               v_documentos.cobliga, pfreclama, v_documentos.caccion);

                  v_ndocume := v_ndocume + 1;
                  v_cdocume_ant := v_documentos.cdocume;
                  v_regins := v_regins + 1;
               EXCEPTION
                  WHEN OTHERS THEN
                     RETURN 102555;
               END;
            END IF;
         END LOOP;
      END IF;

      -- Cursor 3
      IF v_regins = 0 THEN
         FOR v_documentos IN c_documentos3 LOOP
            IF v_documentos.cdocume <> v_cdocume_ant THEN
               BEGIN
                  INSERT INTO sin_tramita_documento
                              (nsinies, ntramit, ndocume, cdocume,
                               cobliga, freclama, caccion)
                       VALUES (pnsinies, v_tramitecal, v_ndocume, v_documentos.cdocume,
                               v_documentos.cobliga, pfreclama, v_documentos.caccion);

                  v_ndocume := v_ndocume + 1;
                  v_cdocume_ant := v_documentos.cdocume;
                  v_regins := v_regins + 1;
               EXCEPTION
                  WHEN OTHERS THEN
                     RETURN 102555;
               END;
            END IF;
         END LOOP;
      END IF;

      --Cursor 4 Bug 35608-207807 24/06/2015 - KJSC: Filtro por causa y motivo
      IF v_regins = 0 THEN
         FOR v_documentos IN c_documentos4 LOOP
            IF v_documentos.cdocume <> v_cdocume_ant THEN
               BEGIN
                  INSERT INTO sin_tramita_documento
                              (nsinies, ntramit, ndocume, cdocume,
                               cobliga, freclama, caccion)
                       VALUES (pnsinies, v_tramitecal, v_ndocume, v_documentos.cdocume,
                               v_documentos.cobliga, pfreclama, v_documentos.caccion);

                  v_ndocume := v_ndocume + 1;
                  v_cdocume_ant := v_documentos.cdocume;
                  v_regins := v_regins + 1;
               EXCEPTION
                  WHEN OTHERS THEN
                     RETURN 102555;
               END;
            END IF;
         END LOOP;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN 9001915;
   END f_ins_documentos;

-- INI RLLF 09/12/2015 0038723: Al siniestrar la pÃ¿Â³liza de Vida individual afectando la cobertura de ITP Finalización del siniestro
   FUNCTION f_accion_siniestro(pnsinies IN sin_siniestro.nsinies%TYPE, paccion IN NUMBER)
      RETURN NUMBER IS
      vparam         VARCHAR2(500)
                         := 'pnsinies: ' || pnsinies || ' paccion:' || paccion;
      vnumerr        NUMBER;
      vpasexec       NUMBER;
      vsproduc       NUMBER;
      vspaso         NUMBER;
      num_err        NUMBER;
      v_es_innominado NUMBER;   --BUG 38407 JAVENDANO 21/12/2015
      vtipsin        sin_causa_motivo.ctipsin%TYPE;
      v_sperson      per_ccc.sperson%TYPE;
      v_numasegs     NUMBER;
      vsseguro       NUMBER;
      vnriesgo       NUMBER;
      xccausin       NUMBER;
      vfsinies       DATE;
   BEGIN
      vspaso := 1;

      SELECT s.sproduc
        INTO vsproduc
        FROM seguros s, sin_siniestro si
       WHERE s.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      --INICIO BUG 38407 - JAVENDANO 21/12/2015
      -- Se aÃ¿Â±ade este cambio temporalmente debido a un uso compartido de SCAUMOTS para productos nominados e innominados en Positiva.
      -- El cambio se hace para las acciones: 110 Retención por alta de siniestro (apertura)
      --                                      119 Desretención por finalización de siniestro (fin)
      --                                      505 Anulación de pÃ¿Â³liza por siniestro (rechazo)
      -- Este cambio se eliminarÃ¡ una vez se corrija esta situación en Positiva.
      BEGIN
         SELECT 1
           INTO v_es_innominado
           FROM v_productos
          WHERE sproduc = vsproduc
            AND cobjase IN(3, 4);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            v_es_innominado := 0;
      END;

      IF v_es_innominado = 1 THEN
         IF pac_parametros.f_parproducto_n(vsproduc, 'ACCION_SINIESTRO') = 1
            AND paccion IN(110, 119, 505) THEN
            RETURN 0;
         END IF;
      END IF;

      --FIN BUG 38407 - JAVENDANO 21/12/2015
      --
      BEGIN
         --
         SELECT DISTINCT si.sseguro, si.nriesgo, si.ccausin, si.fsinies, cau.ctipsin
                    INTO vsseguro, vnriesgo, xccausin, vfsinies, vtipsin
                    FROM sin_causa_motivo cau, sin_siniestro si
                   WHERE si.nsinies = pnsinies
                     AND cau.ccausin = si.ccausin
                     AND cau.cmotsin = si.cmotsin;
      --
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            vsseguro := NULL;
            vnriesgo := NULL;
            vtipsin := NULL;
         WHEN OTHERS THEN
            vsseguro := NULL;
            vnriesgo := NULL;
            vtipsin := NULL;
      END;

      --
      IF (paccion = 1
          AND NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                'MATAR_PERSONA_SINIE'),
                  0) = 1
          AND vtipsin = 1)
         OR(paccion = 2
            AND NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                  'MATAR_PERSONA_SINIE'),
                    0) = 2
            AND vtipsin = 1) THEN
         --
         num_err := pac_propio.f_accion_siniestro(paccion, pnsinies, vtipsin, xccausin, vsseguro, vnriesgo, vfsinies);
         --
         IF vnumerr <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vpasexec,
                        'f_accion_siniestro nsinies=' || pnsinies, 'error=' || vnumerr);
            RETURN vnumerr;
         END IF;
         --
      END IF;

       -- INI RLLF 19/01/2016 0038399: Al pagar los siniestros en una poliza inominada el sistema anula el certificado
       -- Para el caso de alta de siniestro no necesitamos conocer la garantÃ­a, pero en el caso de que no sea el alta sÃ¿Â­ es
       -- necesario, ya que sinÃ¿Â³ no funcionan correctamente las acciones a realizar.
      IF paccion = 1 THEN
         vnumerr := pac_siniestros.f_accion_siniestro_gar(pnsinies, paccion, NULL);

         IF vnumerr <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vpasexec,
                        'f_ins_siniestro nsinies=' || pnsinies, 'error=' || vnumerr);
            RETURN vnumerr;
         END IF;
      ELSE
       FOR x IN (SELECT DISTINCT g.cgarant
                           FROM sin_tramita_reserva g
                          WHERE g.nsinies = pnsinies
                            AND g.ctipres = 1) LOOP
         vpasexec := 1;
         -- Accion al aperturar siniestro
         vnumerr := pac_siniestros.f_accion_siniestro_gar(pnsinies, paccion, x.cgarant);

         IF vnumerr <> 0 THEN
            p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vpasexec,
                        'f_ins_siniestro nsinies=' || pnsinies, 'error=' || vnumerr);
            RETURN vnumerr;
         END IF;
       END LOOP;

       -- bug 26472:NSS:04/04/2013
       IF f_parproductos_v(vsproduc, 'ACCIONES_CIERRE') = 1
         AND paccion = 2 THEN
         num_err := pac_propio.f_acciones_cierre(pnsinies);
       END IF;

       --INI RAL BUG 0038881
       IF NVL(f_parproductos_v(vsproduc, 'INIRESGAS'), 0) > 0
         AND paccion = 1 THEN
         num_err := pac_propio.f_inireserva_gasto(pnsinies);
       END IF;
      END IF;
      -- FIN RLLF 19/01/2016 0038399: Al pagar los siniestros en una poliza inominada el sistema anula el certificado

      --FIN BUG 0038881
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, getuser, 'pac_siniestros.f_accion_siniestro ERROR', vspaso,
                     vparam, SQLERRM);
         RETURN 140999;
-- FIN RLLF 09/12/2015 0038723: Al siniestrar la pÃ³liza de Vida individual afectando la cobertura de ITP Finalización del siniestro
   END f_accion_siniestro;

   FUNCTION f_accion_siniestro_gar(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      paccion IN NUMBER,
      pcgarant IN NUMBER DEFAULT NULL)
   RETURN NUMBER IS
      /*paccion: 1-->Estamos en apertura siniestros.
                 2-->Estamos en colclusiÃ³n de siniestro.*/
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_accion_siniestro_gar';
      vparam         VARCHAR2(500)
             := 'pnsinies: ' || pnsinies || ' paccion:' || paccion || ' pcgarant:' || pcgarant;
      paso           NUMBER;
      vcmovseg       NUMBER;
      vcmotmov       NUMBER;
      vcmotfin       NUMBER;
      v_efecto       DATE;
      vnmovimi       NUMBER;
      num_err        NUMBER;
      vsseguro       NUMBER;
      vnriesgo       NUMBER;
      accion         BOOLEAN;
      motivo         NUMBER;
      num_riesgos    NUMBER;
      v_nsuplem      NUMBER;
      v_creteni      NUMBER;
      v_cmotmov      NUMBER;
      vsperson_fallec NUMBER;
      vsperson_vigente NUMBER;
      vfsinies       DATE;
      vcdelega       NUMBER;
      vocoderror     NUMBER;
      vomsgerror     VARCHAR2(2000);
      vedad          NUMBER;
      resc_abierto   NUMBER;
      xccausin       NUMBER;
      vsproduc       NUMBER;
      -- RSC 11/12/2007
      vagente        NUMBER;
      vidiom         NUMBER;
      vsperson2      NUMBER;
      vnorden        NUMBER;
      vcdomici_tom1  NUMBER;
      vcdomici_aseg2 NUMBER;
      -- RSC 25/03/2008
      vnpoliza       NUMBER;
      vncertif       NUMBER;
      vcmotsin       NUMBER;
      vcgarant       NUMBER;
      virescatep     NUMBER;
      --ICV 28/05/2009
      vnmovsup       movseguro.nmovimi%TYPE;
      vvalora        NUMBER := 0;
      vactivi        NUMBER(4);
      -- Bug 12199 - RSC - 27/11/2009 - 0012199: CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
      vfcarpro       DATE;
      -- Fin Bug 12199
      n_primfall     NUMBER;   -- Bug 0012822 - 24/02/2010 - JMF
      -- Bug 14881 - 07/06/2010 - AMC
      vfcaranu       DATE;
      vcpregun       NUMBER;
      vctipcap       sin_tramita_destinatario.ctipcap%TYPE;
      vcagrpro       seguros.cagrpro%TYPE;
      vsaldo         NUMBER;
      -- Fi Bug 14881 - 07/06/2010 - AMC
      -- Bug 16276 - 19/10/2010 - AMC
      vcsituac       NUMBER;
      -- Fi Bug 16276 - 19/10/2010 - AMC
      -- ini Bug 0018812 - 21/06/2011 - JMF
      e_salida       EXCEPTION;
      -- fin Bug 0018812 - 21/06/2011 - JMF
      vfnotifi       sin_siniestro.fnotifi%TYPE;
      -- bug 19416:ASN:27/10/2011
      vcreteni       seguros.creteni%TYPE;   -- bug 19416:ASN:27/10/2011
      vcagente       seguros.cagente%TYPE;   -- bug 19416:ASN:27/10/2011
      count_700      NUMBER;   -- bug 19416:ASN:27/10/2011
      vdescri        VARCHAR2(100);   -- bug 19416:ASN:27/10/2011
      v_nsinies      sin_siniestro.nsinies%TYPE;
      -- bug 19416:ASN:27/10/2011
      v_nmovimi      sin_siniestro.nmovimi%TYPE;
      -- bug 19416:ASN:27/10/2011
      v_ntramit      sin_tramitacion.ntramit%TYPE;
      -- bug 19416:ASN:27/10/2011
      v_nmovres      sin_tramita_reserva.nmovres%TYPE;
      -- bug 19416:ASN:27/10/2011
      v_cbancar      per_ccc.cbancar%TYPE;   -- bug 19416:ASN:27/10/2011
      v_ctipban      per_ccc.ctipban%TYPE;   -- bug 19416:ASN:27/10/2011
      v_sperson      per_ccc.sperson%TYPE;   -- bug 19416:ASN:27/10/2011
      dummy          NUMBER;   -- bug 19416:ASN:27/10/2011
      v_ipago        NUMBER;   -- bug 21131:ASN:09/02/2012
      vcmotrcz       NUMBER;   -- bug 25893:DCT:21/02/2013
      v_fecvtogar    DATE;
   BEGIN
      paso := 1;

      -- Bug 14881 - 07/06/2010 - AMC
      SELECT   MAX(cau.cmotmov), MAX(cau.cmotfin), MAX(cau.cmotrcz), s.sseguro, si.nriesgo,
               si.ccausin, si.fsinies, s.sproduc, MAX(gar.cgarant),
               MAX(si.fnotifi)   -- bug 19416:ASN:27/10/2011
          INTO vcmotmov, vcmotfin, vcmotrcz, vsseguro, vnriesgo,
               xccausin,   -- bug 25893:DCT:21/02/2013 aÃ±adir vcmotrcz
                        vfsinies, vsproduc, vcgarant,
               vfnotifi   -- bug 19416:ASN:27/10/2011
          FROM sin_causa_motivo cau, sin_gar_causa_motivo gar, seguros s, sin_siniestro si
         WHERE si.nsinies = pnsinies
           AND cau.ccausin = si.ccausin
           AND cau.cmotsin = si.cmotsin
           AND cau.scaumot = gar.scaumot
           AND si.sseguro = s.sseguro
           AND gar.sproduc = s.sproduc
           AND (gar.cgarant = pcgarant
                OR pcgarant IS NULL)
      GROUP BY s.sseguro, si.nriesgo, si.ccausin, si.fsinies, s.sproduc;

      paso := 2;

      --Fi Bug 14881 - 07/06/2010 - AMC
      -- Bug 13435 - RSC - 05/05/2010 - CRE
      -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (aÃ¿Â±adimos vfcarpro)
      SELECT npoliza, ncertif, fcarpro, cagrpro, creteni,
             cagente   -- bug 19416:ASN:27/10/2011
        INTO vnpoliza, vncertif, vfcarpro, vcagrpro, vcreteni,
             vcagente   -- bug 19416:ASN:27/10/2011
        FROM seguros
       WHERE sseguro = vsseguro;

      paso := 3;

      SELECT usu.cdelega
        INTO vcdelega
        FROM sin_siniestro si, usuarios usu
       WHERE si.cusualt = usu.cusuari
         AND si.nsinies = pnsinies;

      paso := 4;

      IF paccion = 1
         AND vcmotmov IS NOT NULL THEN   -- apertur siniestro
         accion := TRUE;
         motivo := vcmotmov;
      ELSIF paccion = 2
            AND vcmotfin IS NOT NULL THEN   -- finalización siniestro
         accion := TRUE;
         motivo := vcmotfin;
      -- ini Bug 0012822 - 24/02/2010 - JMF
      ELSIF paccion = 2   -- finalización siniestro
            AND vcmotmov = 265 THEN   -- suplemento Fallecimiento de un Titular
         accion := TRUE;
         motivo := 119;
      -- fin Bug 0012822 - 24/02/2010 - JMF
      ELSIF paccion = 3 THEN   -- rechazo siniestro -- Bug 14881 - 07/06/2010 - AMC
         accion := TRUE;

         -- bug 25893:DCT:21/02/2013
         IF vcmotrcz IS NOT NULL THEN
            motivo := vcmotrcz;
         ELSE
            -- Bug 14881 - 07/06/2010 - AMC
            IF vcmotmov = 530 THEN
               motivo := 531;
            ELSE
               motivo := 111;   -- desretener
            END IF;
         --Fi Bug 14881 - 07/06/2010 - AMC
         END IF;
      ELSIF paccion = 4 THEN   --Anulacion siniestro -- Bug 14881 - 07/06/2010 - AMC
         accion := TRUE;

         -- Bug 14881 - 07/06/2010 - AMC
         IF vcmotmov = 530 THEN
            motivo := 531;
         ELSE
            motivo := 111;   -- desretener
         END IF;
      --Fi Bug 14881 - 07/06/2010 - AMC
      ELSE
         accion := FALSE;
      END IF;

      paso := 9;

      IF accion THEN
         SELECT cmovseg
           INTO vcmovseg
           FROM codimotmov
          WHERE cmotmov = motivo;

         paso := 10;
         v_efecto := TRUNC(f_sysdate);

         -- Bug 16276 - 19/10/2010 - AMC
         SELECT csituac
           INTO vcsituac
           FROM seguros
          WHERE sseguro = vsseguro;

         -- Fi Bug 16276 - 19/10/2010 - AMC
         IF vcmovseg = 3 THEN   -- movimiento de anulación de pÃ³liza
            IF xccausin IN(3, 4, 5) THEN   --vencimientos y rescates
               v_efecto := vfsinies;
            END IF;

            -- Bug 16276 - 19/10/2010 - AMC
            IF vcsituac <> 2 THEN
               paso := 11;
               num_err :=
                  pac_anulacion.f_anulacion_poliza(vsseguro, motivo,

                                                   -- BUG 18423 - I - 27/12/2011 - JLB - LCOL000 - Multimoneda
                                                                                             --  1,
                                                   pac_monedas.f_moneda_producto(vsproduc),

                                                   -- BUG 18423 - F - 27/12/2011 - JLB - LCOL000 - Multimoneda
                                                   v_efecto, 0, 1, NULL, NULL, NULL);

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;
            END IF;
         -- Fi Bug 16276 - 19/10/2010 - AMC
         -- Aqui faltaria cerrar siniestro en caso de estar tratando una siniestro de fallecimiento
         -- de primer titular en una pÃ³liza MULTILINK
         ELSIF vcmovseg = 12 THEN
            -- ini Bug 0018812 - 21/06/2011 - JMF: -->  Contingencia PPA
            paso := 1050;

            DECLARE
               --
               -- Buscar todos los destinatario con ctipcap en 1,3).Comprobar si tienen un prestaren en estado 4 o 0.
               -- Si existe alguno, la finalización del siniestro deberÃ¡ realizar una reducción de la pÃ³liza (si no estÃ¡ reducida).
               -- Poner icapital de l 48 a 0.
               --
               CURSOR c1 IS
                  SELECT DISTINCT b.sseguro, c.cforpag
                             FROM sin_tramita_destinatario a, prestaren b, seguros c
                            WHERE a.nsinies = pnsinies
                              AND NVL(a.ctipcap, 0) IN(1, 3)
                              AND b.nsinies = a.nsinies
                              AND b.ntramit = a.ntramit
                              AND b.sperson = a.sperson
                              AND b.ctipdes = a.ctipdes
                              AND b.cestado IN(0, 4)
                              AND c.sseguro = b.sseguro;

               v_cramo        seguros.cramo%TYPE;
               v_cmodali      seguros.cmodali%TYPE;
               v_ctipseg      seguros.ctipseg%TYPE;
               v_ccolect      seguros.ccolect%TYPE;
               b_prestaren    BOOLEAN;
               d_hoy          DATE := f_sysdate;
               mensajes       t_iax_mensajes;

               CURSOR c2 IS
                  SELECT a.nsinies, a.ntramit, a.sperson, a.ctipdes
                    FROM sin_tramita_destinatario a
                   WHERE a.nsinies = pnsinies
                     AND NVL(a.ctipcap, 0) IN(2, 4)
                     AND NOT EXISTS(SELECT 1
                                      FROM sin_tramita_pago pag, sin_tramita_movpago m,
                                           seguros_ren_prest r, seguros e
                                     WHERE pag.nsinies = a.nsinies
                                       AND pag.ntramit = a.ntramit
                                       AND pag.sperson = a.sperson
                                       AND pag.ctipdes = a.ctipdes
                                       AND pag.cconpag = 4
                                       AND m.sidepag = pag.sidepag
                                       AND m.cestpag = 2
                                       AND m.nmovpag = (SELECT MAX(m1.nmovpag)
                                                          FROM sin_tramita_movpago m1
                                                         WHERE m1.sidepag = m.sidepag)
                                       AND r.sidepag = m.sidepag
                                       AND e.sseguro = r.ssegren
                                       AND f_vigente(e.sseguro, NULL, d_hoy) = 0);
            BEGIN
               paso := 1055;
               b_prestaren := FALSE;
               paso := 1060;

               FOR f1 IN c1 LOOP
                  -- ini Bug 0018812 - 21/06/2011 - JMF: -->  desretener poliza
                  --Controlamos si la poliza esta retenida por haber generado un siniestro.
                  --Recuperamos el numero del seguro
                  paso := 1065;

                  BEGIN
                     -- Bug 13435 - 20/04/2010 - AMC
                     SELECT creteni, cmotmov, fcarpro
                       INTO v_creteni, v_cmotmov, vfcarpro
                       FROM seguros s, movseguro m, sin_siniestro si
                      WHERE s.sseguro = m.sseguro
                        AND s.sseguro = si.sseguro
                        AND si.nsinies = pnsinies
                        AND m.nmovimi = (SELECT MAX(nmovimi)
                                           FROM movseguro mm
                                          WHERE mm.sseguro = m.sseguro)
                        AND m.cmotmov IN(SELECT cmotmov
                                           FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
                                          WHERE si.ccausin = cau.ccausin
                                            AND si.cmotsin = cau.cmotsin
                                            AND si.sseguro = s.sseguro
                                            AND s.sproduc = gar.sproduc);
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        NULL;
                  END;

                  IF v_creteni = 1 THEN
                     -- Bug 13435 - RSC - 05/05/2010 - CRE
                     IF vfcarpro IS NULL THEN
                        paso := 1070;
                        -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (LEAST(v_efecto, vfcarpro))
                        num_err := f_movseguro(vsseguro, NULL, motivo, NULL, v_efecto, NULL,
                                               NULL, 0, NULL, vnmovimi, f_sysdate);
                     ELSE
                        paso := 1075;
                        -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (LEAST(v_efecto, vfcarpro))
                        num_err := f_movseguro(vsseguro, NULL, motivo, NULL,
                                               LEAST(v_efecto, vfcarpro), NULL, NULL, 0, NULL,
                                               vnmovimi, f_sysdate);
                     END IF;

                     --Fi Bug 13435 - 20/04/2010 - AMC
                     IF num_err <> 0 THEN
                        RETURN num_err;
                     END IF;
                  END IF;

                  -->  reducir pÃ³liza
                  paso := 1080;
                  b_prestaren := TRUE;
                  paso := 1085;

                  IF f1.cforpag <> 0 THEN
                     paso := 1090;
                     num_err := pac_iax_ws_supl.f_reduccion_total(f1.sseguro, TRUNC(d_hoy),
                                                                  mensajes);
                  END IF;

                  IF num_err <> 0 THEN
                     IF mensajes IS NOT NULL THEN
                        IF mensajes.COUNT > 0 THEN
                           FOR i IN 1 .. mensajes.COUNT LOOP
                              IF mensajes.EXISTS(i) THEN
                                 p_tab_error(d_hoy, f_user, vobjectname, paso,
                                             TO_CHAR(i) || '- seg=' || f1.sseguro || ' fec='
                                             || TRUNC(d_hoy),
                                             mensajes(i).terror);
                              END IF;
                           END LOOP;
                        END IF;
                     END IF;

                     -- Esta pÃ³liza no puede ser reducida
                     RETURN 151981;
                  END IF;
               END LOOP;

               paso := 1100;

               IF b_prestaren THEN
                  RAISE e_salida;
               ELSE
                  -- b-)En caso de que no exista prestaren, anular la pÃ³liza. Pero previamente hay que verificar que:
                  -- Todos los destinatario con ctipcap in (2,4) tienen un pago del tipo renta pagado y asociado a una pÃ³liza de rentas activa.
                  FOR f2 IN c2 LOOP
                     --> aqui muestra error.
                     p_tab_error(f_sysdate, f_user, vobjectname, paso, vparam,
                                 'error=9902168 sin=' || f2.nsinies || ' tra=' || f2.ntramit
                                 || ' per=' || f2.sperson || ' tip=' || f2.ctipdes);
                     RETURN 9902168;
                  END LOOP;

                  -- Si no encuentra, anularemos la poliza.
                  accion := TRUE;   --JRH IMP
                  motivo := 505;

                  IF vcsituac <> 2 THEN
                     paso := 1105;
                     num_err :=
                        pac_anulacion.f_anulacion_poliza
                                                     (vsseguro, motivo,

                                                      -- BUG 18423 - I - 27/12/2011 - JLB - LCOL000 - Multimoneda
                                                                                                            --  1,
                                                      pac_monedas.f_moneda_producto(vsproduc),

                                                      -- BUG 18423 - F - 27/12/2011 - JLB - LCOL000 - Multimoneda
                                                      v_efecto, 0, 1, NULL, NULL, NULL);

                     IF num_err <> 0 THEN
                        RETURN num_err;
                     END IF;

                     RAISE e_salida;   -- Si va bien
                  END IF;
               END IF;
            END;
         -- fin Bug 0018812 - 21/06/2011 - JMF: -->  Contingencia PPA
         ELSIF motivo = 514 THEN   -- anulación de riesgo
             --si hay mÃ¡s de 1 riesgo vigente se anula el riesgo, si sÃ¿Â³lo hay un riesgo vigente
            -- se anula la pÃ³liza
            paso := 12;

            SELECT COUNT(*)
              INTO num_riesgos
              FROM riesgos
             WHERE sseguro = vsseguro
               AND fanulac IS NULL;

            IF num_riesgos > 1 THEN   -- anulamos el riesgo
               paso := 13;

               SELECT NVL(nsuplem, 0) + 1
                 INTO v_nsuplem
                 FROM movseguro
                WHERE sseguro = vsseguro
                  AND nmovimi = (SELECT MAX(mm.nmovimi)
                                   FROM movseguro mm
                                  WHERE mm.sseguro = vsseguro);

               paso := 14;
               num_err := f_movseguro(vsseguro, NULL, motivo, vcmovseg, v_efecto, NULL,
                                      v_nsuplem, 0, NULL, vnmovimi, f_sysdate);

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;

               paso := 15;
               num_err := f_act_hisseg(vsseguro, vnmovimi - 1);

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;

               paso := 16;
               num_err := f_anularisc(vsseguro, vnriesgo, v_efecto, vnmovimi, NULL, motivo);

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;

               --Controlamos si la poliza esta retenida por haber generado un siniestro.
               --Recuperamos el numero del seguro
               paso := 17;

               BEGIN
                  SELECT creteni, cmotmov
                    INTO v_creteni, v_cmotmov
                    FROM seguros s, movseguro m, sin_siniestro si
                   WHERE s.sseguro = m.sseguro
                     AND s.sseguro = si.sseguro
                     AND si.nsinies = pnsinies
                     AND m.nmovimi = (SELECT MAX(nmovimi)
                                        FROM movseguro mm
                                       WHERE mm.sseguro = m.sseguro) - 1
                     AND m.cmotmov IN(SELECT cau.cmotmov
                                        FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
                                       WHERE si.ccausin = cau.ccausin
                                         AND si.cmotsin = cau.cmotsin
                                         AND si.sseguro = s.sseguro
                                         AND s.sproduc = gar.sproduc);
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     NULL;
               END;

               paso := 18;

               IF v_creteni = 1 THEN
                  num_err := f_movseguro(vsseguro, NULL, 111, NULL, v_efecto, NULL, NULL, 0,
                                         NULL, vnmovimi, f_sysdate);

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               END IF;
            ELSE   -- anulación de pÃ³liza
               -- Bug 16276 - 19/10/2010 - AMC
               IF vcsituac <> 2 THEN
                  paso := 19;
                  num_err :=
                     pac_anulacion.f_anulacion_poliza
                                                     (vsseguro, 505,

                                                      -- BUG 18423 - I - 27/12/2011 - JLB - LCOL000 - Multimoneda
                                                                                                            --  1,
                                                      pac_monedas.f_moneda_producto(vsproduc),

                                                      -- BUG 18423 - F - 27/12/2011 - JLB - LCOL000 - Multimoneda
                                                      v_efecto, 0, 1, NULL, NULL, NULL);

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               END IF;
            -- Fi Bug 16276 - 19/10/2010 - AMC
            END IF;
         ELSIF vcmovseg = 10 THEN   -- retener pÃ³liza
            -- ini Bug 0022284 - 24/05/2012 - JMF
            IF vcsituac IN(2, 5) THEN
               -- Si la póliza esta anulada o en propuesta suplemento, no generamos retención.
               NULL;
            ELSE
               -- Bug 13435 - RSC - 05/05/2010 - CRE
               IF vfcarpro IS NULL THEN
                  paso := 20;
                  -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (LEAST(v_efecto, vfcarpro))
                  num_err := f_movseguro(vsseguro, NULL, motivo, vcmovseg, v_efecto, NULL,
                                         NULL, 0, NULL, vnmovimi, f_sysdate);
               ELSE
                  paso := 21;
                  -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (LEAST(v_efecto, vfcarpro))
                  num_err := f_movseguro(vsseguro, NULL, motivo, vcmovseg,
                                         LEAST(v_efecto, vfcarpro), NULL, NULL, 0, NULL,
                                         vnmovimi, f_sysdate);
               END IF;

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;
            END IF;
         -- fin Bug 0022284 - 24/05/2012 - JMF
         ELSIF vcmovseg = 11 THEN   -- desretener póliza
            -- ini Bug 0022284 - 24/05/2012 - JMF
            IF vcsituac IN(2, 5) THEN
               -- Si la póliza esta anulada o en propuesta suplemento, no generamos retención.
               NULL;
            ELSE
               --Controlamos si la poliza esta retenida por haber generado un siniestro.
               --Recuperamos el numero del seguro
               paso := 22;

               BEGIN
                  -- Bug 13435 - 20/04/2010 - AMC
                  SELECT creteni, cmotmov, fcarpro
                    INTO v_creteni, v_cmotmov, vfcarpro
                    FROM seguros s, movseguro m, sin_siniestro si
                   WHERE s.sseguro = m.sseguro
                     AND s.sseguro = si.sseguro
                     AND si.nsinies = pnsinies
                     AND m.nmovimi = (SELECT MAX(nmovimi)
                                        FROM movseguro mm
                                       WHERE mm.sseguro = m.sseguro)
                     AND m.cmotmov IN(SELECT cmotmov
                                        FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
                                       WHERE si.ccausin = cau.ccausin
                                         AND si.cmotsin = cau.cmotsin
                                         AND si.sseguro = s.sseguro
                                         AND s.sproduc = gar.sproduc);
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     NULL;
               END;

               IF v_creteni = 1 THEN
                  -- Bug 13435 - RSC - 05/05/2010 - CRE
                  IF vfcarpro IS NULL THEN
                     paso := 23;
                     -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (LEAST(v_efecto, vfcarpro))
                     num_err := f_movseguro(vsseguro, NULL, motivo, NULL, v_efecto, NULL,
                                            NULL, 0, NULL, vnmovimi, f_sysdate);
                  ELSE
                     paso := 24;
                     -- Ajuste en el cÃ¡lculo de la fecha de efecto del suplemento automÃ¡tico (LEAST(v_efecto, vfcarpro))
                     num_err := f_movseguro(vsseguro, NULL, motivo, NULL,
                                            LEAST(v_efecto, vfcarpro), NULL, NULL, 0, NULL,
                                            vnmovimi, f_sysdate);
                  END IF;

                  --Fi Bug 13435 - 20/04/2010 - AMC
                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               END IF;
            END IF;
         -- fin Bug 0022284 - 24/05/2012 - JMF
         -- 28813:ASN:04/11/2013 ini
         ELSIF vcmovseg = 5 THEN   -- Recordatorio
            num_err := f_movseguro(vsseguro, NULL, motivo, NULL, v_efecto, NULL, NULL, 0,
                                   NULL, vnmovimi, f_sysdate);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         -- 28813:ASN:04/11/2013 fin
         ELSIF motivo = 265 THEN   -- suplemento Fallecimiento de un Titular
            -- Si la póliza no tiene un rescate
            -- (para el caso de las pólizas de migración que
            -- se abre el siniestro de baja de fallec. ene l momento de hacer el rescate.
            -- En este caso no queremos que haga el suplemento)
            paso := 25;
            num_err := pac_sin_rescates.f_rescate_total_abierto(vsseguro, resc_abierto);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;

            paso := 26;

            IF resc_abierto = 0 THEN
               -- Se realiza el suplemento
               n_primfall := 0;   -- Bug 0012822 - 24/02/2010 - JMF

               IF NVL(f_parproductos_v(vsproduc, 'FISCALIDAD_2_CABEZAS'), 0) = 1 THEN
                  paso := 27;

                  SELECT sperson
                    INTO vsperson_fallec
                    FROM sin_siniestro si, asegurados aseg
                   WHERE si.sseguro = aseg.sseguro
                     AND si.nasegur = aseg.norden
                     AND si.nsinies = pnsinies;

                  paso := 28;

                  -- ini Bug 0012822 - 24/02/2010 - JMF
                  SELECT COUNT(1)
                    INTO n_primfall
                    FROM tomadores
                   WHERE sseguro = vsseguro
                     AND sperson = vsperson_fallec;
               -- fin Bug 0012822 - 24/02/2010 - JMF
               END IF;

               paso := 29;
               num_err := pac_ref_contrata_comu.f_suplemento_fall_asegurado(vsseguro,
                                                                            TRUNC(f_sysdate),
                                                                            vsperson_fallec,
                                                                            vfsinies, vcdelega,
                                                                            NULL, f_idiomauser,
                                                                            0, vocoderror,
                                                                            vomsgerror);

               IF num_err IS NULL THEN   -- Ha habido algÃ¿Âºn error
                  RETURN vocoderror;
               END IF;

               paso := 30;

               -- Se actualiza el campo siniestros.nmovimi con el Número de movimiento del suplemento realizado
               SELECT MAX(nmovimi)
                 INTO vnmovimi
                 FROM movseguro
                WHERE sseguro = vsseguro;

               paso := 31;

               UPDATE sin_siniestro
                  SET nmovimi = vnmovimi
                WHERE nsinies = pnsinies;

               paso := 32;

               -- Si el asegurado que queda vigente es menor de edad la póliza debe quedar retenida
               SELECT sperson
                 INTO vsperson_vigente
                 FROM asegurados
                WHERE sseguro = vsseguro
                  AND ffecfin IS NULL;

               -- ini Bug 0012822 - 24/02/2010 - JMF
               -- Si falleción el primer titular, retenemos.
               IF n_primfall > 0 THEN
                  paso := 33;
                  num_err := pac_emision_mv.f_retener_poliza('SEG', vsseguro, 1, vnmovimi, 6,
                                                             1, TRUNC(f_sysdate));

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               END IF;

               paso := 34;
               -- fin Bug 0012822 - 24/02/2010 - JMF
               vedad := fedadaseg(0, vsperson_vigente, TO_CHAR(f_sysdate, 'YYYYMMDD'), 2);

               IF vedad < 18 THEN
                  paso := 35;
                  num_err := pac_emision_mv.f_retener_poliza('SEG', vsseguro, 1, vnmovimi, 4,
                                                             1, TRUNC(f_sysdate));

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               --RETURN 180456; -- El titular que queda vigente es menor de edad. La póliza quedarÃ¡ retenida. Consulte con la CÃ¿Â­a.
               END IF;
            END IF;
         ELSIF motivo = 510 THEN   -- Al abrir siniestro realizar el Rescate (Multilink)
            paso := 36;
            -- RSC 11/12/2007
            num_err := pac_siniestros.f_constar_fallecimiento(vsseguro, vsproduc, pnsinies,
                                                              vfsinies);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;

            --  El Ã¿Âºnico producto que tendrÃ¡ parametrizado este motivo(510) al abrir un siniestro serÃ¡ MULTILINK.
            --  Por tanto preveo que por esta rama solo se entrarÃ¡ cuando se produzca un Fallecimiento de primer
            --  asegurado en el producto MultiLink de 2_cabezas.
            -- Realizamos la solicitud de rescate (aquellos que tengan motivo 510 como acción al abrir)
            paso := 37;

            SELECT cagente, cidioma
              INTO vagente, vidiom
              FROM seguros
             WHERE sseguro = vsseguro;

            paso := 38;
            --num_err := PUB_SINIES_ULK.f_sol_rescate_total(vsseguro, vagente, vfsinies, vidiom, F_IdiomaUser,  NULL, voCODERROR, voMSGERROR);
            num_err := pac_ref_sinies_ulk.f_sol_rescate_total(vsseguro, vagente,
                                                              TRUNC(f_sysdate), vidiom,
                                                              f_idiomauser, NULL, vocoderror,
                                                              vomsgerror);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         ELSIF motivo = 550 THEN
            paso := 39;

            -- Obtener la valoracion del siniestro para saber el importe
            -- del rescate y pasarselo a la función PUB_CONTRATA_COMU.f_suplemento_rescate_parcial
            SELECT cmotsin
              INTO vcmotsin
              FROM sin_siniestro
             WHERE nsinies = pnsinies;

            paso := 40;
            vactivi := pac_seguros.ff_get_actividad(vsseguro, vnriesgo);
            paso := 41;
            -- INI RLLF 09/12/2015 0038723: Al siniestrar la póliza de Vida individual afectando la cobertura de ITP Finalización del siniestro
            /*SELECT cgarant
              INTO vcgarant
              FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
             WHERE cau.ccausin = xccausin
               AND cau.cmotsin = vcmotsin
               AND cau.scaumot = gar.scaumot
               AND gar.sproduc = vsproduc
               AND gar.cactivi = vactivi;*/
            -- FIN RLLF 09/12/2015 0038723: Al siniestrar la póliza de Vida individual afectando la cobertura de ITP Finalización del siniestro
            paso := 42;

            SELECT icaprie
              INTO virescatep
              FROM sin_tramita_reserva v
             WHERE nsinies = pnsinies
               AND ctipres = 1
-- BUG 18423/104212 - 25/01/2012 - JMP - Garantizamos que la reserva estarÃ¡ en la moneda del producto
               AND cgarant = vcgarant
               AND nmovres = (SELECT MAX(nmovres)
                                FROM sin_tramita_reserva
                               WHERE nsinies = pnsinies
                                 AND ctipres = 1
-- BUG 18423/104212 - 25/01/2012 - JMP - Garantizamos que la reserva estarÃ¡ en la moneda del producto
                                 AND cgarant = vcgarant);

            paso := 43;

            -- Bug 12136 - JRH - 11/03/2010 - JRH - Desretener antes la póliza si hace falta
            BEGIN
               SELECT creteni, cmotmov
                 INTO v_creteni, v_cmotmov
                 FROM seguros s, movseguro m, sin_siniestro si
                WHERE s.sseguro = m.sseguro
                  AND s.sseguro = si.sseguro
                  AND si.nsinies = pnsinies
                  AND m.nmovimi = (SELECT MAX(nmovimi)
                                     FROM movseguro mm
                                    WHERE mm.sseguro = m.sseguro)
                  AND m.cmotmov IN(SELECT cmotmov
                                     FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
                                    WHERE si.ccausin = cau.ccausin
                                      AND si.cmotsin = cau.cmotsin
                                      AND si.sseguro = s.sseguro
                                      AND s.sproduc = gar.sproduc);
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  NULL;
            END;

            paso := 44;

            IF v_creteni = 1 THEN
               --num_err := f_movseguro(vsseguro, NULL, 111, NULL, TRUNC(f_sysdate), NULL, NULL, 0,
                --                      NULL, vnmovimi, f_sysdate);
               UPDATE seguros
                  SET creteni = 0
                WHERE sseguro = vsseguro;
                               --JRH Sera el rescate parcial el que lo active.
            --IF num_err <> 0 THEN
            --   RETURN num_err;
            --END IF;
            END IF;

            -- Fi Bug 12136 - JRH - 11/03/2010
            paso := 45;
            -- Retarificación de la póliza para actualizar provisiones, etc
            num_err := pac_ref_contrata_comu.f_suplemento_rescate_parcial(vnpoliza, vncertif,
                                                                          TRUNC(f_sysdate),
                                                                          virescatep, vcdelega,
                                                                          NULL, f_idiomauser,
                                                                          0, vocoderror,
                                                                          vomsgerror);

            IF num_err IS NULL THEN   -- Ha habido algÃ¿Âºn error
               RETURN vocoderror;
            END IF;

            paso := 46;

            -- Se actualiza el campo siniestros.nmovimi con el Número de movimiento del suplemento realizado
            SELECT MAX(nmovimi)
              INTO vnmovimi
              FROM movseguro
             WHERE sseguro = vsseguro;

            paso := 47;

            UPDATE sin_siniestro
               SET nmovimi = vnmovimi
             WHERE nsinies = pnsinies;
         /****************************************************************
         (*) Dado que la función de tarificación de productos con EVOLUPROVMATSEG
             tiene en cuenta aÃ¿Â±os enteros con la fecha de efecto de la póliza, al
             solicitar un rescate parcial en cualquier momento esta tarificación
             generarÃ¡ unos valores desviados. QuedarÃ¡ pendiente analizar el problema
             y ver quÃ¿Â© tramos o imporets grabar en EVOLUPROVMATSEG. Queda abierto
             tambiÃ©n la respuesta que nos diga Sa Nostra al respecto de este tema.
         *****************************************************************/--Ini Bug.: 8947 - 28/05/09 - ICV - GestiÃ³n de Cobertura Enfermedad Grave
         ELSIF motivo = 516 THEN
            paso := 48;

            --Controlamos si la poliza esta retenida por haber generado un siniestro.
            SELECT creteni, fcarpro
              INTO v_creteni, vfcarpro
              FROM seguros
             WHERE sseguro = vsseguro;

            paso := 49;

            IF v_creteni = 1 THEN   --Desretenemos para generar el suplemento
               UPDATE seguros
                  SET creteni = 0
                WHERE sseguro = vsseguro;
            END IF;

            paso := 50;

            SELECT cmotsin
              INTO vcmotsin
              FROM sin_siniestro
             WHERE nsinies = pnsinies;

            paso := 51;
            vactivi := pac_seguros.ff_get_actividad(vsseguro, vnriesgo);
            paso := 52;
            -- INI RLLF 09/12/2015 0038723: Al siniestrar la póliza de Vida individual afectando la cobertura de ITP Finalización del siniestro
            /*SELECT cgarant
              INTO vcgarant
              FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
             WHERE cau.ccausin = xccausin
               AND cau.cmotsin = vcmotsin
               AND cau.scaumot = gar.scaumot
               AND gar.sproduc = vsproduc
               AND gar.cactivi = vactivi;*/
            -- FIN RLLF 09/12/2015 0038723: Al siniestrar la póliza de Vida individual afectando la cobertura de ITP Finalización del siniestro
            paso := 53;

            SELECT COUNT('1')
              INTO vvalora
              FROM sin_tramita_reserva v
             WHERE nsinies = pnsinies
               AND cgarant = vcgarant
               AND fmovres = (SELECT MAX(fmovres)
                                FROM sin_tramita_reserva
                               WHERE nsinies = pnsinies
                                 AND cgarant = vcgarant);

            IF vvalora = 0 THEN   --Si no tiene valoración devolvemos error
               RETURN 102784;
            END IF;

            -- ini Bug 0022588 - 06/07/2012 - JMF
            DECLARE
               v_tfecrec      pds_supl_config.tfecrec%TYPE;
            BEGIN
               SELECT MIN(tfecrec)
                 INTO v_tfecrec
                 FROM pds_supl_config
                WHERE cmotmov = 516
                  AND sproduc = vsproduc;

               IF v_tfecrec = 'F_FCARPRO' THEN
                  v_fecvtogar := vfcarpro;
               ELSE
                  v_fecvtogar := TRUNC(f_sysdate);
               END IF;

               -- Bug POSINS-65 - 10/06/2016 - JTT
               -- Si la fecha de suplemento es superior a la fecha de proxima cartera igualmos la fecha para que se pueda realizar el suplemento.
               IF v_fecvtogar > vfcarpro THEN
                  v_fecvtogar := vfcarpro;
               END IF;
               -- Fin bug POSINS-65

               paso := 54;
               -- Bug 12199 - RSC - 27/11/2009 - 0012199: CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
               --Generamos el suplemento por vto_garantia (tiene en cuenta gar. dependientes)
               num_err := pac_sup_general.f_supl_vto_garantia(vsseguro, vnriesgo, v_fecvtogar,
                                                              motivo, vcgarant, vnmovsup, NULL);

               -- Fin Bug 12199
               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;
            END;

            -- fin Bug 0022588 - 06/07/2012 - JMF
            paso := 55;

            -- Se actualiza el campo siniestros.nmovimi con el Número de movimiento del suplemento realizado
            SELECT MAX(nmovimi)
              INTO vnmovimi
              FROM movseguro
             WHERE sseguro = vsseguro;

            paso := 56;

            UPDATE sin_siniestro
               SET nmovimi = vnmovimi
             WHERE nsinies = pnsinies;
            --Fi Bug.: 8947
            -- Bug 14881 - 07/06/2010 - AMC

           -- ini rllf 02/02/2016 38660 Elimina garantia de exoneracion con la de ITP
            IF f_parproductos_v(vsproduc, 'ELIMINA_ITPEXO') = 1 AND
                        paccion=2  AND vcgarant=2 THEN
             num_err := pac_sup_general.f_supl_vto_garantia(vsseguro, vnriesgo, v_fecvtogar,
                                                                                     motivo, 700, vnmovsup, NULL);

             IF num_err <> 0 THEN
              RETURN num_err;
             END IF;

             -- Se actualiza el campo siniestros.nmovimi con el Número de movimiento del suplemento realizado
             SELECT MAX(nmovimi)
                INTO vnmovimi
                FROM movseguro
               WHERE sseguro = vsseguro;

             paso := 56;

             UPDATE sin_siniestro
              SET nmovimi = vnmovimi
            WHERE nsinies = pnsinies;
           END IF;
          -- fin rllf 02/02/2016 38660 Elimina garantia de exoneracion con la de ITP

         ELSIF motivo = 530 THEN
            paso := 57;

            SELECT fcaranu
              INTO vfcaranu
              FROM seguros
             WHERE sseguro = vsseguro;

            paso := 58;

            SELECT MAX(nmovimi)
              INTO vnmovimi
              FROM movseguro
             WHERE sseguro = vsseguro;

            paso := 59;
            vcpregun := pac_parametros.f_parproducto_n(vsproduc, 'CPREGUN_VTOGARAN');

            -- DRA:11/06/2014:Validación que no sea NULL
            IF vcpregun IS NOT NULL THEN
               BEGIN
                  paso := 60;

                  INSERT INTO pregungaranseg
                              (sseguro, nriesgo, cgarant, nmovimi, cpregun,
                               crespue, nmovima, finiefe)
                       VALUES (vsseguro, vnriesgo, vcgarant, vnmovimi, vcpregun,
                               TO_NUMBER(TO_CHAR(vfcaranu, 'yyyymmdd')), vnmovimi, vfsinies);
               EXCEPTION
                  WHEN DUP_VAL_ON_INDEX THEN
                     paso := 61;

                     UPDATE pregungaranseg
                        SET crespue = TO_NUMBER(TO_CHAR(vfcaranu, 'yyyymmdd'))
                      WHERE sseguro = vsseguro
                        AND nriesgo = vnriesgo
                        AND cgarant = vcgarant
                        AND nmovimi = vnmovimi
                        AND cpregun = vcpregun
                        AND nmovima = vnmovimi
                        AND finiefe = vfsinies;
               END;
            END IF;

            paso := 62;
            num_err := f_movseguro(vsseguro, NULL, motivo, NULL, vfsinies, NULL, NULL, 0, NULL,
                                   vnmovimi, f_sysdate);
         ELSIF motivo = 531 THEN
            paso := 63;

            SELECT MAX(nmovimi)
              INTO vnmovimi
              FROM movseguro
             WHERE sseguro = vsseguro;

            paso := 64;
            vcpregun := pac_parametros.f_parproducto_n(vsproduc, 'CPREGUN_VTOGARAN');

            -- DRA:11/06/2014:Validación que no sea NULL
            IF vcpregun IS NOT NULL THEN
               paso := 65;

               DELETE      pregungaranseg
                     WHERE sseguro = vsseguro
                       AND nriesgo = vnriesgo
                       AND cgarant = vcgarant
                       AND nmovimi = vnmovimi
                       AND cpregun = vcpregun
                       AND nmovima = vnmovimi
                       AND finiefe = vfsinies;
            END IF;

            paso := 66;
            num_err := f_movseguro(vsseguro, NULL, motivo, NULL, vfsinies, NULL, NULL, 0, NULL,
                                   vnmovimi, f_sysdate);
         -- bug 19416:ASN:14/12/2011 ini
         ELSIF motivo = 822
               AND paccion = 1 THEN   -- Exoneracion al abrir siniestro
            -- Creamos suplemento multiple
            -- baja garantias afectadas + cambio cta bancaria + cambio revalorizacion
            num_err := pac_sup_general.f_supl_exonera(vsseguro, vnriesgo, TRUNC(f_sysdate),
                                                      822, dummy, NULL);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         ELSIF motivo = 822
               AND paccion = 2 THEN   -- Exoneracion al cerrar siniestro de ITP
            -- desretner la poliza
            IF vcreteni <> 0 THEN
               UPDATE seguros
                  SET creteni = 0
                WHERE sseguro = vsseguro;

               SELECT COUNT(*)
                 INTO count_700
                 FROM garanseg g
                WHERE g.sseguro = vsseguro
                  AND g.nmovimi = (SELECT MAX(g1.nmovimi)
                                     FROM garanseg g1
                                    WHERE g1.sseguro = g.sseguro)
                  AND g.cgarant = NVL(pac_parametros.f_parproducto_n(vsproduc,
                                                                     'CGARANT_EXONERACION'),
                                      700)
                  AND g.nriesgo = vnriesgo;

               IF count_700 = 0 THEN
                  num_err :=
                     pac_anulacion.f_anulacion_poliza
                                                     (vsseguro, 505,
                                                      pac_monedas.f_moneda_producto(vsproduc),
                                                      TRUNC(f_sysdate), 0, 1, NULL, NULL,
                                                      NULL);

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               ELSE
                  -- Crear siniestro exoneracion de primas
                  vdescri := f_axis_literales(9902662, f_usu_idioma);
                  -- finalizacion siniestro ITP
                  num_err :=
                     pac_siniestros.f_inicializa_sin
                                 (vsseguro, vnriesgo,
                                  NVL(pac_parametros.f_parproducto_n(vsproduc,
                                                                     'CGARANT_EXONERACION'),
                                      700),
                                  vfnotifi, TRUNC(f_sysdate), vdescri,
                                  NVL(pac_parametros.f_parproducto_n(vsproduc,
                                                                     'CCAUSIN_EXONERACION'),
                                      2410),
                                  NVL(pac_parametros.f_parproducto_n(vsproduc,
                                                                     'CMOTSIN_EXONERACION'),
                                      1),
                                  0, v_nsinies, v_nmovimi, v_ntramit);

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               END IF;
            END IF;
         -- bug 19416:ASN:14/12/2011 fin
         -- bug 21131:ASN:09/02/2012 ini
         ELSIF motivo = 826 THEN   -- reduccion capital
            paso := 500;

            --Desretenemos para generar el suplemento
            UPDATE seguros
               SET creteni = 0
             WHERE sseguro = vsseguro
               AND creteni != 0;

            paso := 501;

            SELECT cmotsin
              INTO vcmotsin
              FROM sin_siniestro
             WHERE nsinies = pnsinies;

            paso := 502;
            vactivi := pac_seguros.ff_get_actividad(vsseguro, vnriesgo);
            paso := 503;

            SELECT cgarant
              INTO vcgarant
              FROM sin_causa_motivo cau, sin_gar_causa_motivo gar
             WHERE cau.ccausin = xccausin
               AND cau.cmotsin = vcmotsin
               AND cau.scaumot = gar.scaumot
               AND gar.sproduc = vsproduc
               AND gar.cactivi = vactivi;

            paso := 504;

            SELECT SUM(ipago)
              INTO v_ipago
              FROM sin_tramita_reserva v
             WHERE nsinies = pnsinies
               AND cgarant = vcgarant
               AND ctipres = 1
               AND nmovres = (SELECT MAX(nmovres)
                                FROM sin_tramita_reserva
                               WHERE nsinies = pnsinies
                                 AND cgarant = vcgarant
                                 AND ctipres = 1);

            IF v_ipago > 0 THEN
               num_err := pac_sup_general.f_reduce_capital(vsseguro, vnriesgo,
                                                           TRUNC(f_sysdate), motivo, vcgarant,
                                                           v_ipago, vnmovsup, NULL);
            END IF;

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;

            paso := 505;

            -- Se actualiza el campo siniestros.nmovimi con el Número de movimiento del suplemento realizado
            SELECT MAX(nmovimi)
              INTO vnmovimi
              FROM movseguro
             WHERE sseguro = vsseguro;

            paso := 506;

            UPDATE sin_siniestro
               SET nmovimi = vnmovimi
             WHERE nsinies = pnsinies;
         -- bug 21131:ASN:09/02/2012 fin
         END IF;
      -- Fi Bug 14881 - 07/06/2010 - AMC
      END IF;

      -- bug 26472:NSS:04/04/2013 fin
      RETURN 0;
   EXCEPTION
      WHEN e_salida THEN
         -- Bug 0018812 - 21/06/2011 - JMF
         RETURN 0;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, getuser, 'pac_siniestros.f_accion_siniestro ERROR', paso,
                     vparam, SQLERRM);
         RETURN 140999;
   END f_accion_siniestro_gar;

   /*  Funcion que reajusta un seguro cuando se finaliza un siniestro que ha sido reabrierto*/
   FUNCTION f_reajustar_ctaseguro(
      p_nsinies IN sin_siniestro.nsinies%TYPE,
      p_sseguro IN NUMBER)
      RETURN NUMBER IS
      v_ivalora      sin_tramita_reserva.ireserva%TYPE;
      v_imovimi      ctaseguro.imovimi%TYPE;   -- NUMBER(13,2)
      num_err        NUMBER;
      v_sproduc      NUMBER;
      -- Bug 20241 - RSC - 25/11/2011
      v_cramo        seguros.cramo%TYPE;
      v_cmodali      seguros.cmodali%TYPE;
      v_ctipseg      seguros.ctipseg%TYPE;
      v_ccolect      seguros.ccolect%TYPE;
      v_cactivi      seguros.cactivi%TYPE;
      -- Fin Bug 20241
      xnnumlin       NUMBER;   --BUG20419--09/12/2011--JTS
      v_cmoneda      NUMBER;   --Bug 24043 - MDS - 11/10/2012
   BEGIN
      SELECT sproduc, cramo, cmodali, ctipseg, ccolect, cactivi
        INTO v_sproduc, v_cramo, v_cmodali, v_ctipseg, v_ccolect, v_cactivi
        FROM seguros
       WHERE sseguro = p_sseguro;

      -- Ini Bug 24043 - MDS - 11/10/2012
      -- buscar la moneda del producto
      SELECT DECODE(cdivisa, 3, 1, cdivisa) v_cmoneda
        INTO v_cmoneda
        FROM productos
       WHERE sproduc = v_sproduc;

      -- Fin Bug 24043 - MDS - 11/10/2012

      -- Bug 9276 - 27/02/2009 - APD -Se busca el sumatorio de todos los imovimi para el siniestros.
      -- De esta manera tambiÃ©n se estÃ¡ buscando si existe o no el apunte en ctaseguro
      IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
         --Bug 24043 - MDS - 11/10/2012 : tener en cuenta el f_round
         SELECT NVL(SUM(f_round(imovimi, v_cmoneda)), 0)
           INTO v_imovimi
           FROM ctaseguro
          WHERE sseguro = p_sseguro
            AND nsinies = p_nsinies
            AND cesta IS NOT NULL;
      ELSE
         --Bug 24043 - MDS - 11/10/2012 : tener en cuenta el f_round
         SELECT NVL(SUM(f_round(imovimi, v_cmoneda)), 0)
           INTO v_imovimi
           FROM ctaseguro
          WHERE sseguro = p_sseguro
            AND nsinies = p_nsinies;
      END IF;

      -- Bug 9276 - 27/02/2009 - APD -Se busca el sumatorio de todos los ivalora para el siniestros.
      IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
         -- Bug 9276 - 27/02/2009 - APD -Se busca el sumatorio de todos los ivalora para el siniestros.
         --Bug 24043 - MDS - 11/10/2012 : tener en cuenta el f_round, y antes el nvl ya que icaprie puede ser nulo
         SELECT NVL(SUM(f_round(NVL(icaprie, 0), v_cmoneda)), 0)
           INTO v_ivalora
           FROM sin_tramita_reserva
          WHERE nsinies = p_nsinies
            AND ctipres = 1
-- BUG 18423/104212 - 25/01/2012 - JMP - Garantizamos que la reserva estarÃ¡ en la moneda del producto
            AND NVL(f_pargaranpro_v(v_cramo, v_cmodali, v_ctipseg, v_ccolect, v_cactivi,
                                    sin_tramita_reserva.cgarant, 'GAR_CONTRA_CTASEGURO'),
                    1) = 1   --Bug 20241 - RSC - 25/11/2011
            AND nmovres = (SELECT MAX(nmovres)
                             FROM sin_tramita_reserva
                            WHERE nsinies = p_nsinies
                              AND ctipres = 1
-- BUG 18423/104212 - 25/01/2012 - JMP - Garantizamos que la reserva estarÃ¡ en la moneda del producto
                              AND cgarant <> 9998);
      ELSE
         -- Bug 9276 - 27/02/2009 - APD -Se busca el sumatorio de todos los ivalora para el siniestros.
         --Bug 24043 - MDS - 11/10/2012 : tener en cuenta el f_round
         SELECT NVL(SUM(f_round(ireserva, v_cmoneda)), 0)
           INTO v_ivalora
           FROM sin_tramita_reserva
          WHERE nsinies = p_nsinies
            AND ctipres = 1
-- BUG 18423/104212 - 25/01/2012 - JMP - Garantizamos que la reserva estarÃ¡ en la moneda del producto
            AND NVL(f_pargaranpro_v(v_cramo, v_cmodali, v_ctipseg, v_ccolect, v_cactivi,
                                    sin_tramita_reserva.cgarant, 'GAR_CONTRA_CTASEGURO'),
                    1) = 1   --Bug 20241 - RSC - 25/11/2011
            AND fmovres = (SELECT MAX(fmovres)
                             FROM sin_tramita_reserva
                            WHERE nsinies = p_nsinies
                              AND ctipres = 1
-- BUG 18423/104212 - 25/01/2012 - JMP - Garantizamos que la reserva estarÃ¡ en la moneda del producto
                              AND cgarant <> 9998);
      END IF;

      IF v_imovimi = 0 THEN
         RETURN 0;
      -- Bug 9276 - 27/02/2009 - APD -No existe el apunte en ctaseguro
      ELSIF v_imovimi = v_ivalora THEN
         RETURN 1;
      -- Bug 9276 - 27/02/2009 - APD - Ya existe el apunte en ctaseguro
      ELSE   -- Bug 9276 - 27/02/2009 - APD - v_imovimi <> v_ivalora
         FOR reg IN (SELECT sseguro, ffecmov, fvalmov, cmovimi, imovimi, nsinies
                       FROM ctaseguro
                      WHERE sseguro = p_sseguro
                        AND nsinies = p_nsinies) LOOP
            -- Bug 9276 - 27/02/2009 - APD - se deben anular los apuntes en ctaseguro
            -- para volverlos a introducir llamando a pac_sin_rescates.f_finaliza_rescates
            -- Se inserta el movimiento 10 (Anulacion prestacion)
            num_err := pac_ctaseguro.f_insctaseguro(reg.sseguro, f_sysdate, NULL, reg.ffecmov,
                                                    reg.fvalmov, 10, reg.imovimi, 0, NULL, 0,
                                                    0, reg.nsinies, NULL, NULL);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;

            --BUG20419--09/12/2011--JTS
            IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
               num_err := pac_sin_rescates.f_distribuye_ctaseguro(reg.sseguro, xnnumlin,
                                                                  reg.fvalmov, 10,
                                                                  reg.imovimi, 0, p_nsinies);
            END IF;

            --BFP 16/01/2012 bug: 20419: CRE802-CRE - Sinistre PPJ dinÃ¿Â mic  HEM CANVIAT reg.cmovimi PEL VALOR 10
            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;
         --FiBUG20419

         -- Bug 9276 - 27/02/2009 - APD - Se han anulado los apuntes introducidos anteriormente
-- y despues se tendran que volver a introducir llamando a pac_sin_rescates.f_finaliza_rescates
         END LOOP;
      END IF;

      IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
         --Bug 24043 - MDS - 11/10/2012 : tener en cuenta el f_round
         SELECT NVL(SUM(f_round(imovimi, v_cmoneda)), 0)
           INTO v_imovimi
           FROM ctaseguro_shadow
          WHERE sseguro = p_sseguro
            AND nsinies = p_nsinies
            AND cesta IS NOT NULL;
      ELSE
         --Bug 24043 - MDS - 11/10/2012 : tener en cuenta el f_round
         SELECT NVL(SUM(f_round(imovimi, v_cmoneda)), 0)
           INTO v_imovimi
           FROM ctaseguro_shadow
          WHERE sseguro = p_sseguro
            AND nsinies = p_nsinies;
      END IF;

      IF pac_ctaseguro.f_tiene_ctashadow(p_sseguro, NULL) = 1 THEN
         IF v_imovimi = 0 THEN
            RETURN 0;
         -- Bug 9276 - 27/02/2009 - APD -No existe el apunte en ctaseguro
         ELSIF v_imovimi = v_ivalora THEN
            RETURN 1;
         -- Bug 9276 - 27/02/2009 - APD - Ya existe el apunte en ctaseguro
         ELSE   -- Bug 9276 - 27/02/2009 - APD - v_imovimi <> v_ivalora
            FOR reg IN (SELECT sseguro, ffecmov, fvalmov, cmovimi, imovimi, nsinies
                          FROM ctaseguro_shadow
                         WHERE sseguro = p_sseguro
                           AND nsinies = p_nsinies) LOOP
               num_err := pac_ctaseguro.f_insctaseguro_shw(reg.sseguro, f_sysdate, NULL,
                                                           reg.ffecmov, reg.fvalmov, 10,
                                                           reg.imovimi, 0, NULL, 0, 0,
                                                           reg.nsinies, NULL, NULL);

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;

               --BUG20419--09/12/2011--JTS
               IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
                  num_err := pac_sin_rescates.f_distribuye_ctaseguro_shw(reg.sseguro,
                                                                         xnnumlin,
                                                                         reg.fvalmov, 10,
                                                                         reg.imovimi, 0,
                                                                         p_nsinies);
               END IF;

               --BFP 16/01/2012 bug: 20419: CRE802-CRE - Sinistre PPJ dinÃ¿Â mic  HEM CANVIAT reg.cmovimi PEL VALOR 10
               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;
            END LOOP;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN 104882;   -- Error al leer de la tabla CTASEGURO
   END f_reajustar_ctaseguro;

-----------------------------------------------------------------------------------
   /*
     Función que realiza o deja la constancia del fallecimiento del asegurado.
    Solo se utiliza en el contecto de fallecimiento del 1er asegurado en seguro 2 Cabezas.
    Parte de esta modificación ya se hace en f_inicializar_siniestro.
   */
   FUNCTION f_constar_fallecimiento(
      vsseguro IN NUMBER,
      vsproduc IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      vfsinies IN DATE)
      RETURN NUMBER IS
      vsperson_fallec NUMBER;
      vsperson2      NUMBER;
      vcdomici_tom1  NUMBER;
      vcdomici_aseg2 NUMBER;
      vnorden        NUMBER;
      num_err        NUMBER;
	  /* Cambios de  tarea IAXIS-13044 :START */               
      VPERSON_NUM_ID PER_PERSONAS.NNUMIDE%type;	  
	  /* Cambios de  tarea IAXIS-13044 :END */               
   BEGIN
      --Realizamos la baja del asegurado fallecido (producción_comu.f_cambio_fall_asegurado)
      IF NVL(f_parproductos_v(vsproduc, '2_CABEZAS'), 0) = 1 THEN
         SELECT sperson
           INTO vsperson_fallec
           FROM sin_siniestro si, asegurados aseg
          WHERE si.sseguro = aseg.sseguro
            AND si.nasegur = aseg.norden
            AND si.nsinies = pnsinies;
      END IF;

      -- Modificar los campos ESTASSEGURATS.FFECFIN y ESTASSEGURATS.FFECMUE con la fecha de fallecimiento
      UPDATE asegurados
         SET ffecfin = vfsinies,
             ffecmue = vfsinies
       WHERE sseguro = vsseguro
         AND sperson = vsperson_fallec;

      -- Se marca la persona como Fallecida
      UPDATE per_personas
         SET cestper = 2   -- Fallecida
       WHERE sperson = vsperson_fallec;

      -- Se da de baja la garantÃ­a de cobertura adicional de fallecimiento o accidentes si la tuviera contratada
      SELECT norden
        INTO vnorden
        FROM asegurados
       WHERE sseguro = vsseguro
         AND sperson = vsperson_fallec;

      -- Modificar el tomador del seguro si el asegurado fallecido es el primer titular
      IF vnorden = 1 THEN   -- la persona fallecida es el primer titular
         -- Se busca el sperson del segundo asegurado
         SELECT sperson
           INTO vsperson2
           FROM asegurados
          WHERE sseguro = vsseguro
            AND norden = 2;

         -- Se busca la direccion del contrato
         SELECT cdomici
           INTO vcdomici_tom1
           FROM tomadores
          WHERE sseguro = vsseguro
            AND sperson = vsperson_fallec;

         -- Se comprueba si la dirección del contrato (dirección del tomador) ya existe en las direcciones del asegurado 2
         num_err := pac_personas.f_valida_misma_direccion(vsperson_fallec, vcdomici_tom1,
                                                          vsperson2, vcdomici_aseg2);

         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;

         IF vcdomici_aseg2 IS NULL THEN
            -- No existe la dirección del contrato entre las direcciones del asegurado 2
                      -- Se busca la dirección del asegurado vigente (en este caso es el segundo titular)
            BEGIN
               SELECT MAX(cdomici) + 1
                 INTO vcdomici_aseg2
                 FROM direcciones
                WHERE sperson = vsperson2;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  vcdomici_aseg2 := 1;
               WHEN OTHERS THEN
                  RETURN 104474;   -- Error al leer de la tabla DIRECCIONES
            END;

            -- Se inserta la dirección del titular fallecido en las direcciones del segundo titular
            -- Bug 18940/92686 - 28/09/2011 - AMC
            INSERT INTO per_direcciones
                        (sperson, cagente, cdomici, ctipdir, csiglas, tnomvia, nnumvia,
                         tcomple, tdomici, cpostal, cpoblac, cprovin, cusuari, fmovimi, cviavp,
                         clitvp, cbisvp, corvp, nviaadco, clitco, corco, nplacaco, cor2co,
                         cdet1ia, tnum1ia, cdet2ia, tnum2ia, cdet3ia, tnum3ia)
               (SELECT vsperson2, cagente, vcdomici_aseg2, ctipdir, csiglas, tnomvia, nnumvia,
                       tcomple, tdomici, cpostal, cpoblac, cprovin, f_user, f_sysdate, cviavp,
                       clitvp, cbisvp, corvp, nviaadco, clitco, corco, nplacaco, cor2co,
                       cdet1ia, tnum1ia, cdet2ia, tnum2ia, cdet3ia, tnum3ia
                  FROM per_direcciones
                 WHERE sperson = vsperson_fallec
                   AND cdomici = vcdomici_tom1);
         -- Fi Bug 18940/92686 - 28/09/2011 - AMC

        --INI 1554 CESS
           /* Cambios de  tarea IAXIS-13044 :START */               
           BEGIN
             SELECT PP.NNUMIDE
               INTO VPERSON_NUM_ID
               FROM PER_PERSONAS PP
              WHERE PP.SPERSON = VSPERSON_FALLEC;

             PAC_CONVIVENCIA.P_SEND_DATA_CONVI(VPERSON_NUM_ID,
                                               1,
                                               'S03502',
                                               NULL);
           				EXCEPTION
				WHEN OTHERS
				THEN
				 p_tab_error (f_sysdate,
							  f_user,
							  'PAC_SINIESTROS.f_constar_fallecimiento',
							  1,
							  'Error PAC_CONVIVENCIA.P_SEND_DATA_CONVI',
							  SQLERRM
							 );                                                            												  
			    END;		
           /* Cambios de  tarea IAXIS-13044 :END */
		--END 1554 CESS

         END IF;

         -- Se modifica el tomador y riesgo del seguro
         UPDATE tomadores
            SET sperson = vsperson2,
                cdomici = vcdomici_aseg2
          WHERE sseguro = vsseguro;

         UPDATE riesgos
            SET sperson = vsperson2,
                cdomici = vcdomici_aseg2
          WHERE sseguro = vsseguro;
      END IF;

      RETURN 0;
   END f_constar_fallecimiento;

   /*************************************************************************
      FUNCTION f_ins_causa
         Inserta a la taula SIN_CODCAUEST i SIN_DESCAUEST.
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         param in pcidioma : CÃ³digo Idioma
         param in ptcauest : CÃ³digo Estado Siniestro
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   *************************************************************************/
   FUNCTION f_ins_causa(
      pccauest IN NUMBER,
      pcestsin IN NUMBER,
      pcidioma IN NUMBER,
      ptcauest IN VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_causa';
      vparam         VARCHAR2(500)
                          := 'parámetros - pccauest: ' || pccauest || ' pcestsin:' || pcestsin;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --Comprovación dels parÃ¡metres d'entrada
      IF pccauest IS NULL
         OR pcestsin IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_codcauest
                     (ccauest, cestsin)
              VALUES (pccauest, pcestsin);
      EXCEPTION
         WHEN OTHERS THEN
            NULL;
      END;

      BEGIN
         INSERT INTO sin_descauest
                     (ccauest, cestsin, cidioma, tcauest)
              VALUES (pccauest, pcestsin, pcidioma, ptcauest);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_descauest
               SET tcauest = ptcauest
             WHERE ccauest = pccauest
               AND cestsin = pcestsin
               AND cidioma = pcidioma;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9002048;   --Error al llegir de la taula SIN_CODCAUEST
   END f_ins_causa;

   /*************************************************************************
      FUNCTION f_get_causas
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST las causas
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         param in ptcauest : Descripción Estado
         param in pcidioma : CÃ³digo Idioma
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   *************************************************************************/
   FUNCTION f_get_causas(
      pccauest IN NUMBER,
      pcestsin IN NUMBER,
      ptcauest IN VARCHAR2,
      pcidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      condicion      VARCHAR2(1000);
   BEGIN
      condicion := '%' || ptcauest || '%';
      vsquery :=
         'SELECT sdc.ccauest, sdc.cestsin, sdc.tcauest, ff_desvalorfijo(6, sdc.cidioma, sdc.cestsin) testsin '
         || 'FROM sin_descauest sdc, sin_codcauest scc ' || 'WHERE scc.ccauest = sdc.ccauest'
         || ' AND sdc.cidioma = ' || pcidioma;

      IF pccauest IS NOT NULL THEN
         vsquery := vsquery || ' AND scc.ccauest = ' || pccauest;
      END IF;

      IF pcestsin IS NOT NULL THEN
         vsquery := vsquery || ' AND scc.cestsin = ' || pcestsin;
      END IF;

      IF condicion IS NOT NULL THEN
         vsquery := vsquery || ' AND (UPPER(sdc.tcauest) like UPPER (''' || condicion
                    || '''))';
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS', 1, 'f_get_causas', SQLERRM);
         RETURN 1;
   END f_get_causas;

   /*************************************************************************
      FUNCTION f_get_causa
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST una causa en
         concreto con sus descripciones
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   *************************************************************************/
   FUNCTION f_get_causa(pccauest IN NUMBER, pcestsin IN NUMBER, vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      vsquery :=
         'SELECT sdc.ccauest, sdc.cestsin, sdc.tcauest, sdc.cidioma,id.tidioma '
         || 'FROM idiomas id, sin_descauest sdc, sin_codcauest scc
         WHERE (scc.ccauest = '
         || pccauest || ' OR ' || pccauest || ' IS NULL)
         AND (scc.cestsin = ' || pcestsin || ' OR ' || pcestsin
         || ' IS NULL)
         AND scc.ccauest = sdc.ccauest
         AND id.cidioma = sdc.cidioma';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS', 1, 'f_get_causa', SQLERRM);
         RETURN 1;
   END f_get_causa;

   /***********************************************************************
      FUNCTION f_del_causa
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST una causa en
         concreto con sus descripciones
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_del_causa(pccauest IN NUMBER, pcestsin IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_del_causa';
      vparam         VARCHAR2(500)
                        := 'parámetros - pccauest: ' || pccauest || ' - pcestsin:' || pcestsin;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --Comprovación dels parÃ¡metres d'entrada
      IF pccauest IS NULL
         OR pcestsin IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Primero borramos los registro de la tabla hija sin_detcauest
      DELETE FROM sin_descauest
            WHERE ccauest = pccauest
              AND cestsin = pcestsin;

      -- Despues borramos los registros de la tabla padre sin_codcauest
      DELETE FROM sin_codcauest
            WHERE ccauest = pccauest
              AND cestsin = pcestsin;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001723;
   END f_del_causa;

   /***********************************************************************
      FUNCTION f_del_detcausa
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST una causa en
         concreto con sus descripciones
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         param in pcidioma : CÃ³digo Idioma
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_del_detcausa(pccauest IN NUMBER, pcestsin IN NUMBER, pcidioma IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_del_causa';
      vparam         VARCHAR2(500)
         := 'parámetros - pccauest: ' || pccauest || ' - pcestsin:' || pcestsin
            || ' - pcidioma:' || pcidioma;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
   BEGIN
      --Comprovación dels parÃ¡metres d'entrada
      IF pccauest IS NULL
         OR pcestsin IS NULL THEN
         RETURN 9000505;
      END IF;

      -- Borramos los registro de la tabla hija sin_detcauest
      DELETE FROM sin_descauest
            WHERE ccauest = pccauest
              AND cestsin = pcestsin
              AND cidioma = pcidioma;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001723;
   END f_del_detcausa;

   /***********************************************************************
      FUNCTION f_reabrir_sin
         Reabre el siniestro.
         param in pnsinies : Número de siniestro.
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      04/08/2009   JPJ                 Sinistres.
   ***********************************************************************/
   FUNCTION f_reabrir_sin(pnsinies IN sin_siniestro.nsinies%TYPE)
      RETURN NUMBER IS
      num_err        NUMBER;
      ttexto         VARCHAR2(400);
      v_cempres      empresas.cempres%TYPE;
      v_idioma       idiomas.cidioma%TYPE;
      v_cunitra      sin_redtramitador.ctramitad%TYPE;
      v_ctramitad    sin_redtramitador.ctramitad%TYPE;
      v_nmovsin      sin_movsiniestro.nmovsin%TYPE;
      v_ntramit      sin_tramitacion.ntramit%TYPE;
      v_nlinage      sin_tramita_agenda.nlinage%TYPE;
      vidobs         NUMBER;
   BEGIN
      -- Recuperar empresa
      BEGIN
         SELECT sg.cempres
           INTO v_cempres
           FROM sin_siniestro ss, seguros sg
          WHERE sg.sseguro = ss.sseguro
            AND ss.nsinies = pnsinies;
      EXCEPTION
         WHEN OTHERS THEN
            v_cempres := NULL;
      END;

      -- Recuperación Unidad Tramitación y Tramitador por defecto
      -- 23101:ASN:28/08/2012 ini
      /*
      --Ini Bug.: 18977 - 12/07/2011 - ICV
         --num_err := pac_siniestros.f_get_unitradefecte(v_cempres, v_cunitra, v_ctramitad);
      num_err := pac_siniestros.f_get_tramitador_defecto(v_cempres, f_user, NULL, NULL, NULL,
                                                         pnsinies, NULL,   -- 22108:ASN:04/06/2012
                                                         NULL, v_cunitra, v_ctramitad);

      IF NVL(num_err, 99999) > 1 THEN
         RETURN num_err;
      END IF;

      */
      v_cunitra := 'U000';
      v_ctramitad := 'T000';
      -- 23101:ASN:28/08/2012 fin
      num_err := 0;
      --Fin bug.: 18977
      -- Se genera nuevo movimiento de siniestro abierto
      num_err := pac_siniestros.f_ins_movsiniestro(pnsinies, 0, TRUNC(f_sysdate), NULL,
                                                   v_cunitra, v_ctramitad, v_nmovsin);

      IF num_err <> 0 THEN
         RETURN num_err;
      END IF;

      SELECT seg.cempres
        INTO v_cempres
        FROM seguros seg, sin_siniestro s
       WHERE seg.sseguro = s.sseguro
         AND nsinies = pnsinies;

      v_idioma := pac_parametros.f_parempresa_n(v_cempres, 'IDIOMA_DEF');
      ttexto := f_axis_literales(100675, v_idioma);

      BEGIN
         SELECT NVL(MAX(idobs), 0) + 1
           INTO vidobs
           FROM agd_observaciones
          WHERE cempres = v_cempres;
      EXCEPTION
         WHEN OTHERS THEN
            vidobs := 1;
      END;

      num_err := pac_agenda.f_set_obs(v_cempres, vidobs, 5, 1, NULL, '04-' || ttexto,
                                      f_sysdate, NULL, 4, NULL, NULL, NULL, 1, 1, f_sysdate,
                                      vidobs);

      IF num_err <> 0 THEN
         RETURN num_err;
      END IF;

      UPDATE agd_observaciones
         SET nsinies = pnsinies
       WHERE cempres = v_cempres
         AND idobs = vidobs;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_reabrir_sin', NULL,
                     'Error al reabrir el siniestro', SQLERRM);
         RETURN 140999;
   END f_reabrir_sin;

   /***********************************************************************
      FUNCTION f_inicializa_sin
         Inicializa un siniestro.
         param in psseguro : SeqÃ¿Â¼encial asseguranÃ¿Â§a.
         param in pnriesgo : Número risc.
         param in pcgarant : Codi garantia.
         param in pfsinies : Data sinistre.
         param in pfnotifi : Data notificación sinistre.
         param in ptsinies : Descripción sinistre.
         param in pccausin : Causa sinistre.
         param in pcmotsin : Motiu sinistre.
         param in pcsubest : Subestat sinistre.
         param out pnsinies : Número sinistre.
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      04/08/2009   JPJ                 Sinistres.
      -- bug. 19416:ASN:14/11/2011
   ***********************************************************************/
   FUNCTION f_inicializa_sin(
      psseguro IN seguros.sseguro%TYPE,
      pnriesgo IN riesgos.nriesgo%TYPE,
      pcgarant IN codigaran.cgarant%TYPE,
      pfsinies IN sin_siniestro.fsinies%TYPE,
      pfnotifi IN sin_siniestro.fnotifi%TYPE,
      ptsinies IN sin_siniestro.tsinies%TYPE,
      pccausin IN sin_codmotcau.ccausin%TYPE,
      pcmotsin IN sin_codmotcau.cmotsin%TYPE,
      pcsubest IN sin_tramita_movimiento.csubtra%TYPE,
      pnsinies OUT sin_siniestro.nsinies%TYPE,
      pnmovsin OUT sin_movsiniestro.nmovsin%TYPE,
      pntramit OUT sin_tramitacion.ntramit%TYPE,
      -- Ini Bug 26676 -- ECP -- 14/05/2013
      pdiafinv NUMBER DEFAULT 0,
      pskipfanulac NUMBER DEFAULT 0
                                   -- Fin Bug 26676 -- ECP -- 14/05/2013
   )
      RETURN NUMBER IS
      v_nerror       NUMBER;
      v_nsinies      sin_siniestro.nsinies%TYPE;
      vsperson_fallec per_personas.sperson%TYPE;
      v_sproduc      productos.sproduc%TYPE;
      v_nmovimi      movseguro.nmovimi%TYPE;
      v_nmovsin      sin_movsiniestro.nmovsin%TYPE;
      v_cunitra      sin_redtramitador.ctramitad%TYPE;
      v_ctramitad    sin_redtramitador.ctramitad%TYPE;
      v_ntramit      sin_tramitacion.ntramit%TYPE;
      v_nmovtra      sin_tramita_movimiento.nmovtra%TYPE;
      v_nlinage      sin_tramita_agenda.nlinage%TYPE;
      v_tlitera      literales.tlitera%TYPE;
      -- Bug 12199 - RSC - 25/11/2009 - CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
      v_fsinies      DATE;
      v_fnotifi      DATE;
      v_cempres      NUMBER;
      vfdiahabil     DATE;
      -- Fin Bug 12199
      vidobs         NUMBER;
      v_cactivi      seguros.cactivi%TYPE;   -- bug. 19416:ASN:14/11/2011
      v_cuenta       NUMBER;   -- bug. 19416:ASN:14/11/2011
      v_ntramte      NUMBER;   -- bug. 19416:ASN:14/11/2011
      v_nmovtre      NUMBER;   -- bug. 19416:ASN:14/11/2011
   BEGIN
      -- Bug 12199 - RSC - 25/11/2009 - CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
      v_fsinies := pfsinies;
      v_fnotifi := pfnotifi;

      -- Recuperar empresa
      BEGIN
         SELECT sproduc, cempres, cactivi   -- bug. 19416:ASN:14/11/2011
           INTO v_sproduc, v_cempres, v_cactivi   -- bug. 19416:ASN:14/11/2011
           FROM seguros
          WHERE sseguro = psseguro;
      EXCEPTION
         WHEN OTHERS THEN
            v_cempres := NULL;
      END;

      -- Bug 12199 - RSC - 25/11/2009 - CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
      IF NVL(f_parproductos_v(v_sproduc, 'ES_PRODUCTO_INDEXADO'), 0) = 1 THEN
         -- Bug 13482 - RSC - 03/03/2010 - CRE - Vencimientos PPJ DinÃ¡mico / Pla Estudiant
         -- en fin de semana no se estÃ¡n contabilizano en Entradas / Salidas

         --IF TO_NUMBER(TO_CHAR(v_fnotifi, 'd')) IN(6, 7) THEN
         IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'HABIL_FIN_SEMANA'), 0) = 0 THEN
            IF TRIM(TO_CHAR(v_fnotifi, 'DAY', ' NLS_DATE_LANGUAGE=''AMERICAN'' ')) IN
                                                                        ('SATURDAY', 'SUNDAY') THEN
               vfdiahabil := f_diahabil(0, TRUNC(v_fnotifi), NULL);
               v_fnotifi := vfdiahabil;
            END IF;
         END IF;

         --IF TO_NUMBER(TO_CHAR(v_fsinies, 'd')) IN(6, 7) THEN
         IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'HABIL_FIN_SEMANA'), 0) = 0 THEN
            IF TRIM(TO_CHAR(v_fsinies, 'DAY', ' NLS_DATE_LANGUAGE=''AMERICAN'' ')) IN
                                                                        ('SATURDAY', 'SUNDAY') THEN
               vfdiahabil := f_diahabil(0, TRUNC(v_fsinies), NULL);
               v_fsinies := vfdiahabil;
            END IF;
         END IF;

         -- Fin Bug 13482
         -- Verificación de fons tancats / oberts
         -- Ini Bug 26676 -- ECP -- 14/05/2013
         IF pdiafinv = 1 THEN
            vfdiahabil := f_diahabil(13, TRUNC(v_fnotifi), NULL);
            v_fnotifi := vfdiahabil;
            vfdiahabil := f_diahabil(13, TRUNC(v_fsinies), NULL);
            v_fsinies := vfdiahabil;
         ELSE
            IF pac_mantenimiento_fondos_finv.f_get_estado_fondo(v_cempres, v_fnotifi) = 107742 THEN
               -- Obtenemos el siguiente dia habil
               vfdiahabil := f_diahabil(0, TRUNC(v_fnotifi), NULL);
               v_fnotifi := vfdiahabil;
               vfdiahabil := f_diahabil(0, TRUNC(v_fsinies), NULL);
               v_fsinies := vfdiahabil;
            -- Bug 14021 - RSC - 31/03/2010 - CRE - Entran rescates en dias no habiles PPJ DinÃ¡mico/PLA Estudiant
            ELSE
               -- Obtenemos el siguiente dia habil o la misma fecha si ya es habil!
               -- (Esto se debe hacer ya que si el fondo no se abre por defecto se considera
               -- abierto y se colarian rescates en dias no habiles!)
               vfdiahabil := f_diahabil(13, TRUNC(v_fnotifi), NULL);
               v_fnotifi := vfdiahabil;
               vfdiahabil := f_diahabil(13, TRUNC(v_fsinies), NULL);
               v_fsinies := vfdiahabil;
            -- Fin Bug 14021
            END IF;
         END IF;
      -- Fin Bug 26676 -- ECP -- 14/05/2013
      END IF;

      -- Fin Bug 12199
      -- Bug 12199 - RSC - 25/11/2009 - CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
      -- Utilitzem v_fsinies y v_fnotifi
      v_nerror := pac_siniestros.f_permite_alta_siniestro(psseguro, pnriesgo, v_fsinies,
                                                          v_fnotifi, pccausin, pcmotsin,
                                                          pskipfanulac);

      -- Fin Bug 12199
      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

      BEGIN
         SELECT MAX(nmovimi)
           INTO v_nmovimi
           FROM movseguro
          WHERE sseguro = psseguro;
      EXCEPTION
         WHEN OTHERS THEN
            v_nmovimi := NULL;
      END;

      -- se inserta un siniestro con estado abierto
      -- Bug 12199 - RSC - 25/11/2009 - CRE201 - Incidencia suplemento de anulación de garantÃ­a por siniestro
      -- Utilitzem v_fsinies y v_fnotifi
      v_nerror := pac_siniestros.f_ins_siniestro(psseguro, pnriesgo, v_nmovimi, v_fsinies,
                                                 v_fnotifi, pccausin, pcmotsin, NULL, NULL,
                                                 NULL, NULL, NULL, NULL, NULL, NULL, NULL,
                                                 NULL, NULL, NULL, NULL, NULL, ptsinies, NULL,
                                                 NULL, NULL, NULL, NULL, v_nsinies);

      -- Fin Bug 12199
      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

      pnsinies := v_nsinies;
      -- 22108:ASN:21/05/2012 ini
      /*
      -- Recuperación Unidad Tramitación y Tramitador por defecto
      --Ini Bug.: 18977 - 12/07/2011 - ICV
      v_nerror := pac_siniestros.f_get_tramitador_defecto(v_cempres, f_user, psseguro,
                                                          pccausin, pcmotsin, NULL, NULL,
                                                          v_cunitra, v_ctramitad);


      IF NVL(v_nerror, 99999) > 1 THEN
         RETURN v_nerror;
      END IF;

      v_nerror := 0;
      --Fin bug.: 18977
      */
      --v_nerror := pac_siniestros.f_get_tramitador(pnsinies, NULL, NULL, v_cunitra, v_ctramitad);
      v_nerror := pac_siniestros.f_get_tramitador(pnsinies, 99, 99, v_cunitra, v_ctramitad);

      IF NVL(v_nerror, 99999) > 1 THEN
         p_tab_error(f_sysdate, 'RSC', 'pac_siniestros.f_inicializa_sin', 2,
                     'Error no controlado', v_nerror);
         RETURN v_nerror;
      END IF;

      -- 22108:ASN:21/05/2012 fin
      v_nerror := pac_siniestros.f_ins_movsiniestro(v_nsinies, 0, f_sysdate, NULL, v_cunitra,
                                                    v_ctramitad, v_nmovsin);

      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

      pnmovsin := v_nmovsin;

-- 22108:ASN:21/05/2012 ini
      IF pac_sin_tramite.ff_hay_tramites(v_nsinies) > 0 THEN
         v_nerror := pac_sin_tramite.f_ins_tramite(v_nsinies, 0, v_ntramte);

         IF v_nerror <> 0 THEN
            RETURN v_nerror;
         END IF;

         -- 22108 JMF
         v_nerror := pac_sin_tramite.f_ins_tramite_mov(v_nsinies, v_ntramte, 0, NULL,   -- 28/06/2012
                                                       v_cunitra, v_ctramitad, f_sysdate,
                                                       v_nmovtre);

         IF v_nerror <> 0 THEN
            RETURN v_nerror;
         END IF;
      END IF;

-- 22108:ASN:21/05/2012 fin

      -- Inserción tramitación global siniestro
      -- BUG 0023536 - 24/10/2012 - JMF: Afegir csubtiptra
      v_nerror := pac_siniestros.f_ins_tramitacion(v_nsinies, 0, 0, 0, v_ntramit,
                                                   --NULL);
                                                   NULL, NULL, NULL, NULL,
                                                   v_ntramte   -- 22108:ASN:21/05/2012
                                                            , NULL);

      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

      pntramit := v_ntramit;
      -- Inserción movimiento tramitación
      v_nerror := pac_siniestros.f_ins_tramita_movimiento(v_nsinies, v_ntramit, v_cunitra,
                                                          v_ctramitad, 0, pcsubest,
                                                          TRUNC(f_sysdate), v_nmovtra, NULL);

      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

-- 22108:ASN:21/05/2012 ini
/*
-- bug. 19416:ASN:14/11/2011 ini
      SELECT COUNT(t.ctramte)
        INTO v_cuenta
        FROM sin_pro_tramitacion t, sin_prod_tramite tr
       WHERE t.sproduc = v_sproduc
         AND t.cactivi = v_cactivi
         AND cgenaut = 1
         AND tr.sproduc = t.sproduc
         AND tr.cactivi = t.cactivi
         AND tr.ctramte = t.ctramte;

      IF v_cuenta > 0 THEN
         v_nerror := pac_sin_tramite.f_ins_tramite(v_nsinies, 0, v_ntramte);

         IF v_nerror <> 0 THEN
            RETURN v_nerror;
         END IF;

         v_nerror := pac_sin_tramite.f_ins_tramite_mov(v_nsinies, v_ntramte, 0, v_nmovtre);

         IF v_nerror <> 0 THEN
            RETURN v_nerror;
         END IF;

         -- Bug 20241 - RSC - 23/11/2011 - LCOL_T004-Parametrización de Rescates (retiros)
         UPDATE sin_tramitacion
            SET ntramte = v_ntramte
          WHERE nsinies = v_nsinies
            AND ntramit = (SELECT NVL(MAX(ntramit), 0)
                             FROM sin_tramitacion
                            WHERE nsinies = v_nsinies);
      -- Fin Bug 20241
      END IF;

-- bug. 19416:ASN:14/11/2011 fin
*/
-- 22108:ASN:21/05/2012 fin

      -- Si se trata de un siniestro de fallecimiento ( pcmotsin=0 o pcmotsin=4)
      IF pccausin = 1
         AND(pcmotsin IN(0, 4)) THEN
         -- Muerte de 1er y unico titular o Muerte de 1er titular (2_CABEZAS)
         vsperson_fallec := pac_siniestros.ff_sperson_sinies(v_nsinies);

         -- Se marca la persona como Fallecida
         UPDATE per_personas
            SET cestper = 2   -- Fallecida
          WHERE sperson = vsperson_fallec;
      END IF;

      v_tlitera := f_axis_literales(151994, pac_md_common.f_get_cxtidioma);

      BEGIN
         SELECT NVL(MAX(idobs), 0) + 1
           INTO vidobs
           FROM agd_observaciones
          WHERE cempres = v_cempres;
      EXCEPTION
         WHEN OTHERS THEN
            vidobs := 1;
      END;

      v_nerror := pac_agenda.f_set_obs(v_cempres, vidobs, 1, 1, v_tlitera, v_tlitera,
                                       f_sysdate, NULL, 4, NULL, NULL, NULL, 1, 1, f_sysdate,
                                       vidobs);

      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

      UPDATE agd_observaciones
         SET nsinies = pnsinies
       WHERE cempres = v_cempres
         AND idobs = vidobs;

      -- bug19416:ASN:14/12/2011 ini
      v_nerror := f_post_siniestro(v_nsinies);

      IF v_nerror <> 0 THEN
         RETURN v_nerror;
      END IF;

      -- bug19416:ASN:14/12/2011 fin
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_inicializa_sin', 1,
                     'error no controlado', SQLERRM);
         RETURN 140999;
   END f_inicializa_sin;

   /***********************************************************************
      FUNCTION f_descausa
         Reabre el siniestro.
         param in pnsinies : Número de siniestro.
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      04/08/2009   JPJ                 Sinistres.
   ***********************************************************************/
   FUNCTION f_descausa(
      pccausin IN sin_descausa.ccausin%TYPE,
      pcidioma IN idiomas.cidioma%TYPE,
      tnom IN OUT sin_descausa.tcausin%TYPE)
      RETURN NUMBER IS
   BEGIN
      SELECT tcausin
        INTO tnom
        FROM sin_descausa
       WHERE cidioma = pcidioma
         AND ccausin = pccausin;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN 100535;   -- Causa del sinistre inexistent
   END f_descausa;

     /***********************************************************************
      Recupera los datos del documento siniestro
      param in pcdocume: CÃ³digo del documento
      param in pcidioma : CÃ³digo del idioma
      param out pttitdoc: Nombre identificativo Documento
      param out ptdocume : Descripción Documento
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_get_documentos(
      pcdocume IN NUMBER,
      pcidioma IN NUMBER,
      pttitdoc OUT VARCHAR2,
      ptdocume OUT VARCHAR2)
      RETURN NUMBER IS
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
   BEGIN
      SELECT d.ttitdoc, d.tdocume
        INTO pttitdoc, ptdocume
        FROM doc_coddocumento c, doc_desdocumento d
       WHERE c.cdocume = d.cdocume
         AND c.cdocume = pcdocume
         AND d.cidioma = pcidioma;

      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN SQLCODE;
   END f_get_documentos;

   /***********************************************************************
      Recupera el ttitdoc de la tabla DOC_DESDOCUMENTO
      param  in  pcdocume : cÃ³digo documento
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      06/10/2009   DCT                 Sinistres.  Bug: 10393
   ***********************************************************************/
   FUNCTION f_get_ttitdoc(pcdocume IN NUMBER, pcidioma IN NUMBER, pttitdoc OUT VARCHAR)
      RETURN NUMBER IS
      vnumerr        NUMBER(8) := 0;
   BEGIN
      SELECT ttitdoc
        INTO pttitdoc
        FROM doc_desdocumento
       WHERE cdocume = pcdocume
         AND cidioma = pcidioma;

      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN SQLCODE;
   END f_get_ttitdoc;

   /**************************************************************************
      Función que devuelve el sperson de la persona siniestrada.
      Si el producto es a 2_Cabezas, el sperson se busca de la tabla ASEGURADOS,
      sino de la tabla RIESGOS
      param  in  pnsinies : Numero siniestro
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
   ***********************************************************************/
   FUNCTION ff_sperson_sinies(pnsinies IN sin_siniestro.nsinies%TYPE)
      RETURN NUMBER IS
      v_sseguro      sin_siniestro.sseguro%TYPE;
      v_sproduc      seguros.sproduc%TYPE;
      v_sperson      per_personas.sperson%TYPE;
      v_nasegur      sin_siniestro.nasegur%TYPE;
      v_nriesgo      sin_siniestro.nriesgo%TYPE;
   BEGIN
      SELECT si.sseguro, s.sproduc, si.nasegur, si.nriesgo
        INTO v_sseguro, v_sproduc, v_nasegur, v_nriesgo
        FROM sin_siniestro si, seguros s
       WHERE si.sseguro = s.sseguro
         AND si.nsinies = pnsinies;

      -- Si el producto es a 2_CABEZAS, el sperson se busca de la tabla ASEGURADOS
      IF NVL(f_parproductos_v(v_sproduc, '2_CABEZAS'), 0) = 1 THEN
         SELECT sperson
           INTO v_sperson
           FROM asegurados
          WHERE sseguro = v_sseguro
            AND norden = v_nasegur;
      ELSE
         -- Si el producto NO es a 2_CABEZAS, el sperson se busca de la tabla RIESGOS
         SELECT sperson
           INTO v_sperson
           FROM riesgos
          WHERE sseguro = v_sseguro
            AND nriesgo = v_nriesgo;
      END IF;

      RETURN v_sperson;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN SQLCODE;
   END ff_sperson_sinies;

   /**************************************************************************
      Función que genera un destinatario automatico
      param in  psseguro : Numero de seguro
      param in  pfsinies : Fecha siniestro
      param in  pccausin : CÃ³digo causa siniestro
      param in  pcmotsin : CÃ³digo motivo siniestro
      param in  pcgarant : CÃ³digo de la garantia
      param out psperson : CÃ³digo persona
      param out pctipdes : Codigo tipo destinatario
      param out pctipban : CÃ³digo tipo cuenta bancaria
      param out pcbancar : Cuenta bancaria
      param out pcpaise  : CÃ³digo PaÃ¿Â­s Residencia
      param out pctipcap : Tipo de prestación.  Valor 205.-- Bug 0017970 - 16/03/2011 - JMF
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      Bug 12753 - 19/01/2010 - AMC
   ***********************************************************************/
   FUNCTION f_destina_aut(
      psseguro IN seguros.sseguro%TYPE,
      pfsinies IN sin_siniestro.fsinies%TYPE,
      pccausin IN sin_siniestro.ccausin%TYPE,
      pcmotsin IN sin_siniestro.cmotsin%TYPE,
      pcgarant IN codigaran.cgarant%TYPE,
      psperson OUT sin_tramita_destinatario.sperson%TYPE,
      pctipdes OUT sin_tramita_destinatario.ctipdes%TYPE,
      pctipban OUT sin_tramita_destinatario.ctipban%TYPE,
      pcbancar OUT sin_tramita_destinatario.cbancar%TYPE,
      pcpaisre OUT sin_tramita_destinatario.cpaisre%TYPE,
      pctipcap OUT sin_tramita_destinatario.ctipcap%TYPE)
      RETURN NUMBER IS
      v_cdesaut      sin_causa_motivo.cdesaut%TYPE;
      v_scaumot      sin_causa_motivo.scaumot%TYPE;
      v_ndest        NUMBER(5);
      v_ctipban      seguros.ctipban%TYPE;
      v_cbancar      seguros.cbancar%TYPE;
      v_cagente      seguros.cagente%TYPE;
      -- ini Bug 0017970 - 16/03/2011 - JMF
      v_obj          VARCHAR2(100) := 'PAC_SINIESTROS.F_DESTINA_AUT';
      v_par          VARCHAR2(500)
         := 's=' || psseguro || ' f=' || pfsinies || ' c=' || pccausin || ' m=' || pcmotsin
            || ' g=' || pcgarant;
      v_sproduc      seguros.sproduc%TYPE;
      v_cfprest      seguros_aho.cfprest%TYPE;
      -- fin Bug 0017970 - 16/03/2011 - JMF
      v_pasexec      NUMBER := 0;

      CURSOR c_dest(p_scaumot IN sin_det_causa_motivo.ctipdes%TYPE) IS
         SELECT ctipdes
           FROM sin_det_causa_motivo
          WHERE scaumot = p_scaumot
            AND ctipdes IN(1, 7);

      -- BUG16683:DRA:21/12/2010:Assegurats i prenedors
      v_numerr       NUMBER;   -- Bug 18670 - APD - 15/06/2011
   BEGIN
      v_pasexec := 1;

      BEGIN
         -- Bug 0017970 - 16/03/2011 - JMF: afegir producte
         SELECT scm.cdesaut, scm.scaumot, seg.ctipban, seg.cbancar, seg.cagente, seg.sproduc
           INTO v_cdesaut, v_scaumot, v_ctipban, v_cbancar, v_cagente, v_sproduc
           FROM sin_causa_motivo scm, sin_gar_causa_motivo sgcm, seguros seg
          WHERE scm.ccausin = pccausin
            AND scm.cmotsin = pcmotsin
            AND scm.scaumot = sgcm.scaumot
            AND sgcm.sproduc = seg.sproduc
            AND seg.sseguro = psseguro
            AND sgcm.cactivi = seg.cactivi
            AND sgcm.cgarant = pcgarant;
      EXCEPTION
         WHEN OTHERS THEN
            v_cdesaut := 0;
      END;

      v_pasexec := 2;

      SELECT COUNT(1)
        INTO v_ndest
        FROM sin_det_causa_motivo
       WHERE scaumot = v_scaumot
         AND ctipdes IN(1, 7);

      -- BUG16683:DRA:21/12/2010:Assegurats i prenedors
      v_pasexec := 3;

      -- Se genera el destinatario de pago de forma automÃ¡tica, siempre que sÃ¿Â³lo exista uno definido
      IF NVL(v_cdesaut, 0) = 1
         AND v_ndest = 1 THEN
         FOR v_dest IN c_dest(v_scaumot) LOOP
            pctipdes := v_dest.ctipdes;

            IF v_dest.ctipdes = 1 THEN   -- Asegurado
               v_pasexec := 4;

               SELECT a.sperson
                 INTO psperson
                 FROM asegurados a
                WHERE a.sseguro = psseguro
                  AND a.norden = (SELECT MIN(a1.norden)
                                    FROM asegurados a1
                                   WHERE a1.sseguro = a.sseguro
                                     AND a1.ffecini <= TRUNC(pfsinies)
                                     AND(a1.ffecfin IS NULL
                                         OR a1.ffecfin >= TRUNC(pfsinies)));
            -- BUG16683:DRA:21/12/2010:Inici
            ELSIF v_dest.ctipdes = 7 THEN   -- Prenedor
               v_pasexec := 5;

               SELECT t.sperson
                 INTO psperson
                 FROM tomadores t
                WHERE t.sseguro = psseguro
                  AND t.nordtom = (SELECT MIN(t1.nordtom)
                                     FROM tomadores t1
                                    WHERE t1.sseguro = t.sseguro);
            END IF;

            -- BUG16683:DRA:21/12/2010:Inici
            -- Bug 0016455 - JRH - 22/11/2010 - 0016455: ENSA101 - No necesitamos que hay aun a CCC en la póliza. Puede ser por caja y existir una CCC en PER_CCC
            -- IF v_ctipban IS NOT NULL
            --   AND v_cbancar IS NOT NULL THEN
            -- Fi Bug 0016455 - JRH - 22/11/2010
            BEGIN
               v_pasexec := 6;

               SELECT ctipban, cbancar
                 INTO pctipban, pcbancar
                 FROM per_ccc
                WHERE sperson = psperson
                  AND ctipban = v_ctipban
                  AND cbancar = v_cbancar;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  BEGIN
                     v_pasexec := 8;

                     SELECT ctipban, cbancar
                       INTO pctipban, pcbancar
                       FROM per_ccc
                      WHERE sperson = psperson
                        AND cagente = ff_agente_cpervisio(v_cagente)
                        AND cdefecto = 1;
                  EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                        v_pasexec := 9;

                        BEGIN
                           SELECT ctipban, cbancar
                             INTO pctipban, pcbancar
                             FROM per_ccc
                            WHERE sperson = psperson
                              AND cdefecto = 1;
                        EXCEPTION
                           WHEN OTHERS THEN   --Bug.: 16455
                              pctipban := v_ctipban;
                              pcbancar := v_cbancar;
                        END;
                     WHEN OTHERS THEN   --Bug.: 16455
                        pctipban := v_ctipban;
                        pcbancar := v_cbancar;
                  END;
               WHEN OTHERS THEN   --Bug.: 16455
                  pctipban := v_ctipban;
                  pcbancar := v_cbancar;
            END;

            -- Se recupera el paÃ¿Â­s de residencia del asegurado
            BEGIN
               v_pasexec := 10;

               SELECT cpais
                 INTO pcpaisre
                 FROM per_nacionalidades
                WHERE sperson = psperson
                  AND cagente = ff_agente_cpervisio(v_cagente)
                  AND cdefecto = 1;
            EXCEPTION
               WHEN OTHERS THEN
                  pcpaisre := NULL;
            END;

            -- ini Bug 0017970 - 16/03/2011 - JMF
            -- buscar tipus prestacio per defecte
            v_pasexec := 13;

            IF NVL(pac_parametros.f_parproducto_n(v_sproduc, 'PRESTACION'), 0) = 1 THEN
               v_pasexec := 14;

               -- Bug 18670 - APD - 20/06/2011 -
               -- se aÃ¿Â±aden los motivos 3, 5, 28 y 29
               IF pccausin = 1
                  AND pcmotsin IN(0, 1, 2, 9, 3, 5, 28, 29) THEN
                  -- Fin Bug 18670 - APD - 20/06/2011 -
                  v_pasexec := 15;

                  SELECT MAX(cfprest)
                    INTO v_cfprest
                    FROM seguros_aho
                   WHERE sseguro = psseguro;

                  IF v_cfprest IS NOT NULL THEN
                     v_pasexec := 16;
                     pctipcap := v_cfprest;
                  ELSE
                     v_pasexec := 17;
                     -- Bug 18670 - APD - 15/06/2011 -
                     -- El tipo de prestacion por defecto se obtiene llamando a la funcion
                     -- f_get_fprestdefecto
/*
                     SELECT MAX(ctippres)
                       INTO pctipcap
                       FROM fprestaprod
                      WHERE sproduc = v_sproduc
                        AND cdefecto = 1;
*/
                     v_numerr := pac_siniestros.f_get_fprestdefecto(v_sproduc, pccausin,
                                                                    pcmotsin, pcgarant,
                                                                    pctipcap);

                     IF v_numerr <> 0 THEN
                        RETURN v_numerr;
                     END IF;
                  -- Fin Bug 18670 - APD - 15/06/2011 -
                  END IF;
               ELSE
                  pctipcap := NULL;
               END IF;
            ELSE
               pctipcap := NULL;
            END IF;
         -- fin Bug 0017970 - 16/03/2011 - JMF
         END LOOP;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, v_obj, v_pasexec, v_par,
                     'Error no controlado ' || SQLERRM);
         RETURN NULL;
   END f_destina_aut;

   /**************************************************************************
      Función que inserta un pago
      param in  pnsinies : Número de siniestro
      param in  pnriesgo : nÃ¿Âºero de riesgp
      param in  pntramit : Número de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
                          --> En Multimoneda debe ser siempre 1 <--
      param in  pcgarant : cÃ³digo de la garantia
      param in  pfsinies : fecha del siniestro
      param in  pfperini : fecha inicio periodo
      param in  pfperfin : fecha fin periodo
      param out pcpaise  : Codigo de identificafición del pago
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      Bug 11849 - 20/01/2010 - AMC
   ***********************************************************************/
   FUNCTION f_inserta_pago(
      pnsinies IN sin_tramita_pago.nsinies%TYPE,
      pnriesgo IN sin_siniestro.nriesgo%TYPE,
      pntramit IN sin_tramita_pago.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pctipgas IN sin_tramita_reserva.ctipgas%TYPE,   -- 26108
      pcgarant IN sin_tramita_reserva.cgarant%TYPE,
      pfsinies IN sin_siniestro.fsinies%TYPE,
      pfperini IN sin_tramita_reserva.fresini%TYPE,
      pfperfin IN sin_tramita_reserva.fresfin%TYPE,
      psidepag OUT sin_tramita_pago.sidepag%TYPE,
      pipago OUT sin_tramita_pago.isinret%TYPE)
      RETURN NUMBER IS
      v_sseguro      NUMBER;
      v_sproduc      NUMBER;
      v_cactivi      NUMBER;
      v_cramo        NUMBER;
      v_cmodali      NUMBER;
      v_ctipseg      NUMBER;
      v_ccolect      NUMBER;
      v_cmotsin      NUMBER;
      v_ccausin      NUMBER;
      v_fnotifi      DATE;
      vsperson       NUMBER;
      vcount         NUMBER;
      vcsitfam       NUMBER;
      total_porcen_reserva NUMBER;
      v_error        NUMBER;
      vpassexe       NUMBER;
      vsquery        VARCHAR2(1000);
      cur            sys_refcursor;
      vnmovres       NUMBER;
      vireserva      NUMBER;
      v_idres        NUMBER;
      -- Bug 0016285 - 15/10/2010 - JMF
      e_salida       EXCEPTION;
      vsproces       NUMBER;
      v_cmonres      sin_tramita_reserva.cmonres%TYPE;
      sw_doc_pendiente NUMBER(1);
      -- BUG 21307/107043 - 14/02/2012 - JMP
      hay_prestamos  NUMBER;   -- 23764:ASN:15/10/2012
      estado_tramit  sin_tramita_movimiento.csubtra%TYPE;
   BEGIN
--  23764:ASN:15/10/2012 ini
      SELECT COUNT(*)
        INTO hay_prestamos
        FROM prestamos p, prestamoseg ps
       WHERE ps.ctapres = p.ctapres
         AND p.cestado = 1
         AND ps.sseguro = (SELECT sseguro
                             FROM sin_siniestro
                            WHERE nsinies = pnsinies);

      IF hay_prestamos > 0 THEN
         v_error := pac_siniestros.f_recalcula_penalizacion(pnsinies, pntramit, pctipres,
                                                            pcgarant, pfperini, pfperfin);

         IF v_error <> 0 THEN
            RETURN v_error;
         END IF;
      END IF;

--  23764:ASN:15/10/2012 fin
      vpassexe := 1;

      -- Bug 31294 - 04/07/2014 - JTT: AÃ¿Â±adimos a la consulta el filtro por pfperini y pfperfin para
      -- identificar correctament la reserva (idres) cuando un siniestro tiene diversos periodos
      -- de reserva para la misma garantia.
      BEGIN
         SELECT ireserva, idres
           INTO vireserva, v_idres
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipres = pctipres
            AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
            AND NVL(cgarant, -1) = NVL(pcgarant, -1)   -- 26108
            AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
            AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfperfin, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
            AND nmovres = (SELECT MAX(nmovres)
                             FROM sin_tramita_reserva
                            WHERE nsinies = pnsinies
                              AND ntramit = pntramit
                              AND ctipres = pctipres
--                              AND cgarant = pcgarant                   -- 26108
                              AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                              AND NVL(cgarant, -1) = NVL(pcgarant, -1)   -- 26108
                              AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
                              AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfperfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')));
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            vireserva := 0;
      END;

      IF vireserva = 0 THEN
         RETURN 9900970;   -- No se pueden generar pagos para esta reserva
      END IF;

      -- Bug 27487 - 05/02/2014 - JTT - Convertim el resultat NULL en 0
      BEGIN
         SELECT NVL(SUM(NVL(pasigna, 0)), 0)
           INTO total_porcen_reserva
           FROM sin_tramita_destinatario
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;
      EXCEPTION
         WHEN OTHERS THEN
            total_porcen_reserva := 0;
      END;

      IF total_porcen_reserva <> 100 THEN
         RETURN 152769;   -- La suma de porcentajes de reserva debe ser 100
      END IF;

      -- Bug 34622/200538 - 13/03/2015 - JTT - Comprobación de la fecha de formalización
      v_error := pac_validaciones_sin.f_validar_fecha_formalizacion(pnsinies);

      IF v_error > 0 THEN
         RETURN v_error;
      END IF;

      -- BUG 21307/107043 - 14/02/2012 - JMP - Comprobación de si hay documentación obligatoria pendiente de adjuntar
      SELECT DECODE(COUNT(*), 0, 0, 1)
        INTO sw_doc_pendiente
        FROM sin_tramita_documento
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND cobliga = 1
         AND iddoc IS NULL;

      IF sw_doc_pendiente = 1 THEN
         RETURN 9903268;
      -- Hay documentación obligatoria pendiente de adjuntar
      END IF;

      -- FIN BUG 21307/107043 - 14/02/2012 - JMP - Comprobación de si hay documentación obligatoria pendiente de adjuntar
      vpassexe := 2;

      SELECT seg.sseguro, sproduc, cactivi, seg.cramo, seg.cmodali, seg.ctipseg, seg.ccolect,
             SIN.cmotsin, SIN.ccausin, SIN.fnotifi
        INTO v_sseguro, v_sproduc, v_cactivi, v_cramo, v_cmodali, v_ctipseg, v_ccolect,
             v_cmotsin, v_ccausin, v_fnotifi
        FROM seguros seg, sin_siniestro SIN
       WHERE SIN.nsinies = pnsinies
         AND seg.sseguro = SIN.sseguro;

      -- ini Bug 0016285 - 15/10/2010 - JMF
      vpassexe := 21;

--------------------------------------------
-- Pagos de rentas diarias (BAJA = 1)
--------------------------------------------
      IF f_pargaranpro_v(v_cramo, v_cmodali, v_ctipseg, v_ccolect, v_cactivi, pcgarant, 'BAJA') =
                                                                                              1 THEN
         vpassexe := 22;

         SELECT s.csubtra
           INTO estado_tramit
           FROM sin_tramita_movimiento s
          WHERE s.nsinies = pnsinies
            AND s.ntramit = pntramit
            AND s.nmovtra = (SELECT MAX(nmovtra)
                               FROM sin_tramita_movimiento
                              WHERE nsinies = s.nsinies
                                AND ntramit = s.ntramit);

         IF estado_tramit <> 27 THEN
            RETURN 9906673;
         END IF;

         vpassexe := 23;
         -- Generar pago de baja (renta diaria)
         v_error := pac_siniestros.f_pago_aut(f_sysdate, vcount, pnsinies, pntramit, pctipres,
                                              pctipgas,   -- 26108
                                              NULL, NULL, pcgarant, vsproces, v_idres);   -- 31294

         IF NVL(v_error, 1) <> 0 THEN
            v_error := 1;
         END IF;

         -- Bug 32424/182505 - 28/08/2014 - JTT: Si se ha realizado almenos un pago, recuperamos el ultimo SIDEPAG
         -- de los pagos realizados para informar psidepag, para que finalmente se muestre por pantalla.
         vpassexe := 24;

         IF vcount > 0 THEN
            BEGIN
               SELECT MAX(sidepag)
                 INTO psidepag
                 FROM sin_tramita_reserva
                WHERE nsinies = pnsinies
                  AND idres = v_idres;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  psidepag := NULL;
            END;
         END IF;

         -- Fi Bug 32424
         RETURN v_error;
      END IF;

      -- fin Bug 0016285 - 15/10/2010 - JMF

      ----------------------------
-- Resto de pagos
----------------------------
      vpassexe := 3;

      -- RSC 14/04/2008 Prestaciones PPA
      -- 16/01/2015 Causa siniestro != 8 para TRASPASO.....
      IF NVL(f_parproductos_v(v_sproduc, 'PRESTACION'), 0) = 1
         AND v_ccausin != 8 THEN
         BEGIN
            SELECT sperson
              INTO vsperson
              FROM sin_tramita_destinatario
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               RETURN 102756;
         END;

         vpassexe := 4;

         -- Se mira si la persona existe en per_irpf
         BEGIN
            SELECT COUNT(1)
              INTO vcount
              FROM per_irpf   --IRPFPERSONAS
             WHERE sperson = vsperson;

            IF vcount = 0 THEN   -- No existe la persona en per_irpf personas
               RETURN 152412;
            -- No existe información fiscal para esta póliza
            END IF;
         EXCEPTION
            WHEN OTHERS THEN
               RETURN 152412;
         END;

-- Si la persona no tiene definida info fiscal no habrÃ¡ registro y saltarÃ¡ la exception
         vpassexe := 5;

         -- Se mira si la persona tiene informada la situación familiar
         BEGIN
            SELECT csitfam
              INTO vcsitfam
              FROM per_irpf   --IRPFPERSONAS
             WHERE sperson = vsperson;
         EXCEPTION
            WHEN OTHERS THEN
               vcsitfam := NULL;
         END;

-- Si la persona no tiene definida info fiscal ho habrÃ¡ registro y saltarÃ¡ la exception
         IF vcsitfam IS NULL THEN
            -- 22/10/2008 De momento, si vcsitfam = null, se pone por defecto el valor 3.
            -- Cuando desde CIV ya puedan modificar la Información Fiscal (Personas), entonces se debe eliminar el Update
            -- y descomentar el mensaje print_message('STOP',152412);
            UPDATE per_irpf
               SET csitfam = 3
             WHERE sperson = vsperson;
         END IF;
      END IF;   -- IF NVL(f_parproductos_v(v_sproduc,'PRESTACION'),0) = 1

      vpassexe := 6;
      v_error := pac_sin_formula.f_genera_pago(v_sseguro, pnriesgo,
                                               -- Bug 16219. FAL. 06/10/2010. Parametrizar que la generación del pago sea por garantia
                                               pcgarant,
                                               -- Fi Bug 16219
                                               v_sproduc, v_cactivi, pnsinies, pntramit,
                                               v_ccausin, v_cmotsin, pfsinies, v_fnotifi,
                                               pfperini, pfperfin);

      IF v_error <> 0 THEN
         RETURN v_error;
      END IF;

      vpassexe := 7;
      v_error := pac_sin_formula.f_inserta_pago(pnsinies, pntramit, pctipres, pcgarant,
                                                psidepag, pipago, NULL, NULL, NULL, NULL, NULL,
                                                pctipgas);   -- 26108

      IF v_error <> 0 THEN
         RETURN v_error;
      END IF;

      vpassexe := 8;
      pac_sin_formula.p_borra_mensajes;
      vpassexe := 9;
      -- Bug 13423 - 04/03/2010 - AMC
      -- La inserción de la reserva se hace en pac_sin_formula.f_inserto_pago
      -- Fi Bug 13423 - 04/03/2010 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_inserta_pago', vpassexe,
                     'Error no controlado', SQLERRM);
         RETURN 1;
   END f_inserta_pago;

   /**************************************************************************
      Función que inserta un pago
      param in  pnsinies : Número de siniestro
      param in  pntramit : Número de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      param in  psproduc : CÃ³digo de producto
      param in  pcactivi : CÃ³digo de la actividad
      param in  pcgarant : cÃ³digo de la garantia
      param out pfperini : fecha inicio periodo
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error
      Bug 12207 - 01/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_get_fechareserva(
      pnsinies IN sin_tramita_pago.nsinies%TYPE,
      pntramit IN sin_tramita_pago.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pctipgas IN sin_tramita_reserva.ctipgas%TYPE,   -- 26108
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pcgarant IN sin_tramita_reserva.cgarant%TYPE,
      pfperini OUT sin_tramita_reserva.fresini%TYPE)
      RETURN NUMBER IS
      esbaja         NUMBER;
      vcount         NUMBER;
      vfresfin       DATE;
      vpassexe       NUMBER := 0;
   BEGIN
      esbaja := pac_parametros.f_pargaranpro_n(psproduc, pcactivi, pcgarant, 'BAJA');
      vpassexe := 1;

      IF esbaja = 1 THEN
         SELECT COUNT(1)
           INTO vcount
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipres = pctipres
--            AND cgarant = pcgarant                  -- 26108
            AND NVL(cgarant, -1) = NVL(pcgarant, -1)   -- 26108
            AND NVL(ctipgas, -1) = NVL(pctipgas, -1);   -- 26108

         vpassexe := 2;

         IF vcount = 0 THEN
            vpassexe := 3;

            SELECT fsinies
              INTO pfperini
              FROM sin_siniestro
             WHERE nsinies = pnsinies;
         ELSE
            vpassexe := 4;

            SELECT fresfin
              INTO vfresfin
              FROM sin_tramita_reserva
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ctipres = pctipres
               --AND cgarant = pcgarant                 -- 26108
               AND NVL(cgarant, -1) = NVL(pcgarant, -1)   -- 26108
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND nmovres = (SELECT MAX(nmovres)
                                FROM sin_tramita_reserva
                               WHERE nsinies = pnsinies
                                 AND ntramit = pntramit
                                 AND ctipres = pctipres
--                                 AND cgarant = pcgarant                   -- 26108
                                 AND NVL(cgarant, -1) = NVL(pcgarant, -1)   -- 26108
                                 AND NVL(ctipgas, -1) = NVL(pctipgas, -1));   -- 26108

            pfperini := vfresfin + 1;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_get_fechareserva', vpassexe,
                     'Error no controlado', SQLERRM);
         RETURN 1;
   END f_get_fechareserva;
/**************************************************************************
      Funcion borrrar amparo
      param in  pnsinies : Número de siniestro
      param in  pntramit : Número de tramitacion

      param in  pcgarant : cÃ³digo de la garantia
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 12207 - 01/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_del_amparo(
      pnsinies IN sin_tramita_amparo.nsinies%TYPE,
      pntramit IN sin_tramita_amparo.ntramit%TYPE,
      pcgarant IN sin_tramita_amparo.cgarant%TYPE)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER := 0;
      vmax_nmovres   NUMBER;
    v_pcpregun NUMBER(5) := 0;
   BEGIN
      vpassexe := 1;
select distinct cpregun into v_pcpregun from sin_tramita_amparo join sin_gar_pregunta on
  sin_gar_pregunta.cgarant=sin_tramita_amparo.cgarant
   where sin_tramita_amparo.nsinies=pnsinies and sin_tramita_amparo.cgarant=pcgarant;

      DELETE      sin_tramita_amparo
            WHERE nsinies = pnsinies
              AND ntramit = pntramit              
              AND cgarant = pcgarant;


    IF  v_pcpregun > 0  THEN
     delete from pregunsini where cpregun=v_pcpregun and nsinies=pnsinies;
    END IF;

      RETURN 0;

   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_amparo', vpassexe,
                     'Error no controlado', SQLERRM);
         RETURN 140999;
   END f_del_amparo;
   /**************************************************************************
      Función que borrar el ultimo movimiento de una reserva si no tiene pagos
      param in  pnsinies : Número de siniestro
      param in  pntramit : Número de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      param in  pnmovres : Numero de movimiento
      param in  pcgarant : cÃ³digo de la garantia
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 12207 - 01/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_del_ultreserva(
      pnsinies IN sin_tramita_pago.nsinies%TYPE,
      pntramit IN sin_tramita_pago.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pctipgas IN sin_tramita_reserva.ctipgas%TYPE,   -- 26108
      pnmovres IN sin_tramita_reserva.nmovres%TYPE,
      pcgarant IN sin_tramita_reserva.cgarant%TYPE)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER := 0;
      vmax_nmovres   NUMBER;
   BEGIN
      vpassexe := 1;

      -- Miramos si es el Ã¿Âºltimo movimiento
      SELECT MAX(nmovres)
        INTO vmax_nmovres
        FROM sin_tramita_reserva r
       WHERE r.nsinies = pnsinies
         AND NVL(r.cgarant, -1) = NVL(pcgarant, -1)   -- 26108
         AND r.ctipres = pctipres
         AND NVL(r.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND r.ntramit = pntramit;

      IF vmax_nmovres <> pnmovres THEN
         RETURN 9900987;   -- Error no es Ã¿Âºltimo movimiento de la reserva
      END IF;

      vpassexe := 2;

      -- Miramos que no tenga pagos
      /***** BUG17934:DRA:14/03/2011:INICI *******
      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_reserva r, sin_tramita_pago p, sin_tramita_pago_gar g
       WHERE r.nsinies = pnsinies
         AND r.cgarant = pcgarant
         AND r.ctipres = pctipres
         AND r.nmovres = pnmovres
         AND r.ntramit = pntramit
         AND p.nsinies = r.nsinies
         AND p.ntramit = r.ntramit
         AND g.sidepag = p.sidepag
         AND g.ctipres = r.ctipres
         AND g.nmovres = r.nmovres
         AND g.cgarant = r.cgarant;
       *******************************************/
      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_reserva r
       WHERE r.nsinies = pnsinies
         --AND r.cgarant = pcgarant         -- 26108
         AND NVL(r.cgarant, -1) = NVL(pcgarant, -1)   -- 26108
         AND r.ctipres = pctipres
         AND NVL(r.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND r.ntramit = pntramit
         AND r.fultpag IS NULL
         AND r.sidepag IS NULL
         AND r.nmovres = (SELECT MAX(r1.nmovres)
                            FROM sin_tramita_reserva r1
                           WHERE r1.nsinies = r.nsinies
                             AND r1.ntramit = r.ntramit
                             AND r1.ctipres = r.ctipres
                             AND NVL(r.cgarant, -1) = NVL(pcgarant, -1)   -- 26108
                             AND NVL(r.ctipgas, -1) = NVL(pctipgas, -1))   -- 26108
         AND NOT EXISTS(SELECT 1
                          FROM sin_tramita_pago p, sin_tramita_pago_gar g
                         WHERE p.nsinies = r.nsinies
                           AND p.ntramit = r.ntramit
                           AND g.sidepag = p.sidepag
                           AND g.ctipres = r.ctipres
                           AND g.nmovres = r.nmovres
                           --AND g.cgarant = r.cgarant                -- 26108
                           AND NVL(g.cgarant, -1) = NVL(pcgarant, -1)   -- 26108
                                                                     );

      IF vcount = 0 THEN
         RETURN 9900988;   --Error la reserva tiene pagos generados
      END IF;

      -- BUG17934:DRA:14/03/2011:FI
      vpassexe := 3;

      DELETE      sin_tramita_reserva
            WHERE nsinies = pnsinies
              AND ntramit = pntramit
              AND ctipres = pctipres
              AND nmovres = pnmovres
              AND cgarant = pcgarant;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_ultreserva', vpassexe,
                     'Error no controlado', SQLERRM);
         RETURN 140999;
   END f_del_ultreserva;

   /**************************************************************************
      Función que comprueba la modificacion de la fresfin de una reserva
      param in  pnsinies : Número de siniestro
      param in  pntramit : Número de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      aram in  pcgarant : cÃ³digo de la garantia
      param in  pfresfin : Fecha fin de la reserva
      param out pfresfin_out : Fecha permitida como fecha fin reserva
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 12207 - 03/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_actfresfin(
      pnsinies IN sin_tramita_pago.nsinies%TYPE,
      pntramit IN sin_tramita_pago.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pcgarant IN sin_tramita_reserva.cgarant%TYPE,
      pfresfin IN sin_tramita_reserva.fresfin%TYPE,
      pfresfin_out OUT sin_tramita_reserva.fresfin%TYPE)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER := 0;
      vmax_nmovres   NUMBER;
      vfperfin       DATE;
   BEGIN
      SELECT MAX(g.fperfin)
        INTO vfperfin
        FROM sin_tramita_reserva r, sin_tramita_pago p, sin_tramita_pago_gar g
       WHERE r.nsinies = pnsinies
         AND r.ntramit = pntramit
         AND r.ctipres = pctipres
         AND r.cgarant = pcgarant
         AND p.nsinies = r.nsinies
         AND p.ntramit = r.ntramit
         AND g.sidepag = p.sidepag
         AND g.ctipres = r.ctipres
         AND g.cgarant = r.cgarant;

      IF vfperfin IS NOT NULL
         AND vfperfin > pfresfin THEN
         pfresfin_out := vfperfin;
      ELSE
         pfresfin_out := pfresfin;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_actfresfin', vpassexe,
                     'Error no controlado', SQLERRM);
         RETURN 140999;
   END f_actfresfin;

   /*************************************************************************
      FUNCTION f_pago_aut
      Crea un pago automÃ¡tico
      param in pdata     : fecha final de pago
      param in pncobros  : Número de cobros
      param in p_nsinies : Número siniestro (opcional)
      param in p_ntramit : Número tramit(opcional)
      param in p_ctipres : Tipus reserva (opcional)
      param out psproces : Num. proceso
      param in idres     : Identificador de reserva sobre la que efectuamos el pago
      return             : cÃ³digo de error

      Bug 12207 - 08/02/2010 - AMC
      Bug 31294 - 04/07/2014 - JTT: AÃ¿Â±adimos el parametro pidres
   *************************************************************************/
   FUNCTION f_pago_aut(
      p_data IN DATE,
      pncobros OUT NUMBER,
      p_nsinies IN VARCHAR2 DEFAULT NULL,
      p_ntramit IN NUMBER DEFAULT NULL,
      p_ctipres IN NUMBER DEFAULT NULL,
      p_ctipgas IN NUMBER DEFAULT NULL,
      pwhere IN VARCHAR2 DEFAULT NULL,
      pcempres IN NUMBER DEFAULT NULL,
      pcgarant IN NUMBER DEFAULT NULL,
      psproces OUT NUMBER,
      pidres IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_pago_aut';
      vparam         VARCHAR2(500)
         := SUBSTR('d=' || p_data || ' s=' || p_nsinies || ' n=' || p_ntramit || ' t='
                   || p_ctipres || ' e=' || pcempres || ' tg=' || p_ctipgas || ' g='
                   || pcgarant || ' i=' || pidres || ' w=' || pwhere,
                   1, 500);

      --
      CURSOR c_sinies(v_sproduc IN NUMBER) IS
         SELECT   sg.cempres, s.fsinies, s.nsinies, v.cgarant, v.fmovres, s.falta, s.sseguro,
                  s.ccausin, s.cmotsin, s.fnotifi, s.nriesgo, sg.sproduc,
                  pac_seguros.ff_get_actividad(s.sseguro, s.nriesgo) cactivi, v.fultpag,
                  v.fresini, v.fresfin, v.ireserva, pr.nnumpag, sg.cbancar, sg.ctipban,
                  sm.ntramit, v.ctipres, v.cmonres, v.ctipgas,
                  v.idres   -- 26108 y 31294 (idres)
             FROM sin_siniestro s, sin_tramita_movimiento sm, sin_tramita_reserva v,
                  seguros sg, productos pr, sin_movsiniestro m
            WHERE s.nsinies = m.nsinies
              AND m.nmovsin = (SELECT MAX(nmovsin)
                                 FROM sin_movsiniestro
                                WHERE nsinies = s.nsinies)
              AND m.cestsin IN(0, 4)   -- ICV
              AND sm.nsinies = s.nsinies
              AND sm.csubtra = 27
              AND sm.nmovtra = (SELECT MAX(sm1.nmovtra)
                                  FROM sin_tramita_movimiento sm1
                                 WHERE sm1.nsinies = s.nsinies)
              -- BUG17799:DRA:28/02/2011
              AND s.nsinies = v.nsinies
              -- Bug 0016285 - 15/10/2010 - JMF
              AND v.nsinies = NVL(p_nsinies, v.nsinies)
              AND v.ntramit = NVL(p_ntramit, v.ntramit)
              AND v.ctipres = NVL(p_ctipres, 1)
              AND NVL(v.ctipgas, -1) = NVL(p_ctipgas, -1)   -- 26108
              AND s.sseguro = sg.sseguro
              AND pr.cramo = sg.cramo
              AND pr.ctipseg = sg.ctipseg
              AND pr.ccolect = sg.ccolect
              AND pr.cmodali = sg.cmodali
              AND(v.cgarant = pcgarant
                  OR pcgarant IS NULL)
              AND(pcempres IS NULL
                  OR sg.cempres = pcempres)
              AND(p_data BETWEEN v.fresini AND v.fresfin
                  OR(p_data >= v.fresfin
                     AND NVL(v.fultpag, v.fresfin - 1) <> v.fresfin))
              AND NVL(v.fultpag, v.fresini - 1) < p_data
              AND v.nmovres = (SELECT MAX(nmovres)
                                 FROM sin_tramita_reserva r
                                WHERE r.nsinies = v.nsinies
                                  AND r.ctipres = v.ctipres
                                  AND r.ntramit = v.ntramit
                                  AND NVL(r.cgarant, 0) = NVL(v.cgarant, 0)   -- 26108
                                  AND NVL(v.ctipgas, -1) = NVL(p_ctipgas, -1)   -- 26108
                                  AND r.fresini = v.fresini
                                  AND(pidres IS NULL
                                      OR r.idres = pidres))   -- 31294
              AND f_pargaranpro_v(sg.cramo, sg.cmodali, sg.ctipseg, sg.ccolect,
                                  pac_seguros.ff_get_actividad(s.sseguro, s.nriesgo),
                                  v.cgarant, 'BAJA') = 1
              AND(v.idres = pidres
                  OR pidres IS NULL)   -- 31294
              AND((v_sproduc IS NOT NULL
                   AND pr.sproduc = v_sproduc)
                  OR v_sproduc IS NULL)
         ORDER BY s.nsinies, v.fresini, v.fresfin;

      v_cgarant      sin_tramita_reserva.cgarant%TYPE;
      v_error        NUMBER;
      v_provisio     sin_tramita_reserva.ireserva%TYPE;
      v_fresini      DATE;
      v_fresfin      DATE;
      v_destinatario NUMBER;
      v_ctipdes      sin_det_causa_motivo.ctipdes%TYPE;
      v_movimi       NUMBER(4);
      v_ccc          VARCHAR2(4000);
      n_error        NUMBER;
      v_ctipban      sin_tramita_destinatario.ctipban%TYPE;
      vsidepag       NUMBER;
      vipago         NUMBER;
      vsperson       NUMBER;
      vcpaisre       NUMBER;
      vcagente       NUMBER;
      vcobros        NUMBER := 0;
      pos            NUMBER;
      tipo           VARCHAR2(2000);
      posdp          NUMBER;
      vsproduc       NUMBER;
      vwhere         VARCHAR2(2000) := '||';
      vsprogar       NUMBER;
      -- BUG16506:DRA:10/11/2010:Inici
      vcestpag       sin_tramita_movpago.cestpag%TYPE;
      vnmovpag       sin_tramita_movpago.nmovpag%TYPE;
      vpasexec       NUMBER := 0;
   -- BUG16506:DRA:10/11/2010:Fi
   BEGIN
      vpasexec := 100;

      IF pwhere IS NOT NULL THEN
         vwhere := pwhere;
      END IF;

      vpasexec := 110;

      SELECT sprogar.NEXTVAL
        INTO vsprogar
        FROM DUAL;

      vpasexec := 120;

      FOR i IN 1 .. LENGTH(vwhere) LOOP
         IF pwhere IS NOT NULL THEN
            pos := INSTR(pwhere, '|', 1, i);
            posdp := INSTR(pwhere, '|', 1, i + 1);
            vpasexec := 130;
            vsproduc := SUBSTR(pwhere, pos + 1,(posdp - pos) - 1);
         END IF;

         vpasexec := 140;

         IF vsproduc IS NOT NULL
            OR pwhere IS NULL THEN
            vpasexec := 150;

            FOR sini IN c_sinies(vsproduc) LOOP
               v_provisio := sini.ireserva;
               vpasexec := 160;

               IF v_provisio > 0
                  AND sini.fresini <= sini.fresfin THEN
                  vpasexec := 170;

                  -- 31294 - 04/07/2014 - JTT:
                  -- Si el campo pIdres esta informado el cursor solo habra devuelto un regitro por siniestro
                  -- recuperamos las fechas de inicio y fin de reserva del registro. En caso contrario
                  -- dejamos el calculo actual.
                  IF pidres IS NOT NULL THEN
                     v_fresini := sini.fresini;
                     v_fresfin := sini.fresfin;
                  ELSE
                     IF sini.fultpag IS NULL THEN
                        v_fresini := sini.fresini;
                     ELSE
                        v_fresini := sini.fultpag + 1;
                     END IF;

                     vpasexec := 180;

                     IF sini.fresfin <= p_data THEN
                        v_fresfin := sini.fresfin;
                     ELSE
                        v_fresfin := p_data;
                     END IF;
                  END IF;

                  vpasexec := 190;

                  SELECT COUNT(1)
                    INTO v_destinatario
                    FROM sin_tramita_destinatario
                   WHERE nsinies = sini.nsinies
                     AND ntramit = sini.ntramit;

                  vpasexec := 200;

                  IF v_destinatario = 0 THEN
                     -- Bug 0021870 -  - JMF
                     BEGIN
                        vpasexec := 210;

                        SELECT DISTINCT (ctipdes)
                                   INTO v_ctipdes
                                   FROM sin_det_causa_motivo
                                  WHERE ctipdes <> 0
                                    AND scaumot IN(
                                          SELECT sg.scaumot
                                            FROM sin_gar_causa_motivo sg, sin_causa_motivo sc
                                           WHERE sg.sproduc = sini.sproduc
                                             AND sg.cgarant = sini.cgarant
                                             AND sg.cactivi = sini.cactivi
                                             AND sg.scaumot = sc.scaumot
                                             AND sc.ccausin = sini.ccausin
                                             AND sc.cmotsin = sini.cmotsin);
                     EXCEPTION
                        WHEN TOO_MANY_ROWS THEN
                           vpasexec := 220;

                           SELECT DISTINCT (ctipdes)
                                      INTO v_ctipdes
                                      FROM sin_det_causa_motivo
                                     WHERE ctipdes <> 0
                                       AND cpagaut = 1
                                       AND scaumot IN(
                                             SELECT sg.scaumot
                                               FROM sin_gar_causa_motivo sg,
                                                    sin_causa_motivo sc
                                              WHERE sg.sproduc = sini.sproduc
                                                AND sg.cgarant = sini.cgarant
                                                AND sg.cactivi = sini.cactivi
                                                AND sg.scaumot = sc.scaumot
                                                AND sc.ccausin = sini.ccausin
                                                AND sc.cmotsin = sini.cmotsin);
                     END;

                     vpasexec := 230;
                     v_ccc := NULL;
                     v_ctipban := NULL;

                     --esta respondida la pregun
                     BEGIN
                        vpasexec := 240;

                        SELECT p.trespue
                          INTO v_ccc
                          FROM pregunpolseg p
                         WHERE p.sseguro = sini.sseguro
                           AND p.cpregun = 9001
                           AND p.nmovimi = (SELECT MAX(p1.nmovimi)
                                              FROM pregunpolseg p1
                                             WHERE p1.sseguro = p.sseguro
                                               AND p1.cpregun = p.cpregun);
                     EXCEPTION
                        WHEN OTHERS THEN
                           v_ccc := NULL;
                           v_ctipban := NULL;
                     END;

                     vpasexec := 250;

                     IF v_ccc IS NOT NULL THEN
                        BEGIN
                           vpasexec := 260;

                           SELECT p.crespue
                             INTO v_ctipban
                             FROM pregunpolseg p
                            WHERE p.sseguro = sini.sseguro
                              AND p.cpregun = 9000
                              AND p.nmovimi = (SELECT MAX(p1.nmovimi)
                                                 FROM pregunpolseg p1
                                                WHERE p1.sseguro = p.sseguro
                                                  AND p1.cpregun = p.cpregun);
                        EXCEPTION
                           WHEN OTHERS THEN
                              v_ctipban := NULL;
                        END;
                     END IF;

                     -- BUG14289:DRA:03/05/2010:Fi
                     vpasexec := 270;

                     SELECT s.cagente
                       INTO vcagente
                       FROM seguros s, sin_siniestro si
                      WHERE s.sseguro = si.sseguro
                        AND si.nsinies = sini.nsinies;

                     vpasexec := 280;

                     SELECT a.sperson, p.cpais
                       INTO vsperson, vcpaisre
                       FROM asegurados a, per_detper p
                      WHERE a.sseguro = sini.sseguro
                        AND a.norden = 1
                        AND p.sperson = a.sperson
                        AND p.cagente = ff_agente_cpervisio(vcagente);

                     vpasexec := 290;
                     v_error := f_ins_destinatario(sini.nsinies, sini.ntramit, vsperson,
                                                   NVL(v_ccc, sini.cbancar),
                                                   NVL(v_ctipban, sini.ctipban), 100, vcpaisre,
                                                   v_ctipdes, 1, NULL);

                     IF v_error <> 0 THEN
                        p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                                    'f_ins_destinatario', v_error);
                        RETURN v_error;
                     END IF;
                  END IF;

                  vpasexec := 300;
                  v_error := pac_sin_formula.f_genera_pago(sini.sseguro, sini.nriesgo,
                                                           sini.cgarant, sini.sproduc,
                                                           sini.cactivi, sini.nsinies,
                                                           sini.ntramit, sini.ccausin,
                                                           sini.cmotsin, sini.fsinies,
                                                           sini.fnotifi, v_fresini, v_fresfin,
                                                           NULL, NULL, sini.idres);

                  IF v_error <> 0 THEN
                     p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, 'f_genera_pago',
                                 v_error);
                     RETURN v_error;
                  END IF;

                  vpasexec := 310;
                  v_error := pac_sin_formula.f_inserta_pago(sini.nsinies, sini.ntramit,
                                                            sini.ctipres, sini.cgarant,
                                                            vsidepag, vipago, NULL, NULL,
                                                            v_fresini, v_fresfin, NULL,
                                                            sini.ctipgas);   -- 26108

                  -- BUG16506:DRA:16/12/2010
                  -- Bug 31294 - 04/07/2014 - JTT: No actualizamos la fecha si el importe del pago es de 0
                  IF v_error = 0
                     AND vipago > 0 THEN
                     vpasexec := 320;

                     UPDATE sin_tramita_reserva
                        SET fultpag = LEAST(v_fresfin, fresfin)
                      WHERE nsinies = sini.nsinies
                        AND NVL(cgarant, 0) = NVL(sini.cgarant, 0)   -- 26108
                        AND NVL(ctipgas, -1) = NVL(sini.ctipgas, -1)   -- 26108
                        AND idres = sini.idres   -- 31294
                        AND nmovres = (SELECT MAX(nmovres)
                                         FROM sin_tramita_reserva r
                                        WHERE nsinies = sini.nsinies
                                          AND ctipres = sini.ctipres
                                          AND ntramit = sini.ntramit
                                          AND NVL(cgarant, 0) = NVL(sini.cgarant, 0)   -- 26108
                                          AND NVL(ctipgas, -1) = NVL(sini.ctipgas, -1)   -- 26108
                                          AND idres = sini.idres);   -- 31294

                     -- BUG16506:DRA:10/11/2010:Inici
                     vpasexec := 330;

                     UPDATE sin_tramita_pago
                        SET fordpag = p_data,
                            sproces = vsprogar
                      WHERE sidepag = vsidepag;

                     -- BUG18191:DRA:06/04/2011:Inici: Ara es fa des de la función PAC_SIN_FORMULA.f_inserta_pago
                     /********************************************************************
                     vpasexec := 16;
                     vcestpag := pac_parametros.f_parempresa_n(sini.cempres,
                                                               'ESTADO_PAGO_SIN_BAJA');
                     vpasexec := 17;
                     IF NVL(vcestpag, 0) <> 0
                        AND vsidepag IS NOT NULL THEN
                        vnmovpag := NULL;
                        vpasexec := 18;
                        v_error := pac_siniestros.f_ins_movpago(vsidepag, vcestpag, p_data, 1,
                                                                NULL, NULL, 0, vnmovpag);
                        IF v_error <> 0 THEN
                           p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_pago_aut',
                                       vpasexec, 'f_ins_movpago', v_error);
                           RETURN v_error;
                        END IF;
                     END IF;
                     ********************************************************************/
                     vpasexec := 340;

                     -- BUG16506:DRA:10/11/2010:Fi
                     IF vsidepag IS NOT NULL THEN
                        vcobros := vcobros + 1;
                        psproces := vsprogar;
                     END IF;
                  ELSE
                     p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, 'f_inserta_pago',
                                 v_error);
                     RETURN v_error;
                  END IF;
               END IF;
            END LOOP;
         END IF;
      END LOOP;

      vpasexec := 350;
      pncobros := vcobros;
      RETURN 0;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     SQLCODE || ' ' || SQLERRM);
         RETURN 101667;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     SQLCODE || ' ' || SQLERRM);
         RETURN SQLCODE;
   END f_pago_aut;

   /**************************************************************************
      Función que borra el detalle de un pago
      param in  psidepag : numero de pago
      param in  pnsinies : Número de siniestro
      param in  pntramit : Número de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      aram in  pcgarant : cÃ³digo de la garantia
      param in  pnmovres : numero de movimiento
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 13166 - 15/02/2010 - AMC
      BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
   ***********************************************************************/
   FUNCTION f_del_movpaggar(
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      pnsinies IN sin_tramita_pago.nsinies%TYPE,
      pntramit IN sin_tramita_pago.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pcgarant IN sin_tramita_reserva.cgarant%TYPE,
      pnmovres IN sin_tramita_pago_gar.nmovres%TYPE,
      pnorden IN sin_tramita_pago_gar.norden%TYPE)
      RETURN NUMBER IS
      vpassexe       NUMBER := 0;
      visinret       NUMBER;
      vcestpag       NUMBER;
      vctippag       NUMBER;
      vireserva      NUMBER;
      v_isinret      NUMBER;
      vnmovres       NUMBER;
      viretenc       NUMBER;
      viiva          NUMBER;
      visuplid       NUMBER;
      vifranq        NUMBER;
      viresrcm       NUMBER;
      viresred       NUMBER;
      visinretpag    NUMBER;
      viivapag       NUMBER;
      visuplidpag    NUMBER;
      viretencpag    NUMBER;
      vifranqpag     NUMBER;
      viresrcmpag    NUMBER;
      viresredpag    NUMBER;
      vcont          NUMBER;
      vnorden        NUMBER;
      vttipag        VARCHAR2(10);
      vnmovres_cont  NUMBER;
      virecobro      NUMBER;
      vipago         NUMBER;
      vipago_ori     NUMBER;
      virecobro_ori  NUMBER;
      dif            NUMBER := 0;
      vireserva_act  NUMBER := 0;
      vsidepag       NUMBER;
      min_nmovres    NUMBER;
      -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
      v_ireteiva     sin_tramita_pago_gar.ireteiva%TYPE;
      v_ireteica     sin_tramita_pago_gar.ireteica%TYPE;
      v_iica         sin_tramita_pago_gar.iica%TYPE;
      v_cmultimon    parempresas.nvalpar%TYPE;
      v_error        axis_literales.slitera%TYPE;
      v_cmonres      sin_tramita_reserva.cmonres%TYPE;
      v_ctipgas      sin_tramita_reserva.ctipgas%TYPE;   -- 26108
      vnew_nmovres   NUMBER;   -- 26108
    v_iotrosgas      sin_tramita_pago_gar.iotrosgas%TYPE;
    v_ibaseipoc      sin_tramita_pago_gar.ibaseipoc%TYPE;
    v_iipoconsumo    sin_tramita_pago_gar.iipoconsumo%TYPE;
    v_iotrosgaspag   sin_tramita_pago_gar.iotrosgaspag%TYPE;
    v_ibaseipocpag   sin_tramita_pago_gar.ibaseipocpag%TYPE;
    v_iipoconsumopag sin_tramita_pago_gar.iipoconsumopag%TYPE;
   BEGIN
      SELECT cestpag
        INTO vcestpag
        FROM sin_tramita_movpago
       WHERE sidepag = psidepag
         AND nmovpag = (SELECT MAX(nmovpag)
                          FROM sin_tramita_movpago
                         WHERE sidepag = psidepag);

      IF vcestpag <> 0 THEN
         RETURN 9901024;
      END IF;

      -- 26108 parece que no hace falta CTIPGAS porque va por nmovres/norden que es PK (CGARANT tambien sobra)
      SELECT isinret, iretenc, iiva, isuplid, ifranq, iresrcm, iresred, isinretpag,
             iivapag, isuplidpag, iretencpag, ifranqpag, iresrcmpag, iresredpag,
             ireteiva, ireteica, iica,iotrosgas ,ibaseipoc ,iipoconsumo ,iotrosgaspag
            ,ibaseipocpag ,iipoconsumopag
        INTO visinret, viretenc, viiva, visuplid, vifranq, viresrcm, viresred, visinretpag,
             viivapag, visuplidpag, viretencpag, vifranqpag, viresrcmpag, viresredpag,
             v_ireteiva, v_ireteica, v_iica, v_iotrosgas ,v_ibaseipoc ,v_iipoconsumo
            ,v_iotrosgaspag ,v_ibaseipocpag ,v_iipoconsumopag
        FROM sin_tramita_pago_gar
       WHERE sidepag = psidepag
         AND ctipres = pctipres
         AND nmovres = pnmovres
         AND(pcgarant IS NULL
             OR cgarant = pcgarant)
         AND norden = pnorden;

      SELECT ctippag
        INTO vctippag
        FROM sin_tramita_pago
       WHERE sidepag = psidepag;

      vpassexe := 1;

      -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
      -- aprovechar el momento para poner nvl(...) en todos los campos
      UPDATE sin_tramita_pago
         SET isinret = NVL(isinret, 0) - NVL(visinret, 0),
             iretenc = NVL(iretenc, 0) - NVL(viretenc, 0),
             iiva = NVL(iiva, 0) - NVL(viiva, 0),
             isuplid = NVL(isuplid, 0) - NVL(visuplid, 0),
             ifranq = NVL(ifranq, 0) - NVL(vifranq, 0),
             iresrcm = NVL(iresrcm, 0) - NVL(viresrcm, 0),
             iresred = NVL(iresred, 0) - NVL(viresred, 0),
             isinretpag = NVL(isinretpag, 0) - NVL(visinretpag, 0),
             iivapag = NVL(iivapag, 0) - NVL(viivapag, 0),
             isuplidpag = NVL(isuplidpag, 0) - NVL(visuplidpag, 0),
             iretencpag = NVL(iretencpag, 0) - NVL(viretencpag, 0),
             ifranqpag = NVL(ifranqpag, 0) - NVL(vifranqpag, 0),
             iresrcmpag = NVL(iresrcmpag, 0) - NVL(viresrcmpag, 0),
             iresredpag = NVL(iresredpag, 0) - NVL(viresredpag, 0),
             ireteiva = NVL(ireteiva, 0) - NVL(v_ireteiva, 0),
             ireteica = NVL(ireteica, 0) - NVL(v_ireteica, 0),
             iica = NVL(iica, 0) - NVL(v_iica, 0)
       ,iotrosgas      = NVL(iotrosgas, 0) - NVL(v_iotrosgas, 0)
       ,ibaseipoc      = NVL(ibaseipoc, 0) - NVL(v_ibaseipoc, 0)
       ,iipoconsumo    = NVL(iipoconsumo, 0) - NVL(v_iipoconsumo, 0)
       ,iotrosgaspag   = NVL(iotrosgaspag, 0) - NVL(v_iotrosgaspag, 0)
       ,ibaseipocpag   = NVL(ibaseipocpag, 0) - NVL(v_ibaseipocpag, 0)
       ,iipoconsumopag = NVL(iipoconsumopag, 0) - NVL(v_iipoconsumopag, 0)
       WHERE sidepag = psidepag;

      vpassexe := 2;

      DELETE      sin_tramita_pago_gar
            WHERE sidepag = psidepag
              AND ctipres = pctipres
              AND nmovres = pnmovres
              AND(pcgarant IS NULL
                  OR cgarant = pcgarant)
              AND norden = pnorden;

      vpassexe := 3;

      -- BUG 18423/104212 - 25/01/2012 - JMP - Multimoneda - Tener en cuenta que las reservas pueden estar en distintas monedas
      SELECT cmonres, ctipgas   -- 26108
        INTO v_cmonres, v_ctipgas   -- 26108
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND nmovres = pnmovres;

      -- FIN BUG 18423/104212 - 25/01/2012 - JMP - Multimoneda - Tener en cuenta que las reservas pueden estar en distintas monedas
      vpassexe := 4;

      SELECT MAX(nmovres)
        INTO vnmovres
        FROM sin_tramita_reserva
       WHERE ntramit = pntramit
         AND ctipres = pctipres
         AND NVL(ctipgas, -1) = NVL(v_ctipgas, -1)   -- 26108
         AND(pcgarant IS NULL
             OR cgarant = pcgarant)
         AND cmonres = v_cmonres
         -- BUG 18423/104212 - 25/01/2012 - JMP - Multimoneda -
         AND nsinies = pnsinies;

-- 26108 ini
      vpassexe := 5;

      SELECT DECODE(vctippag, 7, NVL(ireserva, 0) - visinret, NVL(ireserva, 0) + visinret),
             DECODE(vctippag, 7, NVL(irecobro, 0) - visinret, irecobro),
             DECODE(vctippag, 7, ipago, NVL(ipago, 0) - visinret)
        INTO vireserva,
             virecobro,
             vipago
        FROM sin_tramita_reserva
       WHERE nmovres = vnmovres
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND nsinies = pnsinies;

      vpassexe := 6;

      SELECT MAX(nmovres) + 1
        INTO vnew_nmovres
        FROM sin_tramita_reserva
       WHERE ntramit = pntramit
         AND nsinies = pnsinies;

      vpassexe := 7;

      INSERT INTO sin_tramita_reserva
                  (nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres, cmonres,
                   ireserva, ipago, iingreso, irecobro, icaprie, ipenali, fresini, fresfin,
                   fultpag, sidepag, sproces, fcontab, iprerec, ctipgas, idres,   --31294/174629:NSS;13/05/2014
                                                                               cmovres)   --bug 31294/174788:NSS:22/05/2014
         SELECT nsinies, ntramit, ctipres, vnew_nmovres, cgarant, 1, fmovres, cmonres,
                vireserva, vipago, iingreso, virecobro, icaprie, ipenali, fresini, fresfin,
                fultpag, psidepag *(-1), NULL, NULL, iprerec, ctipgas, idres,   --31294/174629:NSS;13/05/2014
                12   --bug 31294/174788:NSS:22/05/2014
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipres = pctipres
            AND nmovres = vnmovres;

      vpassexe := 8;

      SELECT NVL(pac_parametros.f_parempresa_n(cempres, 'MULTIMONEDA'), 0)
        INTO v_cmultimon
        FROM sin_siniestro si, seguros s
       WHERE si.nsinies = pnsinies
         AND s.sseguro = si.sseguro;

      vpassexe := 9;

      IF v_cmultimon = 1 THEN
         v_error := pac_oper_monedas.f_contravalores_reserva(pnsinies, pntramit, pctipres,
                                                             vnew_nmovres, pcgarant);

         IF v_error <> 0 THEN
            RETURN v_error;
         END IF;
      END IF;

-- 26108 fin

      /*
      SELECT ireserva
        INTO vireserva
        FROM sin_tramita_reserva
       WHERE nmovres = vnmovres
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND nsinies = pnsinies;
      IF vctippag = 2 THEN
         vireserva := NVL(vireserva, 0) + visinret;
      ELSE
         vireserva := NVL(vireserva, 0) - visinret;
      END IF;
      SELECT SUM(isinret)
        INTO v_isinret
        FROM sin_tramita_pago_gar
       WHERE sidepag = psidepag
         AND ctipres = pctipres;
      UPDATE sin_tramita_reserva
         SET ireserva = NVL(vireserva, 0),
             ipago = v_isinret
       WHERE nmovres = vnmovres
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND nsinies = pnsinies;
*/
-- 26108 ini
/*
      vcont := pnmovres;

      WHILE vcont < vnmovres LOOP
         SELECT ireserva, ipago, irecobro
           INTO vireserva, vipago_ori, virecobro_ori
           FROM sin_tramita_reserva
          WHERE nmovres = vcont
            AND ntramit = pntramit
            AND ctipres = pctipres
            AND(pcgarant IS NULL
                OR cgarant = pcgarant)
            AND cmonres = v_cmonres
            -- BUG 18423/104212 - 25/01/2012 - JMP - Multimoneda -
            AND nsinies = pnsinies;

         SELECT MIN(NVL(nmovres, 0))
           INTO min_nmovres
           FROM sin_tramita_reserva
          WHERE ntramit = pntramit
            AND(pcgarant IS NULL
                OR cgarant = pcgarant)
            AND cmonres = v_cmonres
            -- BUG 18423/104212 - 25/01/2012 - JMP - Multimoneda -
            AND ctipres = pctipres
            AND nmovres > vcont
            AND nsinies = pnsinies;

         SELECT ipago, irecobro, sidepag, ireserva
           INTO vipago, virecobro, vsidepag, vireserva_act
           FROM sin_tramita_reserva
          WHERE nmovres = min_nmovres
            AND ntramit = pntramit
            AND ctipres = pctipres
            AND(pcgarant IS NULL
                OR cgarant = pcgarant)
            AND cmonres = v_cmonres
            -- BUG 18423/104212 - 25/01/2012 - JMP - Multimoneda -
            AND nsinies = pnsinies;

         IF vsidepag IS NOT NULL THEN
            SELECT SUM(stpg.isinret)
              INTO v_isinret
              FROM sin_tramita_pago_gar stpg, sin_tramita_movpago stm
             --, sin_tramita_pago stp, sin_tramita_movpago stm
            WHERE  stpg.sidepag = vsidepag
               AND ctipres = pctipres
               AND(pcgarant IS NULL
                   OR cgarant = pcgarant)
               AND stpg.sidepag = stm.sidepag
               AND stm.nmovpag = (SELECT MAX(nmovpag)
                                    FROM sin_tramita_movpago stm2
                                   WHERE stm2.sidepag = stpg.sidepag)
               AND stm.cestpag != 8;   --Mirem tots els pagaments NO anulats
         ELSE
            v_isinret := 0;
            dif := NVL(vipago, 0) - NVL(vipago_ori, 0);
            vireserva := vireserva_act + dif;
         END IF;

         IF vctippag = 2 THEN
            vipago := NVL(v_isinret, 0) + NVL(vipago_ori, 0);
            vireserva :=(NVL(vireserva, 0) - NVL(v_isinret, 0));
         ELSE
            virecobro := NVL(v_isinret, 0) + NVL(virecobro_ori, 0);
            vireserva :=(NVL(vireserva, 0) + NVL(v_isinret, 0));
         END IF;

         UPDATE sin_tramita_reserva
            SET ireserva = NVL(vireserva, 0),
                irecobro = virecobro,
                ipago = vipago
          WHERE nmovres = min_nmovres
            AND ntramit = pntramit
            AND ctipres = pctipres
            AND(pcgarant IS NULL
                OR cgarant = pcgarant)
            AND nsinies = pnsinies;

         vcont := min_nmovres;   --vcont + 1;

         -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
         SELECT NVL(pac_parametros.f_parempresa_n(cempres, 'MULTIMONEDA'), 0)
           INTO v_cmultimon
           FROM sin_siniestro si, seguros s
          WHERE si.nsinies = pnsinies
            AND s.sseguro = si.sseguro;

         IF v_cmultimon = 1 THEN
            v_error := pac_oper_monedas.f_contravalores_reserva(pnsinies, pntramit, pctipres,
                                                                min_nmovres, pcgarant);

            IF v_error <> 0 THEN
               RETURN v_error;
            END IF;
         END IF;
      -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
      END LOOP;
*/
-- 26108 fin
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_movpaggar', vpassexe,
                     'Error no controlado', SQLERRM);
         RETURN 140999;
   END f_del_movpaggar;

   /**************************************************************************
      Función que tira atras el pago de un siniestro
      param in  pnsinies : Número de siniestro
      param in  psidepag : Número de pago
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 13312 - 09/03/2010 - AMC
   ***********************************************************************/
   FUNCTION f_del_ins_rea(pnsinies IN VARCHAR2, psidepag IN NUMBER)
      RETURN NUMBER IS
      w_scesrea      NUMBER;
   BEGIN
      FOR cur IN (SELECT *
                    FROM cesionesrea
                   WHERE nsinies = pnsinies
                     AND sidepag = psidepag
                     AND nmovigen = (SELECT MAX(nmovigen)
                                       FROM cesionesrea
                                      WHERE nsinies = pnsinies
                                        AND sidepag = psidepag)) LOOP
         IF cur.cgenera = 2
            AND cur.icesion > 0 THEN
            SELECT scesrea.NEXTVAL
              INTO w_scesrea
              FROM DUAL;

            INSERT INTO cesionesrea
                        (scesrea, ncesion, icesion, icapces,
                         sseguro, nversio, scontra, ctramo, sfacult,
                         nriesgo, icomisi, icomreg, scumulo,
                         cgarant, spleno, ccalif1, ccalif2, nsinies,
                         fefecto, fvencim, fcontab, pcesion, sproces,
                         cgenera, fgenera, fregula, fanulac, nmovimi,
                         sidepag, ipritarrea, idtosel,
                         psobreprima, cdetces, ipleno,
                         icapaci, nmovigen, iextrap,
                         iextrea, nreemb, nfact, nlinea)
                 VALUES (w_scesrea, cur.ncesion,(cur.icesion * -1),(cur.icapces * -1),
                         cur.sseguro, cur.nversio, cur.scontra, cur.ctramo, cur.sfacult,
                         cur.nriesgo,(cur.icomisi * -1),(cur.icomreg * -1), cur.scumulo,
                         cur.cgarant, cur.spleno, cur.ccalif1, cur.ccalif2, cur.nsinies,
                         cur.fefecto, cur.fvencim, cur.fcontab, cur.pcesion, cur.sproces,
                         cur.cgenera, cur.fgenera, cur.fregula, cur.fanulac, cur.nmovimi,
                         cur.sidepag,(cur.ipritarrea * -1),(cur.idtosel * -1),
                         (cur.psobreprima * -1), cur.cdetces,(cur.ipleno * -1),
                         (cur.icapaci * -1),(cur.nmovigen + 1),(cur.iextrap * -1),
                         (cur.iextrea * -1), cur.nreemb, cur.nfact, cur.nlinea);
         END IF;
      END LOOP;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_ins_rea', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' psidepag:' || psidepag,
                     SQLERRM);
         RETURN SQLCODE;
   END f_del_ins_rea;

   /**************************************************************************
      Función que borra una tramitacion
      param in  pnsinies : Número de siniestro
      param in  pntramit : Número de tramitacion
      param in  pctiptra : numero de tipo de tramitacion
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 12668 - 03/03/2010 - AMC
   ***********************************************************************/
   FUNCTION f_del_tramitacion(pnsinies IN VARCHAR2, pntramit IN NUMBER, pctiptra IN NUMBER)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER;
   BEGIN
      vpassexe := 1;

      -- Verificamos si existe reserva, si es asi no se puede borrar
      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit;

      IF vcount > 0 THEN
         RETURN 9901047;
      END IF;

      IF pctiptra IN(1, 2, 6, 7) THEN   --autos
         vpassexe := 2;

         DELETE      sin_tramita_detvehiculo
               WHERE nsinies = pnsinies
                 AND ntramit = pntramit;
      ELSIF pctiptra = 3 THEN   --detall personas
         vpassexe := 3;

         DELETE      sin_tramita_detpersona
               WHERE nsinies = pnsinies
                 AND ntramit = pntramit;
      ELSIF pctiptra = 4 THEN   -- det descripcio
         vpassexe := 4;

         DELETE      sin_tramita_detdescripcion
               WHERE nsinies = pnsinies
                 AND ntramit = pntramit;
      ELSIF pctiptra = 5 THEN   --det direccio
         vpassexe := 5;

         DELETE      sin_tramita_detdireccion
               WHERE nsinies = pnsinies
                 AND ntramit = pntramit;
      END IF;

      vpassexe := 6;

      DELETE      sin_tramita_movimiento
            WHERE nsinies = pnsinies
              AND ntramit = pntramit;

      vpassexe := 7;

      DELETE      sin_tramitacion
            WHERE nsinies = pnsinies
              AND ntramit = pntramit;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_tramitacion', vpassexe,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pctiptra:' || pctiptra,
                     SQLERRM);
         RETURN 140999;
   END f_del_tramitacion;

   /**************************************************************************
      Función que indica si una reserva se puede modificar
      param in  pnsinies  : Número de siniestro
      param in  pntramit  : Número de tramitacion
      param in  pctipres  : CÃ³digo del tipo de reserva
      param in  pcgarant  : CÃ³digo de la garantia
      param in  pnmovres  : Numero de movimiento d la reserva
      param in  psproduc  : Codigo del producto
      param in  pcactivi  : Codigo de la actividad
      param out pmodificable : 0 - No modificable
                               1 - Modificable
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 14490 - 19/05/2010 - AMC
   ***********************************************************************/
   FUNCTION f_mov_reserva(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pctipgas IN NUMBER,   -- 26108
      pcgarant IN NUMBER,
      pnmovres IN NUMBER,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pmodificable OUT NUMBER)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER;
      v_cramo        NUMBER;
      v_cmodali      NUMBER;
      v_ctipseg      NUMBER;
      v_ccolect      NUMBER;
      v_cactivi      NUMBER;
      v_es_baja      NUMBER;
      vnumerr        NUMBER;
      -- Bug 20309 - RSC - 29/11/2011 - LCOL_T004-Parametrización Fondos
      v_modif_res    NUMBER;
   -- Bug 20309
   BEGIN
      -- Comprobamos si la garantia es de baja
      vnumerr := f_def_producto(psproduc, v_cramo, v_cmodali, v_ctipseg, v_ccolect);
      -- Bug 20309 - RSC - 29/11/2011 - LCOL_T004-Parametrización Fondos
      v_modif_res := f_pargaranpro_v(v_cramo, v_cmodali, v_ctipseg, v_ccolect, pcactivi,
                                     pcgarant, 'MODIFICA_RESERVA');

      IF NVL(v_modif_res, 0) = 1 THEN
         pmodificable := 1;
         RETURN 0;
      END IF;

      -- Fin Bug 20309
      v_es_baja := f_pargaranpro_v(v_cramo, v_cmodali, v_ctipseg, v_ccolect, pcactivi,
                                   pcgarant, 'BAJA');

      IF NVL(v_es_baja, 0) = 0 THEN
         pmodificable := 0;
         RETURN 0;
      END IF;

      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_reserva str
       WHERE str.nsinies = pnsinies
         AND str.ntramit = pntramit
         AND str.ctipres = pctipres
--         AND str.cgarant = pcgarant
         AND NVL(str.cgarant, -1) = NVL(pcgarant, -1)   -- 26108
         AND NVL(str.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND str.nmovres = pnmovres
         AND str.fresini < (SELECT MAX(fresini)
                              FROM sin_tramita_reserva str2
                             WHERE str2.nsinies = str.nsinies
                               AND str2.ntramit = str.ntramit
                               AND str2.ctipres = str.ctipres
                               AND NVL(str2.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                               AND NVL(str2.cgarant, -1) = NVL(pcgarant, -1));   -- 26108

--                               AND str2.cgarant = str.cgarant);

      -- Existen tramos posteriores
      IF vcount > 0 THEN
         pmodificable := 0;
      ELSE
         pmodificable := 1;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_mov_reserva', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pctipres:' || pctipres || ' pcgarant:' || pcgarant || ' pnmovres:'
                     || pnmovres || ' psproduc:' || psproduc,
                     SQLERRM);
         pmodificable := 0;
         RETURN 140999;
   END f_mov_reserva;

   /**************************************************************************
      Función que devuelve si se permite borrar una reserva
      param in  pnsinies  : Número de siniestro
      param in  pntramit  : Número de tramitacion
      param in  pctipres  : CÃ³digo del tipo de reserva
      param in  pcgarant  : CÃ³digo de la garantia
      param in  pfresini  : Fecha de inicio de la reserva
      param in  psproduc  : Codigo del producto
      param in  pcactivi  : Codigo de la actividad
      param out pmodificable : 0 - No modificable
                               1 - Modificable
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 14490 - 20/05/2010 - AMC
   ***********************************************************************/
   FUNCTION f_perdelreserva(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pctipgas IN NUMBER,   -- 26108
      pcgarant IN NUMBER,
      pfresini IN DATE,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pmodificable OUT NUMBER)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER;
      v_cramo        NUMBER;
      v_cmodali      NUMBER;
      v_ctipseg      NUMBER;
      v_ccolect      NUMBER;
      v_cactivi      NUMBER;
      v_es_baja      NUMBER;
      vnumerr        NUMBER;
   BEGIN
      -- Comprobamos si la garantia es de baja
      vnumerr := f_def_producto(psproduc, v_cramo, v_cmodali, v_ctipseg, v_ccolect);
      v_es_baja := f_pargaranpro_v(v_cramo, v_cmodali, v_ctipseg, v_ccolect, pcactivi,
                                   pcgarant, 'BAJA');

      IF NVL(v_es_baja, 0) = 0 THEN
         pmodificable := 0;
         RETURN 0;
      END IF;

      /***** BUG17934:DRA:14/03/2011:INICI *******
      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_reserva r, sin_tramita_pago p, sin_tramita_pago_gar g
       WHERE r.nsinies = pnsinies
         AND r.cgarant = pcgarant
         AND r.ctipres = pctipres
         AND r.ntramit = pntramit
         AND r.fresini = pfresini
         AND p.nsinies = r.nsinies
         AND p.ntramit = r.ntramit
         AND g.sidepag = p.sidepag
         AND g.ctipres = r.ctipres
         AND g.nmovres = r.nmovres
         AND g.cgarant = r.cgarant;
       *******************************************/
      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_reserva r
       WHERE r.nsinies = pnsinies
--         AND r.cgarant = pcgarant  -- 26108
         AND NVL(r.cgarant, -1) = NVL(pcgarant, -1)   -- 26108
         AND r.ctipres = pctipres
         AND NVL(r.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
         AND r.ntramit = pntramit
         AND r.fresini = pfresini
         AND r.fultpag IS NULL
         AND r.sidepag IS NULL
         AND r.nmovres = (SELECT MAX(r1.nmovres)
                            FROM sin_tramita_reserva r1
                           WHERE r1.nsinies = r.nsinies
                             AND r1.ntramit = r.ntramit
                             AND r1.ctipres = r.ctipres
                             AND NVL(r.ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                             AND NVL(r.cgarant, -1) = NVL(pcgarant, -1))   -- 26108
         AND NOT EXISTS(SELECT 1
                          FROM sin_tramita_pago p, sin_tramita_pago_gar g
                         WHERE p.nsinies = r.nsinies
                           AND p.ntramit = r.ntramit
                           AND g.sidepag = p.sidepag
                           AND g.ctipres = r.ctipres
                           AND g.nmovres = r.nmovres
                           AND NVL(g.cgarant, -1) = NVL(r.cgarant, -1));   -- 26108

      -- Si no existen pagos realizados
      IF vcount > 0 THEN
         pmodificable := 1;
      ELSE
         pmodificable := 0;
      END IF;

      -- BUG17934:DRA:14/03/2011:FI
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_perdelreserva', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pctipres:' || pctipres || ' pcgarant:' || pcgarant || ' pfresini:'
                     || pfresini || ' psproduc:' || psproduc || ' pcactivi:' || pcactivi,
                     SQLERRM);
         RETURN 140999;
   END f_perdelreserva;

   /**************************************************************************
      Función que devuelve si se debe generar la reserva y el destinatario
      param in  pccausin  : Número de siniestro
      param in  pcmotsin  : Número de tramitacion
      param in  pcgarant  : CÃ³digo de la garantia
      param in  psproduc  : Codigo del producto
      param in  pcactivi  : Codigo de la actividad
      param out pgenerar : 0 - No se genera
                           1 - Se genera
      return             : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error
      Bug 14752 - 01/06/2010 - AMC
   ***********************************************************************/
   FUNCTION f_gen_resdestinatari(
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      pcgarant IN NUMBER,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pgenerar OUT NUMBER)
      RETURN NUMBER IS
      vcount         NUMBER;
      vpassexe       NUMBER;
      vnumerr        NUMBER;
   BEGIN
      SELECT COUNT(1)
        INTO vcount
        FROM sin_for_causa_motivo
       WHERE ctipdes = 0
         AND ccampo = 'IVALSIN'
         AND scaumot
--         =  -- 23741:ASN:05/10/2012
            IN(SELECT scm.scaumot
                 FROM sin_causa_motivo scm, sin_gar_causa_motivo sgcm
                WHERE scm.ccausin = pccausin
                  AND scm.cmotsin = pcmotsin
                  AND scm.scaumot = sgcm.scaumot
                  AND sgcm.sproduc = psproduc
                  AND sgcm.cactivi = pcactivi
                  AND sgcm.cgarant = pcgarant);

      -- 22603:ASN:04/07/2012 ini
      IF vcount = 0 THEN
         SELECT COUNT(1)
           INTO vcount
           FROM sgt_formulas
          WHERE codigo = 'COSTE_MEDIO_SINIESTRO';
      END IF;

      -- 22603:ASN:04/07/2012 fin
      IF vcount > 0 THEN
         pgenerar := 1;
      ELSE
         pgenerar := 0;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_gen_resdestinatari', 1,
                     'Error no controlado pccausin:' || pccausin || ' pcmotsin:' || pcmotsin
                     || ' psproduc:' || psproduc || ' pcgarant:' || pcgarant || ' pcactivi:'
                     || pcactivi,
                     SQLERRM);
         RETURN 140999;
   END f_gen_resdestinatari;

   /**************************************************************************
      Función que devuelve el capital de una garantia
      param in  pcgarant  : CÃ³digo de la garantia
      param in  psseguro  : CÃ³digo del seguro
      param in  pnsinies  : CÃ³digo del siniestro
      param out pcapital  : Capital de la garantia
      param in pcmoneda   : Moneda en la que se busca el capital
      return              : 0 -> Tot correcte
                           Codigo error -> S'ha produit un error
      Bug 14816 - 02/06/2010 - AMC
   ***********************************************************************/
   FUNCTION f_get_capitalgar(
      pcgarant IN NUMBER,
      psseguro IN NUMBER,
      pnsinies IN VARCHAR2,
      pcapital OUT NUMBER,
      pcmoneda IN VARCHAR2 DEFAULT NULL)   -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
      RETURN NUMBER IS
      v_cmultimon    parempresas.nvalpar%TYPE;
      v_sproduc      seguros.sproduc%TYPE;
      v_cmongar      monedas.cmonint%TYPE;
      v_fcambio      DATE;
      v_itasa        eco_tipocambio.itasa%TYPE;
      v_fsinies      DATE;
   BEGIN
      -- Bug 24708 - 26/06/2014 - JTT: Modificamos la consulta de obtencion de la garantia para que
      -- recupere el importe de la garantia a fecha del siniestro.
      SELECT TRUNC(fsinies)
        INTO v_fsinies
        FROM sin_siniestro
       WHERE nsinies = pnsinies;

      SELECT g.icapital
        INTO pcapital
        FROM sin_siniestro s, garanseg g
       WHERE g.sseguro = psseguro
         AND g.cgarant = pcgarant
         AND s.nsinies = pnsinies
         AND s.sseguro = g.sseguro
         AND s.nriesgo = g.nriesgo
         AND g.nmovimi = (SELECT MAX(nmovimi)
                            FROM garanseg
                           WHERE sseguro = s.sseguro
                             AND nriesgo = s.nriesgo
                             AND nmovimi <= s.nmovimi
                             AND cgarant = g.cgarant
                             AND TRUNC(finiefe) <= TRUNC(v_fsinies)
                             AND(ffinefe IS NULL
                                 OR TRUNC(v_fsinies) <= TRUNC(ffinefe)));

      -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
      SELECT NVL(pac_parametros.f_parempresa_n(cempres, 'MULTIMONEDA'), 0), sproduc
        INTO v_cmultimon, v_sproduc
        FROM seguros
       WHERE sseguro = psseguro;

      IF v_cmultimon = 1
         AND pcmoneda IS NOT NULL THEN
         v_cmongar := pac_monedas.f_cmoneda_t(pac_monedas.f_moneda_producto(v_sproduc));

         IF v_cmongar <> pcmoneda THEN
            v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(v_cmongar, pcmoneda, f_sysdate);

            IF v_fcambio IS NULL THEN
               RETURN 9902592;
            -- No se ha encontrado el tipo de cambio entre monedas
            ELSE
               v_itasa := pac_eco_tipocambio.f_cambio(v_cmongar, pcmoneda, v_fcambio);
               pcapital := f_round(pcapital * v_itasa, pac_monedas.f_cmoneda_n(pcmoneda));
            END IF;
         END IF;
      END IF;

      -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_get_capitalgar', 1,
                     'Error no controlado pcgarant:' || pcgarant || ' psseguro:' || psseguro
                     || ' pnsinies:' || pnsinies,
                     SQLERRM);
         RETURN 140999;
   END f_get_capitalgar;

   /*************************************************************************
        función borra todo el objeto destinatario de tramitaciones
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pncitacion : numero citacion
   *************************************************************************/
   FUNCTION f_del_citacion(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pncitacion IN NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(200)
         := ' pnsinies=' || pnsinies || 'pntramit=' || pntramit || ' pncitacion=' || pncitacion;
      vobject        VARCHAR2(200) := 'pac_siniestro.F_del_citacion';
      vcount         NUMBER;

    BEGIN

    IF pnsinies IS NULL
       OR pntramit IS NULL
       OR pncitacion IS NULL THEN
         RETURN 9000505;
    END IF;

    DELETE SIN_TRAMITA_CITACIONES
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ncitacion = pncitacion;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_citacion', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pncitacion:' || pncitacion, SQLERRM);
         RETURN 140999;
   END f_del_citacion;


   /*************************************************************************
        función borra todo el objeto destinatario de tramitaciones
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pctipdes : tipo de destinatario
        param in psperson : codigo de destinario
        Bug 14766 - 03/06/2010 - AMC
   *************************************************************************/
   FUNCTION f_del_destinatario(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctipdes IN NUMBER,
      psperson IN NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(200)
         := 'psperson=' || psperson || ' pnsinies=' || pnsinies || 'pntramit=' || pntramit
            || ' pctipdes=' || pctipdes;
      vobject        VARCHAR2(200) := 'pac_siniestro.F_del_destinatario';
      vcount         NUMBER;
   BEGIN
      SELECT COUNT(1)
        INTO vcount
        FROM sin_tramita_pago
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipdes = pctipdes
         AND sperson = psperson;

      IF vcount > 0 THEN
         RETURN 9901228;
      END IF;

      -- Bug 0015669 - JRH - 30/09/2010 - De momentos no dejamos que haya una prestación
      SELECT COUNT(1)
        INTO vcount
        FROM prestaren
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipdes = pctipdes
         AND sperson = psperson;

      --AND cestado = 0;   --JRH IMP
      IF vcount > 0 THEN
         RETURN 9901512;   --JRH IMP Mensaje
      END IF;

      -- Fi Bug 0015669 - JRH - 30/09/2010
      DELETE      sin_tramita_destinatario
            WHERE nsinies = pnsinies
              AND ntramit = pntramit
              AND sperson = psperson
              AND ctipdes = pctipdes;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_destinatario', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' psperson:' || psperson || ' pctipdes:' || pctipdes,
                     SQLERRM);
         RETURN 140999;
   END f_del_destinatario;

   --ini bug : 0020254 - 25/11/2011 - JMC
   /*************************************************************************
      FUNCTION f_pago_renta_aut
      Crea un pago de renta automÃ¡tico
      param in pmes    : mes de la reserva
      param in panyo   : aÃ¿Â±o de la reserva
      param out psproces : Num. proceso
      return           : cÃ³digo de error
      Bug 0014347 - 07/06/2010 - FAL
   *************************************************************************/
   FUNCTION f_pago_renta_aut(
      pmes IN NUMBER,
      panyo IN NUMBER,
      pcgarant IN NUMBER,
      pncobros OUT NUMBER,
      pwhere IN VARCHAR2 DEFAULT NULL,
      pcempres IN NUMBER DEFAULT NULL,   -- Bug 15044 - 08/11/2010 - XPL
      psproces OUT NUMBER   -- Bug 16580 - 15/11/2010 - AMC
                         )
      RETURN NUMBER IS
      v_error        NUMBER;
   BEGIN
      v_error := pac_propio.f_pago_renta_aut(pmes, panyo, pcgarant, pncobros, pwhere,
                                             pcempres, psproces);
      RETURN v_error;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_pago_renta_aut', 1,
                     'Error no controlado', SQLERRM);
         RETURN 101667;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_pago_renta_aut', 1,
                     'Error no controlado', SQLERRM);
         RETURN SQLCODE;
   END f_pago_renta_aut;

   --fin bug : 0020254 - 25/11/2011 - JMC

   /*************************************************************************
      FUNCTION f_get_productos_pagos
      Nos devuelve los productos de RENTAS o BAJA
      param in pcempres    : Empresa
      param in idioma   : Idioma
      param in pfiltro   : 1 REntas, 2 Bajas
      return           : cÃ³digo de error
       ---- Bug 15044 - 08/11/2010 - XPL
   *************************************************************************/
   FUNCTION f_get_productos_pagos(
      pcempres IN NUMBER,
      pcidioma IN NUMBER,
      pfiltro IN NUMBER,
      pquery OUT VARCHAR2)
      RETURN NUMBER IS
      vwhere         VARCHAR2(1000);
   BEGIN
      IF pfiltro = 1 THEN   --rentas
         vwhere :=
            ' and NVL(pac_parametros.f_pargaranpro_n(gr.sproduc, gr.cactivi, gr.cgarant,
                                                     ''GARRENTA''),
                      0) = 1 ';
      ELSIF pfiltro = 2 THEN   --bajas
         vwhere :=
            ' AND nvl(pac_parametros.f_pargaranpro_n(gr.sproduc, gr.cactivi,
                                  gr.cgarant, ''BAJA''),
                      0) = 1  ';
      END IF;

      pquery :=
         '      SELECT p.sproduc,  ttitulo, 1 selecionado
           FROM titulopro t, productos p
          WHERE
           t.cramo = p.cramo
           and t.cmodali = p.cmodali
           and t.ctipseg = p.ctipseg
           and t.ccolect = p.ccolect and
          LPAD(p.cramo,8,''0'') || LPAD(p.cmodali,2,''0'') || LPAD(p.ctipseg,2,''0'') || LPAD(p.ccolect,2,''0'') IN(
                                                SELECT LPAD(gr.cramo,8,''0'') || LPAD(gr.cmodali,2,''0'') || LPAD(gr.ctipseg,2,''0'') || LPAD(gr.ccolect,2,''0'')
                    FROM  garanpro gr, codiram c
                    where c.cempres = '
         || pcempres || '
                    and gr.cramo = c.cramo' || vwhere
         || ')
                    and cidioma = ' || pcidioma;
      RETURN 0;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_pago_renta_aut', 1,
                     'Error no controlado', SQLERRM);
         RETURN 101667;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_pago_renta_aut', 1,
                     'Error no controlado', SQLERRM);
         RETURN SQLCODE;
   END f_get_productos_pagos;

    -- Bug 0014185 - JRH - 15/06/2010 - Alta Prestación
   /*************************************************************************
      FUNCTION F_Ins_Prestacion
         Inserta a la taula PRESTAREN dels parámetros informats.
         param in pnsinies: Número del sinistre
         param in psperson: implicat
         param in pctipdur: tipus data fi
         param in pnpartot: participacions totals
         param in pnpartpend : participacions pendents
         param in pCFORPAG: forma de pagament
         param in pIBRUREN: renda
         param in pFPPREN : Data primera renda
         param in crevali : Tipo reval renta
         param in prevali : % reval
         param in irevali : Importe reval
         param in pctipban : Tipo cuenta
         param in cbancar : Cuenta de la prestación
         pFechaFin IN DATE: Da fi de la renda en cas de pctipdur=3
         return              : 0 -> Tot correcte
                               1 -> S'ha produit un error
   *************************************************************************/
   FUNCTION f_ins_prestacion(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
      pntramit IN NUMBER,
      psperson IN per_personas.sperson%TYPE,
      pctipdes IN NUMBER,
      -- Fi Bug 0015669 - JRH - 30/09/2010
      pcforpag IN NUMBER,
      pibruren IN NUMBER,
      pfppren IN DATE,
      pnpartot IN NUMBER,
      pnpartpend IN NUMBER,
      pctipdur IN NUMBER,
      pfechafin IN DATE,
      pctipban IN NUMBER,
      pcbancar IN VARCHAR2,
      pcrevali IN NUMBER DEFAULT 0,
      pprevali IN NUMBER DEFAULT 0,
      pirevali IN NUMBER DEFAULT 0,
      -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
      pnmesextra IN VARCHAR2 DEFAULT NULL,
      -- Bug 18286 - APD - 20/04/2011 - el estado inicial de la prestacion
      -- debe ser 4.-Pendiente de activar (en vez de 0.-Activa)
      pcestado IN NUMBER DEFAULT 4,
      pcmotivo IN NUMBER DEFAULT NULL,
      pcblopag IN NUMBER DEFAULT 0,
      pnpresta IN NUMBER DEFAULT NULL
                                     -- Fi Bug 0015669 - JRH - 30/09/2010
   )
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.F_Ins_Prestacion';
      vparam         VARCHAR2(2000)
         := 'parámetros - nsinies: ' || pnsinies || ' psperson:' || psperson || ' pCFORPAG:'
            || pcforpag || ' pIBRUREN:' || pibruren || ' pFPPREN:' || pfppren || ' pnpartot:'
            || pnpartot || ' pnpartpend:' || pnpartpend || ' pctipdur:' || pctipdur
            || ' pFechaFin:' || pfechafin || ' pctipban:' || pctipban || ' pcbancar:'
            || pcbancar || ' pnmesextra:' || pnmesextra || ' pcrevali:' || pcrevali
            || ' pprevali:' || pprevali || ' pirevali:' || pirevali || ' pntramit:'
            || pntramit || ' pctipdes:' || pctipdes || ' pnpresta:' || pnpresta;
      vpasexec       NUMBER(5) := 1;
      vcount         NUMBER(5);
      vctcausin      NUMBER;
      vsseguro       seguros.sseguro%TYPE;
      vsproduc       seguros.sproduc%TYPE;
      vnmesextra     producto_ren.nmesextra%TYPE;
      vmofdif        NUMBER;
      errparam       EXCEPTION;
      d_ffinren      prestaren.ffinren%TYPE;   -- Bug 0013477 - 29/03/2011 - JMF
      n_npresta      NUMBER;
   BEGIN
      --Comprovación dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
         OR psperson IS NULL
         -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
         OR pntramit IS NULL
         OR pctipdes IS NULL
         -- Fi Bug 0015669 - JRH - 30/09/2010
         OR pcforpag IS NULL
         OR pfppren IS NULL
         OR pibruren IS NULL
         OR pctipban IS NULL
         OR pcbancar IS NULL
         OR pcestado IS NULL
         OR pcblopag IS NULL
         OR pcrevali IS NULL
         OR pctipdur IS NULL THEN
         RAISE errparam;
      END IF;

      vpasexec := 2;

      IF pctipdur = 2
         AND pfechafin IS NULL THEN
         RAISE errparam;
      END IF;

      IF pctipdur <> 2
         AND pfechafin IS NOT NULL THEN
         RAISE errparam;
      END IF;

      IF pfechafin IS NOT NULL THEN
         IF pfechafin < pfppren THEN
            RAISE errparam;
         END IF;
      END IF;

      -- Bug 0017970 - 16/03/2011 - JMF
      IF NVL(pcblopag, -1) NOT IN(0, 1, 2, 5) THEN
         -- jlb -i - Jlb - 26776 - ENSA
         IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa, 'MODIF_PRESTA'),
                1) = 1 THEN
            RETURN 110300;   -- Cambio de estado no permitido
         END IF;
      -- jlb -i - Jlb - 26776 - ENSA
      END IF;

      vpasexec := 3;

      SELECT seguros.sseguro, sproduc
        INTO vsseguro, vsproduc
        FROM sin_siniestro, seguros
       WHERE nsinies = pnsinies
         AND seguros.sseguro = sin_siniestro.sseguro;

      vpasexec := 4;

      BEGIN
         SELECT nmesextra, NVL(cmodextra, 0)
           INTO vnmesextra, vmofdif
           FROM producto_ren
          WHERE sproduc = vsproduc;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            vnmesextra := NULL;
            vmofdif := 0;
      END;

      -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
      vpasexec := 5;

      IF vmofdif = 1 THEN
         vnmesextra := NVL(pnmesextra, vnmesextra);
      END IF;

-- Fi Bug 0015669 - JRH - 30/09/2010
      -- Bug 0013477 - 29/03/2011 - JMF: Afegir data en cas anulada o finalitzada.
      IF pcestado IN(2, 3) THEN
         d_ffinren := f_sysdate;
      ELSE
         d_ffinren := NULL;
      END IF;

      vpasexec := 6;

      --si viene a NULL es que estamos aÃ¿Â±adiendo
      IF pnpresta IS NULL THEN
         SELECT NVL(MAX(npresta), 0) + 1
           INTO n_npresta
           FROM prestaren
          WHERE nsinies = pnsinies
            AND sperson = psperson
            AND ntramit = pntramit
            AND ctipdes = pctipdes;
      ELSE
         n_npresta := pnpresta;
      END IF;

      BEGIN
         INSERT INTO prestaren
                     (nsinies, sperson, sseguro, f1paren, fuparen, cforpag, ibruren,
                      ffinren, cestado, cmotivo, fppren, crevali, prevali,
                      irevali, cblopag, ctipdur, npartot, npartpend, ctipban,
                      cbancar, nmesextra, ntramit, ctipdes, npresta)
              VALUES (pnsinies, psperson, vsseguro, pfppren, pfechafin, pcforpag, pibruren,
                      d_ffinren, pcestado, pcmotivo, pfppren, pcrevali, NVL(pprevali, 0),
                      NVL(pirevali, 0), pcblopag, pctipdur, pnpartot, pnpartpend, pctipban,
                      pcbancar, vnmesextra, pntramit, pctipdes, n_npresta);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE prestaren
               SET f1paren = pfppren,
                   fuparen = pfechafin,
                   cforpag = pcforpag,
                   ibruren = pibruren,
                   --fppren = pfppren,
                   crevali = pcrevali,
                   prevali = pprevali,
                   irevali = pirevali,
                   ctipdur = pctipdur,
                   npartot = pnpartot,
                   npartpend = pnpartpend,
                   ctipban = pctipban,
                   cbancar = pcbancar,
                   nmesextra = vnmesextra,
                   cestado = pcestado,
                   cmotivo = pcmotivo,
                   cblopag = pcblopag,
                   ffinren = d_ffinren
             WHERE nsinies = pnsinies
               AND sperson = psperson
               AND sseguro = vsseguro
               AND ntramit = pntramit
               AND ctipdes = pctipdes
               AND npresta = n_npresta;
      END;

      vpasexec := 7;
      RETURN 0;
   EXCEPTION
      WHEN errparam THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     '9000505: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000505;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9901517;   --OJO Error al llegir de la taula SIN_TRAMITACION
   END f_ins_prestacion;

-- Fi Bug 0014185 - JRH - 15/06/2010 - Alta Prestación
   /*************************************************************************
        función borra un apunte de la agenda
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pnlinage : numero de linea
        Bug 15153 - 23/06/2010 - AMC
   *************************************************************************/
   FUNCTION f_del_agenda(pnsinies IN VARCHAR2, pntramit IN NUMBER, pnlinage IN NUMBER)
      RETURN NUMBER IS
   BEGIN
      DELETE      sin_tramita_agenda
            WHERE nsinies = pnsinies
              AND ntramit = pntramit
              AND nlinage = pnlinage;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_destinatario', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pnlinage:' || pnlinage,
                     SQLERRM);
         RETURN 140999;
   END f_del_agenda;

   /*************************************************************************
        función que devuelve la descripción del tipo de tramitación
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pctiptra : codigo tipo tramitación
        param out destiptram : descripción de la tramitación
        Bug 15260 - 02/07/2010 - AMC
   *************************************************************************/
   FUNCTION f_get_tipustram(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctiptra IN NUMBER,
      pcidioma IN NUMBER,
      pdestiptram OUT VARCHAR2)
      RETURN NUMBER IS
      vcmatric       VARCHAR2(12);
      vtmarca        VARCHAR2(100);   --27312:NSS:12/06/2013
      vtmodelo       VARCHAR2(100);   --27312:NSS:12/06/2013
      vcversion      VARCHAR2(11);
      vcagente       NUMBER;
      x_matricula    VARCHAR2(12);
      x_versio       VARCHAR2(11);
      x_marca        VARCHAR2(40);
      x_modelo       VARCHAR2(40);
      vttramita      VARCHAR2(500);
      vcsiglas       NUMBER;
      vtnomvia       VARCHAR2(40);
      vnnumvia       NUMBER;
      vcpoblac       NUMBER;
      vcprovin       NUMBER;
      vcpais         NUMBER;
      vnumerr        NUMBER;
      vpoblacio      VARCHAR2(50);
      vprovincia     VARCHAR2(30);
      vtpais         VARCHAR2(100);
      vtdenom        VARCHAR2(20);
      vcpostal       VARCHAR2(30);
      vsperson       NUMBER;
      vsseguro       NUMBER;
      vtcomple       VARCHAR2(15);
   BEGIN
      IF pctiptra = 0 THEN
         pdestiptram := NULL;
      ELSIF pctiptra IN(1, 2) THEN
         BEGIN
            SELECT cmatric, cversion
              INTO vcmatric, vcversion
              FROM sin_tramita_detvehiculo
             WHERE nsinies = pnsinies
               AND ntramit = pntramit;

            BEGIN
               SELECT ma.tmarca, mo.tmodelo
                 INTO vtmarca, vtmodelo
                 FROM aut_versiones ve, aut_marcas ma, aut_modelos mo
                WHERE ve.cversion = vcversion
                  AND ve.cmarca = ma.cmarca
                  AND mo.cmarca = ma.cmarca
                  AND ve.cmodelo = mo.cmodelo;

               pdestiptram := vcmatric || '-' || vtmarca || '-' || vtmodelo;   --27312:NSS:12/06/2013
               pdestiptram := SUBSTR(pdestiptram, 1, 100);
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  pdestiptram := NULL;
            END;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               pdestiptram := NULL;
         END;
      ELSIF pctiptra IN(3, 6, 7) THEN
         SELECT sseguro
           INTO vsseguro
           FROM sin_siniestro
          WHERE nsinies = pnsinies;

         BEGIN
            SELECT cagente
              INTO vcagente
              FROM seguros
             WHERE sseguro = vsseguro;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               RETURN 101903;   --Seguro no encontrado en la tabla SEGUROS
         END;

         SELECT sperson
           INTO vsperson
           FROM sin_tramita_detpersona
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;

         pdestiptram := SUBSTR(f_nombre(vsperson, 1, vcagente), 1, 100);
      ELSIF pctiptra = 4 THEN
         SELECT ttramita
           INTO vttramita
           FROM sin_tramita_detdescripcion
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;

         pdestiptram := SUBSTR(vttramita, 1, 100);
      ELSIF pctiptra = 5 THEN
         SELECT csiglas, tnomvia, nnumvia, tcomple, cpoblac, cprovin, cpais, cpostal
           INTO vcsiglas, vtnomvia, vnnumvia, vtcomple, vcpoblac, vcprovin, vcpais, vcpostal
           FROM sin_tramita_detdireccion
          WHERE nsinies = pnsinies
            AND ntramit = pntramit;

         SELECT tdenom
           INTO vtdenom
           FROM destipos_via
          WHERE cidioma = pcidioma
            AND csiglas = vcsiglas;

         vnumerr := f_despoblac(vcpoblac, vcprovin, vpoblacio);
         vnumerr := f_desprovin(vcprovin, vprovincia, vcpais, vtpais);
         pdestiptram := vtdenom || ' ' || vtnomvia || ' ' || vnnumvia || ' ' || vtcomple || ' '
                        || vcpostal || ' ' || vpoblacio || ' ' || vprovincia || ' ' || vtpais;
         pdestiptram := SUBSTR(pdestiptram, 1, 100);
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_get_tipustram', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pctiptra:' || pctiptra || ' pcidioma:' || pcidioma,
                     SQLERRM);
         RETURN 140999;
   END f_get_tipustram;

   /*************************************************************************
        función que devuelve la descripción del tipo de tramitación
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pctiptra : codigo tipo tramitación
        Bug 15260 - 02/07/2010 - AMC
   *************************************************************************/
   FUNCTION ff_get_tipustram(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctiptra IN NUMBER,
      pcidioma IN NUMBER)
      RETURN VARCHAR2 IS
      vdestiptram    VARCHAR2(1000);
      vnumerr        NUMBER;
   BEGIN
      vnumerr := f_get_tipustram(pnsinies, pntramit, pctiptra, pcidioma, vdestiptram);

      IF vnumerr <> 0 THEN
         RETURN NULL;
      END IF;

      RETURN vdestiptram;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.ff_get_tipustram', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pctiptra:' || pctiptra || ' pcidioma:' || pcidioma,
                     SQLERRM);
         RETURN NULL;
   END ff_get_tipustram;

   /*************************************************************************
        función que devuelve la descripción del sub tipo de tramitación
        param in pctiptra   : codigo tipo tramitación
        param in pcsubtiptra: codigo sub tipo tramitacion
        param in pcidioma   : codigo idioma
        param out pdes      : descripción del sub tipo de tramitación
        -- BUG 0023536 - 24/10/2012 - JMF
   *************************************************************************/
   FUNCTION f_get_subtipustram(
      pctiptra IN NUMBER,
      pcsubtiptra IN NUMBER,
      pcidioma IN NUMBER,
      pdes OUT VARCHAR2)
      RETURN NUMBER IS
      vobj           VARCHAR2(100) := 'PAC_SINIESTROS.f_get_subtipustram';
      vpas           NUMBER := 1;
      vpar           VARCHAR2(900)
                              := 't=' || pctiptra || ' s=' || pcsubtiptra || ' i=' || pcidioma;
   BEGIN
      vpas := 100;

      SELECT MAX(b.tatribu)
        INTO pdes
        FROM detvalores_dep a, detvalores b
       WHERE a.cvalor = 800
         AND a.catribu = pctiptra
         AND a.catribudep = pcsubtiptra
         AND b.cvalor = a.cvalordep
         AND b.cidioma = pcidioma
         AND b.catribu = a.catribudep;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         pdes := NULL;
         p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, SQLCODE || ' ' || SQLERRM);
         RETURN 140999;
   END f_get_subtipustram;

   /*************************************************************************
        función que devuelve la descripción del subtipo de tramitación
        param in pctiptra    : codigo tipo tramitación
        param in pcsubtiptra : codigo subtipo tramitación
        param in pcidioma    : codigo idioma
        -- BUG 0023536 - 24/10/2012 - JMF
   *************************************************************************/
   FUNCTION ff_get_subtipustram(pctiptra IN NUMBER, pcsubtiptra IN NUMBER, pcidioma IN NUMBER)
      RETURN VARCHAR2 IS
      vobj           VARCHAR2(100) := 'PAC_SINIESTROS.ff_get_subtipustram';
      vpar           VARCHAR2(900)
                              := 't=' || pctiptra || ' s=' || pcsubtiptra || ' i=' || pcidioma;
      vdes           detvalores.tatribu%TYPE;
      vnumerr        NUMBER;
   BEGIN
      vnumerr := f_get_subtipustram(pctiptra, pcsubtiptra, pcidioma, vdes);

      IF vnumerr <> 0 THEN
         RETURN NULL;
      END IF;

      RETURN vdes;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobj, 1, vpar, SQLCODE || ' ' || SQLERRM);
         RETURN NULL;
   END ff_get_subtipustram;

   /**************************************************************************
       Función que retorna los siniestros de una póliza, siendo optativo filtrar por su Número de riesgo.
       param in  psseguro  : cÃ³digo que identifica la póliza en AXIS
       param in  pnriesgo  : cÃ³digo que identifica el riesgo de la póliza en AXIS
       param out mensajes  : mensajes de error
       return sys_refcursor: cursor que devuelve el listado
       Bug 15965 - 10/09/2010 - SRA
    ***********************************************************************/
   FUNCTION f_consulta_lstsini_riesgo(
      psseguro IN NUMBER,
      pnriesgo IN NUMBER,
      pnidioma IN NUMBER,
      pquery OUT VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.CONSULTA_LSTSINI_RIESGO';
      vparam         VARCHAR2(500)
                       := 'parámetros - psseguro: ' || psseguro || ' - pnriesgo: ' || pnriesgo;
      vpasexec       NUMBER(5) := 0;
      vnumerr        NUMBER(8) := 0;
      vsquery        VARCHAR2(5000);
      vcursor        sys_refcursor;
   BEGIN
      -- Inicio IAXIS_2066 AABC 19/03/2019 cambio de modulo de consulta de siniestros
    -- actualizacion de abogado ABJ 24/09/2019
vsquery :=
         ' SELECT se.sseguro, se.npoliza, se.ncertif, si.nsinies, si.nriesgo, se.sproduc, '
         || ' f_desriesgo_t(si.sseguro, si.nriesgo, NULL, ' || pnidioma || ') as triesgo,'
         || ' f_desproducto_t(se.cramo,se.cmodali,se.ctipseg,se.ccolect,1,' || pnidioma
         || ') as tproduc,' || ' si.fnotifi, si.FSINIES, si.ccausin, se.cactivi,'
         || ' (select tcausin from sin_descausa where ccausin = si.ccausin and cidioma = '
         || pnidioma || ') tcausin, si.cmotsin, TRUNC(si.falta) falta, '
         || '(SELECT TTRAMITAD FROM sin_codtramitador WHERE CTRAMITAD= mov.CTRAMITAD) tnomusu, '
         || ' (select tmotsin from sin_desmotcau where ccausin = si.ccausin and cmotsin = si.cmotsin and cidioma = '
         || pnidioma || ')  tmotsin,sm.cestsin, ff_desvalorfijo(6,' || pnidioma
         || ', sm.cestsin) testsin, ff_desvalorfijo(8002010,'|| pnidioma||', sm.ctipsin)tipsin FROM seguros se, sin_siniestro si, sin_movsiniestro sm, sin_tramitacion st, sin_tramita_movimiento mov ';
      vpasexec := 1;
      vsquery :=
         vsquery
         || ' where se.sseguro = si.sseguro and  st.ctramit = 0  and st.nsinies = sm.nsinies '
     || ' and mov.nsinies = si.nsinies  and mov.ntramit =  st.ntramit  and mov.nmovtra = (select max(nmovtra) from sin_tramita_movimiento where nsinies = si.nsinies and ntramit=st.ntramit)'
         ||' and sm.nsinies = si.nsinies and sm.nmovsin = (select max(nmovsin) from sin_movsiniestro where nsinies = si.nsinies) ';
      vpasexec := 2;
      vsquery :=
         vsquery
         || ' AND NVL(pac_parametros.f_parinstalacion_n(''N_MAX_REG''), ROWNUM) >= ROWNUM';
      vsquery := vsquery || ' AND se.sseguro = ' || NVL(psseguro, -1);

      IF pnriesgo IS NOT NULL THEN
         vpasexec := 3;
         vsquery := vsquery || ' AND si.nriesgo = ' || pnriesgo;
      END IF;
      -- Fin  IAXIS_2066 AABC 19/03/2019 cambio de modulo de consulta de siniestros
      vpasexec := 4;
      vsquery := vsquery || ' order by si.nsinies';
      vpasexec := 5;
      pquery := vsquery;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_consulta_lstsini_riesgo', vpasexec,
                     'Error no controlado', SQLERRM);
         RETURN 9901489;
   END f_consulta_lstsini_riesgo;

   -- BUG 0015669 - 08/2010 - JRH  -  Alta prestacions en forma de renda (PL)
   /*************************************************************************
          f_get_prestaren
          función obtiene prestación
          param in pnsinies : numero de siniestro
          param in pntramit : numero de siniestro
          param in pctipdes : tipo de destinatario
          param in psperson : codigo de destinario
          param in pidioma  : codigo de idioma
          param out vsquery  : query
          retorna 0 si todo ha ido bien
     *************************************************************************/
   FUNCTION f_get_prestaren(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_get_prestaren';
      vparam         VARCHAR2(500)
         := 'parámetros - nsinies: ' || pnsinies || ' psperson:' || psperson || ' pntramit:'
            || pntramit || ' pctipdes:' || pctipdes;
      vpasexec       NUMBER(5) := 1;
      vcagente       NUMBER;
      vsseguro       NUMBER;
   BEGIN
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR psperson IS NULL
         OR pctipdes IS NULL
         OR pidioma IS NULL THEN
         RETURN 9000505;
      END IF;

      SELECT s.cagente, s.sseguro
        INTO vcagente, vsseguro
        FROM seguros s, sin_siniestro si
       WHERE s.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      vpasexec := 2;
      vsquery :=
         'SELECT trades.nsinies,
                  trades.ntramit,
                  pd.sperson,
                  trades.ctipdes,'
         || vsseguro || ','
         || '
                  trades.F1PAREN,
                  trades.FUPAREN,
                  trades.CFORPAG,
                  trades.IBRUREN,
                  trades.FFINREN,
                  trades.CESTADO,
                  trades.CMOTIVO,
                  trades.FPPREN,
                  trades.CREVALI,
                  trades.PREVALI,
                  trades.IREVALI,
                  trades.CBLOPAG,
                  trades.CTIPDUR,
                  trades.NPARTOT,
                  trades.NPARTPEND,
                  trades.CTIPBAN,
                  trades.CBANCAR,
         ff_desvalorfijo(10,'
         || pidioma
         || ', trades.ctipdes) ttipdes,
          pd.tnombre||'' ''||pd.tapelli1||'' ''||pd.tapelli2 tpersona,
          ff_desvalorfijo(17,'
         || pidioma || ', trades.cforpag) tforpag,
          ff_desvalorfijo(1011,' || pidioma
         || ', trades.cESTADO) testado,
          ff_desvalorfijo(1012,' || pidioma
         || ', trades.cmotivo) TMOTIVO,
          ff_desvalorfijo(230,' || pidioma
         || ', trades.cblopag) TBLOPAG,
          ff_desvalorfijo(62,' || pidioma
         || ', trades.crevali) TREVALI,
          ff_desvalorfijo(1010,' || pidioma
         || ', trades.ctipdur) TTIPDUR,
          NMESEXTRA NMESEXTRA,
          trades.NPRESTA
         FROM prestaren trades, per_personas p, per_detper pd
         where trades.nsinies = '
         || CHR(39) || pnsinies || CHR(39) || '
          and trades.ntramit = ' || pntramit || '
          and trades.sperson = ' || psperson
         || '
          and trades.sperson = p.sperson    ' || '
          and trades.ctipdes = ' || pctipdes
         || '
          and  pd.sperson = p.sperson
          AND (pd.cagente = ff_agente_cpervisio('
         || vcagente || ') or (p.swpubli = 1  and pd.cagente = p.cagente) )';   --Bug 29166/160004 - 29/11/2013 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam, SQLERRM);
         RETURN 9901516;   --OJO
   END f_get_prestaren;

   /*************************************************************************
          f_del_prestaren
          función borra una prestación
          param in pnsinies : numero de siniestro
          param in pntramit : numero de siniestro
          param in pctipdes : tipo de destinatario
          param in psperson : codigo de destinario
          retorna 0 si todo ha ido bien
     *************************************************************************/
   FUNCTION f_del_prestaren(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pnpresta IN NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(200)
         := 'psperson=' || psperson || ' pnsinies=' || pnsinies || 'pntramit=' || pntramit
            || ' pctipdes=' || pctipdes || ' pnpresta=' || pnpresta;
      vobject        VARCHAR2(200) := 'pac_siniestros.f_del_prestaren';
      vcount         NUMBER;
      vcount2        NUMBER;
      vcestado       prestaren.cestado%TYPE;   -- BUG 18286 - APD - 21/04/2011
   BEGIN
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR psperson IS NULL
         OR pctipdes IS NULL THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' psperson:' || psperson || ' pctipdes:' || pctipdes || ' pnpresta:'
                     || pnpresta,
                     9000505);
         RETURN 9000505;
      END IF;

      vpasexec := 1;

      SELECT COUNT(1)
        INTO vcount2
        FROM prestaren
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipdes = pctipdes
         AND sperson = psperson
         AND npresta = NVL(pnpresta, npresta);

--         --JRH CASA
--         AND cestado = 0
--         ;   --JRH IMP Que estado o select sobre pagosrenta
      -- Bug 18286 - APD - 21/04/2011 -- Solo si el estado de la prestacion es
      -- 4.-Pendiente de activar, se puede eliminar la prestacion (ya que no
      -- existen todavia pagos de renta) o si la prestacion esta 0.-Activa y no
      -- existen todavia pagos de renta
      IF vcount2 <> 0 THEN
         vpasexec := 2;

         SELECT cestado
           INTO vcestado
           FROM prestaren
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipdes = pctipdes
            AND sperson = psperson
            AND npresta = NVL(pnpresta, npresta);

         vpasexec := 3;

         -- Se busca si la prestacion tiene pagos generados
         SELECT COUNT(1)
           INTO vcount2
           FROM pagosrenta
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipdes = pctipdes
            AND sperson = psperson;

         vpasexec := 4;

         -- Si la prestacion estÃ¡ en estado 4.-Pendiente de activar o 0.-Activa
         -- y no tiene pagos generados se puede eliminar
         IF vcestado IN(4, 0)
            AND vcount2 = 0 THEN
            vpasexec := 5;

            DELETE      prestaren
                  WHERE nsinies = pnsinies
                    AND ntramit = pntramit
                    AND sperson = psperson
                    AND ctipdes = pctipdes
                    AND npresta = NVL(pnpresta, npresta);
         ELSE
            vpasexec := 6;

            --Si tienen pagos se la cancela en vez de devolver error
            UPDATE prestaren
               SET cestado = '2'
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND sperson = psperson
               AND ctipdes = pctipdes
               AND npresta = NVL(pnpresta, npresta);
         END IF;
      END IF;

      vpasexec := 7;
/*
      IF vcount2 > 0 THEN
         SELECT COUNT(1)
           INTO vcount
           FROM sin_siniestro s, pagosrenta p
          WHERE s.nsinies = pnsinies
            AND p.sseguro = s.sseguro
            AND p.sperson = psperson;   --JRH IMP Que estado o select sobre pagosrenta
         IF vcount > 0 THEN
            RETURN 9901514;
         END IF;
      END IF;
      vpasexec := 2;
      DELETE      prestaren
            WHERE nsinies = pnsinies
              AND ntramit = pntramit
              AND sperson = psperson
              AND ctipdes = pctipdes;
*/    -- Fin Bug 18286 - APD - 21/04/2011
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' psperson:' || psperson || ' pctipdes:' || pctipdes,
                     SQLERRM);
         RETURN 140999;   --OJO
   END f_del_prestaren;

   /*************************************************************************
          f_est_faseprestdesti
          función indica si destinatario estÃ¡ en fase de prestación
          param in pnsinies : numero de siniestro
          param in pntramit : numero de tramite
          param in psperson : codigo de destinario
          param in pctipdes : tipo de destinatario
          param out pfaseprest : Indica si estÃ¡ en fase de pretación
          retorna 0 si todo ha ido bien
     *************************************************************************/
   FUNCTION f_est_faseprestdesti(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      psperson IN NUMBER,
      pctipdes IN NUMBER,
      pfaseprest OUT BOOLEAN)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(200)
         := 'psperson=' || psperson || ' pnsinies=' || pnsinies || 'pntramit=' || pntramit
            || ' pctipdes=' || pctipdes;
      vobject        VARCHAR2(200) := 'pac_siniestros.f_est_faseprestdesti';
      vcount         NUMBER;
      vctipcap       sin_tramita_destinatario.ctipcap%TYPE;
      vireserva      NUMBER;
      vnumerr        NUMBER;
      vestado        NUMBER;
   BEGIN
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR psperson IS NULL
         OR pctipdes IS NULL THEN
         RETURN 9000505;
      END IF;

      pfaseprest := FALSE;

      SELECT m.cestsin
        INTO vestado
        FROM sin_siniestro s, sin_movsiniestro m
       WHERE s.nsinies = pnsinies
         AND m.nsinies = s.nsinies
         AND m.nmovsin = (SELECT MAX(b.nmovsin)
                            FROM sin_movsiniestro b
                           WHERE b.nsinies = s.nsinies);

      vpasexec := 2;

      IF vestado = 0 THEN
         pfaseprest := FALSE;

         SELECT NVL(ctipcap, 0)
           INTO vctipcap
           FROM sin_tramita_destinatario
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND ctipdes = pctipdes
            AND sperson = psperson;

         vpasexec := 3;

         IF vctipcap IN(0, 2, 4) THEN
            vpasexec := 4;
            vnumerr := f_sin_reserva(pnsinies, f_sysdate, vireserva);

            IF vnumerr <> 0 THEN
               RETURN 9000865;
            END IF;

            vpasexec := 5;

            IF vireserva <> 0 THEN
               pfaseprest := TRUE;
            END IF;
         END IF;

         IF vctipcap IN(1, 3) THEN
            vpasexec := 6;

            SELECT COUNT(*)
              INTO vcount
              FROM prestaren
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND ctipdes = pctipdes
               AND sperson = psperson
               AND ffinren IS NULL;

            IF vcount > 0 THEN
               pfaseprest := TRUE;
            END IF;

            vpasexec := 7;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' psperson:' || psperson || ' pctipdes:' || pctipdes,
                     SQLERRM);
         RETURN 9901516;
   END f_est_faseprestdesti;

   /*************************************************************************
          f_est_faseprest
          función indica cuantos destinatarios estan en fase de prestación para una póliza
          param in psseguro : numero de segur
          param out Pnumprest : numero de destinatarios en fase de prestación
          retorna 0 si todo ha ido bien
     *************************************************************************/
   FUNCTION f_est_faseprest(psseguro IN NUMBER, pfaseprest OUT NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(200) := 'psseguro=' || psseguro;
      vobject        VARCHAR2(200) := 'pac_siniestros.f_est_faseprest';
      vcount         NUMBER;
      vctipcap       sin_tramita_destinatario.ctipcap%TYPE;
      vireserva      NUMBER;
      vnumerr        NUMBER;
      vestado        NUMBER;
      vfaseprest     BOOLEAN;
   BEGIN
      IF psseguro IS NULL THEN
         RETURN 9000505;
      END IF;

      pfaseprest := 0;
      vpasexec := 2;

      FOR reg IN (SELECT dest.nsinies, dest.ntramit, dest.sperson, dest.ctipdes
                    FROM sin_siniestro SIN, sin_tramita_destinatario dest
                   WHERE SIN.sseguro = psseguro
                     AND dest.nsinies = SIN.nsinies) LOOP
         vpasexec := 3;
         vnumerr := f_est_faseprestdesti(reg.nsinies, reg.ntramit, reg.sperson, reg.ctipdes,
                                         vfaseprest);

         IF vnumerr <> 0 THEN
            RETURN 9901516;
         END IF;

         vpasexec := 4;

         IF vfaseprest THEN
            pfaseprest := pfaseprest + 1;
         END IF;
      END LOOP;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec,
                     'Error no controlado psseguro:' || psseguro, SQLERRM);
         RETURN 9901516;
   END f_est_faseprest;

--Fi BUG 0015669 - 08/2010 - JRH
   /*************************************************************************
        función que devuelve la descripción del tipo de tramitación
        param in p_nsinies : numero de siniestro
        param in p_cgarant : código de garantia
        param in p_ireserv : Importe Reserva Pendiente
        return             : 0=Tot correcte, Codigo error
        Bug 0016176 - 07/10/2010 - JMF
   *************************************************************************/
   FUNCTION f_val_reserva_capitales(
      p_nsinies IN VARCHAR2,
      p_cgarant IN NUMBER,
      p_ireserv IN NUMBER)
      RETURN NUMBER IS
      v_tobj         VARCHAR2(500) := 'PAC_SINIESTROS.F_VAL_RESERVA_CAPITALES';
      v_tpar         VARCHAR2(500)
                              := 's=' || p_nsinies || ' g=' || p_cgarant || ' r=' || p_ireserv;
      v_ntra         NUMBER(5) := 1;
      v_icapmin      sin_reserva_capital.icapmin%TYPE;
      v_icapmax      sin_reserva_capital.icapmax%TYPE;
      v_ireserva     sin_tramita_reserva.ireserva%TYPE;
      v_nretorn      NUMBER;
   BEGIN
      v_ntra := 1000;
      v_nretorn := 0;

      SELECT MAX(c.icapmin), MAX(c.icapmax)
        INTO v_icapmin, v_icapmax
        FROM sin_siniestro a, seguros b, sin_reserva_capital c
       WHERE a.nsinies = p_nsinies
         AND b.sseguro = a.sseguro
         AND c.sproduc = b.sproduc
         AND c.cactivi = b.cactivi
         AND c.cgarant = p_cgarant
         AND c.ccausin = a.ccausin
         AND c.cmotsin = a.cmotsin
         AND a.fsinies BETWEEN c.finivig AND NVL(c.ffinvig, a.fsinies);

      v_ntra := 1010;

      IF v_icapmin IS NOT NULL
         OR v_icapmax IS NOT NULL THEN
         v_ntra := 1015;

         SELECT NVL(SUM(ireserva), 0) + p_ireserv
           INTO v_ireserva
           FROM sin_tramita_reserva a
          WHERE a.nsinies = p_nsinies
            --AND a.cgarant = NVL(p_cgarant, a.cgarant) -- 26108
            AND NVL(a.cgarant, 0) = NVL(p_cgarant, 0)   -- 26108
            AND nmovres = (SELECT MAX(a1.nmovres)
                             FROM sin_tramita_reserva a1
                            WHERE a1.nsinies = a.nsinies
                              AND a1.ntramit = a.ntramit
                              AND a1.ctipres = a.ctipres
                              AND NVL(a1.cgarant, 0) = NVL(a.cgarant, 0)   -- 26108
                                                                        );

         v_ntra := 1020;

         IF v_icapmin IS NOT NULL
            AND v_ireserva < v_icapmin THEN
            v_nretorn := 9901546;   -- Import reserva inferior al minim.
         END IF;

         v_ntra := 1025;

         IF v_icapmax IS NOT NULL
            AND v_ireserva > v_icapmax THEN
            v_nretorn := 9901547;   -- Import reserva superior al mÃ¿Â xim.
         END IF;
      END IF;

      RETURN v_nretorn;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, v_tobj, v_ntra, v_tpar, SQLCODE || ' ' || SQLERRM);
         RETURN 0;
   END f_val_reserva_capitales;

   /*************************************************************************
      FUNCTION que devuelve el tramitador y la unidad de tramitación del usuario
      Si no tiene unidad de tramitación devolverÃ¡ la unidad por defecto, pero
      devolverÃ¡ un 1 para indicar que no es el tramitador del usuario
      param in p_cuser      : Fecha
      param out p_cunitra   : Objeto que contiene los productos a hacer los pagos
      param out p_ctramitad : Numero de cobros
      return                : 0 --> OK, 1 --> No es el del usuario, NULL --> Error
   *************************************************************************/
   FUNCTION f_get_tramitador_defecto(
      p_cempres IN NUMBER,
      p_cuser IN VARCHAR2,
      p_sseguro IN NUMBER,
      p_ccausin IN NUMBER,
      p_cmotsin IN NUMBER,
      p_nsinies IN VARCHAR2,
      p_ntramte IN NUMBER,
      p_ntramit IN NUMBER,
      p_cunitra OUT VARCHAR2,
      p_ctramitad OUT VARCHAR2)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 0;
      vparam         VARCHAR2(500)
         := 'parámetros - p_cempres: ' || p_cempres || ' - p_cuser: ' || p_cuser
            || 'p_sseguro : ' || p_sseguro || ' p_ccausin : ' || p_ccausin || 'p_cmotsin : '
            || p_cmotsin || ' p_nsinies : ' || p_nsinies || 'p_ntramit : ' || p_ntramit;
      vobjectname    VARCHAR2(100) := 'PAC_SINIESTROS.f_get_tramitador_defecto';
      vnumerr        NUMBER(10) := 0;
      v_ireserva     NUMBER;
      v_cramo        ramos.cramo%TYPE;
      v_ccausin      sin_siniestro.ccausin%TYPE;
      v_cmotsin      sin_siniestro.cmotsin%TYPE;
      v_cagente      seguros.cagente%TYPE;
      v_sigo         NUMBER := 0;
      v_ctramitad    sin_movsiniestro.ctramitad%TYPE;
      v_ctramitad_exclusivo sin_movsiniestro.ctramitad%TYPE;
      v_cmultimon    parempresas.nvalpar%TYPE
                            := NVL(pac_parametros.f_parempresa_n(p_cempres, 'MULTIMONEDA'), 0);
      v_cmoncia      monedas.cmonint%TYPE
             := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(p_cempres, 'MONEDAEMP'));
      v_fcambio      DATE;
      v_itasa        eco_tipocambio.itasa%TYPE;
      v_ctipcod      sin_agentes.ctipcod%TYPE;
      v_ctramte      sin_tramite.ctramte%TYPE;
      v_nvalpar      NUMBER;
   BEGIN
      vpasexec := 0;

      BEGIN
         SELECT nvalpar
           INTO v_nvalpar
           FROM parempresas
          WHERE cempres = p_cempres
            AND cparam = 'TRAMITADORES';
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            v_nvalpar := 0;
      END;

      IF v_nvalpar <> 1 THEN
         p_cunitra := 'U000';
         p_ctramitad := 'T000';
         RETURN 0;
      END IF;

      vpasexec := 1;
      vnumerr := pac_siniestros.f_get_provision(p_nsinies, p_ntramte, p_ntramit, v_ireserva);

      IF vnumerr <> 0 THEN
         NULL;
      END IF;

      IF v_ireserva IS NULL THEN
         v_ireserva := 0;
      END IF;

      -- 25030:ASN:11/12/2012 ini
      /*
      vpasexec := 2;

      SELECT cramo, cagente
        INTO v_cramo, v_cagente
        FROM seguros
       WHERE sseguro = p_sseguro;

      IF p_nsinies IS NOT NULL THEN
         vpasexec := 3;

         SELECT cagente
           INTO v_cagente
           FROM sin_siniestro
          WHERE nsinies = p_nsinies;
      END IF;
      */
      IF p_sseguro IS NOT NULL THEN
         vpasexec := 2;

         SELECT cramo, cagente
           INTO v_cramo, v_cagente
           FROM seguros
          WHERE sseguro = p_sseguro;
      ELSE
         vpasexec := 3;

         SELECT s.cramo, s.cagente
           INTO v_cramo, v_cagente
           FROM seguros s, sin_siniestro ss
          WHERE s.sseguro = ss.sseguro
            AND ss.nsinies = p_nsinies;
      END IF;

      -- 25030:ASN:11/12/2012 fin
      vpasexec := 4;

      IF pac_sin_tramite.ff_hay_tramites(p_nsinies) = 0 THEN
         v_ctipcod := 1;   -- tramitador convencional
      ELSE
         vpasexec := 5;

         BEGIN
            -- buscamos si en el alta se ha creado un tramite de asistencia
            SELECT ctramte
              INTO v_ctramte
              FROM sin_tramite
             WHERE nsinies = p_nsinies
               AND ctramte <> 9999;

            IF v_ctramte = 5 THEN
               v_ctipcod := 2;   -- tramitador de asistencia
            ELSE
               v_ctipcod := 1;   -- tramitador convencional
            END IF;
         EXCEPTION
            WHEN OTHERS THEN
               v_ctipcod := 1;   -- tramitador convencional
         END;
      END IF;

      vpasexec := 6;

      -- buscamos el tramitador (convencional o de asistencia) asociado al agente
      BEGIN
         SELECT ctramitad
           INTO v_ctramitad_exclusivo
           FROM sin_agentes
          WHERE cagente = v_cagente
            AND ctipcod = v_ctipcod
            AND cvalora = 1
            AND finicio <= f_sysdate
            AND(ffin > f_sysdate
                OR ffin IS NULL);
      EXCEPTION
         WHEN OTHERS THEN
            v_ctramitad_exclusivo := '**';
      END;

      vpasexec := 7;

      -- Buscamos el tramitador por defecto atendiendo a los tres criterios :
      --                                                          * tramitador del ramo
      --                                                          * tramitador de la causa
      --                                                          * tramitador del agente
      FOR i IN (SELECT   sc.ctramitad,
                         DECODE(cramo, v_cramo, 100, 0) + DECODE(ccausin, p_ccausin, 10, 0)
                         + DECODE(v_ctramitad_exclusivo, sc.ctramitad, 1, 0)
                    FROM sin_tramitadores st, sin_codtramitador sc
                   WHERE st.ctramitad = sc.ctramitad
                     AND st.cempres = sc.cempres
                     AND sc.cempres = p_cempres
                     AND sc.ctiptramit = 3
                     AND v_ireserva < nlimmax
                     AND sc.fbaja IS NULL   -- Bug 33298 - 04/11/2014 - JTT
                     AND DECODE(cramo, v_cramo, 100, 0) + DECODE(ccausin, p_ccausin, 10, 0)
                         + DECODE(v_ctramitad_exclusivo, sc.ctramitad, 1, 0) >
                                                                       0   -- 23101:ASN:21/12/2012
                ORDER BY 2 DESC) LOOP
         v_ctramitad := i.ctramitad;
         EXIT;
      END LOOP;

      IF v_ctramitad IS NOT NULL THEN
         p_ctramitad := v_ctramitad;
      ELSE   --Si no he conseguido encontrar uno busco el del usuario
         vpasexec := 8;

         BEGIN
            SELECT sc.ctramitad
              INTO v_ctramitad
              FROM sin_codtramitador sc, sin_tramitadores st
             WHERE sc.cempres = p_cempres
               AND sc.cusuari = p_cuser
               AND sc.ctramitad = st.ctramitad
               AND sc.cempres = st.cempres
               AND sc.ctiptramit = 3
               AND v_ireserva < st.nlimmax
               AND sc.fbaja IS NULL;   -- Bug 33298 - 04/11/2014 - JTT

            p_ctramitad := v_ctramitad;
         EXCEPTION
            WHEN OTHERS THEN
               p_cunitra := 'U000';
               p_ctramitad := 'T000';
               RETURN 1;
         -- Devolvemos el tramitador por defecto e indicamos que no es el del usuario
         END;
      END IF;

      vpasexec := 9;

      BEGIN
         SELECT DISTINCT ctramitad
                    INTO p_cunitra
                    FROM sin_redtramitador
                   WHERE cempres = p_cempres
                     AND ctiptramit = (SELECT     MAX(ctiptramit)
                                             FROM sin_redtramitador
                                            WHERE cempres = p_cempres
                                              AND TRUNC(fmovini) <= f_sysdate
                                              AND(TRUNC(fmovfin) IS NULL
                                                  OR TRUNC(fmovfin) >= f_sysdate)
                                              AND ctiptramit <
                                                    (SELECT DISTINCT ctiptramit
                                                                FROM sin_redtramitador
                                                               WHERE ctramitad = p_ctramitad
                                                                 AND cempres = p_cempres
                                                                 AND TRUNC(fmovini) <=
                                                                                      f_sysdate
                                                                 AND(TRUNC(fmovfin) IS NULL
                                                                     OR TRUNC(fmovfin) >=
                                                                                      f_sysdate))
                                       START WITH ctramitad = p_ctramitad
                                       CONNECT BY PRIOR ctramitpad = ctramitad)
                     AND TRUNC(fmovini) <= f_sysdate
                     AND(TRUNC(fmovfin) IS NULL
                         OR TRUNC(fmovfin) >= f_sysdate)
              START WITH ctramitad = p_ctramitad
              CONNECT BY PRIOR ctramitpad = ctramitad;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                        'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
            vnumerr := 9001371;
      END;

      vpasexec := 8;
      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001371;
   --Error al cercar la unitat de tramitación i el tramitador per defecte
   END f_get_tramitador_defecto;

   -- Ini bug 16924 - SRA - 15/12/2010: esta función consulta para un sproduc-ccausin-cmotsin-cgarant dados en quÃ¿Â© estado/substado
--                                   se ha de crear el siniestro, segÃ¿Âºn lo que se haya parametrizado en SIN_CAUSA_MOTIVO (o abierto/abierto por defecto)
--                                   Se recorre la tramitación de apertura del siniestro, recuperando el cgarant de cada una de sus reservas y consultando
--                                   en SIN_CAUSA_MOTIVO en quÃ¿Â© estado/substado se ha crear el siniestro, actualizando estos valores en el primer
--                                   movimiento de esa tramitación.
   FUNCTION f_estadotram_alta_sini(
      pnsinies IN siniestros.nsinies%TYPE,
      pobsiniestro IN OUT ob_iax_siniestros)
      RETURN NUMBER IS
      vtsproduc      productos.sproduc%TYPE;
      vcesttra       sin_tramita_movimiento.cesttra%TYPE;
      vcsubtra       sin_tramita_movimiento.csubtra%TYPE;
      vn_tra         NUMBER := 0;
      vt_desc        tab_error.tdescrip%TYPE;
   BEGIN
      IF vbcalculaestadotramini THEN
         vt_desc := 'pnsinies: ' || pnsinies;
         vn_tra := 1;

         SELECT s.sproduc
           INTO vtsproduc
           FROM sin_siniestro si, seguros s
          WHERE si.sseguro = s.sseguro
            AND si.nsinies = pnsinies;

         vt_desc := vt_desc || ' - vtsproduc: ' || vtsproduc;
         vt_desc := vt_desc || ' - ccausin: ' || pobsiniestro.ccausin;
         vt_desc := vt_desc || ' - cmotsin: ' || pobsiniestro.cmotsin;

         IF pobsiniestro.tramitaciones IS NOT NULL
            AND pobsiniestro.tramitaciones.COUNT > 0 THEN
            vn_tra := 2;

            FOR i IN pobsiniestro.tramitaciones.FIRST .. pobsiniestro.tramitaciones.LAST LOOP
               IF pobsiniestro.tramitaciones.EXISTS(i) THEN   -- 22702
                  DECLARE
                     k              NUMBER;
                     vt_desc1       tab_error.tdescrip%TYPE;
                  BEGIN
                     vt_desc1 := ' - pobsiniestro.tramitaciones(' || i || ')';
                     vn_tra := 3;
                     k := pobsiniestro.tramitaciones(i).movimientos.FIRST;

                     IF pobsiniestro.tramitaciones(i).reservas IS NOT NULL
                        AND pobsiniestro.tramitaciones(i).reservas.COUNT > 0 THEN
                        vn_tra := 4;

                        FOR j IN
                           pobsiniestro.tramitaciones(i).reservas.FIRST .. pobsiniestro.tramitaciones
                                                                                            (i).reservas.LAST LOOP
                           DECLARE
                              vt_desc2       tab_error.tdescrip%TYPE;
                           BEGIN
                              vt_desc2 := '.reservas(' || j || ')';
                              vn_tra := 5;

                              SELECT DISTINCT NVL(scm.cesttra, 0),
                                              scm.csubtra
                                         INTO pobsiniestro.tramitaciones(i).movimientos(k).cesttra,
                                              pobsiniestro.tramitaciones(i).movimientos(k).csubtra
                                         FROM sin_gar_causa_motivo sgcm, sin_causa_motivo scm
                                        WHERE sgcm.scaumot = scm.scaumot
                                          AND sgcm.sproduc = vtsproduc
                                          AND scm.ccausin = pobsiniestro.ccausin
                                          AND scm.cmotsin = pobsiniestro.cmotsin
                                          AND sgcm.cgarant =
                                                pobsiniestro.tramitaciones(i).reservas(j).cgarant;

                              vn_tra := 6;
                              vt_desc2 := vt_desc2 || '.cgarant:'
                                          || pobsiniestro.tramitaciones(i).reservas(j).cgarant;
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN
                                 pobsiniestro.tramitaciones(i).movimientos(k).cesttra := 0;
                                 pobsiniestro.tramitaciones(i).movimientos(k).csubtra := 0;
                              WHEN OTHERS THEN
                                 vt_desc1 := vt_desc1 || vt_desc2;
                                 RAISE;
                           END;

                           vn_tra := 7;
                           -- Una vez que hemos realizado el cÃ¡lculo del estado/substado inicial, cambiamos el valor de la variable global.
                           vbcalculaestadotramini := FALSE;
                        END LOOP;
                     END IF;
                  EXCEPTION
                     WHEN OTHERS THEN
                        vt_desc := vt_desc || vt_desc1;
                        RAISE;
                  END;
               END IF;
            END LOOP;
         END IF;
      END IF;

      vn_tra := 8;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_estadotram_alta_sini', vn_tra,
                     vt_desc, SQLCODE || ' ' || SQLERRM);
         RETURN 9901732;
   END f_estadotram_alta_sini;

-- Fin bug 16924 - SRA - 15/12/2010
   -- Bug 18286 - APD - 19/04/2011 - se crea la funcion
   -- Devuelve el estado del siniestro
   FUNCTION f_get_estado_siniestro(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pfecha IN DATE DEFAULT f_sysdate)
      RETURN NUMBER IS
      v_cestsin      sin_movsiniestro.cestsin%TYPE;
   BEGIN
      SELECT m.cestsin
        INTO v_cestsin
        FROM sin_movsiniestro m
       WHERE m.nsinies = pnsinies
         AND m.nmovsin = (SELECT MAX(m2.nmovsin)
                            FROM sin_movsiniestro m2
                           WHERE m2.nsinies = m.nsinies);

      RETURN v_cestsin;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_get_estado_siniestro', 1,
                     'pnsinies = ' || pnsinies || ';pfecha = ' || pfecha,
                     SQLCODE || ' ' || SQLERRM);
         RETURN NULL;
   END f_get_estado_siniestro;

-- Fin Bug 18286 - APD - 19/04/2011
   -- Bug 18286 - APD - 19/04/2011 - se crea la funcion
   -- Cambia el estado de la prestacion
   FUNCTION f_estado_prestacion(
      pnsinies IN prestaren.nsinies%TYPE,
      pcestsin IN sin_movsiniestro.cestsin%TYPE,
      pcestsin_ant IN sin_movsiniestro.cestsin%TYPE DEFAULT NULL,
      pntramit IN prestaren.ntramit%TYPE DEFAULT NULL,
      psperson IN prestaren.sperson%TYPE DEFAULT NULL,
      pctipdes IN prestaren.ctipdes%TYPE DEFAULT NULL,
      psseguro IN prestaren.sseguro%TYPE DEFAULT NULL)
      RETURN NUMBER IS
      vcestsin_ant   sin_movsiniestro.cestsin%TYPE;
      vntraza        NUMBER;
      salir          EXCEPTION;
      vnumerr        NUMBER;
      v_ccobban      seguros.ccobban%TYPE;
   BEGIN
      -- El estado de la prestacion dependerÃ¡ del estado del siniestro.
      -- Si el estado actual del siniestro es 0.Abierto o 5.-Presiniestro y
      -- se quiere pasar el siniestro al estado 1.-Terminado --> el estado de
      -- la prestacion debe ser 0.Activa
      -- Si el estado actual del siniestro es 0.Abierto o 5.-Presiniestro y
      -- se quiere pasar el siniestro al estado 2.-Anulado o 3.-Rechazado -->
      -- el estado de la prestacion debe ser 5.Anular sin activar
      -- En ambos casos, el estado actual de la prestacion debe ser 4.-Pendiente
      -- de activar
      vntraza := 1;

      IF pnsinies IS NULL
         OR pcestsin IS NULL THEN
         vnumerr := 108376;   -- Se tiene que informar de todos los parámetros.
         RAISE salir;
      END IF;

      -- pcestantsin --> estado actual del siniestro
      -- pcestsin --> estado al cual se quiere pasar el siniestro
      IF pcestsin_ant IS NOT NULL THEN
         vcestsin_ant := pcestsin_ant;
      ELSE
         BEGIN
            SELECT cestsin
              INTO vcestsin_ant
              FROM sin_movsiniestro
             WHERE nsinies = pnsinies
               AND nmovsin = (SELECT MAX(nmovsin)
                                FROM sin_movsiniestro
                               WHERE nsinies = pnsinies);
         EXCEPTION
            WHEN OTHERS THEN
               vcestsin_ant := NULL;
         END;
      END IF;

      vntraza := 2;

      IF vcestsin_ant IS NULL THEN
         vnumerr := 9001399;   --Estado del siniestro obligatorio
         RAISE salir;
      END IF;

      vntraza := 3;

      IF /*vcestsin_ant IN(0, 5)
         AND */ pcestsin = 1 THEN
         FOR reg IN (SELECT sseguro, sperson, nsinies, ntramit, ctipdes, npresta
                       FROM prestaren
                      WHERE nsinies = pnsinies
                        AND ntramit = NVL(pntramit, ntramit)
                        AND sperson = NVL(psperson, sperson)
                        AND ctipdes = NVL(pctipdes, ctipdes)
                        AND sseguro = NVL(psseguro, sseguro)
                        AND cestado = 4) LOOP
            -- Se valida que no existe otra prestación para el mismo sseguro/sperson activa
            -- (cestado prestaren <> 5)
/*
            IF pac_siniestros.f_num_prestaciones(reg.sseguro, reg.sperson) <>
                  pac_siniestros.f_num_prestaciones(reg.sseguro, reg.sperson, reg.nsinies,
                                                    reg.ntramit, reg.ctipdes) THEN
               vnumerr := 109432;   -- Esta póliza ya tiene prestaciones asignadas en ejecución.
               RAISE salir;
            END IF;
*/
            vntraza := 4;

            BEGIN
               SELECT ccobban
                 INTO v_ccobban
                 FROM seguros
                WHERE sseguro = reg.sseguro;

               vntraza := 5;

               IF v_ccobban IS NULL THEN
                  vnumerr := 120081;   --Falta informar el cobrador bancario
                  RAISE salir;
               END IF;
            EXCEPTION
               WHEN OTHERS THEN
                  vntraza := 6;
                  vnumerr := 120081;   --Falta informar el cobrador bancario
                  RAISE salir;
            END;

            vntraza := 7;

            -- cestato = 0.-Activa, 4.-Pendiente de activar
            UPDATE prestaren
               SET cestado = 0   -- Activa
             WHERE nsinies = reg.nsinies
               AND ntramit = reg.ntramit
               AND sperson = reg.sperson
               AND ctipdes = reg.ctipdes
               AND sseguro = reg.sseguro
               AND npresta = reg.npresta;
         END LOOP;
      ELSIF /*vcestsin_ant IN(0, 5)
            AND */ pcestsin IN(2, 3) THEN
         vntraza := 8;

         UPDATE prestaren
            SET cestado = 5   -- Anular sin activar
          WHERE nsinies = pnsinies
            AND ntramit = NVL(pntramit, ntramit)
            AND sperson = NVL(psperson, sperson)
            AND ctipdes = NVL(pctipdes, ctipdes)
            AND sseguro = NVL(psseguro, sseguro)
            AND cestado = 4;   -- Pendiente de activar
      END IF;

      vntraza := 9;
      RETURN 0;
   EXCEPTION
      WHEN salir THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_estado_prestacion', vntraza,
                     'pnsinies = ' || pnsinies || ';pcestsin = ' || pcestsin
                     || ';pcestsin_ant = ' || pcestsin_ant || ';pntramit = ' || pntramit
                     || ';psperson = ' || psperson || ';pctipdes = ' || pctipdes
                     || ';psseguro = ' || psseguro,
                     SQLCODE || ' ' || SQLERRM);
         RETURN vnumerr;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_estado_prestacion', vntraza,
                     'pnsinies = ' || pnsinies || ';pcestsin = ' || pcestsin
                     || ';pcestsin_ant = ' || pcestsin_ant || ';pntramit = ' || pntramit
                     || ';psperson = ' || psperson || ';pctipdes = ' || pctipdes
                     || ';psseguro = ' || psseguro,
                     SQLCODE || ' ' || SQLERRM);
         RETURN 9901982;   -- Error al determinar el estado de la prestación
   END f_estado_prestacion;

-- Fin Bug 18286 - APD - 19/04/2011
   -- Bug 18286 - APD - 19/04/2011 - se crea la funcion
   -- Devuelve el numero de prestaciones (activas)
   FUNCTION f_num_prestaciones(
      psseguro IN prestaren.sseguro%TYPE,
      psperson IN prestaren.sperson%TYPE DEFAULT NULL,
      pnsinies IN prestaren.nsinies%TYPE DEFAULT NULL,
      pntramit IN prestaren.ntramit%TYPE DEFAULT NULL,
      pctipdes IN prestaren.ctipdes%TYPE DEFAULT NULL)
      RETURN NUMBER IS
      vnum           NUMBER;
      vnumerr        NUMBER;
      vntraza        NUMBER;
      salir          EXCEPTION;
   BEGIN
      vntraza := 1;

      IF psseguro IS NULL THEN
         vnumerr := 9000916;
         RAISE salir;
      END IF;

      vntraza := 2;

      SELECT COUNT(1)
        INTO vnum
        FROM prestaren
       WHERE sseguro = psseguro
         AND sperson = psperson
         AND nsinies = NVL(pnsinies, nsinies)
         AND ntramit = NVL(pntramit, ntramit)
         AND ctipdes = NVL(pctipdes, ctipdes)
         AND cestado <> 5;   -- Anular sin activar

      RETURN vnum;
   EXCEPTION
      WHEN salir THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_num_prestaciones', vntraza,
                     'psseguro = ' || psseguro || ';psperson = ' || psperson || ';pnsinies = '
                     || pnsinies || ';pntramit = ' || pntramit || ';pctipdes = ' || pctipdes,
                     SQLCODE || ' ' || SQLERRM);
         RETURN vnumerr;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_num_prestaciones', vntraza,
                     'psseguro = ' || psseguro || ';psperson = ' || psperson || ';pnsinies = '
                     || pnsinies || ';pntramit = ' || pntramit || ';pctipdes = ' || pctipdes,
                     SQLCODE || ' ' || SQLERRM);
         RETURN 9901983;   -- Error al leer de la tabla PRESTAREN
   END f_num_prestaciones;

-- Fin Bug 18286 - APD - 19/04/2011
   -- Bug 18670 - APD - 15/06/2011 - se crea la funcion
   -- Devuelve la forma de prestación por defecto
   FUNCTION f_get_fprestdefecto(
      psproduc IN fprestaprod.sproduc%TYPE,
      pccausin IN fprestaprod.ccausin%TYPE DEFAULT NULL,
      pcmotsin IN fprestaprod.cmotsin%TYPE DEFAULT NULL,
      pcgarant IN fprestaprod.cgarant%TYPE DEFAULT NULL,
      pctippres OUT fprestaprod.ctippres%TYPE)
      RETURN NUMBER IS
      vnum           NUMBER;
      vnumerr        NUMBER;
      vntraza        NUMBER;
      salir          EXCEPTION;
      vctippres      fprestaprod.ctippres%TYPE;
   BEGIN
      vntraza := 1;

      IF psproduc IS NULL THEN
         vnumerr := 103155;   -- Seleccione algÃ¿Âºn producto
         RAISE salir;
      END IF;

      vntraza := 2;

      BEGIN
         BEGIN
            vntraza := 3;

            SELECT ctippres
              INTO vctippres
              FROM fprestaprod
             WHERE sproduc = psproduc
               AND ccausin = pccausin
               AND cmotsin = pcmotsin
               AND cgarant = pcgarant
               AND cdefecto = 1;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               BEGIN
                  vntraza := 4;

                  SELECT ctippres
                    INTO vctippres
                    FROM fprestaprod
                   WHERE sproduc = psproduc
                     AND ccausin = pccausin
                     AND cmotsin = pcmotsin
                     AND cgarant IS NULL
                     AND cdefecto = 1;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     BEGIN
                        vntraza := 5;

                        SELECT ctippres
                          INTO vctippres
                          FROM fprestaprod
                         WHERE sproduc = psproduc
                           AND ccausin = pccausin
                           AND cmotsin IS NULL
                           AND cgarant IS NULL
                           AND cdefecto = 1;
                     EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                           BEGIN
                              vntraza := 6;

                              SELECT ctippres
                                INTO vctippres
                                FROM fprestaprod
                               WHERE sproduc = psproduc
                                 AND ccausin IS NULL
                                 AND cmotsin IS NULL
                                 AND cgarant IS NULL
                                 AND cdefecto = 1;
                           EXCEPTION
                              WHEN NO_DATA_FOUND THEN
                                 vntraza := 7;
                                 vctippres := NULL;
                           END;
                     END;
               END;
         END;
      END;

      vntraza := 8;
      pctippres := vctippres;
      RETURN 0;
   EXCEPTION
      WHEN salir THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_get_fprestdefecto', vntraza,
                     'psproduc = ' || psproduc || ';pccausin = ' || pccausin || ';pcmotsin = '
                     || pcmotsin || ';pcgarant = ' || pcgarant,
                     SQLCODE || ' ' || SQLERRM);
         RETURN vnumerr;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_get_fprestdefecto', vntraza,
                     'psproduc = ' || psproduc || ';pccausin = ' || pccausin || ';pcmotsin = '
                     || pcmotsin || ';pcgarant = ' || pcgarant,
                     SQLCODE || ' ' || SQLERRM);
         RETURN 1000455;   -- Error no controlado.
   END f_get_fprestdefecto;

-- Fin Bug 18670 - APD - 15/06/2011
   -- Ini Bug 18554  - SRA - 06/06/2011
   FUNCTION f_get_cestpag(psidepag IN sin_tramita_movpago.sidepag%TYPE)
      RETURN sin_tramita_movpago.cestpag%TYPE IS
      vcestpag       sin_tramita_movpago.cestpag%TYPE;
   BEGIN
      SELECT cestpag
        INTO vcestpag
        FROM sin_tramita_movpago pm1
       WHERE pm1.nmovpag = (SELECT MAX(nmovpag)
                              FROM sin_tramita_movpago pm2
                             WHERE pm2.sidepag = pm1.sidepag)
         AND pm1.sidepag = psidepag;

      RETURN vcestpag;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         RETURN NULL;
   END f_get_cestpag;

   FUNCTION f_get_cesttra(
      pnsinies IN sin_tramita_movimiento.nsinies%TYPE,
      pntramit IN sin_tramita_movimiento.ntramit%TYPE)
      RETURN sin_tramita_movimiento.cesttra%TYPE IS
      vcesttra       sin_tramita_movimiento.cesttra%TYPE;
   BEGIN
      SELECT stm1.cesttra
        INTO vcesttra
        FROM sin_tramita_movimiento stm1
       WHERE stm1.nmovtra = (SELECT MAX(stm2.nmovtra)
                               FROM sin_tramita_movimiento stm2
                              WHERE stm2.nsinies = stm1.nsinies
                                AND stm2.ntramit = stm1.ntramit)
         AND stm1.ntramit = pntramit
         AND stm1.nsinies = pnsinies;

      RETURN vcesttra;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         RETURN NULL;
   END f_get_cesttra;

   FUNCTION ff_descausa(
      pccausin IN sin_descausa.ccausin%TYPE,
      pcidioma IN sin_descausa.cidioma%TYPE)
      RETURN sin_descausa.tcausin%TYPE IS
      vtcausin       sin_descausa.tcausin%TYPE;
   BEGIN
      SELECT sd.tcausin
        INTO vtcausin
        FROM sin_descausa sd
       WHERE sd.cidioma = pcidioma
         AND sd.ccausin = pccausin;

      RETURN vtcausin;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         RETURN NULL;
   END ff_descausa;

   FUNCTION ff_desmotcausa(
      pccausin IN sin_desmotcau.ccausin%TYPE,
      pcmotsin IN sin_desmotcau.cmotsin%TYPE,
      pcidioma IN sin_desmotcau.cidioma%TYPE)
      RETURN sin_desmotcau.tmotsin%TYPE IS
      vtmotsin       sin_desmotcau.tmotsin%TYPE;
   BEGIN
      SELECT sd.tmotsin
        INTO vtmotsin
        FROM sin_desmotcau sd
       WHERE sd.cidioma = pcidioma
         AND sd.ccausin = pccausin
         AND sd.cmotsin = pcmotsin;

      RETURN vtmotsin;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         RETURN NULL;
   END ff_desmotcausa;

   FUNCTION f_get_hissin_siniestros(
      pnsinies IN sin_tramita_movimiento.nsinies%TYPE,
      ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vcidioma       NUMBER;
      vobject        VARCHAR2(100) := 'PAC_SINIESTROS.F_GET_HISSIN_SINIESTROS';
      vpasexec       NUMBER := 0;
      vparam         VARCHAR2(2000) := 'pnsinies: ' || pnsinies;
      vtquery        VARCHAR2(2000);
   BEGIN
      IF pnsinies IS NULL THEN
         RETURN 9001940;   -- 'No existeix el num. de sinistre'
      END IF;

      vpasexec := 1;
      vcidioma := f_usu_idioma;
      vpasexec := 2;
      -- BUG 0024675 - 15/11/2012 - JMF: csalvam
      vtquery :=
         'SELECT hs.nsinies, hs.cevento, de.ttiteve, hs.cculpab,
       ff_desvalorfijo(801, vcidioma, hs.cculpab) desculpab, hs.creclama,
       ff_desvalorfijo(318, vcidioma, hs.creclama) desreclama, hs.cmeddec,
       ff_desvalorfijo(319, vcidioma, hs.cmeddec) desmeddec, hs.ctipdec,
       ff_desvalorfijo(321, vcidioma, hs.ctipdec) destipdec, hs.tnomdec,hs.tnom1dec, hs.tnom2dec, hs.tape1dec, hs.tape2dec,
       hs.tteldec, hs.tmovildec, hs.temaildec , hs.tsinies, hs.cusumod, hs.fmodifi, hs.dec_sperson, hs.ctipide,
       ff_desvalorfijo(672, vcidioma, hs.ctipide) destipide, hs.nnumide, hs.fsinies, hs.fnotifi,
       hs.ccausin, pac_siniestros.ff_descausa(hs.ccausin, vcidioma) tcausin, hs.cmotsin,
       pac_siniestros.ff_desmotcausa(hs.ccausin, hs.cmotsin, vcidioma) tmotsin, hs.cnivel,
       ff_desvalorfijo(1017, vcidioma, hs.cnivel) desnivel, hs.sperson2, hs.fechapp,
       hs.nsincia, hs.ccompani, ff_descompania(hs.ccompani) descompani, hs.npresin, hs.cpolcia, hs.iperit,
       ff_desvalorfijo(1034, vcidioma, hs.cfraude) tfraude, ccarpeta, ff_desagente(cagente) tagente,
       hs.CSALVAM,hs.tdetpreten
  FROM hissin_siniestro hs, sin_desevento de
 WHERE de.cidioma(+) = vcidioma
   AND hs.cevento = de.cevento(+)
   AND hs.nsinies = pnsinies
   ORDER BY hs.fmodifi';
      vpasexec := 3;
      vtquery := REPLACE(vtquery, 'pnsinies', pnsinies);
      vpasexec := 4;
      vtquery := REPLACE(vtquery, 'vcidioma', vcidioma);
      vpasexec := 5;
      ptquery := vtquery;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam, SQLERRM);
         RETURN 9902105;
   --'Error en recuperar el registre histÃ¿Â²ric del siniestre'
   END f_get_hissin_siniestros;

-- Fin Bug 18554  - SRA - 06/06/2011
   /***********************************************************************
      FUNCTION f_get_pagogar_modif
      param in  sidepag  : Número tipo pago
      param out esmodif  : 1 es pot modificar, 0 no es pot
      return              : 0 OK
                            1 Error
      --BUG19006 - JTS - 19/07/2011
   ***********************************************************************/
   FUNCTION f_get_pagogar_modif(psidepag IN NUMBER, esmodif OUT NUMBER)
      RETURN NUMBER IS
      vobject        VARCHAR2(100) := 'PAC_SINIESTROS.f_get_pagogar_modif';
      vpasexec       NUMBER := 0;
      vparam         VARCHAR2(2000) := 'psidepag: ' || psidepag;
      --
      vdummy         NUMBER;
      vfdummy        DATE;
   BEGIN
      esmodif := 0;

      SELECT MAX(nmovpag)
        INTO vdummy
        FROM sin_tramita_movpago
       WHERE sidepag = psidepag;

      --Si no estem en el moviment 0 de movpago no podem modificar
      IF vdummy > 0 THEN
         esmodif := 0;
         RETURN 0;
      END IF;

      SELECT fcontab,
             NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa, 'CONTA_DIA'), 0)
        INTO vfdummy,
             vdummy
        FROM sin_tramita_movpago
       WHERE sidepag = psidepag
         AND nmovpag = 0;

      --Si la data de comptabilitat no esta informada es pot modificar
      IF vfdummy IS NULL THEN
         esmodif := 1;
      --Si la data de comptabilitat esta informada i la comptabilitat es diara no es pot modificar
      ELSIF vfdummy IS NOT NULL
            AND vdummy = 1 THEN
         esmodif := 0;
      --Si la data de comptabilitat esta informada i la comptabilitat es mensual, potser es pot modificar
      ELSIF vfdummy IS NOT NULL
            AND vdummy = 0 THEN
         --Si el tancament de sinistres per al mes de fcontab no esta tancat es pot modificar
         SELECT COUNT(1)
           INTO vdummy
           FROM cierres
          WHERE ctipo = 2   --tancament sinistres
            AND TO_CHAR(fcierre, 'mmyyyy') = TO_CHAR(vfdummy, 'mmyyyy')
            AND cempres = pac_md_common.f_get_cxtempresa
            AND cestado = 1;   --que estigui tancat

         IF vdummy > 0 THEN
            esmodif := 0;
         ELSE
            esmodif := 1;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam, SQLERRM);
         RETURN 1;
   END f_get_pagogar_modif;

   /***********************************************************************
     FUNCTION F_ULTIMO_PAGO:
      Crea las acciones a realizar una vez el Ã¿Âºltimo pago estÃ¡ pagado
      param in pnsinies : Número siniestro
      param in pntramit : Número tramitación del pago
      param in pcesttra : Código estado
      param in pcempres : Codigo empresa
      param in psseguro : Codigo seguro
      param in pccausin : Codigo causa siniestro
      param in pcmotsin : Codigo motivo siniestro
      return              : 0 -> Todo correcto
                            1 -> Se ha producido un error
      Bug 18934 - 29/09/2011 - MDS
   ***********************************************************************/
   FUNCTION f_ultimo_pago(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pcesttra IN NUMBER,
      pcempres IN NUMBER,
      psseguro IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER)
      RETURN NUMBER IS
      vobject        VARCHAR2(100) := 'PAC_SINIESTROS.f_ultimo_pago';
      vpasexec       NUMBER := 0;
      vparam         VARCHAR2(2000)
         := 'pnsinies=' || pnsinies || ' pntramit=' || pntramit || ' pcesttra=' || pcesttra
            || ' pcempres=' || pcempres || ' psseguro=' || psseguro || ' pccausin='
            || pccausin || ' pcmotsin=' || pcmotsin;
      v_count        NUMBER;
      v_cesttra      sin_tramita_movimiento.cesttra%TYPE;
      v_uni          sin_movsiniestro.cunitra%TYPE;
      v_tra          sin_movsiniestro.ctramitad%TYPE;
      v_cerrar       NUMBER := 1;
      v_rechazar     NUMBER := 1;
      vnerror        NUMBER(10);
      v_estado_actual NUMBER;   -- 25030:ASN:11/12/2012
      vcobjase       NUMBER;   -- 29495/176814:NSS:05/06/2014
      vpagos_pendientes NUMBER;   -- 29495/176814:NSS:05/06/2014

      -- cursor de las tramitaciones de un siniestro, excepto la tramitacion
      -- concreta que es la del ultimo pago
      CURSOR c1 IS
         SELECT ntramit
           FROM sin_tramitacion
          WHERE nsinies = pnsinies
            AND ntramit <> pntramit;
   BEGIN
      --
      -- primero, cerrar la tramitación del pago del siniestro

      -- mirar si hay reserva indemnizatoria para la tramitación del pago
      SELECT COUNT(*)
        INTO v_count
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = 1;

      IF v_count > 0 THEN
         v_rechazar := 0;
      END IF;

      vpasexec := 1;

      -- cambiar el estado de la tramitación del pago
      -- Bug 0022906 - 17/07/2012 - JMF: pciesini
      IF pac_siniestros.f_estado_tramitacion(pnsinies, pntramit, pcesttra, NULL, NULL, NULL) <>
                                                                                              0 THEN
         v_cerrar := 0;
      END IF;

      vpasexec := 2;

      --
      -- segundo, revisar otras tramitaciones del siniestro
      IF v_cerrar = 1 THEN
         vpasexec := 3;

         FOR reg1 IN c1 LOOP
            vpasexec := 4;
            v_cesttra := pac_siniestros.f_get_cesttra(pnsinies, reg1.ntramit);

            IF v_cesttra = 0
               OR v_cesttra = 4 THEN
               vpasexec := 5;

               -- si el estado es 0=Abierto
               --ini bug 29495/176814:NSS:05/06/2014
               SELECT COUNT(*)
                 INTO vpagos_pendientes
                 FROM sin_tramita_movpago m
                WHERE m.sidepag IN(SELECT sidepag
                                     FROM sin_tramita_pago
                                    WHERE nsinies = pnsinies)
                  AND m.nmovpag = (SELECT MAX(m1.nmovpag)
                                     FROM sin_tramita_movpago m1
                                    WHERE m1.sidepag = m.sidepag)
                  AND m.cestpag NOT IN(8, 2);

               IF vpagos_pendientes > 0 THEN
                  v_cerrar := 0;
                  EXIT;   -- no mirar mas, ya es sufuciente
               END IF;
            --fin bug 29495/176814:NSS:05/06/2014
            ELSE
               -- mirar si hay reserva indemnizatoria para la tramitación
               SELECT COUNT(*)
                 INTO v_count
                 FROM sin_tramita_reserva
                WHERE nsinies = pnsinies
                  AND ntramit = reg1.ntramit
                  AND ctipres = 1;

               IF v_count > 0 THEN
                  IF v_cesttra <> 3 THEN
                     -- si el estado no es 3=Rechazado
                     v_rechazar := 0;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      --
      -- tercero, cerrar si procede el siniestro
      IF v_cerrar = 1 THEN
         vpasexec := 6;
-- 25030:ASN:11/12/2012 ini
         v_estado_actual := pac_siniestros.f_get_estado_siniestro(pnsinies, f_sysdate);

         IF v_estado_actual IN(0, 4) THEN   -- puede ser que ya se haya cerrado en F_ESTADO_TRAMITACION
-- 25030:ASN:11/12/2012 fin
         --ini bug 29495/176814:NSS:05/06/2014
            /*Para autos se debe saltar esta validación */
            SELECT cobjase
              INTO vcobjase
              FROM seguros
             WHERE sseguro = psseguro;

            IF vcobjase = 5 THEN
               v_rechazar := 0;
            END IF;

            --fin bug 29495/176814:NSS:05/06/2014
            IF v_rechazar = 1 THEN
               -- de momento no se hace nada
               NULL;
            ELSE
               vpasexec := 7;
-- 22108:ASN:21/05/2012 ini
/*
            vnerror := pac_siniestros.f_get_tramitador_defecto(pcempres, f_user, psseguro,
                                                               pccausin, pcmotsin, pnsinies,
                                                               pntramit, v_uni, v_tra);
*/
               vnerror := pac_siniestros.f_get_tramitador(pnsinies, NULL, pntramit, v_uni,
                                                          v_tra);

-- 22108:ASN:21/05/2012 fin
               IF NVL(vnerror, 99999) > 1 THEN
                  p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam, SQLERRM);
                  RETURN vnerror;
               END IF;

               vpasexec := 8;
               -- cambia el estado del siniestro
               vnerror := pac_siniestros.f_estado_siniestro(pnsinies, 1, 1, v_uni, v_tra, NULL,
                                                            f_sysdate, NULL, NULL);

               IF vnerror <> 0 THEN
                  p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam, SQLERRM);
                  RETURN vnerror;
               END IF;
            END IF;
         END IF;   -- 25030:ASN:11/12/2012
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam, SQLERRM);
         RETURN 1;
   END f_ultimo_pago;

   /*************************************************************************
      FUNCTION f_get_juzgado
         Recupera un juzgado
         param in pnsinies  : Número del siniestro
         param in pntramit  : Número tramitación siniestro
         param in pnlinjuz  : Número de lÃ¿Â­nea de juzgado
         param out vsquery  : texto consulta
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_get_juzgado(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlinjuz IN NUMBER,
      pcidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      vsquery :=
         'SELECT sini.nsinies, sini.ntramit, sini.corgjud, sini.norgjud, sini.trefjud, sini.csiglas,
       sini.tnomvia, sini.nnumvia, sini.tcomple, sini.tdirec, sini.cpais, sini.cprovin,
       sini.cpoblac, sini.cpostal,
       sini.nlinjuz, sini.tasunto, sini.nclasede, sini.ntipopro, sini.nprocedi, sini.fnotiase,
       sini.frecpdem, sini.fnoticia, sini.fcontase, sini.fcontcia, sini.faudprev, sini.fjuicio,
       sini.cmonjuz, sini.cpleito, sini.ipleito, sini.iallana, sini.isentenc, sini.isentcap,
       sini.isentind, sini.isentcos, sini.isentint, sini.isentotr, sini.cargudef,
       sini.cresplei, sini.capelant, sini.thipoase, sini.thipoter, sini.ttipresp,
       sini.copercob, sini.treasmed, sini.cestproc, sini.cetaproc, sini.tconcjur,
       sini.testrdef, sini.trecomen, sini.tobserv, sini.fcancel,
       ff_desvalorfijo(800066,'
         || pcidioma || ', sini.nclasede) tclasede,
       ff_desvalorfijo(800065,' || pcidioma
         || ', sini.ntipopro) ttipopro,
       ff_desvalorfijo(800064,' || pcidioma
         || ', sini.cpleito) tpleito,
       ff_desvalorfijo(800063,' || pcidioma
         || ', sini.cargudef) targudef,
       ff_desvalorfijo(800062,' || pcidioma
         || ', sini.cresplei) tresplei,
       ff_desvalorfijo(800061,' || pcidioma
         || ', sini.capelant) tapelant,
       ff_desvalorfijo(800060,' || pcidioma
         || ', sini.cestproc) testproc,
       ff_desvalorfijo(800059,' || pcidioma
         || ', sini.cetaproc) tetaproc,
       ff_desvalorfijo(800059,' || pcidioma
         || ', sini.corgjud) torgjud,
       f_desprovin2(sini.cprovin,NULL) tprovin
  FROM sin_tramita_juzgado sini
 WHERE sini.nsinies = '
         || pnsinies || '
   AND sini.ntramit = ' || pntramit || '
   AND sini.nlinjuz = ' || pnlinjuz;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_juzgado', SQLERRM);
         RETURN 1;
   END f_get_juzgado;

   /*************************************************************************
      FUNCTION f_ins_juzgado
         Inserta un juzgado
         param in pnsinies  : Número del siniestro
         param in pntramit  : Número tramitación siniestro
         param in pnlinjuz  : Número de lÃ¿Â­nea de juzgado
         ...
         ...
         ...
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_ins_juzgado(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlinjuz IN NUMBER,
      pcorgjud IN NUMBER,
      pnorgjud IN VARCHAR2,
      --BUG 22048 --ETM --SE MODIFICA EL CAMPO DE NUMERICO A VARCHAR
      ptrefjud IN VARCHAR2,
      pcsiglas IN NUMBER,
      ptnomvia IN VARCHAR2,
      pnnumvia IN NUMBER,
      ptcomple IN VARCHAR2,
      ptdirec IN VARCHAR2,
      pcpais IN NUMBER,
      pcprovin IN NUMBER,
      pcpoblac IN NUMBER,
      pcpostal IN VARCHAR2,
      ptasunto IN VARCHAR2,
      pnclasede IN NUMBER,
      pntipopro IN NUMBER,
      pnprocedi IN VARCHAR2,
      pfnotiase IN DATE,
      pfrecpdem IN DATE,
      pfnoticia IN DATE,
      pfcontase IN DATE,
      pfcontcia IN DATE,
      pfaudprev IN DATE,
      pfjuicio IN DATE,
      pcmonjuz IN VARCHAR2,
      pcpleito IN NUMBER,
      pipleito IN NUMBER,
      piallana IN NUMBER,
      pisentenc IN NUMBER,
      pisentcap IN NUMBER,
      pisentind IN NUMBER,
      pisentcos IN NUMBER,
      pisentint IN NUMBER,
      pisentotr IN NUMBER,
      pcargudef IN NUMBER,
      pcresplei IN NUMBER,
      pcapelant IN NUMBER,
      pthipoase IN VARCHAR2,
      pthipoter IN VARCHAR2,
      pttipresp IN VARCHAR2,
      pcopercob IN NUMBER,
      ptreasmed IN VARCHAR2,
      pcestproc IN NUMBER,
      pcetaproc IN NUMBER,
      ptconcjur IN VARCHAR2,
      ptestrdef IN VARCHAR2,
      ptrecomen IN VARCHAR2,
      ptobserv IN VARCHAR2,
      pfcancel IN DATE)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_juzgado';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnlinjuz:'
            || pnlinjuz;
      vpasexec       NUMBER(5) := 1;
   BEGIN
      --Comprovacion de los parámetros de entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pnlinjuz IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_juzgado
                     (nsinies, ntramit, nlinjuz, corgjud, norgjud, trefjud, csiglas,
                      tnomvia, nnumvia, tcomple, tdirec, cpais, cprovin, cpoblac,
                      cpostal, tasunto, nclasede, ntipopro, nprocedi, fnotiase,
                      frecpdem, fnoticia, fcontase, fcontcia, faudprev, fjuicio,
                      cmonjuz, cpleito, ipleito, iallana, isentenc, isentcap,
                      isentind, isentcos, isentint, isentotr, cargudef, cresplei,
                      capelant, thipoase, thipoter, ttipresp, copercob, treasmed,
                      cestproc, cetaproc, tconcjur, testrdef, trecomen, tobserv,
                      fcancel)
              VALUES (pnsinies, pntramit, pnlinjuz, pcorgjud, pnorgjud, ptrefjud, pcsiglas,
                      ptnomvia, pnnumvia, ptcomple, ptdirec, pcpais, pcprovin, pcpoblac,
                      pcpostal, ptasunto, pnclasede, pntipopro, pnprocedi, pfnotiase,
                      pfrecpdem, pfnoticia, pfcontase, pfcontcia, pfaudprev, pfjuicio,
                      pcmonjuz, pcpleito, pipleito, piallana, pisentenc, pisentcap,
                      pisentind, pisentcos, pisentint, pisentotr, pcargudef, pcresplei,
                      pcapelant, pthipoase, pthipoter, pttipresp, pcopercob, ptreasmed,
                      pcestproc, pcetaproc, ptconcjur, ptestrdef, ptrecomen, ptobserv,
                      pfcancel);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_juzgado
               SET corgjud = pcorgjud,
                   norgjud = pnorgjud,
                   trefjud = ptrefjud,
                   csiglas = pcsiglas,
                   tnomvia = ptnomvia,
                   nnumvia = pnnumvia,
                   tcomple = ptcomple,
                   tdirec = ptdirec,
                   cpais = pcpais,
                   cprovin = pcprovin,
                   cpoblac = pcpoblac,
                   cpostal = pcpostal,
                   tasunto = ptasunto,
                   nclasede = pnclasede,
                   ntipopro = pntipopro,
                   nprocedi = pnprocedi,
                   fnotiase = pfnotiase,
                   frecpdem = pfrecpdem,
                   fnoticia = pfnoticia,
                   fcontase = pfcontase,
                   fcontcia = pfcontcia,
                   faudprev = pfaudprev,
                   fjuicio = pfjuicio,
                   cmonjuz = pcmonjuz,
                   cpleito = pcpleito,
                   ipleito = pipleito,
                   iallana = piallana,
                   isentenc = pisentenc,
                   isentcap = pisentcap,
                   isentind = pisentind,
                   isentcos = pisentcos,
                   isentint = pisentint,
                   isentotr = pisentotr,
                   cargudef = pcargudef,
                   cresplei = pcresplei,
                   capelant = pcapelant,
                   thipoase = pthipoase,
                   thipoter = pthipoter,
                   ttipresp = pttipresp,
                   copercob = pcopercob,
                   treasmed = ptreasmed,
                   cestproc = pcestproc,
                   cetaproc = pcetaproc,
                   tconcjur = ptconcjur,
                   testrdef = ptestrdef,
                   trecomen = ptrecomen,
                   tobserv = ptobserv,
                   fcancel = pfcancel
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND nlinjuz = pnlinjuz;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9902690;
   --Error al insertar/modificar en la tabla SIN_TRAMITA_JUZGADO
   END f_ins_juzgado;

   /*************************************************************************
      FUNCTION f_del_juzgado
         Borra un juzgado
         param in pnsinies  : Número del siniestro
         param in pntramit  : Número tramitación siniestro
         param in pnlinjuz  : Número de lÃ¿Â­nea de juzgado
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_del_juzgado(pnsinies IN VARCHAR2, pntramit IN NUMBER, pnlinjuz IN NUMBER)
      RETURN NUMBER IS
   BEGIN
      DELETE      sin_tramita_juzgado
            WHERE nsinies = pnsinies
              AND ntramit = pntramit
              AND nlinjuz = pnlinjuz;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_juzgado', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pnlinjuz:' || pnlinjuz,
                     SQLERRM);
         RETURN 9902689;   --Error al borrar de la tabla SIN_TRAMITA_JUZGADO
   END f_del_juzgado;

   /*************************************************************************
      FUNCTION f_get_demand
         Recupera un demandante/demandado
         param in pnsinies  : Número del siniestro
         param in pntramit  : Número tramitación siniestro
         param in pnlindem  : Número de lÃ¿Â­nea de demandante/demandado
         param out vsquery  : texto consulta
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_get_demand(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN NUMBER,
      pnlindem IN NUMBER,
      pntipodem IN NUMBER,
      pcidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      -- Bug 20340/109094 - 15/03/2012 - AMC
      vsquery :=
         'SELECT  std.nsinies, std.ntramit, std.nlindem, std.sperson, std.ntipodem, std.ttramita, std.sperson2, std.nprocedi, std.tcompani,
  ff_desvalorfijo(800067,'
         || pcidioma
         || ', std.ntipodem) ttipodem
  FROM sin_tramita_demand std
 WHERE std.nsinies = ' || pnsinies || '
   AND std.ntramit = ' || pntramit || '
   AND std.nlindem = ' || pnlindem || '
   AND std.ntipodem = ' || pntipodem;
      -- Fi Bug 20340/109094 - 15/03/2012 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_demand', SQLERRM);
         RETURN 1;
   END f_get_demand;

   /*************************************************************************
      FUNCTION f_ins_demand
         Inserta un demandante/demandado
         param in pnsinies  : Número del siniestro
         param in pntramit  : Número tramitación siniestro
         param in pnlindem  : Número de lÃ¿Â­nea de demandante/demandado
         ...
         ...
         ...
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_ins_demand(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit NUMBER,
      pnlindem NUMBER,
      psperson NUMBER,
      pntipodem NUMBER,
      pttramita VARCHAR2,
      psperson2 NUMBER,
      pnprocedi VARCHAR2,
      ptcompani VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_demand';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit || ' pnlindem:'
            || pnlindem;
      vpasexec       NUMBER(5) := 1;
   BEGIN
      -- Bug 20340/109094 - 15/03/2012 - AMC
      --Comprovacion de los parámetros de entrada
      IF pnsinies IS NULL
         OR pntramit IS NULL
         OR pnlindem IS NULL
         OR pntipodem IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_tramita_demand
                     (nsinies, ntramit, nlindem, sperson, ntipodem, ttramita,
                      sperson2, nprocedi, tcompani)
              VALUES (pnsinies, pntramit, pnlindem, psperson, pntipodem, pttramita,
                      psperson2, pnprocedi, ptcompani);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_tramita_demand
               SET nsinies = pnsinies,
                   ntramit = pntramit,
                   nlindem = pnlindem,
                   sperson = psperson,
                   ntipodem = pntipodem,
                   ttramita = pttramita,
                   sperson2 = psperson2,
                   nprocedi = pnprocedi,
                   tcompani = ptcompani
             WHERE nsinies = pnsinies
               AND ntramit = pntramit
               AND nlindem = pnlindem
               AND ntipodem = pntipodem;
      END;

      -- Fi Bug 20340/109094 - 15/03/2012 - AMC
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9902687;
   --Error al insertar/modificar en la tabla SIN_TRAMITA_DEMAND
   END f_ins_demand;

   /*************************************************************************
      FUNCTION f_del_demand
         Borra un demandante/demandado
         param in pnsinies  : Número del siniestro
         param in pntramit  : Número tramitación siniestro
         param in pnlindem  : Número de lÃ¿Â­nea de demandante/demandado
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
      Bug 20340/109094 - 15/03/2012 - AMC
   *************************************************************************/
   FUNCTION f_del_demand(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnlindem IN NUMBER,
      pntipodem IN NUMBER)
      RETURN NUMBER IS
   BEGIN
      DELETE      sin_tramita_demand
            WHERE nsinies = pnsinies
              AND ntramit = pntramit
              AND nlindem = pnlindem
              AND ntipodem = pntipodem;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_demand', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pnlindem:' || pnlindem,
                     SQLERRM);
         RETURN 9902686;   --Error al borrar de la tabla SIN_TRAMITA_DEMAND
   END f_del_demand;

   /*************************************************************************
      FUNCTION f_post_siniestro                    -- bug19416:ASN:14/12/2011
         Acciones automaticas para ejecutar al dar de alta un siniestro
         param in pnsinies  : Número del siniestro
         return             : codigo error
   *************************************************************************/
   FUNCTION f_post_siniestro(pnsinies sin_siniestro.nsinies%TYPE)
      RETURN NUMBER IS
      v_cempres      NUMBER;
      v_ccausin      NUMBER;
      v_cmotsin      NUMBER;
      v_fsinies      DATE;   -- 22068:ASN:26/04/2012
      v_nriesgo      NUMBER;   -- 22068:ASN:26/04/2012
      v_sseguro      NUMBER;   -- 22068:ASN:26/04/2012
      v_hay_carpeta  NUMBER;
      v_cmoneda      VARCHAR2(3);
      v_cbancar      VARCHAR2(50);
      v_ctipban      NUMBER;
      v_sperson      NUMBER;
      v_cagente      NUMBER;
      v_nmovres      NUMBER;
      num_err        NUMBER;
      v_ntraza       NUMBER;
      -- 22603:ASN:04/07/2012 ini
      ya_hay_reserva NUMBER;
      v_sproduc      NUMBER;
      v_res_global_asist NUMBER;
      v_tramte_asist NUMBER;
      v_tramite_global NUMBER;
      v_iperit       NUMBER;
      v_tramitacion  NUMBER;
      v_ctramit      NUMBER;
      v_scaumot      NUMBER;
      v_gar_defecto  NUMBER;
      -- v_ivalora      NUMBER; -- 23615:ASN:25/09/2012
         -- 22603:ASN:04/07/2012 fin
         -- 22486:ASN:09/07/2012 ini
      v_ntramit      NUMBER;
      v_cpais        NUMBER;
      v_cprovin      NUMBER;
      v_cpoblac      NUMBER;
      v_nlocali      NUMBER;
      v_cpostal      VARCHAR2(30);
      v_gestion      NUMBER;
      v_servicio     NUMBER;
      v_ctippro      NUMBER;
      v_csubpro      NUMBER;
      v_cobjase      NUMBER;
      v_cidioma      NUMBER;
      v_dummy        NUMBER;
      -- 22486:ASN:09/07/2012 fin
      v_cunitra      sin_movsiniestro.cunitra%TYPE;
      v_ctramitad    sin_movsiniestro.ctramitad%TYPE;
      vspersoase     NUMBER;
      vctipide       NUMBER;
      vnnumide       VARCHAR2(50);
      vtnombre1      per_detper.tnombre1%TYPE;   -- Bug 29738/166355 - 17/02/2014 - AMC
      vtapelli1      per_detper.tapelli1%TYPE;   -- Bug 29738/166355 - 17/02/2014 - AMC
      vtapelli2      per_detper.tapelli2%TYPE;   -- Bug 29738/166355 - 17/02/2014 - AMC
      vsperson       NUMBER;
      vtnombre2      per_detper.tnombre2%TYPE;   -- Bug 29738/166355 - 17/02/2014 - AMC
      -- 26520:ASN:21/03/2013 ini
      v_cactivi      NUMBER;
      v_si_o_no      NUMBER;
      v_ireserva     sin_tramita_reserva.ireserva%TYPE;
      v_ireserva70   sin_tramita_reserva.ireserva%TYPE;
      v_ireserva30   sin_tramita_reserva.ireserva%TYPE;
      v_icaprie      sin_tramita_reserva.icaprie%TYPE;
      v_ipenali      sin_tramita_reserva.ipenali%TYPE;
      v_fresini      sin_tramita_reserva.fresini%TYPE;
      v_fresfin      sin_tramita_reserva.fresfin%TYPE;
      v_fultpag      sin_tramita_reserva.fultpag%TYPE;
      v_iprerec      sin_tramita_reserva.iprerec%TYPE;
      v_cmonres      sin_tramita_reserva.cmonres%TYPE;
      v_fmovres      sin_tramita_reserva.fmovres%TYPE;
      v_ctipgas      sin_tramita_reserva.ctipgas%TYPE;
      v_ifranq       sin_tramita_reserva.ifranq%TYPE;
      v_ndias        sin_tramita_reserva.ndias%TYPE;   --Bug 27487/159742:NSS:26/11/2013
      dummy          NUMBER;
      v_fnotifi      DATE;
   -- 26520:ASN:21/03/2013 fin
   BEGIN
      v_ntraza := 1;

      SELECT se.cempres, si.ccausin, si.cmotsin, si.fsinies, si.nriesgo, si.sseguro,   -- 22068:ASN:26/04/2012
             pac_monedas.f_cmoneda_t(pac_monedas.f_moneda_producto(se.sproduc)), sproduc,
             iperit   -- 22603:ASN:04/07/2012
                   , cobjase, cidioma   -- 22486:ASN:09/07/2012
                                     ,
             ccarpeta, cactivi, fnotifi
        INTO v_cempres, v_ccausin, v_cmotsin, v_fsinies, v_nriesgo, v_sseguro,   -- 22068:ASN:26/04/2012
             v_cmoneda, v_sproduc,
             v_iperit   -- 22603:ASN:04/07/2012
                     , v_cobjase, v_cidioma   -- 22486:ASN:09/07/2012
                                           ,
             v_hay_carpeta, v_cactivi, v_fnotifi   -- 26520:ASN:21/03/2013
        FROM sin_siniestro si, seguros se
       WHERE si.sseguro = se.sseguro
         AND si.nsinies = pnsinies;

      -- 22486:ASN:09/07/2012 ini
      IF v_cobjase = 2 THEN   -- Si es un riesgo de tipo direccion insertamos la localizacion
         IF pac_sin_tramite.ff_hay_tramites(pnsinies) = 1 THEN
            v_ntraza := 10;

            SELECT MIN(ta.ntramit)
              -- Identificar la tramitacion del tramite convencional
            INTO   v_ntramit
              FROM sin_tramitacion ta, sin_tramite te
             WHERE ta.nsinies = te.nsinies
               AND ta.nsinies = pnsinies
               AND ta.ntramte = te.ntramte
               AND te.ctramte <> 9999;
         ELSE
            v_ntraza := 11;

            SELECT MIN(ntramit)
              INTO v_ntramit
              FROM sin_tramitacion
             WHERE nsinies = pnsinies;
         END IF;

         v_ntraza := 12;

         SELECT cprovin, cpoblac, cpostal
           INTO v_cprovin, v_cpoblac, v_cpostal
           FROM sitriesgo d, sin_siniestro si
          WHERE d.sseguro = si.sseguro
            AND d.nriesgo = si.nriesgo
            AND si.nsinies = pnsinies;

         v_ntraza := 13;

         SELECT cpais
           INTO v_cpais
           FROM provincias
          WHERE cprovin = v_cprovin;

         v_ntraza := 14;

         SELECT NVL(MAX(nlocali), 0) + 1
           INTO v_nlocali
           FROM sin_tramita_localiza
          WHERE nsinies = pnsinies
            AND ntramit = v_ntramit;

         v_ntraza := 15;

         INSERT INTO sin_tramita_localiza
                     (nsinies, ntramit, nlocali, tlocali, cpais, cprovin, cpoblac, cpostal)
            SELECT pnsinies, v_ntramit, v_nlocali, f_axis_literales(9900859, v_cidioma),
                   v_cpais, v_cprovin, v_cpoblac, v_cpostal
              FROM DUAL;
      END IF;

      -- 26520:ASN:21/03/2013 ini
      IF v_cobjase = 5 THEN   -- Si es un riesgo de tipo automovil puede tenerse que repartir la reserva
         FOR i IN (SELECT DISTINCT cgarant   -- xxxx:NSS:14/05/2014
                              FROM garanseg
                             WHERE sseguro = v_sseguro
                               AND nriesgo = v_nriesgo) LOOP
            v_ntraza := 30;

            SELECT COUNT(*)
              INTO v_si_o_no
              FROM pargaranpro
             WHERE sproduc = v_sproduc
               AND cactivi = v_cactivi
               AND cgarant = i.cgarant
               AND cpargar = 'REPARTIR_RESERVA'
               AND cvalpar = 1;

            IF v_si_o_no = 1 THEN
               v_ntraza := 31;

               BEGIN
                  SELECT ireserva, icaprie, ipenali, fresini, fresfin, fultpag,
                         iprerec, ntramit, cmonres, fmovres, ctipgas, ifranq,   --27059:NSS:03/06/2013
                         ndias   --Bug 27487/159742:NSS:26/11/2013
                    INTO v_ireserva, v_icaprie, v_ipenali, v_fresini, v_fresfin, v_fultpag,
                         v_iprerec, v_ntramit, v_cmonres, v_fmovres, v_ctipgas, v_ifranq,   --27059:NSS:03/06/2013
                         v_ndias   --Bug 27487/159742:NSS:26/11/2013
                    FROM sin_tramita_reserva str
                   WHERE str.nsinies = pnsinies
                     AND str.ctipres = 1
                     AND str.cgarant = i.cgarant;
               EXCEPTION
                  WHEN OTHERS THEN
                     v_si_o_no := 0;
               END;

               v_ireserva70 := v_ireserva * 0.7;
               v_ireserva30 := v_ireserva - v_ireserva70;
            END IF;

            IF v_si_o_no = 1 THEN
               v_ntraza := 32;
               /*
               UPDATE sin_tramita_reserva
                  SET ireserva = 0, icaprie = 0,
                       ireserva_moncia = 0, icaprie_moncia = 0
                WHERE nsinies = pnsinies
                  AND ctipres = 1
                  AND cgarant = i.cgarant;
               */

               -- Anulamos la reserva creada automaticamente
               dummy := NULL;
               num_err :=
                  pac_siniestros.f_ins_reserva
                                              (pnsinies, v_ntramit, 1,   --ctipres
                                               i.cgarant, 1,   --ccalres
                                               v_fmovres, v_cmonres, 0,   --ireserva
                                               0,   --ipago
                                               0,   --icaprie
                                               v_ipenali, NULL,   --iingreso
                                               NULL,   --irecobro
                                               v_fresini, v_fresfin, v_fultpag, NULL,   --sidepag
                                               v_iprerec, v_ctipgas, dummy,   --nmovres
                                               20,   -- cmovres --Bug 31294/174788:NSS:22/05/2014
                                               v_ifranq,   --27059:NSS:03/06/2013
                                               v_ndias   --Bug 27487/159742:NSS:26/11/2013
                                                      ,
                                               NULL   -- itotimp
------------------------------------------------------IMPUESTOS
                  );

               IF num_err <> 0 THEN
                  p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_post_siniestro', v_ntraza,
                              'Error no controlado pnsinies:' || pnsinies || ' cgarant:'
                              || i.cgarant,
                              SQLERRM);
                  RETURN num_err;
               END IF;

               dummy := NULL;
               v_ntraza := 33;
               -- Creamos la reserva de repuestos (tipo gasto 31)
               num_err :=
                  pac_siniestros.f_ins_reserva(pnsinies, v_ntramit, 3,   --ctipres
                                               i.cgarant, 1,   --ccalres
                                               v_fmovres, v_cmonres, v_ireserva70, 0,   --ipago
                                               v_ireserva70,   --icaprie
                                               v_ipenali, NULL,   --iingreso
                                               NULL,   --irecobro
                                               v_fresini, v_fresfin, v_fultpag, NULL,   --sidepag
                                               v_iprerec, 31,   --ctipgas
                                               dummy,   --nmovres
                                               1,   -- cmovres --Bug 31294/174788:NSS:22/05/2014
                                               v_ifranq,   --27059:NSS:03/06/2013
                                               v_ndias   --Bug 27487/159742:NSS:26/11/2013
                                                      ,
                                               NULL   -- itotimp
----------------------------------------------- IMPUESTOS
                  );

               IF num_err <> 0 THEN
                  p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_post_siniestro', v_ntraza,
                              'Error no controlado pnsinies:' || pnsinies || ' cgarant:'
                              || i.cgarant,
                              SQLERRM);
                  RETURN num_err;
               END IF;

               dummy := NULL;
               v_ntraza := 34;
               -- Creamos la reserva de mano de obra (tipo gasto 30)
               num_err :=
                  pac_siniestros.f_ins_reserva(pnsinies, v_ntramit, 3,   --ctipres
                                               i.cgarant, 1,   --ccalres
                                               v_fmovres, v_cmonres, v_ireserva30, 0,   --ipago
                                               v_ireserva30,   --icaprie
                                               v_ipenali, NULL,   --iingreso
                                               NULL,   --irecobro
                                               v_fresini, v_fresfin, v_fultpag, NULL,   --sidepag
                                               v_iprerec, 30,   --ctipgas
                                               dummy,   --nmovres
                                               1,   -- cmovres --Bug 31294/174788:NSS:22/05/2014
                                               v_ifranq,   --27059:NSS:03/06/2013
                                               v_ndias   --Bug 27487/159742:NSS:26/11/2013
                                                      ,
                                               NULL   -- itotimp
-------------------------------------------------- IMPUESTOS
                  );

               IF num_err <> 0 THEN
                  p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_post_siniestro', v_ntraza,
                              'Error no controlado pnsinies:' || pnsinies || ' cgarant:'
                              || i.cgarant,
                              SQLERRM);
                  RETURN num_err;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- 26520:ASN:21/03/2013 fin

      -- 22486:ASN:09/07/2012 fin
      IF v_ccausin = NVL(pac_parametros.f_parproducto_n(v_sproduc, 'CCAUSIN_EXONERACION'),
                         2410)
         AND v_cmotsin = NVL(pac_parametros.f_parproducto_n(v_sproduc, 'CMOTSIN_EXONERACION'),
                             1) THEN   -- Exoneracion de primas
         -- Crear reserva
         num_err :=
            pac_siniestros.f_ins_reserva
                        (pnsinies, 0,   --ntramit
                         1,   --ctipres
                         NVL(pac_parametros.f_parproducto_n(v_sproduc, 'CGARANT_EXONERACION'),
                             700),   --cgarant
                         1,   --ccalres
                         TRUNC(f_sysdate),   --fmovres
                         v_cmoneda, 0,   --ireserva
                         NULL,   --ipago
                         NULL,   --icaprie
                         NULL,   --ipenali
                         NULL,   --iingreso
                         NULL,   --irecobro
                         NULL,   --fresini
                         NULL,   --fresfin
                         NULL,   --fultpag
                         NULL,   --sidepag
                         NULL,   --iprerec
                         NULL,   --ctipgas
                         v_nmovres, 21,   --cmovres --Bug 31294/174788:NSS:22/05/2014
                         NULL,   --ifranq --27059:NSS:03/06/2013
                         NULL   --ndias --Bug 27487/159742:NSS:26/11/2013
                             , NULL   --itotimp
------------------------------------------------ IMPUESTOS
            );

         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;

         v_ntraza := 2;

-- 22068:ASN:26/04/2012 ini
         -- Creamos como destinatario a la empresa
/*         BEGIN
            SELECT cbancar, ctipban, e.sperson
              INTO v_cbancar, v_ctipban, v_sperson
              FROM per_ccc c, empresas e
             WHERE c.sperson = e.sperson
               AND c.cpagsin = 1
               AND e.cempres = v_cempres;
         END;*/
         FOR i IN (SELECT   sperson
                       FROM asegurados
                      WHERE sseguro = v_sseguro
                        AND NVL(ffecfin, v_fsinies) >= v_fsinies
                   ORDER BY norden) LOOP
            v_sperson := i.sperson;
         END LOOP;

-- 22068:ASN:26/04/2012 fin
         v_ntraza := 3;
         num_err := pac_siniestros.f_ins_destinatario(pnsinies, 0, v_sperson, v_cbancar,
                                                      v_ctipban, NULL, NULL, 4, 1, NULL);

         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;

         -- 0023036:ASN:25/07/2012 ini
         --num_err := pac_propio.f_exonera_recibos(v_sseguro, NULL, 1);
         IF NVL(pac_parametros.f_parempresa_n(v_cempres, 'GESTIONA_COBPAG'), 0) = 1 THEN
            num_err := pac_propio.f_exonera_recibos(v_sseguro, NULL, 1);
         ELSE
            num_err := pac_propio.f_exonera_recibos(v_sseguro, NULL);
         END IF;

         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;
      -- 0023036:ASN:25/07/2012 fin
      END IF;

-- 22603:ASN:04/07/2012 ini
      v_ntraza := 31;

      BEGIN
         SELECT ntramte
           INTO v_tramite_global
           FROM sin_tramite
          WHERE nsinies = pnsinies
            AND ctramte = 9999;
      EXCEPTION
         WHEN OTHERS THEN
            v_tramite_global := NULL;
      END;

      IF v_tramite_global IS NOT NULL THEN   -- creacion reserva global
         SELECT COUNT(*)
           INTO ya_hay_reserva
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies;

         -- 23615:ASN:25/09/2012 ini
         /*
          IF ya_hay_reserva > 0 THEN
             RETURN 0;
          END IF;
          */
         IF ya_hay_reserva = 0 THEN   -- 23615:ASN:25/09/2012 fin
            v_ntraza := 4;

            BEGIN
               SELECT nvalpar
                 INTO v_res_global_asist
                 FROM parempresas
                WHERE cempres = v_cempres
                  AND cparam = 'RES_GLOBAL_ASIST';
            EXCEPTION
               WHEN OTHERS THEN
                  v_res_global_asist := 0;
            END;

            v_ntraza := 5;

            BEGIN
               SELECT ntramte
                 INTO v_tramte_asist
                 FROM sin_tramite
                WHERE nsinies = pnsinies
                  AND ctramte = 5;
            EXCEPTION
               WHEN OTHERS THEN
                  v_tramte_asist := NULL;
            END;

            IF v_tramte_asist IS NOT NULL
               AND v_res_global_asist = 0 THEN   -- No hay reserva global para Asistencia
               v_ntraza := 6;

               BEGIN
                  SELECT f_parproductos_v(v_sproduc, 'GAR_ASISTENCIA')
                    INTO v_gar_defecto
                    FROM DUAL;
               EXCEPTION
                  WHEN OTHERS THEN
                     v_gar_defecto := NULL;
               END;

               IF v_gar_defecto IS NOT NULL THEN
                  v_ntraza := 7;

                  SELECT ntramit
                    INTO v_tramitacion
                    FROM sin_tramitacion
                   WHERE nsinies = pnsinies
                     AND ntramte = v_tramte_asist;

                  v_ntraza := 8;
                  num_err :=
                     pac_siniestros.f_ins_reserva
                                               (pnsinies, v_tramitacion, 1,   --ctipres
                                                v_gar_defecto, 1,   --ccalres
                                                TRUNC(f_sysdate),   --fmovres
                                                v_cmoneda,   -- v_ivalora, 23615:ASN:25/09/2012
                                                v_iperit,   --ireserva
                                                NULL,   --ipago
                                                NULL,   --icaprie
                                                NULL,   --ipenali
                                                NULL,   --iingreso
                                                NULL,   --irecobro
                                                NULL,   --fresini
                                                NULL,   --fresfin
                                                NULL,   --fultpag
                                                NULL,   --sidepag
                                                NULL,   --iprerec
                                                NULL,   --ctipgas
                                                v_nmovres, -1,   --cmovres --Bug 31294/174788:NSS:22/05/2014
                                                NULL,   --ifranq   --27059:NSS:03/06/2013
                                                NULL   --ndias  --Bug 27487/159742:NSS:26/11/2013
                                                    ,
                                                NULL   --itotimp
--------------------------------------------- IMPUESTOS
                     );

                  IF num_err <> 0 THEN
                     RETURN num_err;
                  END IF;
               END IF;

               v_iperit := 0;
            -- cuando es asistencia, la reserva del tramite 9999 es cero
            END IF;

            v_ntraza := 9;

            IF v_iperit > 0 THEN   -- 23615:ASN:25/09/2012
               -- creamos una reserva en el tramite 9999 por el importe de IPERIT
               SELECT ntramit
                 INTO v_tramitacion
                 FROM sin_tramitacion
                WHERE nsinies = pnsinies
                  AND ntramte = v_tramite_global;

               v_ntraza := 100;
               num_err :=
                  pac_siniestros.f_ins_reserva(pnsinies, v_tramitacion, 1,   --ctipres,
                                               NULL,   --cgarant,
                                               1,   --ccalres
                                               TRUNC(f_sysdate),   --fmovres
                                               v_cmoneda, v_iperit,   --ireserva
                                               NULL,   --ipago
                                               NULL,   --icaprie
                                               NULL,   --ipenali
                                               NULL,   --iingreso
                                               NULL,   --irecobro
                                               NULL,   --fresini
                                               NULL,   --fresfin
                                               NULL,   --fultpag
                                               NULL,   --sidepag
                                               NULL,   --iprerec
                                               NULL,   --ctipgas
                                               v_nmovres,
                                               1   -- cmovres --Bug 31294/174788:NSS:22/05/2014
                                                );

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;
            END IF;
         END IF;   -- 23615:ASN:25/09/2012
      END IF;

-- 22603:ASN:04/07/2012 fin

      -- 22486:ASN:12/06/2012 ini
      IF pac_propio.f_hay_peritaje(pnsinies) = 1 THEN
         v_ntraza := 20;

         SELECT f_parproductos_v(v_sproduc, 'PERITAJE_GESTION')
           INTO v_gestion
           FROM DUAL;

         IF v_gestion IS NULL THEN
            RETURN 103135;   -- faltan parametros
         END IF;

         v_ntraza := 21;

         SELECT f_parproductos_v(v_sproduc, 'PERITAJE_SERVICIO')
           INTO v_servicio
           FROM DUAL;

         IF v_servicio IS NULL THEN
            RETURN 103135;   -- faltan parametros
         END IF;

         v_ntraza := 22;

         SELECT f_parproductos_v(v_sproduc, 'PERITAJE_CTIPPRO')
           INTO v_ctippro
           FROM DUAL;

         IF v_ctippro IS NULL THEN
            RETURN 103135;   -- faltan parametros
         END IF;

         v_ntraza := 23;

         SELECT f_parproductos_v(v_sproduc, 'PERITAJE_CSUBPRO')
           INTO v_csubpro
           FROM DUAL;

         IF v_csubpro IS NULL THEN
            RETURN 103135;   -- faltan parametros
         END IF;

         -- 24491:ASN:31/10/2012 ini
--         v_ntraza := 24;
--         num_err := pac_gestiones.f_crea_gestion(v_sseguro, pnsinies, v_ntramit, v_nlocali,
--                                                     NULL, v_gestion, v_ctippro, v_csubpro,
--                                                     v_servicio, v_dummy);
         num_err := 0;
         v_ntraza := 2401;

         --INI BUG 0030882/0173358:NSS:25/04/2014 POSPG500-Información del asegurado de productos innominados en alta de siniestros
         IF NVL(f_parproductos_v(v_sproduc, 'SIN_VALCAUSAUNICPROD'), -1) = -1 THEN
            IF pac_parametros.f_parempresa_n(v_cempres, 'SIN_VALCAUSAUNICA') = 2 THEN
               num_err := pac_validaciones_sin.f_repetido(v_sseguro, v_fsinies, v_ccausin,
                                                          pnsinies);
            END IF;
         ELSIF f_parproductos_v(v_sproduc, 'SIN_VALCAUSAUNICPROD') = 2 THEN
            num_err := pac_validaciones_sin.f_repetido(v_sseguro, v_fsinies, v_ccausin,
                                                       pnsinies);
         END IF;

         --END BUG 0030882/0173358:NSS:25/04/2014 POSPG500-Información del asegurado de productos innominados en alta de siniestros
         IF num_err = 0 THEN
            v_ntraza := 24;
            num_err := pac_gestiones.f_crea_gestion(v_sseguro, pnsinies, v_ntramit, v_nlocali,
                                                    NULL, v_gestion, v_ctippro, v_csubpro,
                                                    v_servicio, v_dummy);
         END IF;

         -- 24491:ASN:31/10/2012 fin
         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;
      END IF;

      -- 22486:ASN:12/06/2012 fin
      IF v_hay_carpeta = 1 THEN
         v_ntraza := 25;

         SELECT cunitra, ctramitad
           INTO v_cunitra, v_ctramitad
           FROM sin_movsiniestro
          WHERE nsinies = pnsinies;

         v_ntraza := 26;
         num_err := pac_tramitadores.f_mensaje_siniestro(pnsinies, NULL, NULL, v_cunitra,
                                                         v_ctramitad, 1, 9904140, 9904140);

         -- Creacion expediente fisico
         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;
      END IF;

      -- Bug 22256/122456 - 5/10/2012 - AMC
      -- Si el par_producto esta informado se inserta como persona relacionada el asegurado de la p??a
      IF f_parproductos_v(v_sproduc, 'SIN_ASE_PERJU') = 1 THEN
         v_ntraza := 27;

         BEGIN
            SELECT ntramit
              INTO v_ntramit
              FROM sin_tramitacion
             WHERE nsinies = pnsinies
               AND ntramte = v_tramite_global;
         EXCEPTION
            WHEN NO_DATA_FOUND THEN
               SELECT MIN(ntramit)
                 INTO v_ntramit
                 FROM sin_tramitacion
                WHERE nsinies = pnsinies;
         END;

         -- ini Bug 0024690 - 13/11/2012 - JMF: canvis alex
         DECLARE
            CURSOR c1 IS
               SELECT sperson
                 FROM asegurados
                WHERE sseguro = v_sseguro;
         BEGIN
            FOR f1 IN c1 LOOP
               vspersoase := f1.sperson;
               v_ntraza := 28;

               SELECT p.ctipide, p.nnumide, d.tnombre1, d.tapelli1, d.tapelli2, p.sperson,
                      d.tnombre2
                 INTO vctipide, vnnumide, vtnombre1, vtapelli1, vtapelli2, vsperson,
                      vtnombre2
                 FROM per_personas p, per_detper d, seguros s
                WHERE p.sperson = vspersoase
                  AND p.sperson = d.sperson
                  AND s.sseguro = v_sseguro
                  AND d.cagente = ff_agente_cpervisio(s.cagente);

               v_ntraza := 29;
               -- Bug 0024690 - 13/11/2012 - JMF: aÃ¿Â±ado tipo persona relacionada 1-Perjudicado
               num_err := f_ins_personarel(pnsinies, v_ntramit, NULL, vctipide, vnnumide,
                                           vtnombre1, vtapelli1, vtapelli2, NULL, vsperson,
                                           NULL, vtnombre2, NULL, NULL, 1);

               IF num_err <> 0 THEN
                  RETURN num_err;
               END IF;
            END LOOP;
         END;
      -- fin Bug 0024690 - 13/11/2012 - JMF: canvis alex
      END IF;

      --INICIO BUG:26451 - DCT 8-04-2013
      num_err := pac_siniestros.f_ins_documentos(pnsinies, v_sproduc, v_cactivi, v_ccausin,
                                                 v_cmotsin, v_cidioma, 0, v_fnotifi);

      IF num_err <> 0 THEN
         RETURN num_err;
      END IF;

      --FIN BUG:26451 - DCT 8-04-2013

      --INICIO BUG:26962 - NSS 28-05-2013
      IF f_parproductos_v(v_sproduc, 'ACCIONES_CIERRE') = 1 THEN
         num_err := pac_propio.f_acciones_apertura(pnsinies);
      END IF;

      --INICIO BUG:26962 - NSS 28-05-2013
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_post_siniestro', v_ntraza,
                     'Error no controlado pnsinies:' || pnsinies, SQLERRM);
         RETURN 1;
   END f_post_siniestro;

    /************************************************************************
      FUNCTION Esta funcion anula un siniestro dependiendo del movimiento de la poliza.
         param in psseguro  : Número del seguros
         param in pnmovimi  : Número del movimiento
         return             : codigo error
    **************************************************************************/
   -- Bug 19444 - RSC - 15/12/2011 - LCOL_T04: Parametrización Rehabilitación
   FUNCTION f_anu_sini_mov(psseguro IN NUMBER, pnmovimi IN NUMBER)
      RETURN NUMBER IS
      --Esta funcion anula un siniestro dependiendo del movimiento de la poliza.
      --Se recupera el idioma para utilizarlo en la llamada a la anulacion del siniestro.
      --Se realiza la llamada a F_anul_rechazo_sini
      v_nsinies      NUMBER;
      v_cidioma      NUMBER;
      num_err        NUMBER;
      v_causa        NUMBER;
      v_tliteral     NUMBER;
      vagente_poliza seguros.cagente%TYPE;
      vcempres       seguros.cempres%TYPE;
      vscaumot       sin_causa_motivo.scaumot%TYPE;
      vrehabilita    sin_causa_motivo.canureha%TYPE;
   BEGIN
      --Controlamos si la poliza ha generado un siniestro en el movimiento que se pasa por parametro.
      --Se controla que el siniestro no este anulado ni rechazado.
      FOR aux IN (SELECT s.nsinies, s.ccausin, s.cmotsin
                    FROM sin_siniestro s, sin_movsiniestro sm
                   WHERE s.sseguro = psseguro
                     AND s.nmovimi = pnmovimi
                     AND s.nsinies = sm.nsinies
                     AND sm.nmovsin = (SELECT MAX(nmovsin)
                                         FROM sin_movsiniestro sm2
                                        WHERE sm2.nsinies = sm.nsinies)
                     AND sm.cestsin NOT IN(2, 3)) LOOP
         --Inicializamos la causa.
         v_causa := 2303;   -- ANUL.LAT REHABILITACIÃ¿â¿¿

         --Cogemos el mÃ¡ximo ya que no deberÃ¿Â­a ir por garantÃ­a sino sÃ¿Â³lo por causa-motivo
         SELECT NVL(MAX(canureha), 0)
           INTO vrehabilita
           FROM sin_gar_causa_motivo g, sin_causa_motivo cm
          WHERE g.sproduc = (SELECT sproduc
                               FROM seguros s, sin_siniestro si
                              WHERE s.sseguro = si.sseguro
                                AND si.nsinies = aux.nsinies)
            AND g.scaumot IN(SELECT scaumot
                               FROM sin_causa_motivo
                              WHERE ccausin = aux.ccausin
                                AND cmotsin = aux.cmotsin)
            AND cm.scaumot = g.scaumot;

         IF vrehabilita <> 0 THEN
            BEGIN
               --Se recupera el idioma para realizar la llamada a la funcion que anula el siniestro.
               --Conseguimos el vagente_poliza y la empresa de la póliza a partir del psseguro
               SELECT cidioma, cempres, cagente
                 INTO v_cidioma, vcempres, vagente_poliza
                 FROM seguros
                WHERE sseguro = psseguro;

               IF v_cidioma = 0 THEN   --El del tomador
                  --Se recupera el idioma del tomador.
                  SELECT d.cidioma
                    INTO v_cidioma
                    FROM per_personas p, per_detper d
                   WHERE p.sperson = d.sperson
                     AND d.cagente = ff_agente_cpervisio(vagente_poliza, f_sysdate, vcempres)
                     AND p.sperson = (SELECT sperson
                                        FROM tomadores
                                       WHERE sseguro = psseguro
                                         AND nordtom = 1);
               END IF;

               --Se realiza la llamada a la funcion que anula el siniestro.
               v_tliteral := 152150;   --Anul.lacio d'expedient per rehabilitación
               num_err := pac_siniestros.f_finalizar_sini(aux.nsinies, 2, v_causa, f_sysdate,
                                                          v_tliteral, v_cidioma);
            EXCEPTION
               WHEN OTHERS THEN
                  RETURN 152184;
            END;
         END IF;

         IF num_err <> 0 THEN
            RETURN num_err;
         END IF;
      END LOOP;

      --Todo correcto
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_anu_sini_mov', NULL,
                     'Error al anular el movimiento el siniestro', SQLERRM);
         RETURN 152186;
   END f_anu_sini_mov;

   /***********************************************************************************************
       -Funcion que concluye un siniestro: finaliza, anula o rechaza un siniestro.
       -Si tiene pagos pendientes no se pueden realizar las operaciones de anulación y rechazo
       -Genera un apunte en la agenda del siniestro.
       -Realiza la insercion de la provision
       -Comprueva a ver si la poliza esta retenida por haber realizado un siniestro si es asi la deja en estado normal.

       TIPO : nos indica si se trata de un rechado de expediente o es anulacion.
                    1 - Finalización
           2 - Anulación
           3 - Rechazo
   ***********************************************************************************************/
   FUNCTION f_finalizar_sini(
      pnsinies IN NUMBER,
      ptipo IN NUMBER,
      pccauest IN NUMBER,
      pfecha IN DATE,
      pliteral IN NUMBER,
      pcidioma IN NUMBER)
      RETURN NUMBER IS
      v_cont_pagos   NUMBER;
      error          NUMBER;
      v_provision    NUMBER;
      v_creteni      NUMBER;
      v_nmovimi      NUMBER;
      v_ttexto       VARCHAR2(400);
      v_cestsin      NUMBER;
      v_articulo     VARCHAR2(4);
      v_num_literal  NUMBER;
      v_cmotmov      NUMBER;
      max_valor      DATE;
      max_pago       DATE;
      accion         NUMBER;
      v_sproduc      NUMBER;
      v_ccausin      NUMBER;
      vcontapagos    NUMBER;
      v_sseguro      seguros.sseguro%TYPE;
      v_cempres      seguros.cempres%TYPE;
      v_uni          sin_movsiniestro.cunitra%TYPE;
      v_tra          sin_movsiniestro.ctramitad%TYPE;
      vnmovsin       sin_movsiniestro.nmovsin%TYPE;
      vidobs         NUMBER;
      v_cmotsin      sin_siniestro.cmotsin%TYPE;
      vnumerr        NUMBER;
      v_idioma       seguros.cidioma%TYPE;
      vnmovres       sin_tramita_reserva.nmovres%TYPE;   -- Bug 32401 - 22/08/2014 - NSS
      vcmovres       sin_tramita_reserva.cmovres%TYPE;   --Bug 32401 - 22/08/2014 - NSS
      -- INI RLLF 09/12/2015 0038723: Al siniestrar la póliza de Vida individual afectando la cobertura de ITP Finalización del siniestro
      vcont          NUMBER := 1;

      -- FIN RLLF 09/12/2015 0038723: Al siniestrar la póliza de Vida individual afectando la cobertura de ITP Finalización del siniestro

      -- Bug 32401 - 22/08/2014 - NSS
      CURSOR c_res IS
         SELECT nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres, cmonres,
                ireserva, ipago, iingreso, irecobro, icaprie, ipenali, fresini, fresfin,
                fultpag, sidepag, sproces, fcontab, cusualt, falta, cusumod, fmodifi, iprerec,
                ctipgas, ifranq, ndias
           FROM sin_tramita_reserva str
          WHERE nsinies = pnsinies
            AND ntramit = 0
            AND(ctipres, NVL(ctipgas, -1), NVL(cgarant, -1), cmonres, nmovres) IN(
                        SELECT   ctipres, NVL(ctipgas, -1), NVL(cgarant, -1), cmonres,
                                 MAX(nmovres)
                            FROM sin_tramita_reserva
                           WHERE nsinies = str.nsinies
                             AND ntramit = str.ntramit
                        GROUP BY ctipres, ctipgas, cgarant, cmonres);
   BEGIN
      --   Validaciones
      IF ptipo IN(2, 3) THEN   --anulación o rechazo
         --Se controla que no existan pagos pendientes.
         SELECT COUNT(*)
           INTO v_cont_pagos
           FROM sin_tramita_pago pg, sin_tramita_movpago sm
          WHERE sm.cestpag <> 8
            AND sm.nmovpag =
                  (SELECT MAX(nmovpag)   -- Bug 32401 - 22/08/2014 - NSS
                     FROM sin_tramita_movpago sm1   -- Bug 32401 - 22/08/2014 - NSS
                    WHERE sm.sidepag = sm1.sidepag)   -- Bug 32401 - 22/08/2014 - NSS
            AND pg.ctippag = 2
            AND pg.nsinies = pnsinies
            AND pg.sidepag = sm.sidepag;

         IF v_cont_pagos > 0 THEN
            -- Tiene pagos Pendients, Aceptados, Pagados o Remesados
            RETURN 9902906;
         END IF;
      END IF;

      --INI BUG 32401:NSS:22/08/2014
      FOR v_res IN c_res LOOP
         IF NVL(v_res.ireserva, 0) <> 0 THEN
            vnmovres := NULL;

            IF ptipo = 1 THEN   --Terminado
               vcmovres := 6;
            ELSIF ptipo = 2 THEN   --Anulado
               vcmovres := 7;
            ELSE   --Rechazado
               vcmovres := 8;
            END IF;

            vnumerr := pac_siniestros.f_ins_reserva(pnsinies, 0, v_res.ctipres, v_res.cgarant,
                                                    1, f_sysdate, v_res.cmonres, 0,
                                                    v_res.ipago, 0, v_res.ipenali,
                                                    v_res.iingreso, v_res.irecobro,
                                                    v_res.fresini, v_res.fresfin,
                                                    v_res.fultpag, NULL, v_res.iprerec,
                                                    v_res.ctipgas, vnmovres, vcmovres,
                                                    v_res.ifranq, v_res.ndias, NULL);
         END IF;
      END LOOP;

      --FIN BUG 32401:NSS:22/08/2014
      IF ptipo = 1 THEN   -- finalización
         v_cestsin := 1;
         v_articulo := '01- ';
      ELSIF ptipo = 2 THEN
         v_cestsin := 2;   --Anulación
         v_articulo := '02- ';
      ELSE
         v_cestsin := 3;   --Rechazo
         v_articulo := '03- ';
      END IF;

      --Se actualiza el siniestro anulÃ¡ndolo y poniÃ¿Â©ndole la causa de anulación.
      SELECT s.sseguro, ccausin, cmotsin, ss.cempres
        INTO v_sseguro, v_ccausin, v_cmotsin, v_cempres
        FROM sin_siniestro s, seguros ss
       WHERE nsinies = pnsinies
         AND s.sseguro = ss.sseguro;

      -- 23101:ASN:28/08/2012 ini
      /*
      vnumerr := pac_siniestros.f_get_tramitador_defecto(v_cempres, f_user, v_sseguro,
                                                         v_ccausin, v_cmotsin, NULL, NULL,   -- 22108:ASN:04/06/2012
                                                         NULL, v_uni, v_tra);

      IF NVL(vnumerr, 99999) > 1 THEN
         RETURN vnumerr;
      END IF;
      */
      vnumerr := pac_siniestros.f_get_tramitador(pnsinies, NULL, NULL, v_uni, v_tra);

      IF vnumerr <> 0 THEN
         RETURN vnumerr;
      END IF;

      -- 23101:ASN:28/08/2012 fin
      vnumerr := pac_siniestros.f_ins_movsiniestro(pnsinies, v_cestsin, pfecha, pccauest,
                                                   v_uni, v_tra, vnmovsin);

      IF NVL(vnumerr, 99999) > 1 THEN
         RETURN vnumerr;
      END IF;

      v_idioma := pac_parametros.f_parempresa_n(v_cempres, 'IDIOMA_DEF');
      v_ttexto := f_axis_literales(100675, v_idioma);

      BEGIN
         SELECT NVL(MAX(idobs), 0) + 1
           INTO vidobs
           FROM agd_observaciones
          WHERE cempres = v_cempres;
      EXCEPTION
         WHEN OTHERS THEN
            vidobs := 1;
      END;

      vnumerr := pac_agenda.f_set_obs(v_cempres, vidobs, 5, 1, '04-' || v_ttexto,
                                      '04-' || v_ttexto, f_sysdate, NULL, 4, NULL, NULL, NULL,
                                      1, 1, f_sysdate, vidobs);

      IF vnumerr <> 0 THEN
         RETURN vnumerr;
      END IF;

      UPDATE agd_observaciones
         SET nsinies = pnsinies
       WHERE cempres = v_cempres
         AND idobs = vidobs;

      IF ptipo = 1 THEN
         accion := 2;   --finalizar
      ELSIF ptipo IN(2, 3) THEN   -- anular o rechazar
         accion := 3;
      END IF;

      IF accion = 3 THEN
         -- si se rechaza o anula se deben borrar las primas consumidas de ese rescate
         DELETE FROM primas_consumidas
               WHERE nsinies = pnsinies;
      END IF;

      -- Accion al aperturar siniestro
      vnumerr := pac_siniestros.f_accion_siniestro(pnsinies, accion);

      -- Accion al aperturar siniestro
      IF vnumerr <> 0 THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vcont,
                     'F_estado_siniestro nsinies=' || pnsinies, 'error=' || vnumerr);
         RETURN vnumerr;
      END IF;

      --Todo correcto
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_sin.f_finalizar_sini', NULL,
                     'Error al finalizar el siniestro', SQLERRM);

         IF ptipo = 1 THEN
            RETURN 152186;   --Anulacio
         ELSE
            RETURN 152187;   --Rechazo
         END IF;
   END f_finalizar_sini;

-- Fin Bug 19444

   /*************************************************************************
      FUNCTION f_actualiza_pago
         Actualiza campos del pago
         param in psidepag       : identificador del pago
         param in pmediopago     : medio de pago
         param in preferencia    : Número Factura/Referencia
         pimp in impuestos_recibidos : impuestos
         param out mensajes   : mensajes de error
         return               : 0 -> Todo correcto
                                1 -> Se ha producido un error
   *************************************************************************/
   FUNCTION f_actualiza_pago(
      psidepag IN NUMBER,
      pmediopago IN NUMBER,
      preferencia IN VARCHAR2,
      pfcambio IN DATE,
      ptotal IN NUMBER,
      piica IN NUMBER,
      piiva IN NUMBER,
      pireteica IN NUMBER,
      pireteiva IN NUMBER,
      piretenc IN NUMBER,
      pmoneda IN VARCHAR2 DEFAULT 'COP',
    piotrosgas IN NUMBER DEFAULT NULL,
    pibaseipoc IN NUMBER DEFAULT NULL,
    piipoconsumo IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_actualiza_pago';
      vparam         VARCHAR2(500)
         := 'parámetros - psidepag: ' || psidepag || ' pmediopago : ' || pmediopago
            || ' preferencia : ' || preferencia;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      viica          NUMBER := NVL(piica, 0);
      viiva          NUMBER := NVL(piiva, 0);
      vireteiva      NUMBER := NVL(pireteiva, 0);
      vireteica      NUMBER := NVL(pireteica, 0);
      viretenc       NUMBER := NVL(piretenc, 0);
    viotrosgas      NUMBER := NVL(piotrosgas, 0);
    vibaseipoc      NUMBER := NVL(pibaseipoc, 0);
      viipoconsumo    NUMBER := NVL(piipoconsumo, 0);
      viipoconsumopag NUMBER := 0;
      vibaseipocpag   NUMBER := 0;
      viotrosgaspag   NUMBER := 0;
      viicapag       NUMBER := 0;
      viivapag       NUMBER := 0;
      vireteivapag   NUMBER := 0;
      vireteicapag   NUMBER := 0;
      viretencpag    NUMBER := 0;
      vpica          NUMBER;
      vpiva          NUMBER;
      vpreteiva      NUMBER;
      vpreteica      NUMBER;
      vpretenc       NUMBER;
      vnorden        NUMBER;
      vctipres       NUMBER;
      vnmovres       NUMBER;
      -- jlb - I - 18423#c105059
      vnsinies       sin_tramita_pago.nsinies%TYPE;
      vntramit       sin_tramita_pago.ntramit%TYPE;
      vregreserva    sin_tramita_reserva%ROWTYPE;
      vicambio       NUMBER;
      -- jlb - F - 18423#c105059
      vcont          NUMBER;
      vcmonpag       VARCHAR2(3);
      vcmonres       VARCHAR2(3);
      vcmoncia       VARCHAR2(3);
      vitotimp       NUMBER;
      vitotret       NUMBER;   -- 0024637/0147756:NSS:21/03/2014
      vmax_nmovres   NUMBER;
      vmax_nmovres_gar NUMBER;
      verror         NUMBER;
      vireserva      sin_tramita_reserva.ireserva%TYPE;   --0027487/172241: NSS: 17/04/2014 POSS522 (POSSF200)- Resolucion de Incidencias FASE 1-2: Siniestros
      vcestpag       sin_tramita_movpago.cestpag%TYPE;   --0027487/0181184: JAMF  01/08/2014  Anulación de pago por interfaz
      vsysdate       DATE := TO_DATE('01/01/1900', 'dd/mm/yyyy');   --0027487/0181184: JAMF  01/08/2014  Anulación de pago por interfaz
   BEGIN
      IF psidepag IS NULL THEN
         RAISE e_param_error;
      END IF;

      SELECT COUNT(1)
        INTO vcont
        FROM sin_tramita_pago_gar
       WHERE sidepag = psidepag;

      vpasexec := 10;

      IF vcont > 1 THEN   --hay mas de un registro per_ccc
         SELECT COUNT(1)
           INTO vcont
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag
            AND cgarant IS NOT NULL;

         IF vcont > 1 THEN   --hay mÃ¡s de un registro per_ccc y garantia
            --coger registro garantia de garanpro
            SELECT   stpg.norden, stpg.ctipres, stpg.nmovres, stpg.cmonpag, stpg.cmonres
                INTO vnorden, vctipres, vnmovres, vcmonpag, vcmonres
                FROM sin_tramita_pago_gar stpg, garanpro g, seguros s, sin_tramita_pago stp,
                     sin_siniestro ss
               WHERE s.cramo = g.cramo
                 AND s.cmodali = g.cmodali
                 AND s.ctipseg = g.ctipseg
                 AND s.ccolect = g.ccolect
                 AND s.cactivi = g.cactivi
                 AND stpg.cgarant = g.cgarant
                 AND stp.sidepag = stpg.sidepag
                 AND stpg.sidepag = psidepag
                 AND stp.nsinies = ss.nsinies
                 AND ss.sseguro = s.sseguro
                 AND ROWNUM = 1
            ORDER BY g.norden;
         ELSIF vcont = 1 THEN
            SELECT stpg.norden, stpg.ctipres, stpg.nmovres, stpg.cmonpag, stpg.cmonres
              INTO vnorden, vctipres, vnmovres, vcmonpag, vcmonres
              FROM sin_tramita_pago_gar stpg
             WHERE sidepag = psidepag
               AND cgarant IS NOT NULL;
         ELSE
            SELECT stpg.norden, stpg.ctipres, stpg.nmovres, stpg.cmonpag, stpg.cmonres
              INTO vnorden, vctipres, vnmovres, vcmonpag, vcmonres
              FROM sin_tramita_pago_gar stpg
             WHERE sidepag = psidepag
               AND ROWNUM = 1;
         END IF;
      ELSIF vcont = 1 THEN
         SELECT stpg.norden, stpg.ctipres, stpg.nmovres, stpg.cmonpag, stpg.cmonres
           INTO vnorden, vctipres, vnmovres, vcmonpag, vcmonres
           FROM sin_tramita_pago_gar stpg
          WHERE sidepag = psidepag;
      ELSE
         p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS.f_actualiza_pago', 1,
                     'Error al LEER datos de SIN_TRAMITA_PAGO_GAR', SQLERRM);
         RETURN 9000954;
      END IF;

      vpasexec := 20;

      IF viiva <> 0 THEN
         vpiva := (viiva * 100) / ptotal;
      END IF;

      IF viica <> 0 THEN
         vpica := (viica * 100) / ptotal;
      END IF;

      IF vireteiva <> 0 THEN
         vpreteiva := (vireteiva * 100) / ptotal;
      END IF;

      IF vireteica <> 0 THEN
         vpreteica := (vireteica * 100) / ptotal;
      END IF;

      IF viretenc <> 0 THEN
         vpretenc := (viretenc * 100) / ptotal;
      END IF;

    IF viipoconsumo <> 0
    THEN
    viipoconsumo := (viipoconsumo * 100) / vibaseipoc;
    END IF;
      vpasexec := 30;

      IF pmoneda = vcmonpag
         AND pmoneda = vcmonres THEN
         viicapag := viica;
         viivapag := viiva;
         vireteivapag := vireteiva;
         vireteicapag := vireteica;
         viretencpag := viretenc;
      ELSIF pmoneda = vcmonpag THEN
         viicapag := viica;
         viica := viica * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
         viivapag := viiva;
         viiva := viiva * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
         vireteivapag := vireteiva;
         vireteiva := vireteiva * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
         vireteicapag := vireteica;
         vireteica := vireteica * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
         viretencpag := viretenc;
         viretenc := viretenc * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
     viotrosgaspag := viotrosgas;
     viotrosgas := viotrosgas * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
     vibaseipocpag := vibaseipoc;
     vibaseipoc := vibaseipoc * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
     viipoconsumopag := viipoconsumo;
     viipoconsumo := viipoconsumo * pac_eco_tipocambio.f_cambio(pmoneda, vcmonres, pfcambio);
      END IF;

      vpasexec := 40;

      UPDATE sin_tramita_pago_gar
         SET iica = viica,
             iicapag = viicapag,
             iiva = viiva,
             iivapag = viivapag,
             ireteiva = vireteiva,
             ireteica = vireteica,
             iretenc = viretenc,
             iretencpag = viretencpag,
             ireteivapag = vireteivapag,
             ireteicapag = vireteicapag,
             preteica = vpreteica,
             preteiva = vpreteiva,
             pretenc = vpretenc,
             piva = vpiva,
             pica = vpica
       ,iotrosgas      = viotrosgas
       ,iotrosgaspag   = viotrosgaspag
       ,ibaseipoc      = vibaseipoc
       ,ibaseipocpag   = vibaseipocpag
       ,pipoconsumo    = viipoconsumo
       ,iipoconsumo    = piipoconsumo
       ,iipoconsumopag = viipoconsumopag
       WHERE sidepag = psidepag
         AND norden = vnorden
         AND ctipres = vctipres
         AND nmovres = vnmovres;

      vpasexec := 50;

      UPDATE sin_tramita_pago
         SET cforpag = DECODE(pmediopago,
                              1, 6,
                              9, 1,
                              85, 1,
                              90, 6,
                              91, 6,
                              92, 6,
                              93, 6,
                              cforpag),
             csubestado = DECODE(pmediopago, 90, 3, 91, 3, 92, 3, 93, 3, csubestado),
             nfacref = preferencia,
             iica = viica,
             iicapag = viicapag,
             iiva = viiva,
             iivapag = viivapag,
             ireteiva = vireteiva,
             ireteica = vireteica,
             iretenc = viretenc,
             ireteivapag = vireteivapag,
             ireteicapag = vireteicapag,
             iretencpag = viretencpag
       ,iotrosgas      = viotrosgas
       ,iotrosgaspag   = viotrosgaspag
       ,ibaseipoc      = vibaseipoc
       ,ibaseipocpag   = vibaseipocpag
       ,iipoconsumo    = viipoconsumo
       ,iipoconsumopag = viipoconsumopag
       WHERE sidepag = psidepag;

      vitotimp := viiva + viica + viotrosgas + vibaseipoc + viipoconsumo;
      vitotret := vireteiva + vireteica + viretenc;   -- 0024637/0147756:NSS:21/03/2014
      vpasexec := 60;

      -- Bug 31939 - 26/06/2014 - JTT: Modificamos la SELECT recuperando el MAX(nmovres) para evitar
      -- que cuando un pago tiene diversas modificaciones generar un movimiento de contravalor para cada
      -- uno de los movimientos/modificaciones del pago.
      FOR i IN (SELECT *
                  FROM sin_tramita_reserva
                 WHERE (nsinies, ntramit, sidepag, nmovres) IN(
                          SELECT   nsinies, ntramit, sidepag, MAX(nmovres)
                              FROM sin_tramita_reserva
                             WHERE (nsinies, ntramit, sidepag) IN(
                                          SELECT nsinies, ntramit, psidepag
                                            FROM sin_tramita_pago p, sin_tramita_pago_gar pg
                                           WHERE pg.sidepag = p.sidepag
                                             AND p.sidepag = psidepag)
                          GROUP BY nsinies, ntramit, sidepag)) LOOP
         vpasexec := 100;

         SELECT MAX(nmovres)
           INTO vmax_nmovres
           FROM sin_tramita_reserva
          WHERE nsinies = i.nsinies
            AND ntramit = i.ntramit
            AND ctipres = i.ctipres;

--            AND NVL(ctipgas, -1) = NVL(i.ctipgas, -1)
--            AND NVL(cgarant, -1) = NVL(i.cgarant, -1)
--            AND NVL(fresini, f_sysdate) = NVL(i.fresini, f_sysdate)
--            AND NVL(fresfin, f_sysdate) = NVL(i.fresfin, f_sysdate);  -- 28/02/2014
         SELECT MAX(nmovres)
           INTO vmax_nmovres_gar
           FROM sin_tramita_reserva str
          WHERE nsinies = i.nsinies
            AND ntramit = i.ntramit
            AND ctipres = i.ctipres
            AND NVL(ctipgas, -1) = NVL(i.ctipgas, -1)
            AND NVL(cgarant, -1) = NVL(i.cgarant, -1)
            AND NVL(fresini, vsysdate) = NVL(i.fresini, vsysdate)
            AND NVL(fresfin, vsysdate) = NVL(i.fresfin, vsysdate);

         vpasexec := 110;

         --Ini 0027487/172241: NSS: 17/04/2014 POSS522 (POSSF200)- Resolucion de Incidencias FASE 1-2: Siniestros
         SELECT ireserva, cmonres
           INTO vireserva, vcmonres
           FROM sin_tramita_reserva str
          WHERE nsinies = i.nsinies
            AND ntramit = i.ntramit
            AND ctipres = i.ctipres
            AND NVL(ctipgas, -1) = NVL(i.ctipgas, -1)
            AND NVL(cgarant, -1) = NVL(i.cgarant, -1)
            AND NVL(fresini, vsysdate) = NVL(i.fresini, vsysdate)
            AND NVL(fresfin, vsysdate) = NVL(i.fresfin, vsysdate)
            AND str.nmovres = vmax_nmovres_gar;

         vpasexec := 120;

         --0027487/0181184: JAMF  01/08/2014  Anulación de pago por interfaz
         SELECT cestpag
           INTO vcestpag
           FROM sin_tramita_movpago m
          WHERE sidepag = psidepag
            AND nmovpag IN(SELECT MAX(m2.nmovpag)
                             FROM sin_tramita_movpago m2
                            WHERE m2.sidepag = psidepag);

         vpasexec := 130;
         vcmoncia :=
            pac_monedas.f_cmoneda_t
               (pac_parametros.f_parempresa_n(pac_parametros.f_parinstalacion_n('EMPRESADEF'),
                                              'MONEDAEMP'));

         --0027487/0181184: JAMF  01/08/2014  Anulación de pago por interfaz
         IF vcestpag = 2 THEN   --Si se estÃ¡ pagando el pago
            --  Bug 32935 -  29/09/2014 - JTT: Unicamente generamos el movimiento de reserva si hay reserva pendiente
            --  y la moneda de la reserva es diferente a la moneda de la compaÃ¿Â±ia.
            IF vireserva > 0
               AND vcmonres <> vcmoncia THEN
               vpasexec := 140;

               INSERT INTO sin_tramita_reserva
                           (nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres,
                            cmonres, ireserva, ipago, iingreso, irecobro, icaprie, ipenali,
                            fresini, fresfin, fultpag, sidepag, sproces, fcontab, cusualt,
                            falta, cusumod, fmodifi, iprerec, ctipgas, ireserva_moncia,
                            ipago_moncia, irecobro_moncia, icaprie_moncia, ipenali_moncia,
                            iprerec_moncia, fcambio, ifranq, ifranq_moncia, itotimp,
                            itotimp_moncia, ndias, itotret, itotret_moncia,   -- 0024637/0147756:NSS:21/03/2014
                                                                           idres,   --31294/174629:NSS:13/05/2014
                                                                                 cmovres)   --bug 31294/174788:NSS:22/05/2014
                  SELECT nsinies, ntramit, ctipres, vmax_nmovres + 1, cgarant, ccalres,
                         f_sysdate, cmonres, ireserva, ipago, iingreso, irecobro, icaprie,
                         ipenali, fresini, fresfin, fultpag, NULL, sproces, fcontab, cusualt,
                         f_sysdate, NULL, NULL,   -- 30920 - 15/04/2014 - JTT: sidepag = NULL
                                               iprerec, ctipgas, NULL, NULL, NULL, NULL, NULL,
                         NULL, pfcambio, ifranq, NULL, NVL(itotimp, vitotimp), NULL, ndias,
                         NVL(itotret, vitotret), NULL,   -- 0024637/0147756:NSS:21/03/2014
                                                      idres,   --31294/174629:NSS:13/05/2014
                         9   --bug 31294/174788:NSS:22/05/2014
                    FROM sin_tramita_reserva str
                   WHERE nsinies = i.nsinies
                     AND ntramit = i.ntramit
                     AND ctipres = i.ctipres
                     AND NVL(ctipgas, -1) = NVL(i.ctipgas, -1)
                     AND NVL(cgarant, -1) = NVL(i.cgarant, -1)
                     AND NVL(fresini, vsysdate) = NVL(i.fresini, vsysdate)
                     AND NVL(fresfin, vsysdate) = NVL(i.fresfin, vsysdate)
                     AND str.nmovres = vmax_nmovres_gar;

               verror := pac_oper_monedas.f_contravalores_reserva(i.nsinies, i.ntramit,
                                                                  i.ctipres, vmax_nmovres + 1,
                                                                  i.cgarant);

               IF verror <> 0 THEN
                  RETURN verror;
               END IF;
            END IF;
         --Fi 0027487/172241: NSS: 17/04/2014 POSS522 (POSSF200)- Resolucion de Incidencias FASE 1-2: Siniestros
         ELSIF vcestpag = 8 THEN   --Si se estÃ¡ anulando el pago
            vpasexec := 150;

            INSERT INTO sin_tramita_reserva
                        (nsinies, ntramit, ctipres, nmovres, cgarant, ccalres, fmovres,
                         cmonres, ireserva, ipago, iingreso, irecobro, icaprie, ipenali,
                         fresini, fresfin, fultpag, sidepag, sproces, fcontab, cusualt, falta,
                         cusumod, fmodifi, iprerec, ctipgas, ireserva_moncia, ipago_moncia,
                         irecobro_moncia, icaprie_moncia, ipenali_moncia, iprerec_moncia,
                         fcambio, ifranq, ifranq_moncia, itotimp, itotimp_moncia, ndias,
                         itotret, itotret_moncia, idres, cmovres)
               SELECT nsinies, ntramit, ctipres, vmax_nmovres + 1, cgarant, ccalres,
                      f_sysdate, cmonres, NVL(ireserva, 0) + NVL(ptotal, 0),
                      NVL(ipago, 0) - NVL(ptotal, 0), iingreso, irecobro, icaprie, ipenali,
                      fresini, fresfin, fultpag, psidepag, sproces, fcontab, cusualt,
                      f_sysdate, NULL, NULL, iprerec, ctipgas, NULL, NULL, NULL, NULL, NULL,
                      NULL, pfcambio, ifranq, NULL, NVL(itotimp, vitotimp), NULL, ndias,
                      NVL(itotret, vitotret), NULL, idres, 5   --Anulación de pago
                 FROM sin_tramita_reserva str
                WHERE nsinies = i.nsinies
                  AND ntramit = i.ntramit
                  AND ctipres = i.ctipres
                  AND NVL(ctipgas, -1) = NVL(i.ctipgas, -1)
                  AND NVL(cgarant, -1) = NVL(i.cgarant, -1)
                  AND NVL(fresini, vsysdate) = NVL(i.fresini, vsysdate)
                  AND NVL(fresfin, vsysdate) = NVL(i.fresfin, vsysdate)
                  AND str.nmovres = vmax_nmovres_gar;

            verror := pac_oper_monedas.f_contravalores_reserva(i.nsinies, i.ntramit, i.ctipres,
                                                               vmax_nmovres + 1, i.cgarant);

            IF verror <> 0 THEN
               RETURN verror;
            END IF;
         END IF;
      END LOOP;

-- 27487:ASN:18/2/2014 fin
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS.f_actualiza_pago', vpasexec,
                     'Error al actualizar datos de SIN_TRAMITA_PAGO_GAR', SQLERRM);
         RETURN 9000954;
   END f_actualiza_pago;

       /*************************************************************************
      FUNCTION f_gestiona_cobpag
         Llama a la interfaz de siniestros para insertar el pago de un siniestro en el host
         param in psidepag : seqÃ¿Â¼Ã¿Â©ncia identificador pagament
         param in pnmovpag : Número moviment pagament
         param in pcestpag : estat pagament
         param in pfefepag : data efecte pagament
         param in pfcontab : data contabilitat
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
   *************************************************************************/
  FUNCTION f_gestiona_cobpag(
      psidepag IN NUMBER,
      pnmovpag IN NUMBER,
      pcestpag IN sin_tramita_movpago.cestpag%TYPE,
      pfefepag IN DATE,
      pfcontab IN DATE,
      psinterf OUT NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_gestiona_cobpag';
      vparam         VARCHAR2(500)
         := 'parámetros - psidepag: ' || psidepag || ' pnmovpag:' || pnmovpag || ' pcestpag:'
            || pcestpag || ' pfefepag:' || pfefepag || ' pfcontab:' || pfcontab;
      vpasexec       NUMBER(5) := 1;
      vcforpag       NUMBER(8);
      vempresa       seguros.cempres%TYPE;
     verror         NUMBER :=0;
      vterminal      VARCHAR2(200);
      perror         VARCHAR2(2000);
      v_gestiona_cobpag NUMBER;
      v_rendim       NUMBER;
      verror2        NUMBER;
      vctipdes       NUMBER;
      vnsinies       sin_siniestro.nsinies%TYPE;
      -- Bug 0023187 - 22/08/2012 - JMF
      visinret       sin_tramita_pago.isinret%TYPE;
      -- Bug 0023187 - 22/08/2012 - JMF
      vctipcoa       seguros.ctipcoa%TYPE;
      -- Bug 0023187 - 22/08/2012 - JMF
      vctippag       sin_tramita_pago.ctippag%TYPE;
      -- Bug 0023187 - 22/08/2012 - JMF
      vcmonpag       sin_tramita_pago.cmonpag%TYPE;
      -- Bug 0023187 - 22/08/2012 - JMF
      vnmoneda       monedas.cmoneda%TYPE;
      -- Bug 0023187 - 22/08/2012 - JMF
      v_pagos_coa_pen parempresas.nvalpar%TYPE;   -- 20/06/2014 EDA Bug 24462/176931
      v_pago_remesado NUMBER := 0;
      vsolidaridad number; --CONF-249
      -- Inicio IAxis 4727 AABC 05/07/2019 Pagos de siniestros solidaridad  
      vsseguro  NUMBER;
      vmensaje  VARCHAR2(1000);
      -- FIN IAxis 4727 AABC 05/07/2019 Pagos de siniestros solidaridad
      V_ANULADOS NUMBER := 0;
   BEGIN

      vpasexec := 100;
      -- Inicio IAxis 4727 AABC 05/07/2019 Pagos de siniestros solidaridad

      SELECT s.cempres, x.nsinies, p.isinret, s.ctipcoa, p.ctippag, p.cmonpag, p.ctipdes,x.solidaridad, s.sseguro
        INTO vempresa, vnsinies, visinret, vctipcoa, vctippag, vcmonpag, vctipdes, vsolidaridad , vsseguro --CONF-249
        FROM seguros s, sin_siniestro x, sin_tramita_pago p
       WHERE p.sidepag = psidepag
         AND x.nsinies = p.nsinies
         AND s.sseguro = x.sseguro;
      -- Fin IAxis 4727 AABC 05/07/2019 Pagos de siniestros solidaridad 

      vpasexec := 110;
      -- Bug 0041643 - 31/05/2016 - JTT: Verificamos si el pago ha sido remesado

      SELECT COUNT(1)
        INTO v_pago_remesado
        FROM sin_tramita_movpago
       WHERE sidepag = psidepag
         AND cestpag  = 9;  -- Remesado


      vpasexec := 110;

      v_gestiona_cobpag := NVL(pac_parametros.f_parempresa_n(vempresa, 'GESTIONA_COBPAG'), 0);

     v_pagos_coa_pen := NVL(pac_parametros.f_parempresa_n(vempresa, 'PAGOS_COA_PEN'), 0);   -- 20/06/2014 EDA Bug 24462/176931

-- ini Bug 0023187 - 22/08/2012 - JMF
      IF vctipcoa != 0
         AND(pcestpag = 1
             AND v_pagos_coa_pen = 0)
         OR pcestpag = 8 THEN   -- 20/06/2014 EDA Bug 24462/176931

         IF(vsolidaridad <> 1) THEN --CONF-249
       vpasexec := 900;

       vnmoneda := pac_monedas.f_cmoneda_n(vcmonpag);
       vpasexec := 910;

       verror :=
        f_pagocoa
           (vempresa, vnsinies, psidepag, visinret, vctipcoa, vctippag, vnmoneda,
          pcestpag   -- 67.0 MMM - 0025872: LCOL_F002-Revision Qtrackers contabilidad F2 - Nota 0148800
              );

         IF verror <> 0 THEN
          RETURN verror;
         END IF;
         END IF;
      END IF;

      -- fin Bug 0023187 - 22/08/2012 - JMF
      IF NVL(vctipcoa, 0) = 8
         AND vctipdes = 4 THEN 
         INSERT INTO sin_tramita_movpago
                     (sidepag, nmovpag, cestpag, fefepag, cestval,
                      fcontab, sproces, cestpagant)
              VALUES (psidepag, pnmovpag + 1, 2, NVL(pfefepag, TRUNC(f_sysdate)), 1,
                      pfcontab, NULL, pcestpag);

      ELSE
         IF v_gestiona_cobpag = 1
            AND pcestpag = 1 THEN
            DECLARE
               vtipopago      NUMBER;
               vemitido       NUMBER;
            --vsinterf       NUMBER;
            BEGIN
               vtipopago := 1;   --Pago
         -- Fin IAxis 4727 AABC 05/07/2019 Pagos de siniestros solidaridad  
               /*verror := pac_user.f_get_terminal(pac_md_common.f_get_cxtusuario, vterminal);
               verror := pac_con.f_emision_pagorec(vempresa, 1, vtipopago, psidepag, pnmovpag,
                                                   vterminal, vemitido, psinterf, perror,
                                                   f_user, NULL, NULL, NULL, 1);*/

               IF verror <> 0
                  OR TRIM(perror) IS NOT NULL THEN
                  IF verror = 0 THEN
                     verror := 9903116;   --151323;
                  END IF;


                --Mira si borraar sin_tramita_movpago porque se tiene que hacer un commit para que lo vea el sap
               -- RETURN verror;--ETM
               END IF;

               SELECT COUNT(1)
                 INTO v_rendim
                 FROM vista_interf_cuentas
                WHERE sidepag = psidepag
                  AND rendim = 2;

               --BUG 20211 - 31/01/2012. Se llama por segunda vez para generar Rendimientos de cesiÃ³n   PAREMPRESAS
               /*IF NVL(pac_parametros.f_parempresa_n(vempresa, 'GESTIONA_RENDIM_C'), 0) = 1
                  AND v_rendim > 0 THEN
                  --vsinterf := NULL;
                  verror2 := pac_con.f_emision_pagorec(vempresa, 1, vtipopago, psidepag,
                                                       pnmovpag, vterminal, vemitido,
                                                       psinterf, perror, f_user, NULL, NULL,
                                                       NULL, 2);
               END IF;*/

               IF verror = 0 THEN   --bug 21430 - 21/02/2012 -- ETM
                  -- poner aquÃ¿Â­ el cambio de estado
                  INSERT INTO sin_tramita_movpago
                              (sidepag, nmovpag, cestpag, fefepag, cestval,
                               fcontab, sproces, cestpagant)
                       VALUES (psidepag, pnmovpag + 1, 9, NVL(pfefepag, TRUNC(f_sysdate)), 1,
                               pfcontab, NULL, pcestpag);   --9 es nuevo estado de pago "Remesado"
--
               END IF;

            END;
         ELSIF v_gestiona_cobpag = 1
               AND pcestpag = 8
               AND v_pago_remesado = 1 THEN
            DECLARE
               vtipopago      NUMBER;
               vemitido       NUMBER;
            --vsinterf       NUMBER;
            BEGIN
               -- Bug 0041643 - 31/05/2016 - JTT: Cambiamos el vtipopago de 1 (pagos) a 23 para las operaciones de anulación
               vtipopago := 23;   --Anulación del pago
               /*verror := pac_user.f_get_terminal(pac_md_common.f_get_cxtusuario, vterminal);
               verror := pac_con.f_emision_pagorec(vempresa, 1, vtipopago, psidepag, pnmovpag,
                                                   vterminal, vemitido, psinterf, perror,
                                                   f_user, NULL, NULL, NULL, 1);*/

               IF verror <> 0
                  OR TRIM(perror) IS NOT NULL THEN
                  --Mira si borraar sin_tramita_movpago porque se tiene que hacer un commit para que loo vea el sap
                  IF verror = 0 THEN
                     verror := 9903116;   -- 151323;
                  END IF;

                  p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_gestiona_cobpag', 1,
                              'error no controlado', perror || ' ' || verror);
               -- RETURN verror;
               END IF;

               SELECT COUNT(1)
                 INTO v_rendim
                 FROM vista_interf_cuentas
                WHERE sidepag = psidepag
                  AND rendim = 2;

               --BUG 20211 - 31/01/2012. Se llama por segunda vez para generar Rendimientos de cesiÃ³n   PAREMPRESAS
               /*IF NVL(pac_parametros.f_parempresa_n(vempresa, 'GESTIONA_RENDIM_C'), 0) = 1
                  AND v_rendim > 0 THEN
                  verror2 := pac_con.f_emision_pagorec(vempresa, 1, vtipopago, psidepag,
                                                       pnmovpag, vterminal, vemitido,
                                                       psinterf, perror, f_user, NULL, NULL,
                                                       NULL, 2);
               END IF;*/
            --END IF;

            -- 27087:ASN:12/03/2013 ini
              -- bug 21582:ASN:13/03/2012 ini
             IF verror = 0 THEN 
                -- INI BUG 6208 02-10-2020 AABG:Validacion para insertar 1 vez el estado 8 (anulado)
                IF pcestpag = 8 THEN
                    SELECT COUNT(1) INTO V_ANULADOS FROM SIN_TRAMITA_MOVPAGO WHERE SIDEPAG = psidepag AND CESTPAG = pcestpag;
                    IF V_ANULADOS <= 0 THEN
                        INSERT INTO sin_tramita_movpago
                            (sidepag, nmovpag, cestpag, fefepag, cestval,
                             fcontab, sproces, cestpagant)
                        VALUES (psidepag, pnmovpag + 1, 8, NVL(pfefepag, TRUNC(f_sysdate)), 1,
                             pfcontab, NULL, pcestpag);
                    END IF;
                ELSE
                     INSERT INTO sin_tramita_movpago
                            (sidepag, nmovpag, cestpag, fefepag, cestval,
                             fcontab, sproces, cestpagant)
                     VALUES (psidepag, pnmovpag + 1, 8, NVL(pfefepag, TRUNC(f_sysdate)), 1,
                             pfcontab, NULL, pcestpag);
                END IF;
                -- FIN BUG 6208 02-10-2020 AABG:Validacion para insertar 1 vez el estado 8 (anulado)

             END IF;
              -- bug 21582:ASN:13/03/2012 fin
            -- 27087:ASN:12/06/2013 fin
            END;
         END IF;
      END IF;

      --bug 21430 - 21/02/2012 -- ETM --INI
      IF verror <> 0 THEN
         RETURN verror;
      END IF;

      --FIN-- bug 21430 - 21/02/2012 -- ETM
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam, 9000505);
         RETURN 9000505;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9000867;   --Error al llegir de la taula SIN_TRAMITA_MOVPAGO
   END f_gestiona_cobpag;

   -- Ini Bug 21172 - MDS - 02/03/2012
   /*************************************************************************
       FUNCTION f_get_reserva_multiple
          Devuelve una query con las reservas efectuadas para un siniestro/trÃ¡mite/tipo reserva

          param in ptipoquery : Tipo query a realizar
          param in pnsinies   : Número de siniestro
          param in pntramit   : Número de trÃ¡mite
          param in pctipres   : Código tipo de reserva
          param in pcidioma   : idioma
          param out vsquery
          return            : 0 -> Todo correcto
                              1 -> Se ha producido un error
    *************************************************************************/
   FUNCTION f_get_reserva_multiple(
      ptipoquery IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN sin_tramita_reserva.ntramit%TYPE,
      pctramit IN NUMBER,   --25812:ASN:24/01/2013
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pcidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      -- 25812:ASN:24/01/2013 ini
      vsproduc       NUMBER;
      vcactivi       NUMBER;
      vsintodasgarant NUMBER;
      vhay_excepciones NUMBER;
      vcausamotivo   VARCHAR2(500);
      vexcepcion     VARCHAR2(200);
   -- 25812:ASN:24/01/2013 fin
   BEGIN
      -- 25812:ASN:24/01/2013 ini
      SELECT sproduc, cactivi
        INTO vsproduc, vcactivi
        FROM seguros se, sin_siniestro si
       WHERE se.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      vsintodasgarant := NVL(f_parproductos_v(vsproduc, 'SIN_TODAS_GARANT'), 0);

      IF vsintodasgarant = 0 THEN
         SELECT COUNT(*)
           INTO vhay_excepciones
           FROM sin_gar_permitidas
          WHERE sproduc = vsproduc
            AND cactivi = vcactivi
            AND ctramit = pctramit;

         IF vhay_excepciones > 0 THEN
            vexcepcion :=
               ' and gg.cgarant in (select cgarant from sin_gar_permitidas where '
               || ' sproduc = ' || vsproduc || ' and cactivi = ' || vcactivi
               || ' and ctramit = ' || pctramit || ') ';
         ELSE
            vexcepcion := ' and 1=1 ';
         END IF;

         vcausamotivo := ' (gg.cgarant IN(SELECT cgarant FROM sin_gar_causa sgc'
                         || ' WHERE sgc.sproduc = s.sproduc  AND sgc.cactivi = s.cactivi'
                         || ' AND sgc.ccausin = ss.ccausin  AND sgc.cmotsin = ss.cmotsin) ';
      ELSE
         vcausamotivo :=
            ' ( gg.cgarant IN(SELECT cgarant FROM sin_gar_causa sgc WHERE sgc.sproduc = s.sproduc  AND sgc.cactivi = s.cactivi) ';
         vexcepcion := ' and 1=1 ';
      END IF;

      -- 25812:ASN:24/01/2013 fin

      -- BUG 0024774 - 20/11/2012 - JMF: aÃ±adir de asn identa y seleccionable
      vsquery :=
         'SELECT str.nsinies, str.ntramit, str.ctipres, str.nmovres, str.cgarant,
       str.ccalres, str.fmovres, str.cmonres, str.ireserva, str.ipago,
       str.iingreso, str.irecobro, str.fresini, str.fresfin, str.sidepag,
       str.sproces, str.fcontab, str.falta, str.cusumod,
       str.fmodifi, str.iprerec, ff_desvalorfijo(322, '
         || pcidioma
         || ', str.ctipres) ttipres,
          (select lpad(''.'',pac_siniestros.f_indenta (b.sproduc, b.cactivi, str.cgarant),''.'')
           from  sin_siniestro a, seguros b
           where a.nsinies = str.nsinies and b.sseguro=a.sseguro)||
       (SELECT trotgar FROM garangen WHERE cgarant = str.cgarant AND cidioma = '
         || pcidioma || ') trotgar,
       ff_desvalorfijo(693,' || pcidioma
         || ', str.ccalres) tcalres, icaprie, ipenali, fultpag, ctipgas,
       ff_desvalorfijo(1047, '
         || pcidioma
         || ', ctipgas) ttipgas,
       ireserva_moncia, ipago_moncia, iingreso_moncia, irecobro_moncia, icaprie_moncia,
       ipenali_moncia, iprerec_moncia,
       (select max(pac_siniestros.f_seleccionable (b.sproduc, b.cactivi, str.cgarant))
       from  sin_siniestro a, seguros b
       where a.nsinies = str.nsinies and b.sseguro=a.sseguro) cselecc,
       (select max(c.norden)
        from  sin_siniestro a, seguros b, garanpro c
        where a.nsinies = str.nsinies and b.sseguro=a.sseguro
        and   c.cgarant = str.cgarant and   c.CMODALI = b.cmodali
        and   c.CCOLECT=b.ccolect and c.CRAMO=b.cramo
        and   c.CTIPSEG=b.ctipseg and c.CACTIVI=b.cactivi
        ) orden, '
         || ' str.ndias '   --Bug 27487/159742:NSS:26/11/2013
         || '
  FROM sin_tramita_reserva str
 WHERE str.nsinies = ' || pnsinies || ' AND str.ntramit = ' || pntramit || ' AND ctipres = '
         || pctipres
         || ' AND nmovres  in (  SELECT   MAX(str.nmovres)
             FROM sin_tramita_reserva str, sin_tramita_reserva str2
            WHERE str.nsinies =  '
         || pnsinies || '
              AND str.ntramit = ' || pntramit
         || '
              AND str.nsinies = str2.nsinies
              and str.ctipres = ' || pctipres
         || '
              AND str.ntramit = str2.ntramit
              AND str.ctipres = str2.ctipres
              AND(str.cgarant = str2.cgarant
                  OR str.cgarant IS NULL)
              AND(str.fresini = str2.fresini
                  OR str.fresini IS NULL)
         GROUP BY str.nsinies, str.ntramit, str.ctipres, str.cgarant, str.fresini
          ) AND '
         || ptipoquery || ' IN (0,1,2) '
         || 'UNION ALL
SELECT NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, null, null
  FROM DUAL
WHERE 0 = (SELECT COUNT(1) FROM sin_tramita_reserva str
 WHERE str.nsinies = '
         || pnsinies || ' AND str.ntramit = ' || pntramit || ' AND ctipres = ' || pctipres
         || ' AND nmovres  in ( SELECT   MAX(str.nmovres)
             FROM sin_tramita_reserva str, sin_tramita_reserva str2
            WHERE str.nsinies =  '
         || pnsinies || '
              AND str.ntramit = ' || pntramit
         || '
              AND str.nsinies = str2.nsinies
              and str.ctipres = ' || pctipres
         || '
              AND str.ntramit = str2.ntramit
              AND str.ctipres = str2.ctipres
              AND(str.cgarant = str2.cgarant
                  OR str.cgarant IS NULL)
              AND(str.fresini = str2.fresini
                  OR str.fresini IS NULL)
         GROUP BY str.nsinies, str.ntramit, str.ctipres, str.cgarant, str.fresini )) AND '
         || ptipoquery || ' = 0 '
         || 'UNION ALL
SELECT NULL, NULL, NULL, NULL, gg.cgarant,
       NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL,
          (lpad(''.'',pac_siniestros.f_indenta (s.sproduc, s.cactivi, gg.cgarant),''.'')
           )||
       trotgar TROTGAR,
       NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
       (select max(pac_siniestros.f_seleccionable (b.sproduc, b.cactivi, gg.cgarant))
       from  sin_siniestro a, seguros b
       where a.nsinies = ss.nsinies and b.sseguro=a.sseguro) cselecc,
       (select max(c.norden)
        from  sin_siniestro a, seguros b, garanpro c
        where a.nsinies = ss.nsinies and b.sseguro=a.sseguro
        and   c.cgarant = gg.cgarant and   c.CMODALI = b.cmodali
        and   c.CCOLECT=b.ccolect and c.CRAMO=b.cramo
        and   c.CTIPSEG=b.ctipseg and c.CACTIVI=b.cactivi
        ) orden, null
  FROM garanseg gg, sin_siniestro ss, garangen ge, seguros s
 WHERE gg.sseguro = ss.sseguro
   AND gg.cgarant = ge.cgarant
   '   --  25812:ASN:24/01/2013
         || vexcepcion ||   --  25812:ASN:24/01/2013
                         ' AND ' || vcausamotivo
         || ' or (pac_siniestros.f_padre_con_hijos(s.sproduc,s.cactivi,gg.cgarant,ss.ccausin,ss.cmotsin) = 1) ) '
         || 'AND ge.cidioma = ' || pcidioma
         || ' AND s.sseguro = ss.sseguro
   AND ss.nsinies = ' || pnsinies
         || ' AND gg.nmovimi = (select max(nmovimi) from garanseg where sseguro = ss.sseguro)
   AND gg.cgarant NOT IN(SELECT cgarant
                           FROM sin_tramita_reserva
                          WHERE ntramit = '
         || pntramit || ' and ctipres = ' || pctipres || ' AND nsinies = ' || pnsinies
         || ' AND nmovres  in ( SELECT   MAX(str.nmovres)
             FROM sin_tramita_reserva str, sin_tramita_reserva str2
            WHERE str.nsinies =  '
         || pnsinies || '
              AND str.ntramit = ' || pntramit
         || '
              AND str.nsinies = str2.nsinies
              and str.ctipres = ' || pctipres
         || '
              AND str.ntramit = str2.ntramit
              AND str.ctipres = str2.ctipres
              AND(str.cgarant = str2.cgarant
                  OR str.cgarant IS NULL)
              AND(str.fresini = str2.fresini
                  OR str.fresini IS NULL)  GROUP BY str.nsinies, str.ntramit, str.ctipres, str.cgarant, str.fresini  )) AND '
         || ptipoquery || ' IN (1,2) '
         || 'UNION ALL
SELECT NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL,
       NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, null, null
  FROM DUAL WHERE '
         || ptipoquery || ' = 2' || ' order by 38';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_Get_reserva_multiple',
                     SQLERRM);
         RETURN 1;
   END f_get_reserva_multiple;

-- Fin Bug 21172 - MDS - 02/03/2012

   /*************************************************************************
      FUNCTION f_get_defraudador
         Recupera un defraudador
         param in pnsinies  : Número de siniestro
         param in pndefrau  : Número de defraudador
         param in pcidioma  : idioma
         param out vsquery  : texto consulta
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 21855 - 07/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_get_defraudador(
      pnsinies IN sin_defraudadores.nsinies%TYPE,
      pndefrau IN sin_defraudadores.ndefrau%TYPE,
      pcidioma IN NUMBER,
      vsquery OUT VARCHAR2)
      RETURN NUMBER IS
      vcagente       NUMBER;
   BEGIN
      SELECT s.cagente
        INTO vcagente
        FROM seguros s, sin_siniestro si
       WHERE s.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      vsquery :=
         'SELECT sd.nsinies, sd.ndefrau, sd.sperson, f_nombre(sd.sperson,1,' || vcagente
         || ') tperson, sd.ctiprol,
  ff_desvalorfijo(800084,' || pcidioma
         || ', sd.ctiprol) ttiprol, sd.finiefe, sd.ffinefe, sd.cusualt, sd.falta
  FROM sin_defraudadores sd
 WHERE sd.nsinies = '
         || pnsinies || ' AND sd.ndefrau = ' || pndefrau;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_get_defraudador', SQLERRM);
         RETURN 1;
   END f_get_defraudador;

   /*************************************************************************
      FUNCTION f_ins_defraudador
         Inserta un defraudador
         param in pnsinies  : Número de siniestro
         param in pndefrau  : Número de defraudador
         ...
         ...
         ...
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 21855 - 07/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_ins_defraudador(
      pnsinies IN sin_defraudadores.nsinies%TYPE,
      pndefrau IN sin_defraudadores.ndefrau%TYPE,
      psperson IN sin_defraudadores.sperson%TYPE,
      pctiprol IN sin_defraudadores.ctiprol%TYPE,
      pfiniefe IN sin_defraudadores.finiefe%TYPE,
      pffinefe IN sin_defraudadores.ffinefe%TYPE)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_defraudador';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pndefrau:' || pndefrau || ' psperson:'
            || psperson || ' pctiprol:' || pctiprol || ' pfiniefe:' || pfiniefe
            || ' pffinefe:' || pffinefe;
      vpasexec       NUMBER(5) := 1;
   BEGIN
      --Comprovación de los parámetros de entrada
      IF pnsinies IS NULL
         OR pndefrau IS NULL THEN
         RETURN 9000505;
      END IF;

      BEGIN
         INSERT INTO sin_defraudadores
                     (nsinies, ndefrau, sperson, ctiprol, finiefe, ffinefe)
              VALUES (pnsinies, pndefrau, psperson, pctiprol, pfiniefe, pffinefe);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_defraudadores
               SET sperson = psperson,
                   ctiprol = pctiprol,
                   finiefe = pfiniefe,
                   ffinefe = pffinefe
             WHERE nsinies = pnsinies
               AND ndefrau = pndefrau;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9903657;
   --Error al insertar/modificar en la tabla SIN_DEFRAUDADORES
   END f_ins_defraudador;

   /*************************************************************************
      FUNCTION f_del_defraudador
         Borra un defraudador
         param in pnsinies  : Número de siniestro
         param in pndefrau  : Número de defraudador
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 21855 - 07/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_del_defraudador(
      pnsinies IN sin_defraudadores.nsinies%TYPE,
      pndefrau IN sin_defraudadores.ndefrau%TYPE)
      RETURN NUMBER IS
   BEGIN
      DELETE      sin_defraudadores
            WHERE nsinies = pnsinies
              AND ndefrau = pndefrau;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_defraudador', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pndefrau:' || pndefrau,
                     SQLERRM);
         RETURN 9903658;   --Error al borrar de la tabla SIN_DEFRAUDADORES
   END f_del_defraudador;

/***************************************************************************************************
       FUNCTION f_get_provision
         Devuelve el importe contra el que se ha de validar el limite del tramitador
         param in p_nsinies   : numero del siniestro
         param in p_ntramte   : numero tramite siniestro
         param in p_ntramit   : numero tramitacion siniestro
         param in out p_iprovis  : total provisionado
         return              : 0 -> Tot correcte
                               1 -> S'ha produit un error
 ***************************************************************************************************/
   FUNCTION f_get_provision(
      p_nsinies IN VARCHAR2,
      p_ntramte IN NUMBER,
      p_ntramit IN NUMBER,
      p_iprovis OUT NUMBER)
      RETURN NUMBER IS
      v_objectname   VARCHAR2(500) := 'pac_siniestros.f_get_provision';
      v_param        VARCHAR2(500)
         := 'parámetros - pnsinies: ' || p_nsinies || ' pntramte:' || p_ntramte
            || ' p_ntramit:' || p_ntramit;
      v_pasexec      NUMBER := 1;
      v_ntramte      NUMBER;
      leer_tramite   NUMBER;
      v_fcambio      DATE;
   BEGIN
      p_iprovis := 0;

      -- Primero buscamos la reserva global.
      SELECT NVL(SUM(NVL(str.ireserva_moncia, str.ireserva)), 0)
        INTO p_iprovis
        FROM sin_tramita_reserva str
       WHERE nsinies = p_nsinies
         AND ntramit = (SELECT MIN(ntramit)
                          FROM sin_tramitacion ta, sin_tramite te
                         WHERE ta.ntramte = te.ntramte
                           AND te.ctramte = 9999
                           AND ta.nsinies = te.nsinies
                           AND ta.nsinies = str.nsinies)
         AND str.nmovres = (SELECT MAX(nmovres)
                              FROM sin_tramita_reserva str1
                             WHERE str1.nsinies = str.nsinies
                               AND str1.ntramit = str.ntramit);

      v_pasexec := 2;

      -- Si no hay reserva global, buscamos la de la tramitacion o el tramite
      IF p_iprovis = 0 THEN
         IF p_ntramit IS NULL THEN
            v_ntramte := p_ntramte;
            leer_tramite := 1;
         ELSIF pac_sin_tramite.ff_hay_tramites(p_nsinies) = 1 THEN
            SELECT ntramte
              INTO v_ntramte
              FROM sin_tramitacion
             WHERE nsinies = p_nsinies
               AND ntramit = p_ntramit;

            leer_tramite := 1;
         ELSE
            leer_tramite := 0;
         END IF;

         v_pasexec := 3;

-- 23741:ASN:03/10/2012 ini
/*
         FOR tr IN (SELECT ntramit
                      FROM sin_tramitacion
                     WHERE nsinies = p_nsinies
                       AND ntramte = v_ntramte
                       AND leer_tramite = 1   -- todas las tramitaciones de un tramite
                    UNION
                    SELECT p_ntramit
                    SELECT ntramit
                      FROM DUAL
                     WHERE leer_tramite = 0   -- solo una tramitacion en concreto
                    -- 23741:ASN:28/09/2012 ini
                    UNION
                    SELECT ntramit
                      FROM sin_tramitacion
                     WHERE nsinies = p_nsinies
                       AND p_ntramit = 99)   -- todo el siniestro
*/                                          -- 23741:ASN:28/09/2012 fin
         FOR tr IN (SELECT ntramit
                      FROM sin_tramitacion
                     WHERE nsinies = p_nsinies
                       AND ntramte = v_ntramte
                       AND leer_tramite = 1   -- todas las tramitaciones de un tramite
                    UNION
                    SELECT ntramit
                      FROM sin_tramitacion
                     WHERE leer_tramite = 0   -- solo una tramitacion en concreto
                       AND ntramit = p_ntramit
                    UNION
                    SELECT ntramit
                      FROM sin_tramitacion
                     WHERE nsinies = p_nsinies
                       AND p_ntramit = 99   -- todo el siniestro
                                         )
-- 23741:ASN:03/10/2012 fin
         LOOP
            SELECT p_iprovis
                   + SUM(NVL(r1.ireserva_moncia, NVL(r1.ireserva, 0))
                         + NVL(r1.ipago_moncia, NVL(r1.ipago, 0))
                         - NVL(r1.irecobro_moncia, NVL(r1.irecobro, 0))
                         - NVL(r1.iingreso_moncia, NVL(r1.iingreso, 0)))
              INTO p_iprovis
              FROM sin_tramita_reserva r1
             WHERE r1.nsinies = p_nsinies
               AND r1.ntramit = tr.ntramit
               AND r1.ctipres = 1   -- Indemnizatoria
               AND(r1.cgarant, NVL(r1.fresini, f_sysdate), r1.nmovres) IN(
                     SELECT   r2.cgarant, MAX(NVL(r2.fresini, f_sysdate)), MAX(r2.nmovres)
                         FROM sin_tramita_reserva r2
                        WHERE r2.nsinies = r1.nsinies
                          AND r2.ntramit = r1.ntramit
                          AND r2.ctipres = r1.ctipres
                     GROUP BY cgarant);
         END LOOP;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, v_objectname, v_pasexec, v_param,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
   END f_get_provision;

   /****************************************************************************
    Devuelve el maximo importe que puede asumir un tramitador
      pctramitad IN codigo tramitador
      pcempres IN   empresa
      pcramo   IN   ramo
      pccausin IN   causa siniestro
      pcmotsin IN   motivo siniestro
      pilimite OUT
      RETURN codigo de error
   ****************************************************************************/
   FUNCTION f_get_limite_tramitador(
      pctramitad IN VARCHAR2,
      pcempres IN NUMBER,
      pcramo IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      pilimite OUT NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'pac_siniestros.f_get_limite_tramitador';
      vparam         VARCHAR2(500)
         := 'parámetros - pctramitad:' || pctramitad || ' pcempres: ' || pcempres
            || ' pcramo: ' || pcramo || ' pccausin: ' || pccausin || ' pcmotsin: ' || pcmotsin;
      vpasexec       NUMBER := 1;
      vimporte_tramit NUMBER;
      vlimite        NUMBER;
   BEGIN
      BEGIN
         SELECT nlimmax
           INTO pilimite
           FROM sin_tramitadores
          WHERE ctramitad = pctramitad
            AND cempres = pcempres
            AND NVL(cramo, NVL(pcramo, -1)) = NVL(pcramo, -1)
            AND NVL(ccausin, NVL(pccausin, -1)) = NVL(pccausin, -1)
            AND NVL(cmotsin, NVL(pcmotsin, -1)) = NVL(pcmotsin, -1);
      EXCEPTION
         WHEN OTHERS THEN
            RETURN 9903736;
      -- No se ha encontrado el limite de autonomia del tramitador
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001440;   --Error validar reserva
   END f_get_limite_tramitador;

/***************************************************************************************************
   Esta funcion devuelve el tramitador que toca, a la hora de dar de alta un tramite o
   una tramitacion. Para ello busca en el movimiento anterior (o en el tramite si lo hay
   y estamos dando de alta una tramitacion)
   Cuando se trate de un alta de tramite/tramitacion invocara la funcion que obtiene automaticamente
   el tramitador a partir de las condiciones parametrizadas.
   p_nsinies IN numero de siniestro
   p_ntramte IN numero de tramite
   p_ntramit IN numero de tramitacion
   p_cunitra   OUT unidad de tramitacion
   p_ctramitad OUT tramitador
***************************************************************************************************/
   FUNCTION f_get_tramitador(
      p_nsinies IN VARCHAR2,
      p_ntramte IN NUMBER,
      p_ntramit IN NUMBER,
      p_cunitra OUT VARCHAR2,
      p_ctramitad OUT VARCHAR2)
      RETURN NUMBER IS
      vobj           VARCHAR2(100) := 'pac_siniestros.f_get_tramitador';
      vpar           VARCHAR2(500) := 's=' || p_nsinies || ' tte=' || p_ntramit;
      vpas           NUMBER := 1;
      v_cempres      seguros.cempres%TYPE;
      v_sseguro      seguros.sseguro%TYPE;
      v_ccausin      sin_siniestro.ccausin%TYPE;
      v_cmotsin      sin_siniestro.cmotsin%TYPE;
      v_ntramte      sin_tramitacion.ntramte%TYPE;
      v_error        NUMBER;
   BEGIN
      IF p_ntramit IS NULL THEN
         IF p_ntramte IS NULL THEN   -- buscamos el tramitador global del siniestro
            vpas := 1;

            BEGIN
               SELECT cunitra, ctramitad
                 INTO p_cunitra, p_ctramitad
                 FROM sin_movsiniestro m1
                WHERE nsinies = p_nsinies
                  AND nmovsin = (SELECT MAX(nmovsin)
                                   FROM sin_movsiniestro m2
                                  WHERE m2.nsinies = m1.nsinies);
            EXCEPTION
               WHEN OTHERS THEN
                  NULL;   -- Es alta de siniestro
            END;

            RETURN 0;
         END IF;
      ELSE   -- Si pntramit is not null Es un alta de movimiento de tramitacion
         IF pac_sin_tramite.ff_hay_tramites(p_nsinies) = 0 THEN
-- si hubiera tramites, habria que ir a buscar al tramite, no a la tramitacion
            BEGIN
               vpas := 2;

               SELECT cunitra, ctramitad
                 INTO p_cunitra, p_ctramitad
                 FROM sin_tramita_movimiento tm1
                WHERE tm1.nsinies = p_nsinies
                  AND tm1.ntramit = p_ntramit
                  AND tm1.nmovtra = (SELECT MAX(nmovtra)
                                       FROM sin_tramita_movimiento tm2
                                      WHERE tm2.nsinies = tm1.nsinies
                                        AND tm2.ntramit = tm1.ntramit);

               RETURN 0;
            EXCEPTION
               WHEN OTHERS THEN
                  NULL;
            -- si no encuentra nada es que es un alta de tramitacion (no de movimiento)
            END;
         ELSE
            vpas := 3;

            BEGIN
               SELECT ntramte
                 INTO v_ntramte
                 FROM sin_tramitacion
                WHERE nsinies = p_nsinies
                  AND ntramit = p_ntramit;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  NULL;
            END;
         END IF;
      END IF;

      vpas := 4;

      BEGIN   -- buscamos el tramitador en el ultimo movimiento del tramite
         SELECT cunitra, ctramitad
           INTO p_cunitra, p_ctramitad
           FROM sin_tramite_mov tm1
          WHERE tm1.nsinies = p_nsinies
            AND tm1.ntramte = NVL(p_ntramte, v_ntramte)
            AND tm1.nmovtte = (SELECT MAX(nmovtte)
                                 FROM sin_tramite_mov tm2
                                WHERE tm2.nsinies = tm1.nsinies
                                  AND tm2.ntramte = tm1.ntramte);

         --Transitorio mientras no haya tramitadores en sin_trÃ¡mite_mov
         IF p_cunitra IS NULL THEN
            p_cunitra := 'U000';
            p_ctramitad := 'T000';
         END IF;

         RETURN 0;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
-- Si es alta de siniestro no encontrara nada. Buscamos el tramitador por defecto
            vpas := 5;

            BEGIN
               SELECT se.cempres, se.sseguro, si.ccausin, si.cmotsin
                 INTO v_cempres, v_sseguro, v_ccausin, v_cmotsin
                 FROM sin_siniestro si, seguros se
                WHERE si.sseguro = se.sseguro
                  AND si.nsinies = p_nsinies;
            EXCEPTION
               WHEN OTHERS THEN
                  p_tab_error(f_sysdate, f_user, vobj, 4, vpar, SQLCODE || ' ' || SQLERRM);
                  RETURN -1;
            END;

            vpas := 6;
            v_error := pac_siniestros.f_get_tramitador_defecto(v_cempres, f_user, v_sseguro,
                                                               v_ccausin, v_cmotsin, p_nsinies,
                                                               p_ntramte, p_ntramit, p_cunitra,
                                                               p_ctramitad);

            IF v_error = 1 THEN
               v_error := 0;
            END IF;

            RETURN v_error;
      END;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobj, vpas, vpar, SQLCODE || ' ' || SQLERRM);
         RETURN -1;
   END f_get_tramitador;

   /****************************************************************************
    Comprueba si el tramitador puede asignarse a un siniestro
      pnsinies IN numero de siniestro
      pntramit IN tramitacion
      pctramitad IN codigo tramitador
      pcempres IN empresa
      pcramo   IN ramo
      pccausin IN causa siniestro
      pcmotsin IN motivo siniestro
      RETURN codigo de error
   ****************************************************************************/
   FUNCTION f_valida_tramitador(
      pnsinies IN NUMBER,
      pntramit IN NUMBER,
      pctramitad IN VARCHAR2,
      pcempres IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'pac_siniestros.f_valida_tramitador';
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pntramit:' || pntramit
            || ' pctramitad:' || pctramitad || ' pcempres: ' || pcempres || ' pccausin: '
            || pccausin || ' pcmotsin: ' || pcmotsin;
      vpasexec       NUMBER := 1;
      vimporte_tramit NUMBER;
      vlimite        NUMBER;
      vnumerr        NUMBER;
      vcramo         NUMBER;
   BEGIN
      --Comprovación dels parÃ¡metres d'entrada
      IF pctramitad IS NULL THEN
         RETURN 9001400;   -- Tramitador obligatorio
      END IF;

      vnumerr := pac_siniestros.f_get_provision(pnsinies, NULL, pntramit, vimporte_tramit);

      IF vnumerr <> 0 THEN
         RETURN vnumerr;
      END IF;

      SELECT cramo
        INTO vcramo
        FROM sin_siniestro si, seguros se
       WHERE si.sseguro = se.sseguro
         AND si.nsinies = pnsinies;

      vnumerr := pac_siniestros.f_get_limite_tramitador(pctramitad, pcempres, vcramo, pccausin,
                                                        pcmotsin, vlimite);

      IF vnumerr <> 0 THEN
         RETURN vnumerr;
      END IF;

      IF vimporte_tramit > vlimite THEN
         RETURN 9903735;
      -- El coste siniestral supera el limite del tramitador
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9001380;   -- Error validar siniestro
   END f_valida_tramitador;

   /****************************************************************************
   Devuelve el nombre del tramitador
      pctramitad IN codigo tramitador
      22670:ASN:28/12/2012
   ****************************************************************************/
   FUNCTION f_nombre_tramitador(pctramitad IN VARCHAR2, ptnombre OUT VARCHAR2)
      RETURN NUMBER IS
   BEGIN
      SELECT ttramitad
        INTO ptnombre
        FROM sin_codtramitador
       WHERE ctramitad = pctramitad;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'f_nombre_tramitador', 1, 'pctramitad=' || pctramitad,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
   END f_nombre_tramitador;

   /****************************************************************************
   Devuelve mensaje gestion asignada automaticamente en alta de siniestro
      pnsinies IN codigo siniestro
      pcidioma IN codigo idioma
      ASN : 11/07/2012 : 0022670: SIN - Mensajes en alta de siniestros
   ****************************************************************************/
   FUNCTION f_nombre_profesional(
      pnsinies IN VARCHAR2,
      pcidioma IN NUMBER,
      ptmensaje OUT VARCHAR2)
      RETURN NUMBER IS
      v_ctipges      NUMBER;
      v_sprofes      NUMBER;
   BEGIN
      BEGIN
         SELECT ctipges, sprofes
           INTO v_ctipges, v_sprofes
           FROM sin_tramita_gestion
          WHERE nsinies = pnsinies;
      EXCEPTION
         WHEN OTHERS THEN   -- si no hay gestion o hay mas de una, no hacemos nada
            RETURN 0;
      END;

      SELECT tatribu
        INTO ptmensaje
        FROM detvalores
       WHERE cvalor = 722
         AND catribu = v_ctipges
         AND cidioma = pcidioma;

      SELECT ptmensaje || '. ' || f_axis_literales(9901927, pcidioma)
        INTO ptmensaje
        FROM DUAL;

      SELECT ptmensaje || ' ' || f_nombre(sperson, 1)
        INTO ptmensaje
        FROM sin_prof_profesionales
       WHERE sprofes = v_sprofes;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'f_nombre_profesional', 1, 'pnsinies=' || pnsinies,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
   END f_nombre_profesional;

   /****************************************************************************
   Mira si hay reserva en el siniestro al final del alta y actualiza el estado
      pnsinies IN numero siniestro
      phay_reserva OUT - 0=no 1=si
      22603:ASN:18/07/2012
   ****************************************************************************/
   FUNCTION f_estado_final(pnsinies IN VARCHAR2, phay_reserva OUT NUMBER)
      RETURN NUMBER IS
      v_ntraza       NUMBER := 1;
   BEGIN
      SELECT COUNT(*)
        INTO phay_reserva
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies;
         -- AND ireserva > 0;

      IF phay_reserva > 0 THEN
         v_ntraza := 2;

         UPDATE sin_movsiniestro
            SET cestsin = 0
          WHERE nsinies = pnsinies;

         v_ntraza := 3;

         UPDATE sin_siniestro
            SET npresin = NULL
          WHERE nsinies = pnsinies;
      ELSE
         v_ntraza := 4;

         UPDATE sin_movsiniestro
            SET cestsin = 5
          WHERE nsinies = pnsinies;
         --IAXIS-2067 AABC 29/03/2019 Tipo de Siniestro
         /*UPDATE sin_movsiniestro
            SET ctipsin = 1
          WHERE nsinies = pnsinies;
         --IAXIS-2067 AABC 29/03/2019 Tipo de siniestro*/
         v_ntraza := 5;

         UPDATE sin_siniestro
            SET npresin = 'P' || pnsinies
          WHERE nsinies = pnsinies;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'f_estado_final', 1, 'pnsinies=' || pnsinies,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN SQLCODE;
   END f_estado_final;

   /***********************************************************************
      FUNCTION f_set_tramitador
         Graba el tramitador en el alta de siniestro
         param in pnsinies          : Número de siniestro
         param in pcunitra          : unidad tramitacion
         param in pctramtad         : tramitador
         return                     : 0 - OK ; 1 - Error
   *************************************************************************/
   FUNCTION f_set_tramitador(pnsinies IN NUMBER, pcunitra IN VARCHAR2, pctramitad IN VARCHAR2)
      RETURN NUMBER IS
      num_err        NUMBER := 0;
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pcunitra:' || pcunitra
            || ' pctramitad:' || pctramitad;
      vpasexec       NUMBER := 1;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_set_tramitador';
   BEGIN
      num_err := pac_tramitadores.f_mensaje_asignacion(pnsinies, NULL, NULL, pcunitra,
                                                       pctramitad);

      IF num_err <> 0 THEN
         RETURN num_err;
      END IF;

      UPDATE sin_tramita_movimiento
         SET cunitra = pcunitra,
             ctramitad = pctramitad
       WHERE nsinies = pnsinies;

      UPDATE sin_tramite_mov
         SET cunitra = pcunitra,
             ctramitad = pctramitad
       WHERE nsinies = pnsinies;

      UPDATE sin_movsiniestro   -- 23471:ASN:28/09/2012
         SET cunitra = pcunitra,
             ctramitad = pctramitad
       WHERE nsinies = pnsinies;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'f_set_tramitador', 1, 'pnsinies=' || pnsinies,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
   END f_set_tramitador;

-- Ini Bug 23805 - MDS - 03/10/2012

   /*************************************************************************
    Función que indica si alguna de las garantÃ­as contratadas y
    seleccionadas segÃ¿Âºn pccausin, pcmotsin, pfsinies tiene asistencia.

      phay_asistencia OUT --> 0 : No , >0 : Si

      RETURN  0 : OK
             >0 : Error

   *************************************************************************/
   FUNCTION f_hay_asistencia(
      psseguro IN NUMBER,
      pnriesgo IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      pfsinies IN DATE,
      phay_asistencia OUT NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER;
      vnumerr        NUMBER;
      vcactivi       NUMBER;
      vfefecto       DATE;
      vsproduc       NUMBER;
      vcramo         NUMBER;
      vcmodali       NUMBER;
      vctipseg       NUMBER;
      vccolect       NUMBER;
   BEGIN
      vpasexec := 1;

      -- obtener información del seguro
      SELECT cactivi, fefecto, sproduc
        INTO vcactivi, vfefecto, vsproduc
        FROM seguros
       WHERE sseguro = psseguro;

      IF pfsinies < vfefecto THEN
         RETURN 109925;
      END IF;

      vpasexec := 2;
      -- obtener información del producto
      vnumerr := f_def_producto(vsproduc, vcramo, vcmodali, vctipseg, vccolect);

      IF vnumerr <> 0 THEN
         RETURN vnumerr;
      END IF;

      vpasexec := 3;

      -- 23805:ASN:29/10/2012 ini
      /*
      -- mirar cuantas garantÃ­as se han seleccionado que tengan asistencia
      SELECT COUNT(DISTINCT gs.cgarant)
        INTO phay_asistencia
        FROM sin_gar_causa sgc, garanseg gs, seguros s
       WHERE (sgc.cactivi = vcactivi
              OR(sgc.cactivi = 0
                 AND NOT EXISTS(SELECT 1
                                  FROM sin_gar_causa
                                 WHERE sproduc = sgc.sproduc
                                   AND cactivi = vcactivi)))
         AND sgc.sproduc = vsproduc
         AND sgc.ccausin = pccausin
         AND sgc.cmotsin = pcmotsin
         AND sgc.cgarant = gs.cgarant
         AND sgc.sproduc = s.sproduc
         AND gs.sseguro = psseguro
         AND gs.nriesgo = pnriesgo
         AND gs.sseguro = s.sseguro
         AND gs.finiefe <= pfsinies
         AND(gs.ffinefe IS NULL
             OR gs.ffinefe - 1 >= pfsinies)
         AND f_pargaranpro_v(vcramo, vcmodali, vctipseg, vccolect, sgc.cactivi, sgc.cgarant,
                             'GAR_ASISTENCIA') = 1;
      */
      SELECT COUNT(DISTINCT gs.cgarant)
        INTO phay_asistencia
        FROM garanseg gs, seguros s
       WHERE gs.sseguro = psseguro
         AND gs.nriesgo = pnriesgo
         AND gs.sseguro = s.sseguro
         AND gs.finiefe <= pfsinies
         AND(gs.ffinefe IS NULL
             OR gs.ffinefe - 1 >= pfsinies)
         AND f_pargaranpro_v(vcramo, vcmodali, vctipseg, vccolect, s.cactivi, gs.cgarant,
                             'GAR_ASISTENCIA') = 1;

      -- 23805:ASN:29/10/2012 fin
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', vpasexec, 'F_hay_asistencia',
                     SQLERRM);
         RETURN 9901995;
   END f_hay_asistencia;

-- Fin Bug 23805 - MDS - 03/10/2012

   /****************************************************************************
    Recalcula la penalizacion antes de generar un pago

      pnsinies IN numero siniestro
      pntramit IN tramitacion
      pctipres IN tipo de reserva
      pcgarant IN garantia
      pfperini IN fecha inicio
      pfperfin IN fecha fin

      23764:ASN:15/10/2012
   ****************************************************************************/
   FUNCTION f_recalcula_penalizacion(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pcgarant IN NUMBER,
      pfperini IN DATE,
      pfperfin IN DATE)
      RETURN NUMBER IS
      v_error        NUMBER;
      v_pasexec      NUMBER(8) := 0;
      v_param        VARCHAR2(500)
         := 'parametros -  pnsinies : ' || pnsinies || 'pntramit : ' || pntramit
            || ' pctipres : ' || pctipres || ' pcgarant : ' || pcgarant || ' pfperini : '
            || pfperini || ' pfperfin : ' || pfperfin;
      v_objectname   VARCHAR2(100) := 'PAC_SINIESTROS.f_recalcula_penalizacion';
      v_ctramit      sin_tramitacion.ctramit%TYPE;
      v_nmovres      sin_tramita_reserva.nmovres%TYPE;
      v_cmonres      sin_tramita_reserva.cmonres%TYPE;
      v_ireserva     sin_tramita_reserva.ireserva%TYPE;
      v_ipago        sin_tramita_reserva.ipago%TYPE;
      v_iingreso     sin_tramita_reserva.iingreso%TYPE;
      v_irecobro     sin_tramita_reserva.irecobro%TYPE;
      v_icaprie      sin_tramita_reserva.icaprie%TYPE;
      v_ipenali      sin_tramita_reserva.ipenali%TYPE;
      v_fresini      sin_tramita_reserva.fresini%TYPE;
      v_fresfin      sin_tramita_reserva.fresfin%TYPE;
      v_fultpag      sin_tramita_reserva.fultpag%TYPE;
      v_sidepag      sin_tramita_reserva.sidepag%TYPE;
      v_sproces      sin_tramita_reserva.sproces%TYPE;
      v_fcontab      sin_tramita_reserva.fcontab%TYPE;
      v_cusualt      sin_tramita_reserva.cusualt%TYPE;
      v_falta        sin_tramita_reserva.falta%TYPE;
      v_iprerec      sin_tramita_reserva.iprerec%TYPE;
      v_ctipgas      sin_tramita_reserva.ctipgas%TYPE;
--      v_ireserva_moncia sin_tramita_reserva.moncia%TYPE;
--      v_ipago_moncia sin_tramita_reserva.ipago_moncia%TYPE;
--      v_iingreso_moncia sin_tramita_reserva.iingreso_moncia%TYPE;
--      v_irecobro_moncia sin_tramita_reserva.irecobro_moncia%TYPE;
--      v_icaprie_moncia sin_tramita_reserva.icaprie_moncia%TYPE;
--      v_ipenali_moncia sin_tramita_reserva.ipenali_moncia%TYPE;
--      v_iprerec_moncia sin_tramita_reserva.iprerec_moncia%TYPE;
--      v_fcambio sin_tramita_reserva.fcambio%TYPE;
      v_sseguro      sin_siniestro.sseguro%TYPE;
      v_ifranq       sin_tramita_reserva.ifranq%TYPE;   -- Bug 27059:NSS:03/06/2013
      v_ndias        sin_tramita_reserva.ndias%TYPE;   -- Bug 27059:NSS:03/06/2013
      v_itotimp      sin_tramita_reserva.itotimp%TYPE;   ------------------------------- IMPUESTOS
   BEGIN
      v_pasexec := 1;

-- Recuperamos los parametros que faltan
      SELECT sseguro
        INTO v_sseguro
        FROM sin_siniestro
       WHERE nsinies = pnsinies;

      v_pasexec := 2;

      SELECT ctramit
        INTO v_ctramit
        FROM sin_tramitacion
       WHERE nsinies = pnsinies
         AND ntramit = pntramit;

      v_pasexec := 3;

      SELECT ireserva, cmonres, ipago, iingreso, irecobro, icaprie, ipenali,
             fresini, fresfin, fultpag, sidepag, sproces, fcontab, cusualt,
             falta, iprerec, ctipgas,
--           ireserva_moncia, ipago_moncia, iingreso_moncia, irecobro_moncia, icaprie_moncia, ipenali_moncia,
--           iprerec_moncia, fcambio
                                     ifranq,   --27059:NSS:03/06/2013
             ndias   --Bug 27487/159742:NSS:26/11/2013
                  , itotimp
------------------------------------------------------------------------ IMPUESTOS
      INTO   v_ireserva, v_cmonres, v_ipago, v_iingreso, v_irecobro, v_icaprie, v_ipenali,
             v_fresini, v_fresfin, v_fultpag, v_sidepag, v_sproces, v_fcontab, v_cusualt,
             v_falta, v_iprerec, v_ctipgas,
--           v_ireserva_moncia, v_ipago_moncia, v_iingreso_moncia, v_irecobro_moncia, v_icaprie_moncia, v_ipenali_moncia,
--           v_iprerec_moncia, v_fcambio
                                           v_ifranq,   --27059:NSS:03/06/2013
             v_ndias   --Bug 27487/159742:NSS:26/11/2013
                    , v_itotimp
------------------------------------- IMPUESTOS
      FROM   sin_tramita_reserva r1
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND(pcgarant IS NULL
             OR cgarant = pcgarant)
         AND nmovres = (SELECT MAX(nmovres)
                          FROM sin_tramita_reserva r2
                         WHERE r2.nsinies = r1.nsinies
                           AND r2.ntramit = r1.ntramit
                           AND r2.ctipres = r1.ctipres
                           AND(pcgarant IS NULL
                               OR r2.cgarant = r1.cgarant)
                           AND r2.cmonres = r1.cmonres);

      v_pasexec := 4;

-- Calculamos la nueva penalizacion
      SELECT pac_prestamos.f_get_totalprest(1, v_sseguro, TO_CHAR(f_sysdate, 'yyyymmdd'))
        INTO v_ipenali
        FROM DUAL;

      v_pasexec := 5;
-- Creamos un nuevo movimiento de reserva
      v_error := pac_siniestros.f_ins_reserva(pnsinies, pntramit, pctipres, pcgarant, 1, NULL,   --fmovres
                                              v_cmonres, v_ireserva, v_ipago, v_icaprie,
                                              v_ipenali, v_iingreso, v_irecobro, v_fresini,
                                              v_fresfin, v_fultpag, v_sidepag, v_iprerec,
                                              v_ctipgas, v_nmovres, 15,   --cmovres --Bug 31294/174788:NSS:22/05/2014
                                              v_ifranq,   -- Bug 27059:NSS:03/06/2013
                                              v_ndias   --Bug 27487/159742:NSS:26/11/2013
                                                     ,
                                              v_itotimp);   ----------------------------------- IMPUESTOS

      IF v_error <> 0 THEN
         RETURN v_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, v_objectname, v_pasexec, 'Error no controlado',
                     SQLERRM);
         RETURN SQLCODE;
   END f_recalcula_penalizacion;

   /***********************************************************************
      FUNCTION f_ireserva_ctramte
         Busca ultima reserva del codigo tramite o de todos.
         param in pnsinies          : Número de siniestro
         param in pctramte          : Código tramite
         return                     : Importe reserva o vacio
      -- BUG 0023643 - 05/11/2012 - JMF
   *************************************************************************/
   FUNCTION f_ireserva_ctramte(pnsinies IN NUMBER, pctramte IN NUMBER)
      RETURN NUMBER IS
      vobj           VARCHAR2(200) := 'PAC_SINIESTROS.f_ireserva_ctramte';
      vpar           VARCHAR2(500) := 's=' || pnsinies || ' c=' || pctramte;
      vpas           NUMBER := 1;
      n_ret          NUMBER;
   BEGIN
      IF pnsinies IS NULL THEN
         n_ret := NULL;
      ELSE
         SELECT SUM(NVL(r.ireserva, 0))
           INTO n_ret
           FROM sin_tramita_reserva r, sin_tramitacion z, sin_tramite x
          WHERE r.nmovres = (SELECT MAX(r2.nmovres)
                               FROM sin_tramita_reserva r2
                              WHERE r2.nsinies = r.nsinies
                                AND r2.ntramit = r.ntramit
                                AND r2.ctipres = r.ctipres)
            AND z.nsinies = r.nsinies
            AND z.ntramit = r.ntramit
            AND x.nsinies = z.nsinies
            AND x.ntramte = z.ntramte
            AND(pctramte IS NULL
                OR x.ctramte = pctramte)
            AND r.nsinies = pnsinies;
      END IF;

      RETURN n_ret;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobj, vpas, vpar,
                     'OTHERS: ' || SQLCODE || ' - ' || SQLERRM);
   END f_ireserva_ctramte;

   /***********************************************************************
      FUNCTION f_cancela_reserva_global
         Anula la reserva global cuando se da de alta una reserva normal
         param in pnsinies          : Número de siniestro
         return                     : OK o Error
   -- BUG 0022679 - 15/11/2012 - ASN
   *************************************************************************/
   FUNCTION f_cancela_reserva_global(pnsinies IN NUMBER, pntramit IN NUMBER)
      RETURN NUMBER IS
      verror         NUMBER;
      vntramit       NUMBER;
      vctipres       NUMBER;
      vcgarant       NUMBER;
      vccalres       NUMBER;
      vfmovres       DATE;
      vcmonres       VARCHAR2(3);
      vireserva      NUMBER;
      vipago         NUMBER;
      vicaprie       NUMBER;
      vipenali       NUMBER;
      viingreso      NUMBER;
      virecobro      NUMBER;
      vfresini       DATE;
      vfresfin       DATE;
      vfultpag       DATE;
      vsidepag       NUMBER;
      viprerec       NUMBER;
      vctipgas       NUMBER;
      dummy          NUMBER;
      vpas           NUMBER;
      vifranq        NUMBER;   -- Bug 27059:NSS:03/06/2013
      vndias         NUMBER;   --Bug 27487/159742:NSS:26/11/2013
   BEGIN
      vpas := 1;

      -- si no hay tramite global nohay que hacer nada
      IF pac_sin_tramite.ff_hay_tramites(pnsinies) = 0 THEN
         RETURN 0;
      END IF;

      vpas := 2;
      verror := pac_sin_tramite.f_get_tramite9999(pnsinies, vntramit);

      IF verror <> 0 THEN
         RETURN verror;
      END IF;

      -- si la reserva creada es la reserva global no hay que hacer nada
      vpas := 3;

      IF vntramit = pntramit THEN
         RETURN 0;
      END IF;

      -- bug 0024774 21-11-2012: Si no tiene reserva, no hacemos nada.
      BEGIN
         vpas := 4;

         SELECT ctipres, cgarant, ccalres, f_sysdate, cmonres, ireserva, ipago,
                icaprie, ipenali, iingreso, irecobro, vfresini, fresfin, fultpag,
                sidepag, iprerec, ctipgas, ifranq,   -- Bug 27059:NSS:03/06/2013
                                                  ndias   --Bug 27487/159742:NSS:26/11/2013
           INTO vctipres, vcgarant, vccalres, vfmovres, vcmonres, vireserva, vipago,
                vicaprie, vipenali, viingreso, virecobro, vfresini, vfresfin, vfultpag,
                vsidepag, viprerec, vctipgas, vifranq,   -- Bug 27059:NSS:03/06/2013
                                                      vndias   --Bug 27487/159742:NSS:26/11/2013
           FROM sin_tramita_reserva
          WHERE nsinies = pnsinies
            AND ntramit = vntramit
            AND nmovres = (SELECT MAX(nmovres)
                             FROM sin_tramita_reserva
                            WHERE nsinies = pnsinies
                              AND ntramit = vntramit);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RETURN 0;
      END;

      vpas := 5;

      IF vireserva <> 0 THEN
         verror := f_ins_reserva(pnsinies, vntramit, vctipres, vcgarant, vccalres, vfmovres,
                                 vcmonres, 0,   --ireserva
                                 vipago, vicaprie, vipenali, viingreso, virecobro, vfresini,
                                 vfresfin, vfultpag, vsidepag, viprerec, vctipgas, dummy,   --nmovres
                                 16,   --cmovres --Bug 31294/174788:NSS:22/05/2014
                                 vifranq,   --27059:NSS:03/06/2013
                                 vndias);   --Bug 27487/159742:NSS:26/11/2013

         IF verror <> 0 THEN
            RETURN verror;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_SINIESTROS.f_cancela_reserva_global', vpas,
                     'Param - pnsinies=' || pnsinies,
                     'OTHERS: ' || SQLCODE || ' - ' || SQLERRM);
   END f_cancela_reserva_global;

   -- BUG 0024774 - 20/11/2012 - JMF
   FUNCTION f_indenta(psproduc IN NUMBER, pcactivi IN NUMBER, pcgarant IN NUMBER)
      RETURN NUMBER IS
      num_espacios   NUMBER;
   BEGIN
      SELECT MAX((NVL(cvisniv, 1) - 1) * 3)
        INTO num_espacios
        FROM garanpro
       WHERE sproduc = psproduc
         AND cactivi = pcactivi
         AND cgarant = pcgarant;

      IF num_espacios IS NULL THEN
         SELECT (NVL(cvisniv, 1) - 1) * 3
           INTO num_espacios
           FROM garanpro
          WHERE sproduc = psproduc
            AND cactivi = 0
            AND cgarant = pcgarant;
      END IF;

      RETURN num_espacios;
   END f_indenta;

   -- BUG 0024774 - 20/11/2012 - JMF
   FUNCTION f_seleccionable(psproduc IN NUMBER, pcactivi IN NUMBER, pcgarant IN NUMBER)
      RETURN NUMBER IS
      cuantos        NUMBER;
   BEGIN
      SELECT COUNT(*)
        INTO cuantos
        FROM garanpro
       WHERE sproduc = psproduc
         AND cactivi = pcactivi
         AND cgarpadre = pcgarant;

      IF cuantos = 0 THEN
         RETURN 1;
      ELSE
         RETURN 0;
      END IF;
   END f_seleccionable;

   FUNCTION f_padre_con_hijos(
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pcgarant IN NUMBER,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER)
      RETURN NUMBER IS
      num_espacios   NUMBER;

      CURSOR garan_hijo IS
         SELECT cgarant
           FROM garanpro
          WHERE cgarpadre = pcgarant
            AND sproduc = psproduc
            AND cactivi = pcactivi;

      CURSOR garan_nieto(p2cgarant IN NUMBER) IS
         SELECT cgarant
           FROM garanpro
          WHERE cgarpadre = p2cgarant
            AND sproduc = psproduc
            AND cactivi = pcactivi;

      vcvnisiv       NUMBER;
      vcuantos       NUMBER := 0;
   BEGIN
      SELECT cvisniv
        INTO vcvnisiv
        FROM garanpro
       WHERE sproduc = psproduc
         AND cactivi = pcactivi
         AND cgarant = pcgarant;

      IF vcvnisiv = 3 THEN
         RETURN 0;
      ELSIF vcvnisiv = 2 THEN
         FOR i IN garan_hijo LOOP
            IF pac_siniestros.f_seleccionable(psproduc, pcactivi, i.cgarant) = 1 THEN
               SELECT COUNT(1)
                 INTO vcuantos
                 FROM sin_gar_causa sgc
                WHERE sgc.sproduc = psproduc
                  AND sgc.cactivi = pcactivi
                  AND sgc.ccausin = pccausin
                  AND sgc.cmotsin = pcmotsin
                  AND cgarant = i.cgarant;

               IF vcuantos > 0 THEN
                  --este en sin_gar_causa
                  RETURN 1;
               END IF;
            END IF;
         END LOOP;

         RETURN 0;
      ELSE
         FOR i IN garan_hijo LOOP
            IF pac_siniestros.f_seleccionable(psproduc, pcactivi, i.cgarant) = 1 THEN
               SELECT COUNT(1)
                 INTO vcuantos
                 FROM sin_gar_causa sgc
                WHERE sgc.sproduc = psproduc
                  AND sgc.cactivi = pcactivi
                  AND sgc.ccausin = pccausin
                  AND sgc.cmotsin = pcmotsin
                  AND cgarant = i.cgarant;

               IF vcuantos > 0 THEN
                  --este en sin_gar_causa
                  RETURN 1;
               END IF;
            ELSE
               FOR j IN garan_nieto(i.cgarant) LOOP
                  IF pac_siniestros.f_seleccionable(psproduc, pcactivi, j.cgarant) = 1 THEN
                     SELECT COUNT(1)
                       INTO vcuantos
                       FROM sin_gar_causa sgc
                      WHERE sgc.sproduc = psproduc
                        AND sgc.cactivi = pcactivi
                        AND sgc.ccausin = pccausin
                        AND sgc.cmotsin = pcmotsin
                        AND cgarant = i.cgarant;

                     IF vcuantos > 0 THEN
                        --este en sin_gar_causa
                        RETURN 1;
                     END IF;
                  END IF;
               END LOOP;
            END IF;
         END LOOP;

         RETURN 0;
      END IF;
   END f_padre_con_hijos;

   FUNCTION f_get_agente_npol(psseguro IN NUMBER, pcagente OUT NUMBER)
      RETURN NUMBER IS
      num_espacios   NUMBER;
      vobjectname    VARCHAR2(200) := 'PAC_SINIESTROS.f_get_agente_npol';
   BEGIN
      SELECT cagente
        INTO pcagente
        FROM seguros
       WHERE sseguro = psseguro;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'PAC_siniestros', 1, 'F_get_agente_npol', SQLERRM);
         RETURN 1;
   END f_get_agente_npol;

   -- BUG 25800:NSS:21/02/2013
   FUNCTION f_get_preg_siniestro(
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pcgarant IN VARCHAR2,
      pccausin IN NUMBER,   --27354:NSS:18/06/2013
      pcmotsin IN NUMBER,   --27354:NSS:18/06/2013
      pcidioma IN NUMBER,
      ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_PROF.f_get_preg_siniestro';
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT distinct cpregun, ctippre, cpretip, nbloque, tprefor, tpregun, timagen, cobliga ,
                 nvaldef, cmodifi'   --27354:NSS:18/06/2013
         || ' from
         (SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque,  pp.npreord, pp.tprefor, pr.tpregun, cp.timagen, pp.cobliga,
            pp.nvaldef, pp.cmodifi'   --27354:NSS:18/06/2013
         || '
            FROM sin_pro_pregunta pp, codipregun cp, preguntas pr
           WHERE pp.sproduc = '
         || psproduc || '
             AND pp.cactivi = ' || pcactivi
         || '
             AND pp.ccausin IS NULL '   --27354:NSS:18/06/2013
         || ' AND pp.cmotsin IS NULL '   --27354:NSS:18/06/2013
         || ' AND pp.cpregun = cp.cpregun
             AND pr.cpregun = cp.cpregun
             AND pr.cidioma = '
         || pcidioma;

      --Ini 27354:NSS:18/06/2013
      IF pccausin IS NOT NULL
         AND pcmotsin IS NOT NULL THEN
         ptquery :=
            ptquery
            || '
                         UNION
                         SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque, pp.npreord, pp.tprefor, pr.tpregun, cp.timagen, pp.cobliga,
                                pp.nvaldef, pp.cmodifi
                           FROM sin_pro_pregunta pp, codipregun cp, preguntas pr
                          WHERE pp.sproduc = '
            || psproduc || '
                            AND pp.cactivi = ' || pcactivi
            || '
                            AND pp.ccausin = ' || pccausin
            || '
                            AND pp.cmotsin = ' || pcmotsin
            || '
                            AND pp.cpregun = cp.cpregun
                            AND pr.cpregun = cp.cpregun
                            AND pr.cidioma = '
            || pcidioma;
      END IF;

      --Fin 27354:NSS:18/06/2013
      IF pcgarant IS NOT NULL THEN
         ptquery :=
            ptquery
            || '
         UNION
         SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque, pp.npreord, pp.tprefor, pr.tpregun, cp.timagen, pp.cobliga,
                pp.nvaldef, pp.cmodifi'   --27354:NSS:18/06/2013
            || ' FROM sin_gar_pregunta pp, codipregun cp, preguntas pr
          WHERE pp.sproduc = '
            || psproduc || '
            AND pp.cactivi = ' || pcactivi
            || '
            AND pp.ccausin IS NULL '   --27354:NSS:18/06/2013
            || ' AND pp.cmotsin IS NULL '   --27354:NSS:18/06/2013
                                         || ' AND pp.cgarant in (' || pcgarant
            || ')
            AND pp.cpregun = cp.cpregun
            AND pr.cpregun = cp.cpregun
            AND pr.cidioma = '
            || pcidioma;

         --Ini 27354:NSS:18/06/2013
         IF pccausin IS NOT NULL
            AND pcmotsin IS NOT NULL THEN
            ptquery :=
               ptquery
               || '
                             UNION
                             SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque, pp.npreord, pp.tprefor, pr.tpregun, cp.timagen, pp.cobliga,
                                    pp.nvaldef, pp.cmodifi
                               FROM sin_gar_pregunta pp, codipregun cp, preguntas pr
                              WHERE pp.sproduc = '
               || psproduc || '
                                AND pp.cactivi = ' || pcactivi
               || '
                                AND pp.cgarant in (' || pcgarant
               || ')
                                AND pp.ccausin = ' || pccausin
               || '
                                AND pp.cmotsin = ' || pcmotsin
               || '
                                AND pp.cpregun = cp.cpregun
                                AND pr.cpregun = cp.cpregun
                                AND pr.cidioma = '
               || pcidioma;
         END IF;
      --Fin 27354:NSS:18/06/2013
      END IF;

      ptquery := ptquery || ') ORDER BY nbloque, cpregun';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_preg_siniestro;

   FUNCTION f_get_resp_siniestro(pcpregun IN VARCHAR2, pcidioma IN NUMBER, ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_PROF.f_get_resp_siniestro';
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT cpregun, Crespue, trespue
                    FROM respuestas
                   WHERE cpregun in ('
         || pcpregun || ')
                     AND cidioma = ' || pcidioma || '
                   ORDER BY crespue';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_resp_siniestro;

   FUNCTION f_ins_pregunta(
      pnsinies IN sin_siniestro.nsinies%TYPE,   -- Bug 32428 - 30/09/2014 - JTT
      pcpregun IN NUMBER,
      pcrespue IN NUMBER,
      ptrespue IN VARCHAR2)
      RETURN NUMBER IS
      num_err        NUMBER := 0;
      vparam         VARCHAR2(500)
         := 'parámetros - pnsinies: ' || pnsinies || ' pcpregun:' || pcpregun || ' pcrespue:'
            || pcrespue || ' ptrespue:' || ptrespue;
      vpasexec       NUMBER := 1;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_ins_pregunta';
      vcrespue       NUMBER;
   BEGIN
      BEGIN
         vcrespue := ptrespue;
      EXCEPTION
         WHEN VALUE_ERROR THEN
            vcrespue := pcrespue;
      END;

      INSERT INTO pregunsini
                  (nsinies, cpregun, crespue, trespue)
           VALUES (pnsinies, pcpregun, vcrespue, ptrespue);

      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'f_ins_pregunta', 1, 'pnsinies=' || pnsinies,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN SQLERRM;
   END f_ins_pregunta;

   FUNCTION f_limpia_preguntas(pnsinies IN sin_siniestro.nsinies%TYPE)   -- Bug 32428 - 30/09/2014 - JTT
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_PROF.f_limpia_preguntas';
   BEGIN
      vtraza := 1;

      DELETE FROM pregunsini
            WHERE nsinies = pnsinies;

      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'f_limpia_preguntas', 1, 'pnsinies=' || pnsinies,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
   END f_limpia_preguntas;

   FUNCTION f_get_preguntas(
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      pnsinies IN sin_siniestro.nsinies%TYPE,   -- Bug 32428 - 30/09/2014 - JTT
      pcidioma IN NUMBER,
      ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_preguntas';
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT * from
         (SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque,  pp.npreord, pp.tprefor, pr.tpregun, cp.timagen, NULL as crespue, NULL as trespue
            FROM sin_pro_pregunta pp, codipregun cp, preguntas pr, '
         || ' sin_siniestro si '   --Bug 27354:NSS:19/06/2013
                                || '  WHERE pp.sproduc = ' || psproduc
         || '
             AND pp.cactivi = ' || pcactivi
         || '
             AND pp.cpregun = cp.cpregun
             AND pr.cpregun = cp.cpregun
             AND pr.cidioma = '
         || pcidioma
         || '
             AND pp.cpregun NOT IN (SELECT DISTINCT PS.CPREGUN FROM PREGUNSINI ps where nsinies = '
         || pnsinies || ') ' || ' AND ( '   --Bug 27354:NSS:19/06/2013
         || ' (pp.ccausin = si.ccausin  AND pp.cmotsin = si.cmotsin ) OR '   --Bug 27354:NSS:19/06/2013
         || ' (pp.ccausin IS NULL AND pp.cmotsin IS NULL ) '   --Bug 27354:NSS:19/06/2013
         || ')
        UNION
         SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque, pp.npreord, pp.tprefor, pr.tpregun, cp.timagen, NULL as crespue, NULL AS trespue
           FROM sin_gar_pregunta pp, codipregun cp, preguntas pr, '
         || ' sin_siniestro si '   --Bug 27354:NSS:19/06/2013
                                || '  WHERE pp.sproduc = ' || psproduc
         || '
            AND pp.cactivi = ' || pcactivi
         || '
            AND pp.cpregun = cp.cpregun
            AND pr.cpregun = cp.cpregun
            AND pr.cidioma = '
         || pcidioma
         || '
            AND pp.cpregun NOT IN (SELECT DISTINCT PS.CPREGUN FROM PREGUNSINI ps where nsinies = '
         || pnsinies || ') ' || ' AND ( '   --Bug 27354:NSS:19/06/2013
         || ' (pp.ccausin = si.ccausin  AND pp.cmotsin = si.cmotsin ) OR '   --Bug 27354:NSS:19/06/2013
         || ' (pp.ccausin IS NULL AND pp.cmotsin IS NULL ) '   --Bug 27354:NSS:19/06/2013
         || ')
        UNION
         SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque, pp.npreord, pp.tprefor, pr.tpregun, cp.timagen,  ps.CRESPUE, ps.TRESPUE
           FROM sin_pro_pregunta pp, codipregun cp, preguntas pr, pregunsini ps
          WHERE pp.cpregun = cp.cpregun
            AND pr.cpregun = cp.cpregun
            AND pr.cidioma = '
         || pcidioma || '
            AND ps.nsinies = ' || pnsinies
         || '
            AND pp.cpregun = ps.cpregun
        UNION
         SELECT pp.cpregun, cp.ctippre, pp.cpretip, pp.nbloque, pp.npreord, pp.tprefor, pr.tpregun, cp.timagen,  ps.CRESPUE, ps.TRESPUE
           FROM sin_gar_pregunta pp, codipregun cp, preguntas pr, pregunsini ps
           WHERE ps.cpregun = cp.cpregun
            AND pr.cpregun = ps.cpregun
            AND pr.cidioma = '
         || pcidioma || '
            AND ps.nsinies = ' || pnsinies
         || '
            AND pp.cpregun = ps.cpregun)
        ORDER BY nbloque, cpregun, npreord';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_preguntas;

-- FIN BUG 25800:NSS:21/02/2013
   FUNCTION f_get_lstlocaliza(pnsinies IN VARCHAR2, pntramit IN NUMBER, ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_lstlocaliza';
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT  nsinies, ntramit, nlocali, tnomvia, nnumvia, tpoblac, tprovin
            FROM sin_tramita_localiza lo, poblaciones po, provincias pr
            WHERE po.cprovin = lo.cprovin
              AND po.cpoblac = lo.cpoblac
              AND pr.cpais   = lo.cpais
              AND pr.cprovin = lo.cprovin
              AND lo.nsinies = '
         || pnsinies || 'AND lo.ntramit <> ' || pntramit;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_lstlocaliza;

   -- BUG 0024742 - MDS - 18/07/2013
   FUNCTION f_indice_siniestralidad(
      psseguro IN NUMBER,
      pnriesgo IN NUMBER DEFAULT 1,
      pcgarant IN NUMBER DEFAULT NULL,
      pfecha IN DATE DEFAULT NULL)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_indice_siniestralidad';
      viprianu       NUMBER;
      visinret       NUMBER;
   BEGIN
      vtraza := 1;

      IF pcgarant IS NOT NULL THEN
         -- iprianu a nivel garantÃ­a
         SELECT NVL(iprianu, 0)
           INTO viprianu
           FROM garanseg g
          WHERE sseguro = psseguro
            AND nriesgo = pnriesgo
            AND cgarant = pcgarant
            AND nmovimi = (SELECT MAX(nmovimi)
                             FROM garanseg g2
                            WHERE g2.sseguro = g.sseguro
                              AND g2.nriesgo = g.nriesgo
                              AND g2.cgarant = g.cgarant);
      ELSE
         -- iprianu a nivel seguro
         SELECT NVL(iprianu, 0)
           INTO viprianu
           FROM seguros
          WHERE sseguro = psseguro;
      END IF;

      IF viprianu = 0 THEN
         -- indice de siniestralidad = 0
         RETURN 0;
      END IF;

      vtraza := 2;

      IF pcgarant IS NOT NULL THEN
         -- isinret a nivel garantÃ­a
         SELECT NVL(SUM(NVL(stpg.isinret, 0)), 0)
           INTO visinret
           FROM sin_siniestro si, sin_tramitacion st, sin_tramita_pago sp,
                sin_tramita_pago_gar stpg
          WHERE si.nsinies = st.nsinies
            AND st.nsinies = sp.nsinies
            AND st.ntramit = sp.ntramit
            AND sp.sidepag = stpg.sidepag
            AND si.sseguro = psseguro
            AND stpg.cgarant = pcgarant
            AND si.fsinies <= NVL(pfecha, si.fsinies)
            AND EXISTS(SELECT 1
                         FROM sin_movsiniestro
                        WHERE nsinies = sp.nsinies
                          AND cestsin IN(0, 1, 4));
      ELSE
         SELECT NVL(SUM(NVL(sp.isinret, 0)), 0)
           -- isinret a nivel seguro
         INTO   visinret
           FROM sin_siniestro si, sin_tramitacion st, sin_tramita_pago sp
          WHERE si.nsinies = st.nsinies
            AND st.nsinies = sp.nsinies
            AND st.ntramit = sp.ntramit
            AND si.sseguro = psseguro
            AND si.fsinies <= NVL(pfecha, si.fsinies)
            AND EXISTS(SELECT 1
                         FROM sin_movsiniestro
                        WHERE nsinies = sp.nsinies
                          AND cestsin IN(0, 1, 4));
      END IF;

      vtraza := 3;
      RETURN (visinret / viprianu) * 100;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza,
                     'Param - psseguro=' || psseguro || ' pnriesgo=' || pnriesgo
                     || ' pcgarant=' || pcgarant || ' pfecha=' || pfecha,
                     'OTHERS: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 0;
   END f_indice_siniestralidad;

   --Ini Bug 24708:NSS:10/10/2013
   FUNCTION f_get_lstoficinas(
      pcbanco IN NUMBER,
      pcofici IN NUMBER,
      ptofici IN VARCHAR2,
      ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_lstoficinas';
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT cbanco, coficin, cdesco1, tbanco, ttelef1, ttelef2, ttelef3, cpostal, tpobla1, tpobla2, nprefij,
                 cdesco2, toficin, tdirecc, cdistri, sperson, nempleats, cinactiva
            FROM oficinas
           WHERE cbanco = '
         || pcbanco;

      IF pcofici IS NOT NULL THEN
         ptquery := ptquery || ' AND coficin = ' || pcofici;
      END IF;

      IF ptofici IS NOT NULL THEN
         ptquery := ptquery || ' AND toficin LIKE ''%' || ptofici || '%''';
      END IF;

      ptquery := ptquery || ' ORDER BY coficin';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_lstoficinas;

   FUNCTION f_get_beneficiario_designado(
      pnsinies IN VARCHAR2,
      psseguro IN NUMBER,
      ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_beneficiario_designado';
      vcagente       NUMBER;
      vfsinies       DATE;
   BEGIN
      vtraza := 1;

      SELECT s.cagente, TRUNC(si.fsinies)
        INTO vcagente, vfsinies
        FROM seguros s, sin_siniestro si
       WHERE s.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      ptquery :=
         'SELECT b.sperson,b.cgarant||'' - ''||  f_nombre(b.sperson, 1,' || vcagente
         || ') tnombre , b.pparticip
            FROM benespseg b, per_detper p, sin_tramita_reserva str
           WHERE  sseguro = '
         || psseguro
         || '
              AND b.cgarant IN(SELECT DISTINCT cgarant
                               FROM sin_gar_causa sg, seguros s, sin_siniestro si
                              WHERE sg.sproduc = s.sproduc
                                AND s.sseguro = si.sseguro
                                AND si.nsinies = '
         || pnsinies
         || '
                                AND sg.cactivi = 0
                                AND sg.ccausin = si.ccausin
                                AND sg.cmotsin = si.cmotsin
                               UNION
                               SELECT 0 FROM DUAL)
             AND(str.nsinies, str.ntramit, str.ctipres, str.nmovres) IN(
                                          SELECT   nsinies, ntramit, ctipres,
                                                   MAX(nmovres) nmovres
                                              FROM sin_tramita_reserva
                                             WHERE nsinies = '
         || pnsinies
         || '
                                               AND ntramit = 0
                                          GROUP BY nsinies, ntramit, ctipres)
             AND  b.sperson = p.sperson
             AND  b.finiben <= TO_DATE('''
         || vfsinies || ''')
             AND (b.ffinben >= TO_DATE(''' || vfsinies
         || ''') OR b.ffinben IS NULL)
             AND  NVL(b.cestado,0) <> 3'
     || ' AND p.cagente = ff_agente_cpervisio( (select s.cagente from seguros s where '|| psseguro ||' = s.sseguro) )';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_beneficiario_designado;

--Fin Bug 24708:NSS:10/10/2013

   --Ini Bug 28506:NSS:16/10/2013
   FUNCTION f_get_garantias_dependientes(
      pgarantias IN VARCHAR2,
      pcempres IN NUMBER,
      ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_garantias_dependientes';
      vcagente       NUMBER;
      vfsinies       DATE;
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT cgarant, cgardep
                    FROM sin_gar_dependientes
                   WHERE cgarant IN ( '
         || pgarantias || ')
                     AND cempres = ' || pcempres;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_garantias_dependientes;

--Fin Bug 28506:NSS:16/10/2013
   FUNCTION f_actualiza_preguntas(
      pnsinies IN VARCHAR2,
      psseguro IN NUMBER,
      pfsinies IN DATE,
      pcmotsin IN NUMBER,
      pccausin IN NUMBER,
      pcidioma IN NUMBER)
      RETURN NUMBER IS
      --0024708: (POSPG500)- Parametrizacion - Sinestros/0157275 actualizar preguntas
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_actualiza _preguntas';
      vtraza         NUMBER;
      vccausin_old   sin_gar_causa.ccausin%TYPE;
      vcmotsin_old   sin_gar_causa.cmotsin%TYPE;
      verror         NUMBER;
      vcrespue       NUMBER;
      vcactivi       seguros.cactivi%TYPE;
      vsproduc       seguros.sproduc%TYPE;
   BEGIN
      vtraza := 1;

      SELECT ccausin, cmotsin
        INTO vccausin_old, vcmotsin_old
        FROM sin_siniestro
       WHERE nsinies = pnsinies;

      vtraza := 2;

      SELECT cactivi, sproduc
        INTO vcactivi, vsproduc
        FROM seguros
       WHERE sseguro = psseguro;

      vtraza := 3;

      -- SE BORRAN
      -- las preguntas de la causa/motivo original
      FOR i IN ((SELECT pp.cpregun, NVL(pp.nvaldef, 0)
                   FROM sin_pro_pregunta pp, codipregun cp, preguntas pr
                  WHERE pp.sproduc = vsproduc
                    AND pp.cactivi = vcactivi
                    AND pp.ccausin = vccausin_old
                    AND pp.cmotsin = vcmotsin_old
                    AND pp.cpregun = cp.cpregun
                    AND pr.cpregun = cp.cpregun
                    AND pr.cidioma = pcidioma
                 UNION
                 SELECT pp.cpregun, NVL(pp.nvaldef, 0)
                   FROM sin_gar_pregunta pp, codipregun cp, preguntas pr
                  WHERE pp.sproduc = vsproduc
                    AND pp.cactivi = vcactivi
                    AND pp.cgarant IN(SELECT DISTINCT cgarant
                                                 FROM garanseg g1
                                                WHERE g1.sseguro = psseguro
                                                  AND g1.nmovimi =
                                                        (SELECT MIN(g2.nmovimi)
                                                           FROM garanseg g2
                                                          WHERE g2.sseguro = g1.sseguro
                                                            AND g2.finiefe >= TRUNC(pfsinies)))
                    AND pp.ccausin = vccausin_old
                    AND pp.cmotsin = vcmotsin_old
                    AND pp.cpregun = cp.cpregun
                    AND pr.cpregun = cp.cpregun
                    AND pr.cidioma = pcidioma)
                MINUS   -- menos las que tambien estÃ¡n en la nueva causa/motivo
                (SELECT pp.cpregun, NVL(pp.nvaldef, 0)
                   FROM sin_pro_pregunta pp, codipregun cp, preguntas pr
                  WHERE pp.sproduc = vsproduc
                    AND pp.cactivi = vcactivi
                    AND pp.ccausin = pccausin
                    AND pp.cmotsin = pcmotsin
                    AND pp.cpregun = cp.cpregun
                    AND pr.cpregun = cp.cpregun
                    AND pr.cidioma = pcidioma
                 UNION
                 SELECT pp.cpregun, NVL(pp.nvaldef, 0)
                   FROM sin_gar_pregunta pp, codipregun cp, preguntas pr
                  WHERE pp.sproduc = vsproduc
                    AND pp.cactivi = vcactivi
                    AND pp.cgarant IN(SELECT DISTINCT cgarant
                                                 FROM garanseg g1
                                                WHERE g1.sseguro = psseguro
                                                  AND g1.nmovimi =
                                                        (SELECT MIN(g2.nmovimi)
                                                           FROM garanseg g2
                                                          WHERE g2.sseguro = g1.sseguro
                                                            AND g2.finiefe >= TRUNC(pfsinies)))
                    AND pp.ccausin = pccausin
                    AND pp.cmotsin = pcmotsin
                    AND pp.cpregun = cp.cpregun
                    AND pr.cpregun = cp.cpregun
                    AND pr.cidioma = pcidioma)) LOOP
         DELETE      pregunsini
               WHERE nsinies = pnsinies
                 AND cpregun = i.cpregun;
      END LOOP;

      vtraza := 4;

      -- SE GRABAN
      -- las preguntas de la nueva causa/motivo
      FOR j IN (SELECT DISTINCT cpregun, nvaldef
                           FROM (SELECT pp.cpregun, NVL(pp.nvaldef, -1) nvaldef
                                   FROM sin_pro_pregunta pp, codipregun cp, preguntas pr
                                  WHERE pp.sproduc = vsproduc
                                    AND pp.cactivi = vcactivi
                                    AND pp.ccausin = pccausin
                                    AND pp.cmotsin = pcmotsin
                                    AND pp.cpregun = cp.cpregun
                                    AND pr.cpregun = cp.cpregun
                                    AND pr.cidioma = pcidioma
                                 UNION
                                 SELECT pp.cpregun, NVL(pp.nvaldef, -1) nvaldef
                                   FROM sin_gar_pregunta pp, codipregun cp, preguntas pr
                                  WHERE pp.sproduc = vsproduc
                                    AND pp.cactivi = vcactivi
                                    AND pp.cgarant IN(
                                          SELECT DISTINCT cgarant
                                                     FROM garanseg g1
                                                    WHERE g1.sseguro = psseguro
                                                      AND g1.nmovimi =
                                                            (SELECT MAX(g2.nmovimi)
                                                               FROM garanseg g2
                                                              WHERE g2.sseguro = g1.sseguro
                                                                AND g2.finiefe <=
                                                                                TRUNC(pfsinies)))
                                    AND pp.ccausin = pccausin
                                    AND pp.cmotsin = pcmotsin
                                    AND pp.cpregun = cp.cpregun
                                    AND pr.cpregun = cp.cpregun
                                    AND pr.cidioma = pcidioma)
                MINUS   -- menos las preguntas que ya estaban en la causa/motivo original
                (SELECT pp.cpregun, NVL(pp.nvaldef, -1) nvaldef
                   FROM sin_pro_pregunta pp, codipregun cp, preguntas pr
                  WHERE pp.sproduc = vsproduc
                    AND pp.cactivi = vcactivi
                    AND pp.ccausin = vccausin_old
                    AND pp.cmotsin = vcmotsin_old
                    AND pp.cpregun = cp.cpregun
                    AND pr.cpregun = cp.cpregun
                    AND pr.cidioma = pcidioma
                 UNION
                 SELECT pp.cpregun, NVL(pp.nvaldef, -1) nvaldef
                   FROM sin_gar_pregunta pp, codipregun cp, preguntas pr
                  WHERE pp.sproduc = vsproduc
                    AND pp.cactivi = vcactivi
                    AND pp.cgarant IN(SELECT DISTINCT cgarant
                                                 FROM garanseg g1
                                                WHERE g1.sseguro = psseguro
                                                  AND g1.nmovimi =
                                                        (SELECT MAX(g2.nmovimi)
                                                           FROM garanseg g2
                                                          WHERE g2.sseguro = g1.sseguro
                                                            AND g2.finiefe <= TRUNC(pfsinies)))
                    AND pp.ccausin = vccausin_old
                    AND pp.cmotsin = vcmotsin_old
                    AND pp.cpregun = cp.cpregun
                    AND pr.cpregun = cp.cpregun
                    AND pr.cidioma = pcidioma)) LOOP
         IF j.nvaldef = -1 THEN
            vcrespue := NULL;
         ELSE
            vcrespue := j.nvaldef;
         END IF;

         IF vcrespue IS NOT NULL THEN
            verror := f_ins_pregunta(pnsinies, j.cpregun, vcrespue, vcrespue);

            IF verror <> 0 THEN
               RETURN verror;
            END IF;
         END IF;
      END LOOP;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error ', SQLERRM);
         RETURN 1000455;
   END f_actualiza_preguntas;

-- 0024708: (POSPG500)- Parametrizacion - Sinestros/0157275 actualizar preguntas (Refresco de preguntas despuÃ¿Â©s de modificación cabecera siniestro)
   FUNCTION f_get_producto(pnsinies IN VARCHAR2, psproduc OUT NUMBER, pcactivi OUT NUMBER)
      RETURN NUMBER IS
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_producto';
      vtraza         NUMBER;
      verror         NUMBER;
   BEGIN
      SELECT s.sproduc, s.cactivi
        INTO psproduc, pcactivi
        FROM sin_siniestro si, seguros s
       WHERE s.sseguro = si.sseguro
         AND si.nsinies = pnsinies;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error ', SQLERRM);
         RETURN 1000455;
   END f_get_producto;

--Ini Bug 28506:NSS:28/10/2013
   FUNCTION f_get_inf_reaseguro(pnsinies IN VARCHAR2, pcidioma IN NUMBER, ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_inf_reaseguro';
      vcagente       NUMBER;
      vfsinies       DATE;
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT cconcep, concep.tatribu as tconcep, ccompani, scontra, nversio, ctramo, tramo.TATRIBU as ttramo,
                 iimport, fmovimi, cdebhab, dh.tatribu as tdebhab, cestado, est.tatribu as testado, fliquid, tdescri
            FROM movctatecnica, detvalores concep, detvalores tramo, detvalores dh, detvalores est
           WHERE nsinies = '
         || pnsinies
         || '
             AND concep.cvalor = 124
             AND concep.cidioma = ' || pcidioma
         || ' AND concep.catribu = cconcep
             AND tramo.cvalor = 105
             AND tramo.cidioma = '
         || pcidioma
         || ' AND tramo.catribu = ctramo
             AND dh.cvalor = 123
             AND dh.cidioma = '
         || pcidioma
         || ' AND dh.catribu = cdebhab
             AND est.cvalor = 800106
             AND est.cidioma = '
         || pcidioma || ' AND est.catribu = cestado
             AND cconcep in (5,25)';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_inf_reaseguro;

--Fin Bug 28506:NSS:28/10/2013

   --Ini Bug 29177/160128:NSS:13/01/2014
   FUNCTION f_ins_pago_contrato(
      psidepag IN NUMBER,
      pcdp IN VARCHAR2,
      ppospres IN VARCHAR2,
      pcrp IN VARCHAR2,
      pposcrp IN VARCHAR2,
      pcontrato IN VARCHAR2,
      pcgestor IN VARCHAR2)
      RETURN NUMBER IS
      num_err        NUMBER := 0;
      vparam         VARCHAR2(500)
         := 'parámetros - psidepag: ' || psidepag || ' pcdp:' || pcdp || ' ppospres:'
            || ppospres || ' pcrp:' || pcrp || ' pposcrp:' || pposcrp || ' pcontrato:'
            || pcontrato || ' pcgestor:' || pcgestor;
      vpasexec       NUMBER := 1;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_ins_pago_contrato';
      vcrespue       NUMBER;
   BEGIN
      INSERT INTO sin_tramita_pago_contrato
                  (sidepag, cdp, pospres, crp, poscrp, contrato, cgestor)
           VALUES (psidepag, pcdp, ppospres, pcrp, pposcrp, pcontrato, pcgestor);

      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, 1, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN SQLERRM;
   END f_ins_pago_contrato;

--Fin Bug 29177/160128:NSS:13/01/2014

   -- BUG 28830:NSS:06/11/2013 - Compensación de siniestros contra cartera.
   FUNCTION f_get_datos_pago(
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      pntramit OUT sin_tramita_pago.ntramit%TYPE,
      psperson OUT sin_tramita_pago.sperson%TYPE,
      pctipdes OUT sin_tramita_pago.ctipdes%TYPE,
      pctippag OUT sin_tramita_pago.ctippag%TYPE,
      pisinret OUT sin_tramita_pago.isinret%TYPE,
      pcforpag OUT sin_tramita_pago.cforpag%TYPE,
      pfordpag OUT sin_tramita_pago.fordpag%TYPE,
      pcconpag OUT sin_tramita_pago.cconpag%TYPE,
      pccauind OUT sin_tramita_pago.ccauind%TYPE,
      pctipban OUT sin_tramita_pago.ctipban%TYPE,
      pcbancar OUT sin_tramita_pago.cbancar%TYPE,
      pcmonpag OUT sin_tramita_pago.cmonpag%TYPE,
      pcultpag OUT sin_tramita_pago.cultpag%TYPE)
      RETURN NUMBER IS
      /*************************************************************************
        Devuelve datos de un pago determinado
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_datos_pago';
      vparam         VARCHAR2(1000)
         := 'psidepag = ' || psidepag || ' psperson = ' || psperson || ' pctippag = '
            || pctippag || ' pcforpag = ' || pcforpag || ' pcconpag = ' || pcconpag
            || ' pctipban = ' || pctipban || ' pcmonpag = ' || pcmonpag;
      vtraza         NUMBER := 1;
   BEGIN
      SELECT isinret, ntramit, ctipdes, ctippag, cmonpag, cconpag, ccauind, cbancar,
             cforpag, fordpag, ctipban, cultpag, sperson
        INTO pisinret, pntramit, pctipdes, pctippag, pcmonpag, pcconpag, pccauind, pcbancar,
             pcforpag, pfordpag, pctipban, pcultpag, psperson
        FROM sin_tramita_pago
       WHERE sidepag = psidepag;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_datos_pago;

   FUNCTION f_get_datos_pago_gar(
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      pquery OUT VARCHAR2)
      RETURN NUMBER IS
      /*************************************************************************
        Devuelve datos del detalle del pago determinado
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_datos_pago_gar';
      vparam         VARCHAR2(1000) := 'psidepag = ' || psidepag || ' pquery = ' || pquery;
      vtraza         NUMBER := 1;
   BEGIN
      pquery :=
         'SELECT  ctipres, nmovres, cgarant, fperini, fperfin,
                          cmonres, isinret, cmonpag, isinretpag, fcambio, cconpag, norden
                 FROM sin_tramita_pago_gar
                 WHERE sidepag = '
         || psidepag;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_datos_pago_gar;

   FUNCTION f_get_detalle_pago(
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      pctipres IN sin_tramita_pago_gar.ctipres%TYPE,
      pnmovres IN sin_tramita_pago_gar.nmovres%TYPE,
      pcgarant OUT sin_tramita_pago_gar.cgarant%TYPE,
      pfperini OUT sin_tramita_pago_gar.fperini%TYPE,
      pfperfin OUT sin_tramita_pago_gar.fperfin%TYPE,
      pcmonres OUT sin_tramita_pago_gar.cmonres%TYPE,
      pisinret OUT sin_tramita_pago_gar.isinret%TYPE,
      pcmonpag_gar OUT sin_tramita_pago_gar.cmonpag%TYPE,
      pisinretpag OUT sin_tramita_pago_gar.isinretpag%TYPE,
      pfcambio OUT sin_tramita_pago_gar.fcambio%TYPE,
      pcconpag_gar OUT sin_tramita_pago_gar.cconpag%TYPE,
      pnorden OUT sin_tramita_pago_gar.norden%TYPE)
      RETURN NUMBER IS
      /*************************************************************************
        Devuelve datos del detalle del pago determinado
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_detalle_pago';
      vparam         VARCHAR2(1000)
         := 'psidepag = ' || psidepag || ' pctipres = ' || pctipres || ' pnmovres = '
            || pnmovres;
      vtraza         NUMBER := 1;
   BEGIN
      SELECT cgarant, fperini, fperfin, cmonres, isinret, cmonpag, isinretpag,
             fcambio, cconpag, norden
        INTO pcgarant, pfperini, pfperfin, pcmonres, pisinret, pcmonpag_gar, pisinretpag,
             pfcambio, pcconpag_gar, pnorden
        FROM sin_tramita_pago_gar
       WHERE sidepag = psidepag
         AND ctipres = pctipres
         AND nmovres = pnmovres;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_detalle_pago;

   FUNCTION f_get_detalle_reserva(
      pnsinies IN sin_tramita_reserva.nsinies%TYPE,
      pntramit IN sin_tramita_reserva.ntramit%TYPE,
      pctipres IN sin_tramita_reserva.ctipres%TYPE,
      pcgarant IN sin_tramita_reserva.cgarant%TYPE,
      pcmonres IN sin_tramita_reserva.cmonres%TYPE,
      pfresini IN sin_tramita_reserva.fresini%TYPE,
      pfresfin IN sin_tramita_reserva.fresfin%TYPE,
      pnmovres OUT sin_tramita_reserva.nmovres%TYPE,
      pccalres OUT sin_tramita_reserva.ccalres%TYPE,
      pireserva OUT sin_tramita_reserva.ireserva%TYPE,
      pipago OUT sin_tramita_reserva.ipago%TYPE,
      picaprie OUT sin_tramita_reserva.icaprie%TYPE,
      pipenali OUT sin_tramita_reserva.ipenali%TYPE,
      piingreso OUT sin_tramita_reserva.iingreso%TYPE,
      pirecobro OUT sin_tramita_reserva.irecobro%TYPE,
      piprerec OUT sin_tramita_reserva.iprerec%TYPE,
      pctipgas OUT sin_tramita_reserva.ctipgas%TYPE,
      pifranq OUT sin_tramita_reserva.ifranq%TYPE,
      pndias OUT sin_tramita_reserva.ndias%TYPE,
      pitotimp OUT sin_tramita_reserva.itotimp%TYPE,
      pidres OUT sin_tramita_reserva.idres%TYPE)
      RETURN NUMBER IS
      /*************************************************************************
        Devuelve datos de la reserva del pago
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_detalle_reserva';
      vparam         VARCHAR2(1000)
         := 'pnsinies = ' || pnsinies || ' pntramit = ' || pntramit || ' pctipres = '
            || pctipres || ' pcgarant = ' || pcgarant;
      vtraza         NUMBER := 1;
   BEGIN
      SELECT nmovres, ccalres, ireserva, ipago, icaprie, ipenali, iingreso, irecobro,
             iprerec, ctipgas, ifranq, ndias, itotimp, idres
        INTO pnmovres, pccalres, pireserva, pipago, picaprie, pipenali, piingreso, pirecobro,
             piprerec, pctipgas, pifranq, pndias, pitotimp, pidres
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND cgarant = pcgarant
         AND cmonres = pcmonres
         AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
         AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
         AND nmovres = (SELECT MAX(nmovres)
                          FROM sin_tramita_reserva
                         WHERE nsinies = pnsinies
                           AND ntramit = pntramit
                           AND ctipres = pctipres
                           AND ctipres = 1
                           AND cgarant = pcgarant
                           AND cmonres = pcmonres
                           AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
                           AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')));

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_detalle_reserva;

   FUNCTION f_destinatario_empresa(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pcempres IN NUMBER,
      psperson OUT NUMBER)
      RETURN NUMBER IS
      /************************************************************************
       Inserta la empresa como destinatario en una tramitacion de un siniestro
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_destinatario_empresa';
      vparam         VARCHAR2(1000)
         := 'pnsinies = ' || pnsinies || ' pntramit = ' || pntramit || ' pcempres = '
            || pcempres || ' psperson = ' || psperson;
      vtraza         NUMBER := 1;
      vsperson       per_personas.sperson%TYPE;
      vnumerr        NUMBER;
   BEGIN
      vtraza := 1;

      SELECT sperson
        INTO psperson
        FROM empresas
       WHERE cempres = pcempres;

      vtraza := 2;
      vnumerr := pac_siniestros.f_ins_destinatario(pnsinies, pntramit, psperson, NULL, NULL,
                                                   NULL, NULL, 4, 1, NULL);

      IF vnumerr <> 0 THEN
         RETURN vnumerr;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_destinatario_empresa;

   FUNCTION f_get_cartera_pendiente(
      psseguro IN seguros.sseguro%TYPE,
      pnriesgo IN sin_siniestro.nriesgo%TYPE,
      pquery OUT VARCHAR2)
      RETURN NUMBER IS
      /*************************************************************************
       Query para leer los recibos pendientes de un seguro/riesgo
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_cartera_pendiente';
      vparam         VARCHAR2(1000) := 'psseguro = ' || psseguro || ' pnriesgo = ' || pnriesgo;
      vtraza         NUMBER := 1;
      vcount         NUMBER;
   BEGIN
      -- Bug 33798 - JTT - 19/05/2015: Quitamos la condicions de que el recibo haya sido enviado r.cestaux = 0;
      pquery :=
         'SELECT r.nrecibo, r.fefecto, r.ccobban, r.cdelega, v.itotalr, rc.irestorec, rc.cestcomp, r.cestaux
                 FROM recibos r, movrecibo m, vdetrecibos v,
                      (SELECT irestorec, cestcomp, nrecibo, sseguro
                       FROM   sin_recibos_compensados
                       WHERE  cestcomp = ''P'') rc
                 WHERE m.nrecibo = r.nrecibo
                 AND NOT EXISTS (SELECT 1
                                 FROM   sin_recibos_compensados rc1
                                 WHERE  m.nrecibo = rc1.nrecibo
                                 AND    r.sseguro = rc1.sseguro
                                 AND    rc1.cestcomp = ''C''
                                )
                 AND r.sseguro = '
         || psseguro || ' AND NVL(r.nriesgo,1) = ' || pnriesgo
         || ' AND m.cestrec = 0
                 AND m.smovrec = (SELECT MAX(smovrec)
                                  FROM movrecibo m1
                                  WHERE m1.nrecibo = m.nrecibo)
                 AND v.nrecibo = r.nrecibo
                 AND r.ctiprec NOT IN (9, 13, 15)
                 AND r.sseguro = rc.sseguro(+)
                 AND r.nrecibo = rc.nrecibo(+)';
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_cartera_pendiente;

   FUNCTION f_compensa_recibo(
      psseguro IN seguros.sseguro%TYPE,
      pnriesgo IN sin_siniestro.nriesgo%TYPE,
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN sin_tramita_pago.ntramit%TYPE,
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      psperson IN per_personas.sperson%TYPE,
      pnrecibo IN recibos.nrecibo%TYPE,
      pfefecto IN recibos.fefecto%TYPE,
      pccobban IN recibos.ccobban%TYPE,
      pcdelega IN recibos.cdelega%TYPE,
      pitotalr IN vdetrecibos.itotalr%TYPE,
      pfordpag IN sin_tramita_pago.fordpag%TYPE,
      pcconpag IN sin_tramita_pago.cconpag%TYPE,
      pccauind IN sin_tramita_pago.ccauind%TYPE,
      pcbancar IN sin_tramita_pago.cbancar%TYPE,
      pcmonpag IN sin_tramita_pago.cmonpag%TYPE,
      pctipres IN sin_tramita_pago_gar.ctipres%TYPE,
      pnmovres IN sin_tramita_pago_gar.nmovres%TYPE,
      pcgarant IN sin_tramita_pago_gar.cgarant%TYPE,
      pfperini IN sin_tramita_pago_gar.fperini%TYPE,
      pfperfin IN sin_tramita_pago_gar.fperfin%TYPE,
      pcmonres IN sin_tramita_pago_gar.cmonres%TYPE,
      pisinret IN sin_tramita_pago_gar.isinret%TYPE,
      pcmonpag_gar IN sin_tramita_pago_gar.cmonpag%TYPE,
      pisinretpag IN sin_tramita_pago_gar.isinretpag%TYPE,
      pfcambio IN sin_tramita_pago_gar.fcambio%TYPE,
      pcconpag_gar IN sin_tramita_pago_gar.cconpag%TYPE,
      pnorden IN sin_tramita_pago_gar.norden%TYPE,
      pirestorec IN NUMBER,
      pno_crear_cab_pago IN NUMBER,
      psidepag_cab IN sin_tramita_pago.sidepag%TYPE,
      psidepag_new OUT sin_tramita_pago.sidepag%TYPE,
      pnmovpag_new OUT sin_tramita_movpago.nmovpag%TYPE)
      RETURN NUMBER IS
      /*************************************************************************
       Crea un pago por el importe de un recibo
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_compensa_recibo';
      vparam         VARCHAR2(1000)
         := 'psseguro = ' || psseguro || ' pnriesgo = ' || pnriesgo || ' pnsinies = '
            || pnsinies || ' pntramit = ' || pntramit || ' psidepag = ' || psidepag
            || ' psperson = ' || psperson || ' pnrecibo = ' || pnrecibo || ' pfefecto = '
            || pfefecto || ' pccobban = ' || pccobban || ' pcdelega = ' || pcdelega
            || ' pitotalr = ' || pitotalr || ' pfordpag = ' || pfordpag || ' pcconpag = '
            || pcconpag || ' pccauind = ' || pccauind || ' pcbancar = ' || pcbancar
            || ' pcmonpag = ' || pcmonpag || ' pctipres = ' || pctipres || ' pnmovres = '
            || pnmovres || ' pcgarant = ' || pcgarant || ' pfperini = ' || pfperini
            || ' pfperfin = ' || pfperfin || ' pcmonres = ' || pcmonres || ' pisinret = '
            || pisinret || ' pcmonpag_gar = ' || pcmonpag_gar || ' pisinretpag = '
            || pisinretpag || ' pfcambio = ' || pfcambio || ' pcconpag_gar = ' || pcconpag_gar
            || ' pnorden = ' || pnorden || ' pirestorec = ' || pirestorec
            || ' pno_crear_cab_pago: ' || pno_crear_cab_pago || ' psidepag_cab = '
            || psidepag_cab;
      vtraza         NUMBER;
      vcodmoneda     monedas.cmonint%TYPE;
      vsidepag       sin_tramita_pago.sidepag%TYPE;
      vnmovpag       sin_tramita_movpago.nmovpag%TYPE := 0;
      vnerror        NUMBER;
      dummy1         NUMBER;
      dummy2         NUMBER;
      dummy3         NUMBER;
      vcestcomp      VARCHAR2(1);   /*Estado de la compensación: P-Pendiente de compensar por el siguiente detalle de pago
                                                                 C-Compensado*/
      vnmovres       sin_tramita_reserva.nmovres%TYPE;
      vccalres       sin_tramita_reserva.ccalres%TYPE;
      vireserva      sin_tramita_reserva.ireserva%TYPE;
      vireserva_new  sin_tramita_reserva.ireserva%TYPE;
      vipago_res     sin_tramita_reserva.ipago%TYPE;
      vipago_new     sin_tramita_reserva.ipago%TYPE;
      vicaprie       sin_tramita_reserva.icaprie%TYPE;
      vipenali       sin_tramita_reserva.ipenali%TYPE;
      viingreso      sin_tramita_reserva.iingreso%TYPE;
      virecobro      sin_tramita_reserva.irecobro%TYPE;
      viprerec       sin_tramita_reserva.iprerec%TYPE;
      vctipgas       sin_tramita_reserva.ctipgas%TYPE;
      vifranq        sin_tramita_reserva.ifranq%TYPE;
      vndias         sin_tramita_reserva.ndias%TYPE;
      vitotimp       sin_tramita_reserva.itotimp%TYPE;
      vidres         sin_tramita_reserva.idres%TYPE;
   BEGIN
      vtraza := 1;
      vnerror := pac_siniestros.f_get_detalle_reserva(pnsinies, pntramit, pctipres, pcgarant,
                                                      pcmonres, pfperini, pfperfin, vnmovres,
                                                      vccalres, vireserva, vipago_res,
                                                      vicaprie, vipenali, viingreso,
                                                      virecobro, viprerec, vctipgas, vifranq,
                                                      vndias, vitotimp, vidres);

      IF vnerror <> 0 THEN
         RETURN vnerror;
      END IF;

      vtraza := 2;
      vireserva_new := vireserva - pitotalr;
      vipago_new := vipago_res + pitotalr;
      vtraza := 3;
      vnmovres := NULL;
      vnerror := pac_siniestros.f_ins_reserva(pnsinies, pntramit, pctipres, pcgarant, vccalres,
                                              f_sysdate,   --fmovres
                                              pcmonres, vireserva_new, vipago_new, vicaprie,
                                              vipenali, viingreso, virecobro, pfperini,
                                              pfperfin, f_sysdate,   --fultpag
                                              NULL,   -- sidepag
                                              viprerec, vctipgas, vnmovres, 4,   -- cmovres --Bug 31294/174788:NSS:22/05/2014
                                              vifranq, vndias, vitotimp);

      IF vnerror <> 0 THEN
         RETURN vnerror;
      END IF;

      vtraza := 4;

      -- creamos un pago por el importe del recibo
      IF pno_crear_cab_pago = 0 THEN
         vnerror := pac_siniestros.f_ins_pago(vsidepag, pnsinies, pntramit, psperson, 4,   -- ctipdes
                                              2,   -- ctippag
                                              pcconpag,   -- cconpag
                                              pccauind,   -- ccauind,
                                              0,   -- cforpag,
                                              pfordpag,   -- fordpag,
                                              NULL,   -- ctipban,
                                              pcbancar,   -- cbancar,
                                              pitotalr,   -- isinret,
                                              0,   -- iretenc,
                                              0,   -- iiva
                                              0,   -- isuplid
                                              0,   -- ifranq
                                              0,   -- iresrcm
                                              0,   -- iresred
                                              NULL,   -- nfacref
                                              NULL,   -- ffacref
                                              1,   -- sidepagtemp
                                              0,   -- cultpag
                                              NULL,   -- CHEQUE
                                              0,   -- ireteiva
                                              0,   -- ireteica
                                              0,   -- ireteivapag
                                              0,   -- ireteicapag
                                              0,   -- iica
                                              0,   -- iicapag
                                              pcmonpag);   -- pcmonres

         IF vnerror <> 0 THEN
            RETURN vnerror;
         END IF;

         vtraza := 5;
         vnmovpag := 0;   -- Movimiento inicial
         vnerror := pac_siniestros.f_ins_movpago(vsidepag, 1,   -- cestpag
                                                 pfordpag,   -- fefepag
                                                 1,   -- cestval
                                                 TRUNC(f_sysdate),   -- fcontab
                                                 NULL,   -- sproces
                                                 0,   -- cestpagant
                                                 vnmovpag, 0,   -- csubpag
                                                 0);   -- csubpagant

         IF vnerror <> 0 THEN
            RETURN vnerror;
         END IF;
      ELSE
         vsidepag := psidepag_cab;
      END IF;

      vtraza := 6;
      vnerror :=
         pac_siniestros.f_ins_pago_gar
                       (pnsinies, pntramit, vsidepag, pctipres, vnmovres - 1,   -- nmovres (Correspondiente al movimiento de reserva previo)
                        pcgarant, pfperini, pfperfin, pcmonres, pitotalr,   --isinret
                        NULL,   --iiva
                        NULL,   --isuplid,
                        NULL,   --iretenc,
                        NULL,   --ifranq,
                        NULL,   --iresrcm,
                        NULL,   --iresred,
                        NULL,   --pretenc,
                        NULL,   --piva,
                        pcmonpag_gar, pitotalr,   --isinretpag,
                        NULL,   --iivapag,
                        NULL,   --isuplidpag,
                        NULL,   --iretencpag,
                        NULL,   --ifranqpag,
                        pfcambio,   --fcambio,
                        pcconpag_gar, pnorden, NULL,   --preteiva,
                        NULL,   --preteica,
                        NULL,   --ireteiva,
                        NULL,   --ireteica,
                        NULL,   --ireteivapag,
                        NULL,   --ireteicapag,
                        NULL,   --pica,
                        NULL,   --iica,
                        NULL   --iicapag
                            );

      IF vnerror <> 0 THEN
         RETURN vnerror;
      END IF;

      vtraza := 7;

      IF pirestorec > 0 THEN
         vcestcomp := 'P';   --Este recibo se acabarÃ¡ de compensar con el siguiente detalle del pago
      ELSE
         vcestcomp := 'C';   --Compensado
      END IF;

      BEGIN
         INSERT INTO sin_recibos_compensados
                     (nsinies, sseguro, sidepag_old, nrecibo, sidepag_new, irestorec, cestcomp)
              VALUES (pnsinies, psseguro, psidepag, pnrecibo, vsidepag, pirestorec, vcestcomp);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_recibos_compensados
               SET irestorec = pirestorec,
                   cestcomp = vcestcomp
             WHERE nsinies = pnsinies
               AND sidepag_old = psidepag
               AND nrecibo = pnrecibo;
      END;

      vtraza := 8;
      psidepag_new := vsidepag;
      pnmovpag_new := vnmovpag;
      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_compensa_recibo;

   FUNCTION f_valida_exist_res_noindem(
      psidepag IN sin_tramita_pago.sidepag%TYPE,
      pexisten OUT NUMBER)
      RETURN NUMBER IS
      /*************************************************************************
       Query para verificar que no exista una reserva no indemnizatoria en el detalle del pago
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_valida_exist_res_noindem';
      vtraza         NUMBER := 1;
      vcount         NUMBER;
      vparam         VARCHAR2(1000) := 'psidepag = ' || psidepag;
   BEGIN
      BEGIN
         SELECT '1'
           INTO pexisten
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag
            AND ctipres <> 1;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            NULL;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_valida_exist_res_noindem;

   FUNCTION f_valida_exist_recib_remesados(
      psseguro IN seguros.sseguro%TYPE,
      pexisten OUT NUMBER)
      RETURN NUMBER IS
      /*************************************************************************
       Query para verificar que no existan recibos remesados en esa poliza
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_valida_exist_recib_remesados';
      vtraza         NUMBER := 1;
      vcount         NUMBER;
      vparam         VARCHAR2(1000) := 'psseguro = ' || psseguro;
   BEGIN
      BEGIN
         SELECT '1'
           INTO pexisten
           FROM recibos r1, movrecibo m1
          WHERE r1.sseguro = psseguro
            AND r1.nrecibo = m1.nrecibo
            AND m1.smovrec = (SELECT MAX(smovrec)
                                FROM movrecibo m2
                               WHERE m2.nrecibo = m1.nrecibo)
            AND m1.fmovfin IS NULL
            AND m1.cestrec = 3;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            NULL;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_valida_exist_recib_remesados;

   FUNCTION f_validar_dias_gracia(
      psseguro IN seguros.sseguro%TYPE,
      pfefecto IN recibos.fefecto%TYPE,
      pdias_gracia OUT NUMBER)
      RETURN NUMBER IS
      /*************************************************************************
       Verificar si el recibo esta en los dias de gracia
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_validar_dias_gracia';
      vtraza         NUMBER := 1;
      vdias_gracia   NUMBER;
      vparam         VARCHAR2(1000) := 'psseguro = ' || psseguro || ' pfefecto = ' || pfefecto;
   BEGIN
      vdias_gracia := pac_devolu.f_numdias_periodo_gracia(psseguro);
      vtraza := 2;

      IF (TRUNC(f_sysdate) - TRUNC(pfefecto)) <= vdias_gracia THEN
         pdias_gracia := 1;
      ELSE
         pdias_gracia := 0;
      END IF;

      vtraza := 3;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_validar_dias_gracia;

-- FIN BUG 28830:NSS:06/11/2013 - CompensaciÃ¿Æ¿ción de siniestros contra cartera.
--IAXIS 4555 AABC valida indicador de Iva 
FUNCTION f_valida_ind_iva(
       psidepag    IN sin_tramita_pago.sidepag%TYPE,
       pcconpag    IN sin_tramita_pago.cconpag%TYPE,
       pcescenario IN NUMBER)
      RETURN VARCHAR2 IS
      /*************************************************************************
       Verificar el indicador del iva pagos de siniestros 
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_valida_ind_iva';
      vtraza         NUMBER := 1;
      vindiva        VARCHAR2(3);
      viiva          NUMBER;
      vparam         VARCHAR2(1000) := 'psidepag = ' || psidepag || ' pcconpag = ' || pcconpag || ' pcescenario = ' || pcescenario;
   BEGIN
      --
      BEGIN 
         --
         SELECT sp.iiva
           INTO viiva
           FROM sin_tramita_pago sp
          WHERE sp.sidepag = psidepag
            AND sp.cconpag = pcconpag; 
         --
         EXCEPTION WHEN OTHERS THEN 
            --
            viiva := 0;
            -- 
      END;     
      --IAXIS 4504 AABC Ajustes del procedimiento  
      IF viiva > 0  THEN
         --
         BEGIN
           --
         SELECT sd.nval7 
           INTO vindiva
           FROM sgt_subtabs_det sd
          WHERE sd.csubtabla = 9000019
            AND sd.ccla1 = pcconpag
            AND sd.ccla2 = pcescenario;
         -- 
         EXCEPTION WHEN NO_DATA_FOUND THEN 
           --
           vindiva := 'GD';
           --   
         END;    
         --IAXIS 4504 AABC Ajustes del procedimiento   
      ELSE
         --
         vindiva := 'GD';
         --
      END IF;
      --
      vtraza := 3;
      --
      RETURN vindiva;
      --
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_valida_ind_iva;
--IAXIS 4555 AABC valida indicador de Iva
   -- BUG 31040:NSS:15/04/2014 -
   FUNCTION f_get_certif_0(psseguro IN NUMBER, vcertif0 OUT NUMBER)
      RETURN NUMBER IS
      /*************************************************************************
       Obtiene el certificado 0 si lo tiene
      *************************************************************************/
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_certif_0';
      vtraza         NUMBER := 1;
      vnpoliza       seguros.npoliza%TYPE;
      vncertif       seguros.ncertif%TYPE;
      vparam         VARCHAR2(1000) := 'psseguro = ' || psseguro;
   BEGIN
      SELECT npoliza, ncertif
        INTO vnpoliza, vncertif
        FROM seguros
       WHERE sseguro = psseguro;

      vtraza := 2;

      IF vncertif > 0 THEN
         SELECT sseguro
           INTO vcertif0
           FROM seguros
          WHERE npoliza = vnpoliza
            AND ncertif = 0;
      END IF;

      vtraza := 3;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_certif_0;

-- FIN BUG 31040:NSS:15/04/2014

   -- BUG 31294/174788: :NSS:18/06/2014 -
   FUNCTION f_get_imp_ult_mov_reserva(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pctipres IN NUMBER,
      pctipgas IN NUMBER,
      pcgarant IN NUMBER,
      pfresini IN DATE,
      pfresfin IN DATE,
      pireserva OUT NUMBER,
      pipago OUT NUMBER,
      pirecobro OUT NUMBER,
      pitotimp OUT NUMBER,
      pitotret OUT NUMBER)
      RETURN NUMBER IS
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_imp_ult_mov_reserva';
      vtraza         NUMBER := 1;
      vparam         VARCHAR2(1000)
         := 'pnsinies = ' || pnsinies || ' pntramit: ' || pntramit || ' pctipres: '
            || pctipres || ' pctipgas: ' || pctipgas || ' pcgarant: ' || pcgarant
            || ' pfresini: ' || pfresini || ' pfresfin: ' || pfresfin;
   BEGIN
      SELECT ireserva, ipago, irecobro, itotimp, itotret
        INTO pireserva, pipago, pirecobro, pitotimp, pitotret
        FROM sin_tramita_reserva
       WHERE nsinies = pnsinies
         AND ntramit = pntramit
         AND ctipres = pctipres
         AND NVL(ctipgas, -1) = NVL(pctipgas, -1)
         AND NVL(cgarant, -1) = NVL(pcgarant, -1)
         AND NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
         AND NVL(fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
         AND nmovres = (SELECT MAX(nmovres)
                          FROM sin_tramita_reserva r
                         WHERE r.nsinies = pnsinies
                           AND r.ntramit = pntramit
                           AND r.ctipres = pctipres
                           AND NVL(r.ctipgas, -1) = NVL(pctipgas, -1)
                           AND NVL(r.cgarant, -1) = NVL(pcgarant, -1)
                           AND NVL(r.fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresini, TO_DATE('01/01/1900', 'dd/mm/yyyy'))
                           AND NVL(r.fresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                             NVL(pfresfin, TO_DATE('01/01/1900', 'dd/mm/yyyy')));

      vtraza := 3;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_imp_ult_mov_reserva;

-- FIN BUG 31294/174788: :NSS:18/06/2014 -

   -- BUG 31872/178559: :NSS:14/07/2014 -
   FUNCTION f_valida_carencia(pnsinies sin_siniestro.nsinies%TYPE, presult OUT NUMBER)
      RETURN NUMBER IS
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_valida_carencia';
      vtraza         NUMBER := 1;
      vparam         VARCHAR2(1000) := 'pnsinies = ' || pnsinies;
      v_fefecto      seguros.fefecto%TYPE;   --31782/178559:NSS:14/07/2014
      v_carencia     NUMBER;   --31782/178559:NSS:14/07/2014
      dummy          NUMBER;
      v_cunitra      sin_movsiniestro.cunitra%TYPE;
      v_ctramitad    sin_movsiniestro.ctramitad%TYPE;
      v_fsinies      DATE;   -- 22068:ASN:26/04/2012
      v_sproduc      NUMBER;
      num_err        NUMBER;
      v_fnotifi      DATE;
      vcactivi       seguros.cactivi%TYPE;
      vcgarant       sin_tramita_reserva.cgarant%TYPE;
   BEGIN
      -- ini bug  0031872/0178559: NSS:14/07/2014 Se traspasa la validación de la carencia de pac_validaciones_sin.f_restrami
      --                                          a pac_siniestros

      --16962: AGA901 - Configuración del sinistres GENERALS ATUR
      -- se controlan los meses de carencia antes de poder abri el siniestro
      DECLARE
         CURSOR c1 IS
            SELECT DISTINCT si.fsinies, sproduc, fnotifi, fefecto, cactivi, cgarant
                       FROM sin_siniestro si, seguros se, sin_tramita_reserva r
                      WHERE si.sseguro = se.sseguro
                        AND si.nsinies = pnsinies
                        AND si.nsinies = r.nsinies;
      BEGIN
         FOR f1 IN c1 LOOP
            v_carencia := NVL(pac_parametros.f_pargaranpro_n(f1.sproduc, f1.cactivi,
                                                             f1.cgarant, 'CARENSINI'),
                              0);
            v_fsinies := f1.fsinies;
            v_fefecto := f1.fefecto;
            EXIT WHEN c1%NOTFOUND
                  OR v_carencia > 0;
         END LOOP;
      END;

      vtraza := 1130;

      IF v_carencia > 0 THEN
         IF MONTHS_BETWEEN(v_fsinies, v_fefecto) < v_carencia THEN
            -- Si no ha superado la carencia actualizamos el siniestro y la tramitación a rechazada.
            vtraza := 1140;

            SELECT cunitra, ctramitad
              INTO v_cunitra, v_ctramitad
              FROM sin_movsiniestro
             WHERE nsinies = pnsinies
               AND nmovsin = 1;   -- copiamos el tramitador de la abertura del siniestro --bug  0031872/0178559: NSS:14/07/2014

            vtraza := 1150;
            --Se rechaza el siniestro
            num_err := pac_siniestros.f_estado_siniestro(pnsinies, 3, 4, v_cunitra,
                                                         v_ctramitad, 22, f_sysdate, NULL,
                                                         NULL);

            IF num_err <> 0 THEN
               RETURN num_err;
            END IF;

            --fin bug  0031872/0178559: NSS:14/07/2014
            presult := 9901780;   --Póliza en periodo de carencia
         END IF;
      END IF;

      -- fin bug  0031872/0178559: NSS:14/07/2014 Se traspasa la validación de la carencia de pac_validaciones_sin.f_restrami
      --                                          a pac_siniestros
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_valida_carencia;

-- FIN BUG 31872/178559: :NSS:14/07/2014 -
   FUNCTION f_set_campo_plantilla(
      pnsinies IN VARCHAR2,
      pccodplan IN VARCHAR2,
      pndocume IN VARCHAR2,
      pccampo IN VARCHAR2,
      ptcampo IN VARCHAR2)
      RETURN NUMBER IS
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_set_campo_plantilla';
      vtraza         NUMBER := 1;
      vparam         VARCHAR2(1000)
         := 'pnsinies = ' || pnsinies || ' pccodplan: ' || pccodplan || ' pndocume: '
            || pndocume || ' pccampo: ' || pccampo || ' ptcampo: ' || ptcampo;
      v_ndocume      NUMBER := 1;
   BEGIN
      IF pndocume IS NULL THEN
         SELECT NVL(MAX(ndocume) + 1, 1)
           INTO v_ndocume
           FROM sin_tramita_documento
          WHERE nsinies = pnsinies;
      ELSE
         v_ndocume := pndocume;
      END IF;

      BEGIN
         INSERT INTO sin_plantillas_campo
                     (nsinies, ccodplan, ndocume, ccampo, tcampo)
              VALUES (pnsinies, pccodplan, v_ndocume, pccampo, ptcampo);
      EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
            UPDATE sin_plantillas_campo
               SET tcampo = ptcampo
             WHERE nsinies = pnsinies
               AND ccodplan = pccodplan
               AND ndocume = v_ndocume
               AND ccampo = pccampo;
      END;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 9908336;
   END f_set_campo_plantilla;

   FUNCTION f_getrow_reserva(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pidres IN sin_tramita_reserva.idres%TYPE,
      vreserva OUT sin_tramita_reserva%ROWTYPE)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_getrow_reserva';
      vparam         VARCHAR2(500) := ' pnsinies = ' || pnsinies || ' pidres = ' || pidres;
      vpasexec       NUMBER := 1;
      vnumerr        NUMBER := 0;
   BEGIN
      IF pnsinies IS NULL
         OR pidres IS NULL THEN
         vnumerr := 9000505;
         RAISE e_error;
      END IF;

      SELECT *
        INTO vreserva
        FROM sin_tramita_reserva r1
       WHERE r1.nsinies = pnsinies
         AND r1.idres = pidres
         AND r1.nmovres = (SELECT MAX(r2.nmovres)
                             FROM sin_tramita_reserva r2
                            WHERE r2.nsinies = r1.nsinies
                              AND r2.idres = r1.idres);

      RETURN 0;
   EXCEPTION
      WHEN e_error THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     ' Error = ' || vnumerr || ' -  ' || f_axis_literales(vnumerr));
         RETURN vnumerr;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_getrow_reserva;

   FUNCTION f_get_documentacion_pendiente(
      pnsinies IN sin_siniestro.nsinies%TYPE,
      pntramit IN sin_tramitacion.ntramit%TYPE,
      ptlisdoc OUT VARCHAR2)
      RETURN NUMBER IS
      v_detalle      VARCHAR2(4000);
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_set_documentacion_pendiente';
      vparam         VARCHAR2(1000) := 'pnsinies = ' || pnsinies || ' pntramit: ' || pntramit;
      vtraza         NUMBER := 1;
      v_ndocume      NUMBER := 1;
   BEGIN
      IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;

      FOR i IN (SELECT s.cdocume, d.ttitdoc
                  FROM sin_tramita_documento s, doc_desdocumento d
                 WHERE s.nsinies = pnsinies
                   AND s.ntramit = pntramit
                   AND d.cdocume = s.cdocume
                   AND s.frecibe IS NULL
                   AND d.cidioma = pac_md_common.f_get_cxtidioma()
                   AND s.corigen <> 1) LOOP
         v_detalle := v_detalle || i.ttitdoc || CHR(10);
      END LOOP;

      ptlisdoc := v_detalle;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_get_documentacion_pendiente;

   FUNCTION f_hay_lista_innominados(
      psproduc IN productos.sproduc%TYPE,
      psseguro IN seguros.sseguro%TYPE,
      pnriesgo IN riesgos.nriesgo%TYPE,
      pnasegur OUT NUMBER)
      RETURN NUMBER IS
      v_detalle      VARCHAR2(4000);
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_hay_lista_innominados';
      vparam         VARCHAR2(1000)
           := 'sproduc = ' || psproduc || ' sseguro: ' || psseguro || ' nriesgo: ' || pnriesgo;
      vtraza         NUMBER := 1;
      vcvalpar       parproductos.cvalpar%TYPE;
      vnumber        NUMBER;
   BEGIN
      IF NVL(pac_parametros.f_parproducto_n(psproduc, 'LISTA_ASEG_INNOM'), 0) = 1 THEN
         SELECT COUNT(1)
           INTO pnasegur
           FROM asegurados_innom ai
          WHERE ai.sseguro = psseguro
            AND ai.nriesgo = pnriesgo;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_hay_lista_innominados;

  FUNCTION f_ins_judicial_detper(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pnrol IN NUMBER,
      pnpersona IN NUMBER,
      pntipper IN NUMBER,
      pnnumide IN VARCHAR2,
      ptnombre IN VARCHAR2,
      piimporte IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_judicial_detper';
        vparam      VARCHAR2(2000) := 'pnsinies: ' || pnsinies || ' - pntramit: ' || pntramit|| ' - pnorden:'||pnorden||' - pnrol'||pnrol||' - pnpersona:'||pnpersona ||' - pntipper:'||pntipper ||' - pnnumide:'||pnnumide||' - ptnombre:'||ptnombre;
        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        v_npersona NUMBER(3) :=0;
      BEGIN
      IF pnpersona IS NULL THEN

     SELECT NVL(MAX(npersona),0)+1
       INTO v_npersona
       FROM sin_tramita_judicial_detper
      WHERE nsinies = pnsinies
        AND ntramit = pntramit
        AND norden = pnorden;
        INSERT INTO sin_tramita_judicial_detper (nsinies , ntramit , norden , nrol  , npersona, ntipper , nnumide , tnombre, cusualt , iimporte) values(pnsinies , pntramit , pnorden , pnrol  , v_npersona, pntipper , pnnumide , ptnombre, f_user(), piimporte);
        vnumerr := 0;
      ELSE
        UPDATE sin_tramita_judicial_detper
           SET ntipper = pntipper,
               nnumide = pnnumide,
               tnombre = ptnombre,
               fmodifi = f_sysdate(),
               iimporte = piimporte
         WHERE nsinies = pnsinies
           AND ntramit = pntramit
           AND norden = pnorden
           AND nrol = pnrol
           AND npersona = pnpersona;

        vnumerr := 0;
      END IF;
      RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
  END f_ins_judicial_detper;

  FUNCTION f_ins_obj_judicial_valpret(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pcgarant IN NUMBER,
      pipreten IN NUMBER)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_obj_judicial_valpret';
        vparam      VARCHAR2(500) := 'pnsinies: ' || pnsinies || ' - pntramit: ' || pntramit|| ' - norden: '|| pnorden || ' - pcgarant:' || pcgarant|| ' - pipreten '|| pipreten;
        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        v_count NUMBER(5) := 0;
      BEGIN
        SELECT count(1)
          INTO v_count
          FROM sin_tramita_valpretension
         WHERE nsinies = pnsinies
           AND ntramit = pntramit
           AND norden = pnorden
           AND cgarant = pcgarant;
           vpasexec := 2;

        IF NVL(v_count,0) > 0 THEN
        vpasexec := 3;
          UPDATE sin_tramita_valpretension
             SET ipreten = pipreten,
                 fmodifi = f_sysdate()
           WHERE nsinies = pnsinies
             AND ntramit = pntramit
             AND norden = pnorden
            AND cgarant = pcgarant;

          vnumerr:= 0;

        ELSE
        vpasexec := 4;
          INSERT INTO sin_tramita_valpretension(nsinies ,  ntramit,  norden ,  cgarant, ipreten, cusualt) values(  pnsinies ,  pntramit,  pnorden ,  pcgarant, pipreten, f_user());
          vnumerr:= 0;
        END IF;


        RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
  END f_ins_obj_judicial_valpret;

  FUNCTION f_ins_judicial(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pcproceso IN NUMBER,
      ptproceso IN NUMBER,
      pcpostal IN VARCHAR2,
      pcpoblac IN NUMBER,
      pcprovin IN NUMBER,
      ptiexterno IN VARCHAR2,
      psprofes IN NUMBER,
      pfrecep IN DATE,
      pfnotifi IN DATE,
      pfvencimi IN DATE,
      pfrespues IN DATE,
      pfconcil IN DATE,
      pfdesvin IN DATE,
      ptpreten IN VARCHAR2,
      ptexcep1 IN VARCHAR2,
      ptexcep2 IN VARCHAR2,
      pcconti IN NUMBER,
      pcdespa IN NUMBER,
      pcdescf IN VARCHAR2,
      pcprovinf IN NUMBER,
      pcpoblacf IN NUMBER,
      pcdespao IN NUMBER,
      pcdesco IN VARCHAR2,
      pcprovino IN NUMBER,
      pcpoblaco IN NUMBER,
      pcposici IN NUMBER,
      pcdemand IN NUMBER,
      psapodera IN NUMBER,
      pidemand IN NUMBER,
      pftdeman IN DATE,
      piconden IN NUMBER,
      pcsenten IN NUMBER,
      pfsente1 IN DATE,
      pcsenten2 IN NUMBER,
      pfsente2 IN DATE,
      pcasacion IN NUMBER,
      pfcasaci IN DATE,
      pctsente IN NUMBER,
      pftsente IN DATE,
      pvtsente IN VARCHAR2,
      ptfallo IN VARCHAR2
    ,pcoralproc IN NUMBER
    ,punicainst IN NUMBER
    ,pfunicainst IN DATE)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_judicial';
        vparam      VARCHAR2(2000) := ' - pnsinies   :'||  pnsinies    ||' - pntramit   :'||  pntramit    ||' - pnorden    :'||  pnorden     ||' - pcproceso  :'||  pcproceso   ||' - ptproceso  :'||  ptproceso   ||' - pcpostal   :'||  pcpostal    ||' - pcpoblac   :'||  pcpoblac    ||' - pcprovin   :'||  pcprovin    ||' - ptiexterno :'||  ptiexterno  ||' - psprofes   :'||  psprofes    ||' - pfrecep    :'||  pfrecep     ||' - pfnotifi   :'||  pfnotifi    ||' - pfvencimi  :'||  pfvencimi   ||' - pfrespues  :'||  pfrespues   ||' - pfconcil   :'||  pfconcil    ||' - pfdesvin   :'||  pfdesvin            ||' - pcconti   :'||  pcconti     ||' - pcdespa    :'||  pcdespa     ||' - pcdespao    :'||  pcdespao    ||
                                      ' - pcdescf   :'||  pcdescf    ||' - pcprovinf   :'||  pcprovinf    ||' - pcpoblacf   :'||  pcpoblacf    ||' - pcdesco   :'||  pcdesco    ||' - pcprovino   :'||  pcprovino    ||' - pcpoblaco   :'||  pcpoblaco    ||' - pcposici   :'||  pcposici    ||' - pcdemand   :'||  pcdemand    ||' - psapodera  :'||  psapodera   ||' - pidemand   :'||  pidemand    ||' - pftdeman   :'||  pftdeman    ||' - piconden   :'||  piconden    ||' - pcsenten   :'||  pcsenten    ||' - pfsente1   :'||  pfsente1    ||' - pcsenten2   :'||  pcsenten2    ||' - pfsente2   :'||  pfsente2    ||' - pcasacion   :'||  pcasacion    ||' - pfcasaci   :'||  pfcasaci    ||' - pctsente   :'||  pctsente    ||' - pftsente   :'||  pftsente    ||' - pvtsente   :'||  pvtsente   || ' coralproc:' || pcoralproc || ' unicainst:' || punicainst || ' funicainst:' || pfunicainst ;
        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        v_norden NUMBER :=0;
      BEGIN

      IF pnorden IS NULL THEN

      SELECT NVL(MAX(norden),0)+1
       INTO v_norden
       FROM sin_tramita_judicial
      WHERE nsinies = pnsinies
        AND ntramit = pntramit;

      INSERT INTO sin_tramita_judicial(nsinies , ntramit , norden , cproceso, tproceso, cpostal , cpoblac , cprovin , tiexterno , sprofes , frecep , fnotifi , fvencimi, frespues, fconcil , fdesvin , tpreten , texcep1 , texcep2 ,cconti , cdespa, cdescf, cprovinf, cpoblacf , cdespao, cdesco, cprovino, cpoblaco , cposici , cdemand , sapodera, idemand , ftdeman , iconden  , csenten  , fsente1  , csenten2 , fsente2  , casacion , fcasaci , ctsente , ftsente , vtsente , tfallo,coralproc,unicainst,funicainst, CUSUALT ) VALUES(pnsinies , pntramit , v_norden , pcproceso, ptproceso, pcpostal , pcpoblac , pcprovin , ptiexterno , psprofes , pfrecep , pfnotifi , pfvencimi, pfrespues, pfconcil , pfdesvin , ptpreten , ptexcep1 , ptexcep2 , pcconti , pcdespa, pcdescf, pcprovinf, pcpoblacf , pcdespao, pcdesco, pcprovino, pcpoblaco , pcposici , pcdemand , psapodera, pidemand , pftdeman , piconden  , pcsenten  , pfsente1  , pcsenten2 , pfsente2  , pcasacion , pfcasaci , pctsente , pftsente , pvtsente , ptfallo,pcoralproc,punicainst,pfunicainst, f_user());
      vnumerr := 0;
      ELSE
         UPDATE sin_tramita_judicial
            SET NSINIES    = PNSINIES ,
                NTRAMIT    = PNTRAMIT  ,
                NORDEN     = PNORDEN   ,
                CPROCESO   = PCPROCESO ,
                TPROCESO   = PTPROCESO ,
                CPOSTAL    = PCPOSTAL  ,
                CPOBLAC    = PCPOBLAC  ,
                CPROVIN    = PCPROVIN  ,
                TIEXTERNO  = PTIEXTERNO,
                SPROFES    = PSPROFES  ,
                FRECEP     = PFRECEP   ,
                FNOTIFI    = PFNOTIFI  ,
                FVENCIMI   = PFVENCIMI ,
                FRESPUES   = PFRESPUES ,
                FCONCIL    = PFCONCIL  ,
                FDESVIN    = PFDESVIN  ,
                TPRETEN    = PTPRETEN  ,
                TEXCEP1    = PTEXCEP1  ,
                TEXCEP2    = PTEXCEP2  ,
                CCONTI     = PCCONTI   ,
                CDESPA     = PCDESPA   ,
                CDESCF     = PCDESCF   ,
                CPROVINF   = PCPROVINF   ,
                CPOBLACF   = PCPOBLACF   ,
                CDESPAO    = PCDESPAO  ,
                CDESCO     = PCDESCO  ,
                CPROVINO   = PCPROVINO  ,
                CPOBLACO   = PCPOBLACO  ,
                CPOSICI    = PCPOSICI  ,
                CDEMAND    = PCDEMAND  ,
                SAPODERA   = PSAPODERA ,
                IDEMAND    = PIDEMAND  ,
                FTDEMAN    = PFTDEMAN  ,
                ICONDEN    = PICONDEN  ,
                CSENTEN    = PCSENTEN  ,
                FSENTE1    = PFSENTE1  ,
                CSENTEN2   = PCSENTEN2 ,
                FSENTE2    = PFSENTE2  ,
                CASACION   = PCASACION ,
                FCASACI    = PFCASACI  ,
                CTSENTE    = PCTSENTE  ,
                FTSENTE    = PFTSENTE  ,
                VTSENTE    = PVTSENTE  ,
                TFALLO     = PTFALLO,
                CORALPROC  = PCORALPROC,
                UNICAINST  = PUNICAINST,
                FUNICAINST = PFUNICAINST,
                FMODIFI = f_sysdate()
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND norden = pnorden;
        vnumerr := 0;
      END IF;

      RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, SUBSTR(vparam,1,500),
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
  END f_ins_judicial;

  FUNCTION f_ins_judicial_audien(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pnaudien IN NUMBER,
      pfaudien IN DATE,
      phaudien IN VARCHAR2,
      ptaudien IN VARCHAR2,
      pcdespa IN NUMBER,
      ptlaudie IN VARCHAR2,
      pcaudien IN VARCHAR2,
      pcdespao IN NUMBER,
      ptlaudieo IN VARCHAR2,
      pcaudieno IN VARCHAR2,
      psabogau IN NUMBER,
      pcoral IN NUMBER,
      pcestado IN NUMBER,
      pcresolu IN NUMBER,
      pfinsta1 IN DATE,
      pfinsta2 IN DATE,
      pfnueva IN DATE,
      ptresult IN VARCHAR2)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_judicial';
        vparam         VARCHAR2(2000) := ' - pnsinies   :'||  pnsinies    ||' - pntramit   :'||  pntramit    ||' - pnorden    :'||  pnorden    ||' - pnaudien    :'||  pnaudien    ||' - pfaudien   :'||  pfaudien    ||' - phaudien   :'||  phaudien    ||' - ptaudien   :'||  ptaudien     ||' - pcdespa    :'||  pcdespa     ||' - ptlaudie   :'||  ptlaudie    ||' - pcaudien   :'||  pcaudien    ||' - pcdespao   :'||  pcdespao    ||' - ptlaudieo  :'||  ptlaudieo   ||' - pcaudieno  :'||  pcaudieno   ||' - psabogau   :'||  psabogau    ||' - pcoral     :'||  pcoral||' - pcestado   :'||  pcestado    ||' - pcresolu   :'||  pcresolu    ||' - pfinsta1   :'||  pfinsta1    ||' - pfinsta2   :'||  pfinsta2    ||' - pfnueva    :'||  pfnueva     ||' - ptresult   :'||  ptresult;
        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        v_naudien      NUMBER :=0;
      BEGIN

      IF pnaudien IS NULL THEN

      SELECT NVL(MAX(naudien),0) + 1
       INTO v_naudien
      FROM SIN_TRAMITA_JUDICIAL_AUDIEN
      WHERE NSINIES = pnsinies
       AND NTRAMIT = pntramit
       AND NORDEN = pnorden;

      INSERT INTO sin_tramita_judicial_audien(nsinies ,ntramit ,norden, naudien, faudien ,haudien ,taudien ,cdespa ,tlaudie ,caudien ,cdespao ,tlaudieo,caudieno,sabogau ,coral ,cestado ,cresolu ,finsta1 ,finsta2 ,fnueva ,tresult, CUSUALT ) VALUES(pnsinies , pntramit , pnorden, v_naudien, pfaudien , phaudien , ptaudien , pcdespa , ptlaudie , pcaudien , pcdespao , ptlaudieo, pcaudieno, psabogau , pcoral , pcestado , pcresolu , pfinsta1 , pfinsta2 , pfnueva , ptresult , f_user());
      vnumerr := 0;
      ELSE
         UPDATE sin_tramita_judicial_audien
            SET NSINIES =  PNSINIES ,
                NTRAMIT =  PNTRAMIT  ,
                NORDEN  =  PNORDEN   ,
                NAUDIEN =  PNAUDIEN ,
                FAUDIEN =  PFAUDIEN ,
                HAUDIEN =  PHAUDIEN ,
                TAUDIEN =  PTAUDIEN ,
                CDESPA  =  PCDESPA  ,
                TLAUDIE =  PTLAUDIE ,
                CAUDIEN =  PCAUDIEN ,
                CDESPAO =  PCDESPAO ,
                TLAUDIEO=  PTLAUDIEO,
                CAUDIENO=  PCAUDIENO,
                SABOGAU =  PSABOGAU ,
                CORAL   =  PCORAL   ,
                CESTADO =  PCESTADO ,
                CRESOLU =  PCRESOLU ,
                FINSTA1 =  PFINSTA1 ,
                FINSTA2 =  PFINSTA2 ,
                FNUEVA  =  PFNUEVA  ,
                TRESULT =  PTRESULT ,
                FMODIFI = f_sysdate()
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND norden  = pnorden
            AND naudien = pnaudien;
        vnumerr := 0;
      END IF;

      RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, SUBSTR(vparam,1,500),
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
  END f_ins_judicial_audien;

  FUNCTION f_elimina_dato_judicial(
      pctipo IN NUMBER,
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pnvalor IN NUMBER)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_elimina_dato_judicial';
        vparam      VARCHAR2(2000) := ' - pnsinies   :'||  pnsinies    ||' - pntramit   :'||  pntramit    ||' - pnorden    :'||  pnorden     ||' - pnvalor  :'||  pnvalor   ||' - pctipo  :'||  pctipo;        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
      BEGIN
      IF pctipo = 1 THEN
      DELETE FROM sin_tramita_localiza WHERE nsinies = pnsinies AND ntramit = pntramit;
        DELETE FROM sin_tramita_judicial_detper WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden;
        DELETE FROM sin_tramita_judicial_audien WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden;
        DELETE FROM sin_tramita_valpretension WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden;
        DELETE FROM sin_tramita_judicial WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden;
        vnumerr := 0;
      ELSIF pctipo = 2 THEN
        DELETE FROM sin_tramita_judicial_detper WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden AND npersona = pnvalor;
        vnumerr := 0;
      ELSIF pctipo = 3 THEN
        DELETE FROM sin_tramita_judicial_audien WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden AND naudien = pnvalor;
        vnumerr := 0;
      ELSIF pctipo = 4 THEN
        DELETE FROM sin_tramita_valpretension WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden AND cgarant = pnvalor;
        vnumerr := 0;
      END IF;
      RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, SUBSTR(vparam,1,500),
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
  END f_elimina_dato_judicial;

   FUNCTION f_del_sin_trami_doc(pnsinies IN sin_siniestro.nsinies%TYPE,
                                pntramit IN sin_tramitacion.ntramit%TYPE,
                                pndocume IN NUMBER)
      RETURN NUMBER IS

      vobject  VARCHAR2(200) := 'PAC_SINIESTROS.f_del_sin_trami_doc';
      vparam   VARCHAR2(1000) := 'pnsinies = ' || pnsinies || ' pntramit: ' ||
                                 pntramit || ' pndocume: ' || pndocume ;
      vnumerr  NUMBER := 0;
      vpasexec NUMBER := 1;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pndocume IS NULL
      THEN
         vnumerr := 9000505;
         RAISE e_error;
      END IF;

      UPDATE sin_tramita_documento t
         SET t.iddoc = NULL,
             t.frecibe = NULL,
             t.cdescdoc = NULL
       WHERE t.nsinies = pnsinies
         AND t.ntramit = pntramit
         AND t.ndocume = pndocume;

      RETURN 0;
   EXCEPTION
     WHEN e_error THEN
         p_tab_error(f_sysdate,
                     f_user,
                     vobject,
                     vpasexec,
                     vparam,
                     ' Error = ' || vnumerr || ' -  ' ||
                     f_axis_literales(vnumerr));
         RETURN vnumerr;
      WHEN OTHERS THEN
         p_tab_error(f_sysdate,
                     f_user,
                     vobject,
                     vpasexec,
                     vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
   END f_del_sin_trami_doc;
  FUNCTION f_ins_fiscal_valpret(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pcgarant IN NUMBER,
      pipreten IN NUMBER)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_fiscal_valpret';
        vparam      VARCHAR2(500) := 'pnsinies: ' || pnsinies || ' - pntramit: ' || pntramit|| ' - norden: '|| pnorden || ' - pcgarant:' || pcgarant|| ' - pipreten '|| pipreten;
        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        v_count NUMBER(5) := 0;
      BEGIN
        SELECT count(1)
          INTO v_count
          FROM sin_tramita_valpretfiscal
         WHERE nsinies = pnsinies
           AND ntramit = pntramit
           AND norden = pnorden
           AND cgarant = pcgarant;
           vpasexec := 2;

        IF NVL(v_count,0) > 0 THEN
        vpasexec := 3;
          UPDATE sin_tramita_valpretfiscal
             SET ipreten = pipreten,
                 fmodifi = f_sysdate()
           WHERE nsinies = pnsinies
             AND ntramit = pntramit
             AND norden = pnorden
            AND cgarant = pcgarant;

          vnumerr:= 0;

        ELSE
        vpasexec := 4;
          INSERT INTO sin_tramita_valpretfiscal(nsinies ,  ntramit,  norden ,  cgarant, ipreten, cusualt) values(  pnsinies ,  pntramit,  pnorden ,  pcgarant, pipreten, f_user());
          vnumerr:= 0;
        END IF;


        RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1000455;
  END f_ins_fiscal_valpret;

  FUNCTION f_ins_fiscal(
      PNSINIES  IN   VARCHAR2,
      PNTRAMIT  IN   NUMBER,
      PNORDEN   IN   NUMBER,
      PFAPERTU  IN  DATE,
      PFIMPUTA  IN  DATE,
      PFNOTIFI  IN  DATE,
      PFAUDIEN  IN  DATE,
      PHAUDIEN  IN  VARCHAR2,
      PCAUDIEN  IN  NUMBER,
      PSPROFES  IN  NUMBER,
      PCOTERRI  IN  NUMBER,
      PCPROVIN  IN  NUMBER,
      PCCONTRA  IN  NUMBER,
      PCUESPEC  IN  NUMBER,
      PTCONTRA  IN  VARCHAR2,
      PCTIPTRA  IN  NUMBER,
      PTESTADO  IN  VARCHAR2,
      PCMEDIO   IN  NUMBER,
      PFDESCAR  IN  DATE,
      PFFALLO   IN   DATE,
      PCFALLO   IN   NUMBER,
      PTFALLO   IN   VARCHAR2,
      PCRECURSO IN   NUMBER)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_fiscal';
        vparam      VARCHAR2(2000) :='  pnsinies   =' || pnsinies  ||    '  pntramit   =' || pntramit  ||    '  pnorden    =' || pnorden   ||    '  pfapertu   =' || pfapertu  ||    '  pfimputa   =' || pfimputa  ||    '  pfnotifi   =' || pfnotifi  ||    '  pfaudien   =' || pfaudien  ||    '  phaudien   =' || phaudien  ||    '  pcaudien   =' || pcaudien  ||    '  psprofes   =' || psprofes  ||    '  pcoterri   =' || pcoterri  ||    '  pccontra   =' || pccontra  ||
                                     '  pcprovin   =' || pcprovin  ||    '  pcuespec   =' || pcuespec  ||    '  ptcontra   =' || ptcontra  ||    '  pctiptra   =' || pctiptra  ||    '  ptestado   =' || ptestado  ||    '  pcmedio    =' || pcmedio   ||    '  pfdescar   =' || pfdescar  ||    '  pffallo    =' || pffallo   ||    '  pcfallo    =' || pcfallo      ||    '  pcrecurso  =' || pcrecurso;        vpasexec    NUMBER(5) := 1;
        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        v_norden NUMBER :=0;
      BEGIN

      IF pnorden IS NULL THEN

      SELECT NVL(MAX(norden),0)+1
       INTO v_norden
       FROM sin_tramita_fiscal
      WHERE nsinies = pnsinies
        AND ntramit = pntramit;

      INSERT INTO sin_tramita_fiscal(nsinies ,ntramit ,norden  ,fapertu ,fimputa ,fnotifi ,faudien ,haudien ,caudien ,sprofes ,coterri ,cprovin, ccontra ,cuespec ,tcontra ,ctiptra ,testado ,cmedio  ,fdescar ,ffallo  ,cfallo  ,tfallo  ,crecurso, CUSUALT ) VALUES(pnsinies ,pntramit ,v_norden  ,pfapertu ,pfimputa ,pfnotifi ,pfaudien ,phaudien ,pcaudien ,psprofes ,pcoterri ,pcprovin, pccontra ,pcuespec ,ptcontra ,pctiptra ,ptestado ,pcmedio  ,pfdescar ,pffallo  ,pcfallo  ,ptfallo  ,pcrecurso, f_user());
      vnumerr := 0;
      ELSE
         UPDATE sin_tramita_fiscal
            SET NSINIES    = PNSINIES ,
                NTRAMIT    = PNTRAMIT  ,
                NORDEN     = PNORDEN   ,
                FAPERTU  =  PFAPERTU,
                FIMPUTA  =  PFIMPUTA,
                FNOTIFI  =  PFNOTIFI ,
                FAUDIEN  =  PFAUDIEN ,
                HAUDIEN  =  PHAUDIEN ,
                CAUDIEN  =  PCAUDIEN ,
                SPROFES  =  PSPROFES ,
                COTERRI  =  PCOTERRI ,
                CPROVIN  =  PCPROVIN ,
                CCONTRA  =  PCCONTRA ,
                CUESPEC  =  PCUESPEC ,
                TCONTRA  =  PTCONTRA ,
                CTIPTRA  =  PCTIPTRA ,
                TESTADO  =  PTESTADO ,
                CMEDIO   =  PCMEDIO  ,
                FDESCAR  =  PFDESCAR ,
                FFALLO   =  PFFALLO  ,
                CFALLO   =  PCFALLO  ,
                TFALLO   =  PTFALLO  ,
                CRECURSO =  PCRECURSO,
                FMODIFI = f_sysdate()
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND norden = pnorden;
        vnumerr := 0;
      END IF;

      RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, 1, SUBSTR(vparam,1,500),
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
  END f_ins_fiscal;
  FUNCTION f_elimina_dato_fiscal(
      pctipo IN NUMBER,
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnorden IN NUMBER,
      pnvalor IN NUMBER)
      RETURN NUMBER IS
        vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_elimina_dato_fiscal';
        vparam      VARCHAR2(2000) := ' - pnsinies   :'||  pnsinies    ||' - pntramit   :'||  pntramit    ||' - pnorden    :'||  pnorden     ||' - pnvalor  :'||  pnvalor   ||' - pctipo  :'||  pctipo;        vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
      BEGIN
      IF pctipo = 1 THEN
    DELETE FROM sin_tramita_localiza WHERE nsinies = pnsinies AND ntramit = pntramit;
        DELETE FROM sin_tramita_valpretfiscal WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden;
        DELETE FROM sin_tramita_fiscal WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden;
        vnumerr := 0;
    ELSIF pctipo = 4 THEN
         DELETE FROM sin_tramita_valpretfiscal WHERE nsinies = pnsinies AND ntramit = pntramit AND norden = pnorden AND cgarant = pnvalor;
        vnumerr := 0;
      END IF;
      RETURN vnumerr;
         EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobjectname, vpasexec, SUBSTR(vparam,1,500),
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN 1;
  END f_elimina_dato_fiscal;

  /***********************************************************************
       FUNCTION f_get_sin_tramita_apoyo:
            obtener los datos de una solicitud de apoyo tecnico

     ***********************************************************************/
FUNCTION f_get_sin_tramita_apoyo (psintapoy IN NUMBER,
                                  pnsinies  IN VARCHAR2,
                                  pntramit  IN NUMBER,
                                  mensajes  OUT t_iax_mensajes)
   RETURN SYS_REFCURSOR IS
   v_cursor SYS_REFCURSOR;
   vpasexec NUMBER;
   vobject  VARCHAR2(200) := 'PAC_siniestros.f_get_sin_tramita_apoyo';
   vparam   VARCHAR2(500) := 'psintapoy: ' || psintapoy || 'pnsinies = ' ||
                             pnsinies || ' pntramit: ' || pntramit;
   vquery         CLOB;
BEGIN
         vquery :=
           'SELECT sintapoy, nsinies, ntramit, napoyo, cunitra, ctramitad, fingreso, ftermino, fsalida, tobserva, tlocali, csiglas, tnomvia, nnumvia, tcomple, cpais, '
         ||'       cprovin, cpoblac, cpostal, cviavp, clitvp, cbisvp, corvp, nviaadco, clitco, corco, nplacaco, cor2co, cdet1ia, tnum1ia, cdet2ia, tnum2ia, cdet3ia, '
         ||'       tnum3ia, localidad, falta, cusualt, fmodifi, cusumod, tobserva2, cagente, sperson, (SELECT ttramitad FROM sin_codtramitador s WHERE s.ctramitad = a.ctramitad) AS nombre '
         ||'  FROM sin_tramita_apoyos a'
         ||' WHERE ntramit = ' || pntramit
         ||'   AND nsinies =  ' || pnsinies;

            IF psintapoy IS NOT NULL THEN
                vquery := vquery || 'AND sintapoy = ' || psintapoy;
            END IF;

         v_cursor := pac_iax_listvalores.f_opencursor(vquery, mensajes);

   RETURN v_cursor;
EXCEPTION
   WHEN OTHERS THEN
      pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                        vobject,
                                        1000001,
                                        vpasexec,
                                        vparam,
                                        psqcode  => SQLCODE,
                                        psqerrm  => SQLERRM);
      RETURN NULL;
END f_get_sin_tramita_apoyo;

  /***********************************************************************
     FUNCTION f_set_sin_tramita_apoyo:
          guardar una solicitud de apoyo tecnico

   ***********************************************************************/
FUNCTION f_set_sin_tramita_apoyo (psintapoy  IN NUMBER,
                                  pnsinies   IN VARCHAR2,
                                  pntramit   IN NUMBER,
                                  pnapoyo    IN NUMBER,
                                  pcunitra   IN VARCHAR2,
                                  pctramitad IN VARCHAR2,
                                  pfingreso  IN DATE,
                                  pftermino  IN DATE,
                                  pfsalida   IN DATE,
                                  ptobserva  IN VARCHAR2,
                                  ptlocali   IN VARCHAR2,
                                  pcsiglas   IN NUMBER,
                                  ptnomvia   IN VARCHAR2,
                                  pnnumvia   IN NUMBER,
                                  ptcomple   IN VARCHAR2,
                                  pcpais     IN NUMBER,
                                  pcprovin   IN NUMBER,
                                  pcpoblac   IN NUMBER,
                                  pcpostal   IN VARCHAR2,
                                  pcviavp    IN NUMBER,
                                  pclitvp    IN NUMBER,
                                  pcbisvp    IN NUMBER,
                                  pcorvp     IN NUMBER,
                                  pnviaadco  IN NUMBER,
                                  pclitco    IN NUMBER,
                                  pcorco     IN NUMBER,
                                  pnplacaco  IN NUMBER,
                                  pcor2co    IN NUMBER,
                                  pcdet1ia   IN NUMBER,
                                  ptnum1ia   IN VARCHAR2,
                                  pcdet2ia   IN NUMBER,
                                  ptnum2ia   IN VARCHAR2,
                                  pcdet3ia   IN NUMBER,
                                  ptnum3ia   IN VARCHAR2,
                                  plocalidad IN VARCHAR2,
                                  pfalta     IN DATE,
                                  pcusualt   IN VARCHAR2,
                                  pfmodifi   IN DATE,
                                  pcusumod   IN VARCHAR2,
                                  ptobserva2 IN VARCHAR2,
                                  pcagente   IN NUMBER,
                                  psperson   IN NUMBER,
                                  mensajes   OUT t_iax_mensajes)
   RETURN NUMBER IS
   vnumerr      NUMBER(8) := 0;
   vpasexec     NUMBER(8) := 1;
   vparam       VARCHAR2(500) := '';
   vobject      VARCHAR2(200) := 'PAC_siniestros.f_set_sin_tramita_apoyo';
   cont         NUMBER;
   mail_grc     VARCHAR2(500) := '';
   conn         utl_smtp.connection;
   pos          NUMBER(8) := 0;
   premitente   VARCHAR2(500)  := '';
   pasunto      VARCHAR2(1500) := '';
   pcuerpo      VARCHAR2(1500) := '';
   pcuerpo_aux  VARCHAR2(1500) := '';
   ptarea       VARCHAR2(1500) := '';
   ptramitacion VARCHAR2(1500) := '';
   vidapunte    NUMBER;
   vusuari      VARCHAR2(20);
   tramitador   VARCHAR2(20);
   envio_tarea    NUMBER := 0;
   envio_correo   NUMBER := 0;
    v_usuari_ant      VARCHAR2(20):='';
    v_idapunte_ant  NUMBER:=0;
BEGIN

      SELECT asunto,
             cuerpo
        INTO pasunto,
             pcuerpo
        FROM desmensaje_correo
       WHERE scorreo = 250
         AND cidioma = pac_md_common.f_get_cxtidioma;

      pos := INSTR(pasunto, '#CODIGO#', 1);
      IF pos > 0
      THEN
         pasunto := REPLACE(pasunto, '#CODIGO#', '' || pnsinies || ' - ' || pntramit);
      END IF;

      pos := INSTR(pcuerpo, '#RECLAMO#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#RECLAMO#', '' || pnsinies);
      END IF;

      pos := INSTR(pcuerpo, '#TRAMITACION#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#TRAMITACION#', '' || pntramit);
      END IF;

      pos := INSTR(pcuerpo, '#FECHA_INGRESO#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#FECHA_INGRESO#', '' || pfingreso);
      END IF;

      pos := INSTR(pcuerpo, '#FECHA_TERMINO#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#FECHA_TERMINO#', '' || pftermino);
      END IF;

      pos := INSTR(pcuerpo, '#NAPUNTE#', 1);
      IF pos > 0
      THEN
         pcuerpo_aux := pcuerpo;
         pcuerpo_aux := REPLACE(pcuerpo_aux, '#NAPUNTE#', '');
      END IF;

      ptarea := REPLACE(pcuerpo_aux, '<br/>', CHR(13));


   IF psintapoy IS NULL
   THEN

      SELECT COUNT(*) + 1
        INTO cont
        FROM sin_tramita_apoyos
       WHERE nsinies = pnsinies
         AND ntramit = pntramit;
vpasexec := 2;
      INSERT INTO sin_tramita_apoyos
         (sintapoy, nsinies, ntramit, napoyo, cunitra, ctramitad, fingreso,
          ftermino, fsalida, tobserva, tlocali, csiglas, tnomvia, nnumvia,
          tcomple, cpais, cprovin, cpoblac, cpostal, cviavp, clitvp, cbisvp,
          corvp, nviaadco, clitco, corco, nplacaco, cor2co, cdet1ia, tnum1ia,
          cdet2ia, tnum2ia, cdet3ia, tnum3ia, localidad, falta, cusualt,
          tobserva2, cagente, sperson)
      VALUES
         (cont, pnsinies, pntramit, pnapoyo, pcunitra, pctramitad,
          pfingreso, pftermino, pfsalida, ptobserva, ptlocali, pcsiglas,
          ptnomvia, pnnumvia, ptcomple, pcpais, pcprovin, pcpoblac, pcpostal,
          pcviavp, pclitvp, pcbisvp, pcorvp, pnviaadco, pclitco, pcorco,
          pnplacaco, pcor2co, pcdet1ia, ptnum1ia, pcdet2ia, ptnum2ia,
          pcdet3ia, ptnum3ia, plocalidad, f_sysdate, f_user,
          ptobserva2, pcagente, psperson);

      envio_tarea := 1;
      envio_correo := 1;
   ELSE

      SELECT ctramitad
        INTO tramitador
        FROM sin_tramita_apoyos
       WHERE nsinies   = pnsinies
         AND ntramit   = pntramit
         AND sintapoy  = psintapoy;

      IF tramitador <> pctramitad THEN
         envio_tarea := 1;
         envio_correo := 1;
      END IF;

      UPDATE sin_tramita_apoyos
         SET napoyo    = pnapoyo,
             cunitra   = pcunitra,
             ctramitad = pctramitad,
             fingreso  = pfingreso,
             ftermino  = pftermino,
             fsalida   = pfsalida,
             tobserva  = ptobserva,
             tlocali   = ptlocali,
             csiglas   = pcsiglas,
             tnomvia   = ptnomvia,
             nnumvia   = pnnumvia,
             tcomple   = ptcomple,
             cpais     = pcpais,
             cprovin   = pcprovin,
             cpoblac   = pcpoblac,
             cpostal   = pcpostal,
             cviavp    = pcviavp,
             clitvp    = pclitvp,
             cbisvp    = pcbisvp,
             corvp     = pcorvp,
             nviaadco  = pnviaadco,
             clitco    = pclitco,
             corco     = pcorco,
             nplacaco  = pnplacaco,
             cor2co    = pcor2co,
             cdet1ia   = pcdet1ia,
             tnum1ia   = ptnum1ia,
             cdet2ia   = pcdet2ia,
             tnum2ia   = ptnum2ia,
             cdet3ia   = pcdet3ia,
             tnum3ia   = ptnum3ia,
             localidad = plocalidad,
             fmodifi   = f_sysdate,
             cusumod   = f_user,
             tobserva2 = ptobserva2,
             cagente   = pcagente,
             sperson   = psperson
       WHERE sintapoy  = psintapoy
         AND nsinies   = pnsinies
         AND ntramit   = pntramit;
   END IF;

   IF envio_tarea = 1
   THEN
vpasexec := 3;
      BEGIN
         SELECT s.cusuari
           INTO vusuari
           FROM sin_codtramitador s
          WHERE s.ctramitad = pctramitad;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
             vusuari := NULL;
      END;
vpasexec := 4;
       -- Inicio IAXIS-4955 EA
        BEGIN
            select cusuari,idapunte into v_usuari_ant,v_idapunte_ant from agd_agenda where idapunte=(select max(idapunte) from agd_agenda join agd_apunte using(idapunte) where ttitapu like '%apoyo%' and  tclagd = pnsinies) and cusuari<>vusuari;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
             v_idapunte_ant:=0;
        END;                
        IF v_idapunte_ant<>0 then               
        vnumerr := pac_agenda.f_set_movapunte(v_idapunte_ant, NULL, 2, f_sysdate, NULL, NULL);
        vnumerr := pac_agenda.f_set_movapunte(v_idapunte_ant, NULL, 1, f_sysdate, NULL, NULL);
        END if;
        -- Fin IAXIS-4955 EA         

vpasexec := 5;


      vnumerr := pac_agenda.f_set_apunte(pidapunte      => NULL,
                                         pidagenda      => NULL,
                                         pcclagd        => NULL,
                                         ptclagd        => NULL,
                                         pcconapu       => 1,
                                         pcestapu       => 0,
                                         pcgrupo        => NULL,
                                         ptgrupo        => NULL,
                                         pttitapu       => pasunto,
                                         ptapunte       => ptarea,
                                         pctipapu       => 0,
                                         pcperagd       => NULL,
                                         pcambito       => NULL,
                                         pcpriori       => NULL,
                                         pcusuari       => NULL,
                                         pfapunte       => NULL,
                                         pfestapu       => f_sysdate,
                                         pfalta         => f_sysdate,
                                         pfrecordatorio => NULL,
                                         pidapunte_out  => vidapunte);
vpasexec := 6;
      vnumerr := pac_agenda.f_set_agenda(pidapunte    => vidapunte,
                                         pidagenda    => NULL,
                                         pcusuari     => vusuari,
                                         pcgrupo      => NULL,
                                         ptgrupo      => NULL,
                                         pcclagd      => 0,
                                         ptclagd      => pnsinies,
                                         pcperagd     => NULL,
                                         pcusuari_ori => f_user,
                                         pcgrupo_ori  => NULL,
                                         ptgrupo_ori  => NULL,
                                         pcempres     => pac_md_common.f_get_cxtempresa,
                                         pcidioma     => pac_md_common.f_get_cxtidioma,
                                         ptevento     => NULL,
                                         pntramit     => pntramit,
                                         ptresp       => NULL);

      pos := INSTR(pcuerpo, '#NAPUNTE#', 1);
      IF pos > 0
      THEN
         pcuerpo := REPLACE(pcuerpo, '#NAPUNTE#', 'No.: ' || vidapunte);
      END IF;

   END IF;
vpasexec := 7;
   BEGIN

      SELECT mail_usu INTO premitente FROM usuarios WHERE cusuari = f_user;

      SELECT u.mail_usu
        INTO mail_grc
        FROM usuarios          u,
             sin_codtramitador s
       WHERE u.cusuari = s.cusuari
         AND s.ctramitad = pctramitad;
   EXCEPTION
      WHEN NO_DATA_FOUND THEN
         mail_grc   := NULL;
         premitente := NULL;
   END;

  /*IF mail_grc IS NOT NULL AND premitente IS NOT NULL AND envio_correo = 1
   THEN
vpasexec := 8;
  --AIXIS-2134 AABC ENVIO DE CORREO DESTINATARIO
      p_enviar_correo(p_from => premitente,
                      p_to => mail_grc,
                      p_from2 => premitente,
                      p_to2 => NULL,
                      p_subject => pasunto,
                      p_message => pcuerpo,
                      p_cc => NULL);
vpasexec := 9;
      conn := pac_send_mail.begin_mail(sender     => premitente,
                                       recipients => mail_grc,
                                       cc         => NULL,
                                       subject    => pasunto,
                                       mime_type  => pac_send_mail.multipart_mime_type || '; charset=UTF-8');
 vpasexec := 10;
      pac_send_mail.attach_text(conn      => conn,
                                data      => pcuerpo,

                   mime_type => 'text/html');
 vpasexec := 11;
      pac_send_mail.end_mail(conn => conn);
 vpasexec := 12;
   END IF;*/
   pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9908875);
   RETURN vnumerr;
EXCEPTION
   WHEN OTHERS THEN
      pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                        vobject,
                                        1000001,
                                        vpasexec,
                                        vparam,
                                        psqcode  => SQLCODE,
                                        psqerrm  => SQLERRM);
      RETURN 1;
END f_set_sin_tramita_apoyo;

  /***********************************************************************
     FUNCTION f_del_sin_tramita_apoyo:
          eliminar una solicitud de apoyo tecnico

   ***********************************************************************/
FUNCTION f_del_sin_tramita_apoyo (psintapoy IN NUMBER,
                                  pnsinies  IN VARCHAR2,
                                  pntramit  IN NUMBER,
                                  mensajes  OUT t_iax_mensajes)
   RETURN NUMBER IS
   vpasexec NUMBER(8) := 1;
   vparam   VARCHAR2(500) := 'psintapoy: ' || psintapoy || 'pnsinies = ' ||
                             pnsinies || ' pntramit: ' || pntramit;
   vobject  VARCHAR2(200) := 'PAC_siniestros.f_del_sin_tramita_apoyo';

BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         psintapoy IS NULL
      THEN
         RETURN 9000505;
      END IF;

      DELETE FROM sin_tramita_apoyos
       WHERE sintapoy = psintapoy
         AND nsinies = pnsinies
         AND ntramit = pntramit;

   RETURN 0;
EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
      RETURN 2292;
END f_del_sin_tramita_apoyo;


--IAXIS-5454 AABC CAMBIO DE RESERVA DETALLADA CONS AUM LIB DISM 
FUNCTION f_ins_reservadet(
  pnsinies  IN sin_siniestro.nsinies%TYPE,
  pidres    IN NUMBER,
  pnmovres  IN NUMBER,
  pfmovres  IN DATE,
  pcmovres  IN NUMBER,
  pcmonres  IN VARCHAR2,
  pcierre   IN NUMBER,
  pireserva IN NUMBER)
RETURN NUMBER IS
   vnumerr        NUMBER(8) := 0;
   vpasexec       NUMBER(8) := 1;
   vparam         VARCHAR2(500) := ' pnsinies: '|| pnsinies || ' pidres: ' || pidres || ' pnmovres: ' || pnmovres ||
                                   ' pfmovres: ' || pfmovres || ' pcmovres: ' || pcmovres || ' pcmonres: ' || pcmonres ||
                                   ' pcierre: ' || pcierre || ' pireserva: ' || pireserva;
   vobject              VARCHAR2(200) := 'PAC_SINIESTROS.f_ins_reservadet';
   v_cmoncia_n          NUMBER(4);
   vtraza               NUMBER(4);
   v_cmoncia_t          VARCHAR2(100);
   v_itasa              NUMBER;
   v_fcambio            DATE;
   v_fmovres            DATE;
   v_ireserva_moncia    NUMBER;
   v_isalres_moncia     NUMBER;
   resdet_ant           sin_tramita_reservadet%ROWTYPE;
   --IAXIS 5194 AABC detalle de reservas aumento disminucion liberacion
   resdet_aant          sin_tramita_reservadet%ROWTYPE;
   resdet_act           sin_tramita_reservadet%ROWTYPE;
   reservaact           sin_tramita_reserva%ROWTYPE; --Version 126.0
   v_dif                NUMBER;
   v_dif_mc             NUMBER;
   v_iconstres_moncia   NUMBER;
   v_iaumenres_moncia   NUMBER;
   v_iliberares_moncia  NUMBER;
   v_idismires_moncia   NUMBER;
   v_isalresaact_moncia NUMBER;
   v_isalresaant_moncia NUMBER;
   v_iconstres          NUMBER;
   v_iaumenres          NUMBER;
   v_iliberares         NUMBER;
   v_idismires          NUMBER;
   v_iaumen             NUMBER;
   v_ilibera            NUMBER;
   v_idismi             NUMBER;
   v_iaumen_mc          NUMBER;
   v_ilibera_mc         NUMBER;
   v_idismi_mc          NUMBER;
   v_isalresaact        NUMBER;
   v_isalresaant        NUMBER;
   v_nmovresdet         NUMBER;
   l_reserva_aant       NUMBER; 
   l_resmoncia_aant     NUMBER; 
   l_reserva_mvant      NUMBER; 
   l_resmoncia_mvant    NUMBER; 
   l_reserva_aact       NUMBER; 
   l_resmoncia_aact     NUMBER; 
   l_sidepag_detres     NUMBER;
   l_sidepag            NUMBER;
   v_sperson            NUMBER;
   v_sseguro            NUMBER; 
   v_cramo              NUMBER;
   nsincia              SIN_SINIESTRO.NSINCIA%TYPE;--SE AGREGA VAR PARA SABER SI EL SIN ES MIGRADO
   v_counresdet         NUMBER;
   --
   FUNCTION f_aumento_disminucion RETURN NUMBER IS
      BEGIN
        --
        v_iliberares_moncia  := 0;
        v_iaumenres_moncia   := 0;
        v_isalresaant_moncia := 0;
        v_isalresaant        := 0;
        v_isalresaact        := 0;
        v_iaumenres          := 0;
            --
        -- IAXIS 5454 AABC validacion de AUMENTO de Reserva
        BEGIN
        ----Version 126.0
           SELECT COUNT(*)
             INTO l_sidepag
             FROM SIN_TRAMITA_RESERVADET
            WHERE nsinies = pnsinies
              AND idres = pidres
              AND nmovres = pnmovres
              AND SIDEPAG = (SELECT sidepag
                               FROM sin_tramita_reserva
                              WHERE nsinies = pnsinies
                                AND idres   = pidres
                                AND nmovres = pnmovres);
            --
        END;
            --
        IF l_sidepag = 0 THEN

        IF l_reserva_mvant < pireserva THEN 
            --
	    --IAXIS 5194 AABC detalle de reservas aumento disminucion liberacion
          v_iaumen             := pireserva - nvl(resdet_ant.isalres,resdet_aant.isalres);
          v_iaumen_mc          := l_resmoncia_aact - l_resmoncia_mvant;
          v_isalresaact        := pireserva - l_reserva_aant;
          v_isalresaact_moncia := l_resmoncia_aact - l_resmoncia_aant;
          v_iaumenres          := v_iaumen;
          v_iaumenres_moncia   := v_iaumen_mc;
           v_isalresaant        := l_reserva_aant;
          v_isalresaant_moncia := l_resmoncia_aant; 
            --
      SELECT NVL(MAX(NMOVRESDET), 0) +1
         INTO v_nmovresdet
         FROM SIN_TRAMITA_RESERVADET
        WHERE NSINIES = pnsinies
        AND IDRES = pidres
        AND NMOVRES = pnmovres;
      ----Version 126.0
      INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                             FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                             IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,Sidepag )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                             pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0),nvl(v_idismires,0),
                                             v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                                nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
      --
            IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN 
               --
      INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                               CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                               SINTERF,NSINIES,CCONCEP) 
           VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                               ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                               ,NULL,pnsinies
                               ,pidres);
               --
           END IF;
      --
         END IF;
        -- IAXIS 5454 AABC validacion de DISMINUCION de Reserva
        IF nvl(resdet_ant.isalres,resdet_aant.isalres) > pireserva THEN
               --
           v_dif     := nvl(resdet_ant.isalres,resdet_aant.isalres) - pireserva;
           v_dif_mc  := l_resmoncia_mvant - l_resmoncia_aact;              
               --
        ELSIF l_reserva_mvant = 0 AND l_reserva_aant >= pireserva THEN  
               --
           v_dif    := l_reserva_aant - pireserva;
           v_dif_mc := l_resmoncia_aant - l_resmoncia_aact;          
               -- 
        END IF;
        -- IAXIS 5454 AABC validacion de DISMINUCION y LIBERACION de Reserva
        IF  v_dif >= nvl(resdet_ant.isalresaact,resdet_aant.isalresaact) THEN 
           --
           IF nvl(resdet_ant.isalresaact,resdet_aant.isalresaact) > 0 THEN
            --
              v_idismi             := nvl(resdet_ant.isalresaact,resdet_aant.isalresaact);
              v_idismi_mc          := nvl(resdet_ant.isalresaact_moncia,resdet_aant.isalresaact_moncia);
              v_isalresaact        := 0;
              v_isalresaact_moncia := 0; 
              v_ilibera            := v_dif - nvl(resdet_ant.isalresaact,resdet_aant.isalresaact);
              v_ilibera_mc         := v_dif_mc - nvl(resdet_ant.isalresaact_moncia,resdet_aant.isalresaact_moncia);
              v_isalresaant        := l_reserva_aant - v_ilibera;
              v_isalresaant_moncia := l_resmoncia_aant - v_ilibera_mc;
              v_iliberares         := v_ilibera; 
              v_iliberares_moncia  := v_ilibera_mc;
              v_idismires          := v_idismi;
              v_idismires_moncia   := v_idismi_mc;
            --
            SELECT NVL(MAX(NMOVRESDET), 0) +1
              INTO v_nmovresdet
              FROM SIN_TRAMITA_RESERVADET
             WHERE NSINIES = pnsinies
               AND IDRES = pidres
               AND NMOVRES = pnmovres;
            ----Version 126.0
            INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                                FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                                IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,Sidepag )
                                        VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                                pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), 0 ,nvl(v_idismires,0),
                                                v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                                nvl(v_iaumenres_moncia,0), 0 , nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
            --
            IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
               --
            INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                     CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                     SINTERF,NSINIES,CCONCEP) 
                 VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                     ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                     ,NULL,pnsinies
                                     ,pidres);
               --
            END IF;                               
            --
            SELECT NVL(MAX(NMOVRESDET), 0) +1
              INTO v_nmovresdet
              FROM SIN_TRAMITA_RESERVADET
             WHERE NSINIES = pnsinies
               AND IDRES = pidres
               AND NMOVRES = pnmovres;
            ----Version 126.0
            INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                                FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                                IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,Sidepag )
                                        VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                                pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0), 0 ,
                                                v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                                nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), 0 ,F_USER,pfmovres,l_sidepag_detres);
            --
            IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
               --    
            INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                     CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                     SINTERF,NSINIES,CCONCEP) 
                 VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                     ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                     ,NULL,pnsinies
                                     ,pidres);
              --
           END IF;                             
            --
           ELSIF nvl(resdet_ant.isalresaact,resdet_aant.isalresaact) = 0 THEN 
            --
              v_isalresaact := 0;            
            --
           END IF;
            --
           IF l_reserva_aant >= v_dif AND nvl(resdet_ant.isalresaact,resdet_aant.isalresaact) = 0 THEN 
               --
             v_ilibera            := l_reserva_aant - v_dif;
             v_ilibera_mc         := l_resmoncia_aant - v_dif_mc;
             v_iliberares         := l_reserva_aant - v_ilibera;
             v_iliberares_moncia  := l_resmoncia_aant  - v_ilibera_mc;
             v_isalresaant        := v_ilibera; 
             v_isalresaant_moncia := v_ilibera_mc;
             v_isalresaact        := 0;
             v_isalresaact_moncia := 0; 
               --
              SELECT NVL(MAX(NMOVRESDET), 0) +1
              INTO v_nmovresdet
              FROM SIN_TRAMITA_RESERVADET
             WHERE NSINIES = pnsinies
               AND IDRES = pidres
               AND NMOVRES = pnmovres;
            ----Version 126.0
            INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                                FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                                IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,Sidepag )
                                        VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                                pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0), nvl(v_idismires,0) ,
                                                v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                                nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), nvl(v_idismires_moncia,0) ,F_USER,pfmovres,l_sidepag_detres);
            --
            IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
               --
            INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                     CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                     SINTERF,NSINIES,CCONCEP) 
                 VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                     ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                     ,NULL,pnsinies
                                     ,pidres);
            -- 
           END IF;    
               --
           END IF;              
           --
        ELSIF nvl(resdet_ant.isalresaact,resdet_aant.isalresaact) > v_dif THEN 
               --
           v_idismi             := nvl(resdet_ant.isalresaact,resdet_aant.isalresaact) - v_dif;
           v_idismi_mc          := nvl(resdet_ant.isalresaact_moncia,resdet_aant.isalresaact_moncia) - v_dif_mc;
           v_isalresaact        := v_idismi;
           v_isalresaact_moncia := v_idismi_mc; 
           v_idismires          := v_dif;
           v_idismires_moncia   := v_dif_mc;
           v_isalresaant        := l_reserva_aant;
           v_isalresaant_moncia := l_resmoncia_aant;
         --
            SELECT NVL(MAX(NMOVRESDET), 0) +1
              INTO v_nmovresdet
              FROM SIN_TRAMITA_RESERVADET
             WHERE NSINIES = pnsinies
               AND IDRES = pidres
               AND NMOVRES = pnmovres;
         ----Version 126.0
         INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                             FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                             IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,Sidepag )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                             pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0),nvl(v_idismires,0),
                                             v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                             nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
         --
         IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
            --
         INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                  CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                  SINTERF,NSINIES,CCONCEP) 
              VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                  ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                  ,NULL,pnsinies
                                  ,pidres);
         --      
        END IF;
         --      
        END IF;
      --
         END IF;
      RETURN 0;
      --     
   END f_aumento_disminucion;
         --
   FUNCTION f_aum_dis_reex RETURN NUMBER IS
      --
      BEGIN
         --Version 126.0
         v_iliberares_moncia  := 0;
         v_iaumenres_moncia   := 0;
         v_isalresaant_moncia := 0;
         v_isalresaant        := 0;
         v_isalresaact        := 0;
         v_iaumenres          := 0;       
         --
        BEGIN
           ----Version 126.0
           SELECT *
             INTO resdet_act
             FROM SIN_TRAMITA_RESERVADET
            WHERE nsinies = pnsinies
              AND idres = pidres
              AND nmovres = pnmovres
              AND nmovresdet = (SELECT MAX(nmovresdet)
                                  FROM SIN_TRAMITA_RESERVADET
                                 WHERE nsinies = pnsinies
                                   AND idres = pidres
                                   AND nmovres = pnmovres );
           --
        EXCEPTION WHEN NO_DATA_FOUND THEN
           --
           resdet_act := null;
           --
    END;
        --
   ----Version 126.0
         BEGIN
      --
           SELECT COUNT(*)
             INTO l_sidepag
             FROM SIN_TRAMITA_RESERVADET
            WHERE nsinies = pnsinies
              AND idres = pidres
              AND nmovres = pnmovres
              AND SIDEPAG = (SELECT sidepag
                               FROM sin_tramita_reserva
                              WHERE nsinies = pnsinies
                                AND idres   = pidres
                                AND nmovres = pnmovres);
        --
        END;
         --
        IF l_sidepag = 0 THEN
        -- IAXIS 5454 AABC validacion de AUMENTO de Reserva
        IF l_reserva_mvant < pireserva THEN 
            --
          v_iaumen             := pireserva - resdet_act.isalres;
          v_iaumen_mc          := f_round(v_iaumen * v_itasa, v_cmoncia_n);          
          v_isalresaact        := resdet_act.isalresaact + v_iaumen;
          v_isalresaact_moncia := resdet_act.isalresaact_moncia + v_iaumen_mc;
          v_iaumenres          := v_iaumen;
          v_iaumenres_moncia   := v_iaumen_mc;
          v_isalresaant        := resdet_act.isalresaant;
          v_isalresaant_moncia := resdet_act.isalresaant_moncia; 
            --
            SELECT NVL(MAX(NMOVRESDET), 0) +1
           INTO v_nmovresdet
           FROM SIN_TRAMITA_RESERVADET
          WHERE NSINIES = pnsinies
            AND IDRES = pidres
            AND NMOVRES = pnmovres;
         ----Version 126.0
         INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                             FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                             IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,SIDEPAG )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                             pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0),nvl(v_idismires,0),
                                             v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                             nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
            --
          IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
          --         
          INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                   CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                   SINTERF,NSINIES,CCONCEP) 
               VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                   ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                   ,NULL,pnsinies
                                   ,pidres);
             --
          END IF;                            
            --
        END IF;
        -- IAXIS 5454 AABC validacion de DISMINUCION de Reserva
        IF resdet_act.isalres > pireserva THEN
            --
           v_dif     := resdet_act.isalres - pireserva;
           v_dif_mc  := l_resmoncia_mvant - l_resmoncia_aact;              
           --
        ELSIF l_reserva_mvant = 0 AND l_reserva_aant >= pireserva THEN  
           --
           v_dif    := l_reserva_aant - pireserva;
           v_dif_mc := l_resmoncia_aant - l_resmoncia_aact;             
            --
        END IF;
        -- IAXIS 5454 AABC validacion de DISMINUCION y LIBERACION de Reserva
        --
        IF  v_dif >= resdet_ant.isalresaact THEN 
            --
           IF resdet_act.isalresaant > 0  OR v_dif >= resdet_ant.isalresaact THEN
               --
              v_idismi             := resdet_act.isalresaact;
              v_idismi_mc          := resdet_act.isalresaact_moncia;
              v_isalresaact        := 0;
              v_isalresaact_moncia := 0; 
              v_ilibera            := v_dif - resdet_ant.isalresaact;
              v_ilibera_mc         := v_dif_mc - resdet_act.isalresaact_moncia;
              v_isalresaant        := l_reserva_aant - v_ilibera;
              v_isalresaant_moncia := resdet_act.isalresaant_moncia - v_ilibera_mc;
              v_iliberares         := v_ilibera; 
              v_iliberares_moncia  := v_ilibera_mc;
              v_idismires          := v_idismi;
              v_idismires_moncia   := v_idismi_mc;
               --
              IF v_iliberares > 0 AND v_iliberares_moncia > 0 THEN 
               --
              SELECT NVL(MAX(NMOVRESDET), 0) +1
                INTO v_nmovresdet
                FROM SIN_TRAMITA_RESERVADET
               WHERE NSINIES = pnsinies
                 AND IDRES = pidres
                 AND NMOVRES = pnmovres;
              ----Version 126.0
              INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                  ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                                  FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                                  IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,SIDEPAG )
                                          VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                                  pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0),0,
                                                  v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                                  nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0),0,F_USER,pfmovres,l_sidepag_detres);
              --
	      IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
                 --        
                 INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                          CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                          SINTERF,NSINIES,CCONCEP) 
                      VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                          ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                          ,NULL,pnsinies
                                          ,pidres);
                 --
	      END IF;
	      -- 
             END IF;
             --   
             IF  v_idismires > 0 AND v_idismires_moncia > 0 THEN     
                -- 
               SELECT NVL(MAX(NMOVRESDET), 0) +1
                INTO v_nmovresdet
                FROM SIN_TRAMITA_RESERVADET
               WHERE NSINIES = pnsinies
                 AND IDRES = pidres
                 AND NMOVRES = pnmovres;
              ----Version 126.0
              INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                  ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                                  FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                                  IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,SIDEPAG )
                                          VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                                  pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), 0,nvl(v_idismires,0),
                                                  v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                                  nvl(v_iaumenres_moncia,0), 0, nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
              --       
              IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
                 --       
              INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                       CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                       SINTERF,NSINIES,CCONCEP) 
                   VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                       ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                       ,NULL,pnsinies
                                       ,pidres);
                 --
              END IF;                            
               --
             END IF;
             --      
           ELSIF resdet_act.isalresaact = 0 THEN 
               --
              v_isalresaact := 0;            
               --
            END IF;
            --
           IF l_reserva_aant >= v_dif AND resdet_act.isalresaact = 0 THEN 
             --
             v_ilibera            := l_reserva_aant - v_dif;
             v_ilibera_mc         := l_resmoncia_aant - v_dif_mc;
             v_iliberares         := resdet_ant.isalresaant - v_ilibera;
             v_iliberares_moncia  := resdet_ant.isalresaant_moncia  - v_ilibera_mc;
             v_isalresaant        := v_ilibera; 
             v_isalresaant_moncia := v_ilibera_mc;
             v_isalresaact        := 0;
             v_isalresaact_moncia := 0; 
             --            
            SELECT NVL(MAX(NMOVRESDET), 0) +1
           INTO v_nmovresdet
           FROM SIN_TRAMITA_RESERVADET
          WHERE NSINIES = pnsinies
            AND IDRES = pidres
            AND NMOVRES = pnmovres;
         ----Version 126.0
         INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                             FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                             IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,SIDEPAG )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                             pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0),nvl(v_idismires,0),
                                             v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                             nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
            --
          --         
          IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
             --         
          INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                   CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                   SINTERF,NSINIES,CCONCEP) 
               VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                   ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                   ,NULL,pnsinies
                                   ,pidres);
             --
          END IF;
          --     
         END IF;
           --
        ELSIF resdet_act.isalresaact > v_dif   THEN 
            --
           v_idismi             := resdet_act.isalresaact - v_dif;
           v_idismi_mc          := resdet_act.isalresaact_moncia - v_dif_mc;
           v_isalresaact        := v_idismi;
           v_isalresaact_moncia := v_idismi_mc; 
           v_idismires          := v_dif;
           v_idismires_moncia   := v_dif_mc;
           v_isalresaant        := l_reserva_aant;
           v_isalresaant_moncia := resdet_act.isalresaant_moncia;
            --
            SELECT NVL(MAX(NMOVRESDET), 0) +1
           INTO v_nmovresdet
           FROM SIN_TRAMITA_RESERVADET
          WHERE NSINIES = pnsinies
            AND IDRES = pidres
            AND NMOVRES = pnmovres;
         ----Version 126.0
         INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES ,  ILIBERARES, IDISMIRES,
                                             FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                             IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,CUSUMOD,FMODIFI,SIDEPAG )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                             pireserva, v_isalresaant,  v_isalresaact, nvl(v_iconstres,0),  nvl(v_iaumenres,0), nvl(v_iliberares,0),nvl(v_idismires,0),
                                             v_fcambio, reservaact.ireserva_moncia,v_isalresaant_moncia, v_isalresaact_moncia, nvl(v_iconstres_moncia,0),
                                             nvl(v_iaumenres_moncia,0), nvl(v_iliberares_moncia,0), nvl(v_idismires_moncia,0),F_USER,pfmovres,l_sidepag_detres);
          --
          IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN         
             --
             INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                      CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                      SINTERF,NSINIES,CCONCEP) 
                  VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                      ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                      ,NULL,pnsinies
                                      ,pidres);
            --
          END IF;
            --
        END IF;       
            -- 
         END IF;
            --
         RETURN 0;
               --
   END f_aum_dis_reex;
   ----Version 126.0
   FUNCTION f_reexpresion(pctipo IN NUMBER) RETURN NUMBER IS
               --
      v_countres   NUMBER;
      v_evento     VARCHAR2(15);
      --
      BEGIN
               --
	 v_isalres_moncia := f_round(nvl(resdet_ant.isalres,resdet_aant.isalres) * v_itasa, v_cmoncia_n);
         v_isalresaant_moncia := f_round(nvl(resdet_ant.isalresaant,resdet_aant.isalres) * v_itasa, v_cmoncia_n);
         v_isalresaact_moncia := f_round(nvl(resdet_ant.isalresaact,0) * v_itasa, v_cmoncia_n);
         v_isalresaant:= l_reserva_aant;
         v_isalresaact := nvl(resdet_ant.isalresaact,0);
         v_iconstres_moncia  := 0; 
         v_iaumenres_moncia  := 0;
         v_iliberares_moncia := 0;  
         v_idismires_moncia  := 0;
         v_iconstres  := 0;
         v_iaumenres  := 0;
         v_iliberares := 0;
         v_idismires         := 0; 
         ----Version 126.0
         --IAXIS-13136
         IF pctipo = 2 THEN 
         --
            v_evento := 'RESERCIERRE';
            --
         ELSE 
            --
            v_evento := 'RESERVA';
            --
         END IF;      
         --IAXIS-13136
         BEGIN 
            --
            SELECT COUNT(1)
              INTO v_countres
              FROM sin_tramita_reservadet
             WHERE nsinies = pnsinies
               AND idres = pidres
               AND nmovres = pnmovres; 
            --
         EXCEPTION WHEN no_data_found THEN
            --
            v_countres := 0;
            --               
         END;
         -- 
       IF v_countres = 0 THEN   
          ----------::::CONFCC-71:::::::::::--------------------------
          SELECT NVL(MAX(nmovresdet), 0) + 1
            INTO v_nmovresdet
            FROM sin_tramita_reservadet
           WHERE nsinies = pnsinies
             AND idres = pidres
             AND nmovres = pnmovres;
            --
         INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES,ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES , ILIBERARES,
                                             IDISMIRES,FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA ,
                                             ICONSTRES_MONCIA ,IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,
                                             CUSUMOD,FMODIFI )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, pctipo, 0,
                                             nvl(resdet_ant.isalres,resdet_aant.isalres), v_isalresaant,  v_isalresaact, v_iconstres,  
                                             v_iaumenres, v_iliberares, v_idismires,v_fcambio, v_isalres_moncia,v_isalresaant_moncia, v_isalresaact_moncia,
                                             v_iconstres_moncia, v_iaumenres_moncia, v_iliberares_moncia, v_idismires_moncia,
                                             F_USER,pfmovres);
            --     
         IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
            --
            INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                     CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                     SINTERF,NSINIES,CCONCEP) 
                 VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,pctipo
                                     ,NULL , 0 , v_evento ,f_SYSDATE,NULL
                                     ,NULL,pnsinies
                                     ,pidres);
           --
         END IF;                             
         --
         END IF;
         --
      --Aumento Reexpresion 
         IF v_isalres_moncia > nvl(resdet_ant.isalres_moncia,resdet_aant.isalres_moncia) THEN 
            --
            v_iaumenres_moncia := v_isalres_moncia - nvl(resdet_ant.isalres_moncia,resdet_aant.isalres_moncia);
            --
            SELECT NVL(MAX(nmovresdet), 0) + 1
              INTO v_nmovresdet
              FROM sin_tramita_reservadet
             WHERE nsinies = pnsinies
               AND idres = pidres
               AND nmovres = pnmovres;
          --
      INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                             ISALRES,ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES , ILIBERARES,
                                             IDISMIRES,FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA ,
                                             ICONSTRES_MONCIA ,IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,
                                             CUSUMOD,FMODIFI )
                                     VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, pctipo, 0,
                                               nvl(resdet_ant.isalres,resdet_aant.isalres), v_isalresaant,  v_isalresaact, v_iconstres,  
                                               v_iaumenres, v_iliberares, v_idismires,v_fcambio, v_isalres_moncia,v_isalresaant_moncia, v_isalresaact_moncia,
                                             v_iconstres_moncia, v_iaumenres_moncia, v_iliberares_moncia, v_idismires_moncia,
                                               F_USER,pfmovres);
      --
      IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
         --
         INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                  CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                  SINTERF,NSINIES,CCONCEP) 
              VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,pctipo
                                  ,NULL , 0 , v_evento ,f_SYSDATE,NULL
                                  ,NULL,pnsinies
                                  ,pidres);
         --
      END IF;                             
            --
         ELSIF v_isalres_moncia < nvl(resdet_ant.isalres_moncia,resdet_aant.isalres_moncia) THEN 
            --
            IF v_isalresaant_moncia  < nvl(resdet_ant.isalresaant_moncia,resdet_aant.isalres_moncia) THEN
               --   
               v_iliberares_moncia := nvl(resdet_ant.isalres_moncia,resdet_aant.isalres_moncia) -  v_isalres_moncia ;
               --
               SELECT NVL(MAX(nmovresdet), 0) + 1
                 INTO v_nmovresdet
                 FROM sin_tramita_reservadet
                WHERE nsinies = pnsinies
                  AND idres = pidres
                  AND nmovres = pnmovres;
               --
               INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                   ISALRES,ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES , ILIBERARES,
                                                   IDISMIRES,FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA ,
                                                   ICONSTRES_MONCIA ,IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,
                                                   CUSUMOD,FMODIFI )
                                           VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, pctipo, 0,
                                                   nvl(resdet_ant.isalres,resdet_aant.isalres), v_isalresaant,  v_isalresaact, v_iconstres,  
                                                   v_iaumenres, v_iliberares, v_idismires,v_fcambio, v_isalres_moncia,v_isalresaant_moncia, v_isalresaact_moncia,
                                                   v_iconstres_moncia, v_iaumenres_moncia, v_iliberares_moncia, v_idismires_moncia,
                                                   F_USER,pfmovres);
               --
               IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
                  --
                  INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                           CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                           SINTERF,NSINIES,CCONCEP) 
                       VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,pctipo
                                           ,NULL , 0 , v_evento ,f_SYSDATE,NULL
                                           ,NULL,pnsinies
                                           ,pidres);
                  --
               END IF;                             
               --                         
            END IF;
            IF v_isalresaact_moncia < nvl(resdet_ant.isalresaact_moncia,0) THEN
               --
               v_idismires_moncia := nvl(resdet_ant.isalres_moncia,resdet_aant.isalres_moncia) -  v_isalres_moncia ;
               --
               SELECT NVL(MAX(nmovresdet), 0) + 1
                 INTO v_nmovresdet
                 FROM sin_tramita_reservadet
                WHERE nsinies = pnsinies
                  AND idres = pidres
                  AND nmovres = pnmovres;
               --
               INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                   ISALRES,ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES , ILIBERARES,
                                                   IDISMIRES,FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA ,
                                                   ICONSTRES_MONCIA ,IAUMENRES_MONCIA, ILIBERARES_MONCIA ,  IDISMIRES_MONCIA,
                                                   CUSUMOD,FMODIFI )
                                           VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, pctipo, 0,
                                                   nvl(resdet_ant.isalres,resdet_aant.isalres), v_isalresaant,  v_isalresaact, v_iconstres,  
                                                   v_iaumenres, v_iliberares, v_idismires,v_fcambio, v_isalres_moncia,v_isalresaant_moncia, v_isalresaact_moncia,
                                                   v_iconstres_moncia, v_iaumenres_moncia, v_iliberares_moncia, v_idismires_moncia,
                                                   F_USER,pfmovres);
               --
               IF nvl(v_iconstres_moncia,0) <> 0 OR nvl(v_iaumenres_moncia,0) <> 0 OR nvl(v_iliberares_moncia,0) <> 0 OR  nvl(v_idismires_moncia,0) <> 0 THEN
                  --  
                  INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                           CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                           SINTERF,NSINIES,CCONCEP) 
                       VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,pctipo
                                           ,NULL , 0 , v_evento ,f_SYSDATE,NULL
                                           ,NULL,pnsinies
                                           ,pidres);
                  -- 
               END IF;                             
               --
            END IF;
            --                                    
         END IF;
         --
      --
    -- INI - ML - 12/06/2019 - 4385 - SE RETORNA VALOR PARA ALIMENTAR NUM_ERROR
        return 0;
    EXCEPTION
        WHEN OTHERS THEN        
            return 1;
  -- FIN - ML - 12/06/2019 - 4385 - SE RETORNA VALOR PARA ALIMENTAR NUM_ERROR
   END f_reexpresion;
   ----Version 126.0
BEGIN
   ----Version 126.0
   SELECT pac_parametros.f_parempresa_n(cempres, 'MONEDAEMP') v_cmoncia_n, si.nsincia
     INTO v_cmoncia_n, nsincia
     FROM sin_siniestro si, seguros s
    WHERE s.sseguro = si.sseguro
      AND si.nsinies = pnsinies;
   --IAXIS 5194 AABC CONTABILIDAD DE RESERVAS
   BEGIN
   --
      SELECT T.SPERSON, T.SSEGURO , p.cramo 
        INTO v_sperson , v_sseguro , v_cramo
        FROM SIN_SINIESTRO S, TOMADORES T, productos p , seguros sg
       WHERE p.sproduc = sg.sproduc
         AND sg.sseguro = s.sseguro
         AND T.SSEGURO = S.SSEGURO
         AND S.NSINIES = pnsinies;
      --
   EXCEPTION WHEN OTHERS THEN 
      --
      v_sperson := NULL;
      --   
   END;   
   --IAXIS 5194 AABC CONTABILIDAD DE RESERVAS
   vpasexec := 2;
   v_cmoncia_t := pac_monedas.f_cmoneda_t(v_cmoncia_n);
   --
   IF pcmonres = v_cmoncia_t THEN
      --
      v_itasa := 1;
      --
   ELSE
      --
      v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(pcmonres, v_cmoncia_t, pfmovres);
      --
      IF v_fcambio IS NULL THEN
         --
         RETURN 9902592;   -- No se ha encontrado el tipo de cambio entre monedas
         --
      END IF;
      --
      v_itasa := pac_eco_tipocambio.f_cambio(pcmonres, v_cmoncia_t, v_fcambio);
      --
   END IF;
   --
   vpasexec := 3;
   --
   BEGIN 
     --
     SELECT sr.fmovres
       INTO v_fmovres
       FROM sin_tramita_reserva sr
      WHERE sr.nsinies = pnsinies
        AND sr.idres   = pidres
        AND sr.nmovres = pnmovres;
   EXCEPTION WHEN OTHERS THEN 
     --       
     v_fmovres := NULL;
     --
   END;
   BEGIN 
     --
     SELECT COUNT(*)
       INTO v_counresdet
       FROM sin_tramita_reservadet
      WHERE nsinies = pnsinies
        AND idres   = pidres;
     --
   END;  
   --EZ 7639 ESTE IF AFECTA TODAS LAS INSERCIONES DE MIGRACION, SE AJUSTA PARA QUE SI ES DE MIGRACION ENTRE
   IF to_date(v_fmovres,'DD/MM/YYYY') = to_date(f_sysdate,'DD/MM/YYYY') OR nsincia IS NOT NULL THEN
     --
     IF v_counresdet > 0 THEN 
     --
     BEGIN
        ----Version 126.0
        SELECT *
          INTO resdet_ant
          FROM SIN_TRAMITA_RESERVADET sr
         WHERE sr.nsinies = pnsinies
           AND sr.idres = pidres
           AND sr.cmonres = pcmonres
           AND sr.nmovres = (SELECT MAX (sr2.nmovres) 
                               FROM sin_tramita_reservadet sr2
                              WHERE sr2.nsinies = sr.nsinies
                                AND sr2.idres   = sr.idres
                                AND sr2.cmonres = sr.cmonres
                                AND to_char(sr2.fmodifi,'YYYY') = to_char(SYSDATE,'YYYY'))
           AND sr.nmovresdet = (SELECT MAX(nmovresdet)
                               FROM SIN_TRAMITA_RESERVADET sr3
                              WHERE sr3.nsinies = sr.nsinies
                                AND sr3.idres = sr.idres
                                AND sr3.nmovres = sr.nmovres
                                AND sr3.cmonres = sr.cmonres
                                AND to_char(sr3.fmodifi,'YYYY') = to_char(SYSDATE,'YYYY'));
        --
     EXCEPTION WHEN NO_DATA_FOUND THEN
        --
        SELECT *
          INTO resdet_aant
          FROM SIN_TRAMITA_RESERVADET sr
         WHERE sr.nsinies = pnsinies
           AND sr.idres = pidres
           AND sr.cmonres = pcmonres
           AND sr.nmovres = (SELECT MAX (sr2.nmovres) 
                               FROM sin_tramita_reservadet sr2
                              WHERE sr2.nsinies = sr.nsinies
                                AND sr2.idres   = sr.idres
                                AND sr2.cmonres = sr.cmonres
                                AND to_char(sr2.fmodifi,'YYYY') < to_char(SYSDATE,'YYYY'))
           AND sr.nmovresdet = (SELECT MAX(nmovresdet)
                               FROM SIN_TRAMITA_RESERVADET sr3
                              WHERE sr3.nsinies = sr.nsinies
                                AND sr3.idres = sr.idres
                                AND sr3.nmovres = sr.nmovres
                                AND sr3.cmonres = sr.cmonres
                                AND to_char(sr3.fmodifi,'YYYY') < to_char(SYSDATE,'YYYY'));
        --
    END;
    --
    END IF;
     --
     BEGIN
        ----Version 126.0
        SELECT *
          INTO reservaact
          FROM sin_tramita_reserva
         WHERE nsinies = pnsinies
       AND idres   = pidres  -- cambio AB
           AND nmovres = (SELECT MAX(nmovres)
                            FROM sin_tramita_reserva
                           WHERE nsinies = pnsinies
               AND idres   = pidres );
        --
     EXCEPTION WHEN no_data_found THEN
        --
        reservaact := NULL;
        --
    END;
     ----Version 126.0
        --
        BEGIN
           --
           SELECT ireserva,ireserva_moncia
             INTO l_reserva_aant,l_resmoncia_aant
             FROM sin_tramita_reserva s
            WHERE nsinies = pnsinies
        AND idres   = pidres 
              AND nmovres = (SELECT MAX(nmovres)
                               FROM sin_tramita_reserva
                              WHERE nsinies = pnsinies
                AND idres   = pidres 
                                AND to_char(fmovres,'YYYY') < to_char(SYSDATE,'YYYY'));
           --
        EXCEPTION WHEN no_data_found THEN
           --
           l_reserva_aant   := nvl(resdet_ant.isalresaant,0);
           l_resmoncia_aant := nvl(resdet_ant.isalresaant_moncia,0);
           --
        END;
        --
         BEGIN
           --
           SELECT ireserva,ireserva_moncia
             INTO l_reserva_mvant,l_resmoncia_mvant
             FROM sin_tramita_reserva s
            WHERE nsinies = pnsinies
              AND idres   = pidres 
              AND nmovres = (SELECT MAX(nmovres) -1
                               FROM sin_tramita_reserva
                              WHERE nsinies = pnsinies
                                AND idres   = pidres 
                                AND to_char(fmovres,'YYYY') = to_char(SYSDATE,'YYYY'));
           --
        EXCEPTION WHEN no_data_found THEN
           --
           l_reserva_mvant   := nvl(resdet_ant.isalresaant,0);
           l_resmoncia_mvant := nvl(resdet_ant.isalresaant_moncia,0);
           --
        END;
        --
         BEGIN
           --
           SELECT ireserva,ireserva_moncia,s.sidepag
             INTO l_reserva_aact,l_resmoncia_aact,l_sidepag_detres
             FROM sin_tramita_reserva s
            WHERE nsinies = pnsinies
              AND idres   = pidres 
              AND nmovres = (SELECT MAX(nmovres)
                               FROM sin_tramita_reserva
                              WHERE nsinies = pnsinies
                                AND idres   = pidres 
                                AND to_char(fmovres,'YYYY') = to_char(SYSDATE,'YYYY'));
           --
        EXCEPTION WHEN no_data_found THEN
           --
           l_reserva_aact   := nvl(resdet_ant.isalresaant,0);
           l_resmoncia_aact := nvl(resdet_ant.isalresaant_moncia,0);
           l_sidepag_detres  := NULL;
           --
        END;
        --
        IF l_reserva_aant > nvl(resdet_ant.isalresaant,0) THEN 
          --
          l_reserva_aant   := nvl(resdet_ant.isalresaant,resdet_aant.isalres); 
          l_resmoncia_aant := nvl(resdet_ant.isalresaant_moncia,resdet_aant.isalres_moncia); 
        --
     END IF ;
        --
     ----Version 126.0
     vpasexec     := 4;
     v_nmovresdet := pnmovres;
     vpasexec     := 5;
     ----Version 126.0
     IF NVL(pcierre,0) = 0 THEN
        --
        IF pcmovres IN (0,1)  THEN
           --
           v_ireserva_moncia := f_round(pireserva * v_itasa, v_cmoncia_n);
           vpasexec := 6;
           --
           BEGIN
              --
              INSERT INTO SIN_TRAMITA_RESERVADET (NSINIES,IDRES, NMOVRES, NMOVRESDET, CMONRES, CREEXPRESION, CTRASPASO,
                                                  ISALRES, ISALRESAANT, ISALRESAACT, ICONSTRES ,IAUMENRES , ILIBERARES, IDISMIRES,
                                                  FCAMBIO, ISALRES_MONCIA, ISALRESAANT_MONCIA , ISALRESAACT_MONCIA , ICONSTRES_MONCIA ,
                                                  IAUMENRES_MONCIA, ILIBERARES_MONCIA , IDISMIRES_MONCIA,CUSUMOD,FMODIFI )
                                          VALUES (pnsinies, pidres, pnmovres, v_nmovresdet, pcmonres, 0, 0,
                                                  pireserva,l_reserva_aant, pireserva, pireserva, 0, 0,0,
                                                  v_fcambio, reservaact.ireserva_moncia,l_resmoncia_aant, reservaact.ireserva_moncia, reservaact.ireserva_moncia,
                                                  0, 0, 0,F_USER,pfmovres);
              --
              IF nvl(reservaact.ireserva_moncia,0) <> 0  THEN
                 --         
                 INSERT INTO MOVCONTASAP (NRECIBO,CAGENTE,NMOVIMI,SSEGURO,RAMO,CTIPCOA,CTIPREC,
                                          CODESCENARIO,ESTADO,EVENTO,Fecha_Solicitud,NUMUNICO_SAP,
                                          SINTERF,NSINIES,CCONCEP) 
                      VALUES             (pnsinies,v_sperson,pnmovres,v_sseguro,v_cramo, v_nmovresdet,0
                                          ,NULL , 0 , 'RESERVA' ,f_SYSDATE,NULL
                                          ,NULL,pnsinies
                                          ,pidres);
                 --
              END IF;                            
              --   
           EXCEPTION WHEN OTHERS THEN
              --EZ 7639 EN MIGRACION SE NECESITA SABER SI ESTE REGISTRO NO INSERTA Y POR QUE
              --NULL;
              p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam,'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
           END;
              --
              vpasexec := 7;
              --
        ELSIF pcmovres IN (2,3,4) THEN
           ----Version 126.0
           IF pcmonres != v_cmoncia_t THEN
              ----Version 126.0
              vpasexec := 8;
              vnumerr  := f_reexpresion(1);
              vnumerr  := f_aum_dis_reex();
              --
           ELSE
            --
            vpasexec := 9;
            vnumerr  := f_aumento_disminucion();
            --
           END IF;
            --
        --ELSE
           --
         --  vpasexec := 10;
         --  vnumerr  := f_aumento_disminucion();
           --
        END IF;
        ----Version 126.0
     ELSIF pcierre = 1 THEN
        ----Version 126.0
        IF pcmonres != v_cmoncia_t THEN
           --
           v_fcambio := pfmovres;
           vnumerr   := f_reexpresion(2);
           --
        END IF;
        --
     END IF;
   END IF;
   --
   RETURN 0;
   ----Version 126.0
EXCEPTION WHEN OTHERS THEN
   --
   p_tab_error(f_sysdate, f_user, vobject, vpasexec, vparam,
               'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
   --
   RETURN 1;
   ----Version 126.0
END f_ins_reservadet;
--IAXIS-5454 AABC 30/10/2019 CAMBIO EN EL DETALLE DE RESERVAS 
  FUNCTION f_get_tramitaciones(pnsinies IN VARCHAR2, ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_lstlocaliza';
   BEGIN
      vtraza := 1;
      ptquery :=
         'SELECT
            ST.NSINIES,
            ST.NTRAMIT,
            FF_DESVALORFIJO(800, 8, SIC.CTIPTRA) TIPO,
            SD.TTRAMIT,
            SC.TTRAMITAD
          FROM SIN_TRAMITACION ST,
          SIN_CODTRAMITADOR SC,
          SIN_DESTRAMITACION SD,
          SIN_MOVSINIESTRO SM,
          SIN_CODTRAMITACION SIC
              WHERE SD.CTRAMIT(+) = ST.CTRAMIT
                AND SIC.CTRAMIT = ST.CTRAMIT
                AND SD.CIDIOMA(+) = 8
                AND SC.CTRAMITAD = SM.CTRAMITAD
                AND SM.NSINIES = ST.NSINIES
                AND SM.NMOVSIN  =  (SELECT
                                      MAX(SM2.NMOVSIN)
                                    FROM
                                      SIN_MOVSINIESTRO SM2
                                    WHERE  SM2.NSINIES = '|| pnsinies||'
                                   )
               AND ST.NSINIES = '
         || pnsinies ;
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_tramitaciones;


  FUNCTION f_get_reservas(pnsinies IN VARCHAR2, ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_reservas';
      vempresa       seguros.cempres%TYPE;
   BEGIN
   vempresa :=  pac_md_common.f_get_cxtempresa();
      vtraza := 1;
    /* Cambios de IAXIS-3642 : Start */
    -- IAXIS 3642 Cambios pantalla de pagos de tiquetes
      ptquery :=
         'SELECT
            ST.NSINIES,
            ST.NMOVRES,
            ST.CTIPRES,
            FF_DESVALORFIJO(322, 8, ST.CTIPRES) TIPO,
            ST.CGARANT,
            G.TGARANT,
            CMONRES,
            nvl(IRESERVA, 0) SALDO
          FROM SIN_TRAMITA_RESERVA ST, GARANGEN G
          WHERE G.CGARANT = ST.CGARANT
            AND ST.nmovres =  (
                                SELECT
                                  MAX(str2.nmovres)
                                FROM
                                  sin_tramita_reserva str2
                                WHERE
                                  str2.nsinies   = ST.nsinies
                                AND str2.ntramit = ST.ntramit
                                AND str2.ctipres = ST.ctipres
                                AND str2.cgarant = ST.cgarant
                               )
            AND G.CIDIOMA = 8 AND ST.NSINIES = '
                   || pnsinies ;
    -- IAXIS 3642 Cambios pantalla de pagos de tiquetes               
  /* Cambios de IAXIS-3642 : End */
       IF NVL(pac_parametros.f_parempresa_n(vempresa, 'SIN_AEREO_TPRESERVAS'), 1) = 1 THEN
           -- INI BUG 1044 - ACL - 02/02/2018
       -- ptquery := ptquery || ' AND ST.CTIPGAS  IS NOT NULL';
       ptquery := ptquery || ' AND ST.CTIPRES  = 3';
       -- FIN BUG 1044 - ACL - 02/02/2018
       END IF;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_reservas;
  -- IAXIS 3609 Andres Betancour Clasificacion de siniestros 14/05/2019

  FUNCTION f_get_clasificasiniestro (pnsinies IN VARCHAR2, pnpagos  IN NUMBER,  pntramita  IN NUMBER, ptquery OUT VARCHAR2)
      RETURN NUMBER IS
      vtraza         NUMBER := 0;
      vobject        VARCHAR2(200) := 'PAC_SINIESTROS.f_get_clasificasiniestro';
      vcestsin NUMBER;
      vctiosin NUMBER;
      vfsinies       DATE;
      cidioma  NUMBER;


   BEGIN
   vtraza := 1;
   cidioma := pac_md_common.f_get_cxtidioma;

   SELECT CESTSIN, CTIPSIN INTO vcestsin, vctiosin FROM sin_movsiniestro WHERE NSINIES = pnsinies and
   NMOVSIN = (SELECT MAX(NMOVSIN) FROM sin_movsiniestro WHERE NSINIES = pnsinies);

       IF (vcestsin =0 OR vcestsin =4) AND vctiosin =0 THEN
          IF pnpagos = 1 THEN
             ptquery := 'select * from detvalores where cvalor = 8002017 and  CIDIOMA = ' || cidioma || ' AND  CATRIBU = 1';
          ELSIF pntramita = 1  AND pnpagos = 0 THEN
                ptquery := 'select * from detvalores where cvalor = 8002017 and  CIDIOMA = ' || cidioma || ' AND  CATRIBU = 3';  
          ELSIF pnpagos = 0 AND pntramita = 0 THEN
             ptquery := 'select * from detvalores where cvalor = 8002017 and  CIDIOMA = ' || cidioma || ' AND  CATRIBU = 2';
          END IF;
      END IF;

      RETURN 0;
   EXCEPTION
        WHEN NO_DATA_FOUND THEN
         ptquery := NULL;
         RETURN 0;

      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, vobject, vtraza, 'error recuperando datos', SQLERRM);
         RETURN 1000455;
   END f_get_clasificasiniestro;

   /*************************************************************************
      FUNCTION f_ins_estimasini
         Inserta a la tabla sin_tramita_estsiniestro.
         param in pnsinies : numero de siniestro
         param in ntramit  : numero de tramitacion
         param in nmovimi  : numero de movimiento
         param in nmaxpp   : maxima perdida probable
         param in ncontin   : valor de la contingencia
         param in nriesgo   : valor del riesgo
         param in cobserv   : observaciones         
         param in pnclasepro valor Clase de proceso
         param in pninstproc valor Instancia del Proceso
         param in pnfallocp valor Fallo
         param in pncalmot valor Calificación motivos
         param in pfcontingen valor Fecha
         param in ptobsfallo valor Observación Fallo
         return            : 0 -> correcto
                             1 -> error
      IAXIS 3603 AABC 10/05/2019
   *************************************************************************/
   FUNCTION f_ins_estimasini(
      pnsinies IN NUMBER,
      pntramit  IN NUMBER,
      pnmovimi  IN NUMBER,
      pnmaxpp  IN NUMBER,
      pncontin  IN NUMBER,
      pnriesgo  IN NUMBER,
      pcobserv IN VARCHAR2
    ,pnclasepro IN NUMBER
    ,pninstproc IN NUMBER
    ,pnfallocp IN NUMBER
    ,pncalmot IN NUMBER
    ,pfcontingen IN DATE
    ,ptobsfallo IN VARCHAR2)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_SINIESTROS.f_ins_estimasini';
      vparam         VARCHAR2(500)
                          := 'parametros- pnsinies: ' || pnsinies || ' ntramit:' || pntramit
                              || ' nmovimi:' || pnmovimi || ' nmaxpp:' || pnmaxpp || ' ncontin:' || pncontin 
                              || ' nriesgo:' || pnriesgo || ' nclasepro:' || pnclasepro || ' ninstproc:' || pninstproc || ' nfallocp:' || pnfallocp || ' ncalmot:' || pncalmot || ' fcontingen:' || pfcontingen ;
      vnmovimi       NUMBER;
   BEGIN

      SELECT MAX(nmovimi) INTO vnmovimi FROM sin_tramita_estsiniestro   WHERE nsinies =  pnsinies;                

       IF pnsinies IS NULL
         OR pntramit IS NULL THEN
         RETURN 9000505;
      END IF;
      --
-- nriesgo es ahora ccausa. 8/30/2019 solo cambio el literal en pantalla
      IF vnmovimi IS NULL THEN 
         --
         vnmovimi:= 1;
         --         
         INSERT INTO sin_tramita_estsiniestro
                     (nsinies,ntramit,nmovimi,nmaxpp,ncontin,nriesgo,cobserv,nclasepro,ninstproc,nfallocp,ncalmot,fcontingen,tobsfallo,cusualt, falta,cusumod,fmodif)
              VALUES (pnsinies, pntramit, vnmovimi, pnmaxpp, pncontin, pnriesgo, pcobserv,pnclasepro,pninstproc,pnfallocp,pncalmot,pfcontingen,ptobsfallo,f_user,f_sysdate,f_user,f_sysdate);
         --
     ELSE
        --
        vnmovimi:= vnmovimi +1;
        INSERT INTO sin_tramita_estsiniestro
                     (nsinies,ntramit,nmovimi,nmaxpp,ncontin,nriesgo,cobserv,nclasepro,ninstproc,nfallocp,ncalmot,fcontingen,tobsfallo,cusualt, falta,cusumod,fmodif)
              VALUES (pnsinies, pntramit, vnmovimi, pnmaxpp, pncontin, pnriesgo, pcobserv,pnclasepro,pninstproc,pnfallocp,pncalmot,pfcontingen,ptobsfallo,f_user,f_sysdate,f_user,f_sysdate);
         --            
     END IF;

      -- update contingencia proceso jdicial 
      BEGIN  

      FOR VAL IN (SELECT  M.NTRAMIT FROM SIN_TRAMITA_JUDICIAL  S, SIN_TRAMITA_MOVIMIENTO M 
      WHERE M.NSINIES=S.NSINIES 
      AND M.NTRAMIT=S.NTRAMIT 
      AND M.NMOVTRA =(SELECT MAX(NMOVTRA) FROM SIN_TRAMITA_MOVIMIENTO   
      WHERE NSINIES=S.NSINIES AND NTRAMIT=S.NTRAMIT )
      AND S.NSINIES=pnsinies) LOOP
       p_control_error('ABJ','SIN_TRAMITA_JUDICIAL' ||pncontin,'pnsinies: '||pnsinies);
       UPDATE SIN_TRAMITA_JUDICIAL SET CCONTI=pncontin WHERE NSINIES=pnsinies AND NTRAMIT=VAL.NTRAMIT;

      END LOOP;
      COMMIT;
      EXCEPTION
              WHEN OTHERS THEN

                 RETURN 9000464;   --Error AL ACTUALIZAR
   END; 

      RETURN 0;
           EXCEPTION
              WHEN OTHERS THEN
                 p_tab_error(f_sysdate, f_user, vobjectname,1 , vparam,
                             'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
                 RETURN 9002048;   --Error al llegar de la tabla SIN_CODCAUEST
   END f_ins_estimasini;
   /*************************************************************************
        funcion borra localizacion de tramitacion
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pnlocali : numero localizacion
   *************************************************************************/
   FUNCTION f_del_localizacion(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      pnlocali IN NUMBER)
      RETURN NUMBER IS
      vpasexec       NUMBER(8) := 1;
      vparam         VARCHAR2(200)
         := ' pnsinies=' || pnsinies || 'pntramit=' || pntramit || ' pnlocali=' || pnlocali;
      vobject        VARCHAR2(200) := 'pac_siniestro.f_del_localizacion';
      vcount         NUMBER;

    BEGIN

    IF pnsinies IS NULL
       OR pntramit IS NULL
       OR pnlocali IS NULL THEN
         RETURN 9000505;
    END IF;

    DELETE sin_tramita_localiza
          WHERE nsinies = pnsinies
            AND ntramit = pntramit
            AND nlocali = pnlocali;

      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate, f_user, 'pac_siniestros.f_del_localizacion', 1,
                     'Error no controlado pnsinies:' || pnsinies || ' pntramit:' || pntramit
                     || ' pnlocali:' || pnlocali, SQLERRM);
         RETURN 140999;
   END f_del_localizacion;
END pac_siniestros;
/
