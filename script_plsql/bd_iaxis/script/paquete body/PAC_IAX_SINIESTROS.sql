create or replace PACKAGE BODY "PAC_IAX_SINIESTROS" AS
   /******************************************************************************
      NOMBRE:      PAC_IAX_SINIESTROS
      PROPÃ“SITO: Funciones para la gestiÃ³n de siniestros

      REVISIONES:

      Ver        Fecha        Autor             DescripciÃ³n
      ---------  ----------  ---------------  ------------------------------------
      1.0        17/02/2009   XPL i XV         1. CreaciÃ³n del package.
      2.0        23/09/2009   DCT              2. Modificar la funciÃ³n f_set_objeto_sintramidocumento.
      3.0        14/10/2009   XPL              3. bug. 11192. Alta de siniestros de Vida
      4.0        12/11/2009   DRA              4. 0011434: CEM - Cambios pantalla alta siniestros
      5.0        23/11/2009   AMC              5. 0011847: AGA - Error al introducir detalle recobro en siniestro
      6.0        08/01/2010   AMC              6. 0012604: CEM - Agenda de siniestros da error
      7.0        15/01/2010   XPL              7. 11929 AGA - Bajar a base de datos la alta completa de siniestros
      8.0        17/12/2009   AMC              8. Bug 11944 - Se crea la funciÃ³n f_get_histreservas.
      9.0        15/01/2010   AMC              9. Bug 11945 - AGA - Crear columna PrevisiÃ³n Recobro para siniestros
      10.0       18/01/2010   AMC              10.  Bug 12753 - CEM - CreaciÃ³n automÃ¡tica de destinatario
      11.0       20/01/2010   AMC              11. Bug 11849 - CEM - Crear botÃ³n generaciÃ³n pago automÃ¡tico en siniestros
      12.0       02/02/2010   LCF               12. Bug 10093 - CRE - Anyadir parÃ¡metros bÃºsqueda pÃ³lizas
      13.0       01/02/2010   AMC              13. Bug 12207 - AGA - IntroducciÃ³n de reservas en productos de Baja (Salud)
      14.0       12/03/2010   AMC              14. Bug 12124 - AGA - Parametrizar imputaciÃ³n reserva y recobro en siniestro
      15.0       18/05/2010   AMC              15. Bug 14490 - AGA - Se aÃ±ade los parametros pnmovres,psproduc,pcactivi
      16.0       31/05/2010   XPL              16. bug : 14607, AGA004 - Conceptos de pago a nivel de detalle del pago de un siniestro
      17.0       01/06/2010   AMC              17. bug 14752 - Se aÃ±aden nuevas funciones.
      18.0       23/06/2010   AMC              18. Bug 15153 - Se aÃ±aden los parametros sproduc y cactivi a la funciÃ³n f_del_objeto_sintramiagenda
      19.0       10/09/2010   SRA              19. Bug 15965 - CRT - Se crea nueva funciÃ³n PAC_IAX_SINIESTROS.F_CONSULTA_LSTSINI_RIESGO
      20.0       27/09/2010   ICV              21. 0016102: AGA003 - Error al mirar quan una reserva es pot eliminar o no
      21.0       30/10/2010   JRH              22. BUG 15669 : Campos nuevos
      22.0       26/10/2010   ICV              23. 0016280: GRC - GestiÃ³n de siniestro. ModificaciÃ³n de pago II
      23.0       08/11/2010   XPL              23. 15044: AGA202 - Crear pantalla para pagos de rentas
      24.0       13/08/2010   PFA              24. 14587: CRT001 - AÃ±adir campo siniestro compaÃ±ia
      25.0       17/08/2010   PFA              25. 15006: MDP003 - Incluir nuevos campos en bÃºsqueda siniestros
      26.0       22/11/2010   DRA              26. 0016506: CRE - Pantallas de siniestros nuevo mÃ³dulo
      27.0       23/11/2010   ETM              27. 0016645: GRC - BÃºsqueda de siniestros
      28.0       15/12/2010   ICV              28. 0014587: CRT001 - AÃ±adir campo siniestro compaÃ±ia
      28.0       14/12/2010   DRA              28. 0016506: CRE - Pantallas de siniestros nuevo mÃ³dulo
      30.0       22/12/2010   ICV              30. 0015738: ENSA101 - Duplicat en PDF pagament en capital SONANGOL
      31.0       24/02/2011   ICV              31. 0017718: CCAT003 - AccÃ©s a productes en funciÃ³ de l'operaciÃ³
      32.0       16/03/2011   JMF              32. 0017970: ENSA101- Campos pantallas de siniestros y mejoras
      33.0       11/05/2011   DRA              33. 0018502: CRE800 - AmpliaciÃ³ del nÃºm. de dies de una baixa
      34.0       02/05/2011   JMC              34. 0018379: LCOL701 - Desarrollo TrÃ¡mites Siniestros. ModificaciÃ³n funciones de tramitaciones.
      35.0       11/06/2011   SRA              35. 0018554: LCOL701 - Desarrollo de ModificaciÃ³n de datos cabecera siniestro y ver histÃ³rico (BBDD).
      36.0       12/07/2011   ICV              36. 0018977: LCOL_S001 - SIN -AsignaciÃ³n automÃ¡tica de tramitadores
      37.0       13/10/2011   JMC              37. 0019601: LCOL_S001-SIN - Subestado del pago
      38.0       07/11/2011   MDS              38. 0019981: LCOL_S001-SIN - ReteIVA y ReteICA en pagos
      39.0       21/10/2011   JMP              39. 0019832 LCOL_S001-SIN - Carpeta de siniestro
      40.0       10/11/2011   MDS              40. 0019821: LCOL_S001-SIN - TramitaciÃ³n judicial
      41.0       08/11/2011   JMP              41. 0018423: LCOL000 - Multimoneda
      42.0       09/12/2011   JMF              42. 0020472: LCOL_TEST-SIN - Reserva aÃ±adida sobre garantÃ­a contratada (no siniestrada aÃºn)
      43.0       05/01/2012   ETM              43. 0019896: LCOL_S001-SIN - Declarante del siniestro
      44.0       16/01/2012   JMP              44. 0018423: LCOL705 - Multimoneda
      45.0       24/01/2012   JMP              45. 0020014: LCOL_S001-SIN - Reservas y pagos en tramitaciones cerradas
      46.0       25/01/2012   JMP              46. 18423/104212: LCOL705 - Multimoneda
      47.0       14/02/2012   JMP              47. 21357/107298: LCOL898 -IdentificaciÃ³ de pagaments i rebuts en NotificaciÃ³
      48.0       02/03/2012   MDS              48. 0021172: LCOL_S001-SIN - Alta/ModificaciÃ³n masiva de reservas
      49.0       27/03/2012   ETM              49. 0021740: MDP_S001-SIN - Presiniestros
      50.0       25/04/2012   ASN              50. 0021720: MDP_S001-SIN - Recobros que afectan o no a reservas
      51.0       02/05/2012   APD              51. 0022044: CRE800: ConfiguraciÃ³ de sinistres per CVCapital (sproduc 225)
      52.0       03/05/2012   ETM              52.0022048: LCOL_S001-SIN - NÂº de juzgado cambiar tipo
      53.0       07/05/2012   MDS              53.0021855: MDP_S001-SIN - Detalle fraude
      54.0       16/05/2012   JMF              0022099: MDP_S001-SIN - TrÃ¡mite de asistencia
      55.0       31/05/2012   ASN              0022108: MDP_S001-SIN - Movimiento de trÃ¡mites
      56.0       28/06/2012   ASN              0022670: SIN - Mensajes en alta de siniestros (y nuevo parametro)Ã§
      57.0       05/07/2012   ASN              0022603: MDP_S001-Reserva global
      58.0       09/07/2012   JMF              0022490: LCOL_S001-SIN - Poder indicar que se generen los pagos como el Ãºltimo (Id=4604)
      59.0       18/07/2012   ASN              0022702: MDP_S001-SIN - vgobsiniestro.tramitaciones.EXISTS(i)
      60.0       19/07/2012   JMF              0022153 MDP_S001-SIN - NÃºmero de presiniestro y documentaciÃ³n
      61.0       03/10/2012   MDS              0023805: MDP_S001-SIN - Visualizar/Ocultar casilla de asistencia en la pantalla de alta de siniestros
      62.0       24/10/2012   JMF              0023826 MDP_S001-SIN - Presiniestros, ref_ext, y estimaciÃ³n reserva (Id=22769)
      63.0       24/10/2012   JMF              0023536 LCOL_S001-SIN - TramitaciÃ³n Otros
      64.0       24/10/2012   JMF              0023540 LCOL_S001-SIN - TramitaciÃ³n lesionados
      65.0       25/10/2012   MDS              0024192: LCOL898-Modificacions Notificaci? recaudo CxC
      66.0       05/11/2012   ASN              0024434: MDP_S001-SIN - Calculo de la reserva global
      67.0       21/11/2012   MDS              0024192: LCOL898-Modificacions Notificacio recaudo CxP (id A - 173)
      68.0       03/12/2012   JMF              0024964: LCOL_S001-SIN - Seleccion tramitador en alta siniestro (Id=2754)
      69.0       23/01/2013   ASN              0025812: LCOL_S010-SIN - GarantÃ­as segÃºn tramitaciÃ³n
      70.0       15/03/2013   ASN              0026108: LCOL_S010-SIN - LCOL Tipo de gasto en reservas
      71.0       25/03/2013   ASN              0025800: Preguntas en alta siniestro (modificar amplitud campos de texto)
      72.0       08/04/2013   DCT              0026456: LCOL_S010-SIN - ParametrizaciÃ³n documentos necesarios Autos
      73.0       07/05/2013   NSS              0025607: LCOL_S001-SIN - Franquicias en siniestros
      74.0       30/05/2013   DCT              0027063: LCOL_S001-SIN - Fecha recepciÃ³n documento (Id=7851)
      75.0       30/10/2013   ASN              0024708: (POSPG500)- Parametrizacion - Sinestros/0157275 actualizar preguntas
      76.0       28/08/2013   NSS              0024637: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros (IMPUESTOS)
      77.0       04/02/2014   FAL              0025537: RSA000 - GestiÃ³n de incidencias
      78.0       26/02/2014   NSS              0028830/0166530: (POSND500)-N. Desarrollo: Siniestros: Compensaci?n cartera vs. Siniestros
      79.0       05/03/2014   JTT              0030299/167375: Controlar els errors d'assignaciÃ³ el tramitador per defecte
      80.0       05/03/2014   JTT              0030142/166845: Controlar la creacion de movimientos abiertos cuando existe un pre-siniestro.
      81.0       06/03/2014   NSS              0029224/0166661: (POSAN500)-Analisis-Siniestros-Nuevos Desarrollos
      82.0       11/03/2014   NSS              0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros
      83.0       12/03/2014   DEV              0030342: POSPG500-Modulo de Autorizaciones para pagos de Siniestros
      84.0       24/03/2014   NSS              0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros
      85.0       26/03/2014   JTT              0029804/0170889: Validar el limit del tramitador segons el parametre VALIDARLIMTRAMITADOR
      86.0       09/04/2014   NSS              0030935: POSPG500-Control de alta de siniestros duplicados segÃºn garantÃ­a
      87.0       14/04/2014   JTT              0030920: Resolucion de bugs, el algunos casos al anularse el pago no se disminuye la reserva
      88.0       15/04/2014   JTT              0030920: Resolucion de bugs, en determinados pagos no se reduce la reserva
      89.0       11/04/2014   FAL              0025537: RSA000 - GestiÃ³n de incidencias
      90.0       16/04/2014   NSS              0031040: POSPG500-Crear un nuevo tipo de destinatario para los colectivos
      91.0       22/04/2014   NSS              0029989/165377: LCOL_S001-SIN - Rechazo de tramitaciÃ³n Ãºnica
      92.0       30/06/2014   JTT              0031933/178143: Modificamos F_GRABAR_SINIESTRO para controlar los presiniestros
      93.0       17/07/2014   JTT              0028830/179900: Revision del proceso de pago de compensaciones
      94.0       20/08/2014   JTT              0024637/182009: Redondeamos el resultado de los importes a dos decimales. F_OBJCALCULA_IMPORTS_DETPAGOS
      95.0       15/09/2014   JTT              0032781/183592: RSA no actualiza la cabecera del pago con los datos del pago
      96.0       14/01/2015   NMM              24856: MigraciÃ³n Forms
      97.0       09/02/2015   NMM              34512: RepeticiÃ³ moviments apertura sinistres
      98.0       24/02/2015   FRC              0033345/0193484: GeneraciÃ³n de documentos en los eventos de siniestros.
      99.0       02/03/2015   JTT              0034622/0197860: Fecha de formalizaciÃ³n de siniestros
     100.0       10/04/2015   NMM              24856: MigraciÃ³n Forms
     101.0       17/03/2015   JCP              0035102/200437: Validacion de Innomidados, ff_hay_lista_innominados
     102.0       25/05/2015   JTT              0035982/204620: Corregimos la funcion F_set_obj_sintram_movpagrecob cuando se realiza una anulaciÃ³n de un recobro
     103.0       08/05/2015   VCG              0032470-0204062: AÃ±adir la referencia externa en el buscador de siniestros
     104.0       16/06/2015   CJMR             0036232/207513: AÃ±adir la referencia externa en el buscador de siniestros
     105.0       05/01/2016   JCP              0039475/222692: Modificar la select para recuperar tambiÃ©n el nuevo campo fdeteccion de sin_siniestro
     106.0       21/06/2016   JTT              POSINS-115: Corregimos la funcion F_set_movpago para que informe correctamente la fecha contable del movimiento
     107.0       10/09/2016   JAEG             CONF-309: Desarrollo AT_CONF_SIN-07_ADAPTACION_CORE_SINIESTROS_BUSQUEDA_ANTECEDENTES
     108.0       02/05/2017   JGONZALEZ        CONF-693: Se incluyen campos de audiencia en agenda de citaciones
     109.0       11/08/2017   JGONZALEZ        CONF-1005: Desarrollo de GAP 67 solicitud de apoyo tecnico
   110.0       27/04/2018   ACL              0002055: Se modifica la funciÃ³n f_objcalcula_imports_detpagos el cÃ¡lculo del Reteica.
   111.0       27/04/2018   AABC             IAXIS-2169 Adicion de fecha de alta en la consulta.
   112.0         12/04/2019   AABC            IAXIS 3663 AABC 12/04/2019 Adicion campo observacion
     113.0		 09/05/2019	  Swapnil		   Cambios de IAXIS-3650
   114.0       19/12/2019   DFRP            IAXIS-7731: LISTENER Cambio de estado del siniestro y creación de Campos: Valor, Fecha, número de pago, que comunica SAP a IAXIS     
   115.0       28/01/2020   DFRP            IAXIS-10516: No se visualiza la cesión del pago
   ************************************************************************/
   -- BUG 9020 - 10/03/2009 - XPL I XV - Nou model de dades del Sinistre
   e_object_error EXCEPTION;
   e_param_error  EXCEPTION;

   /*************************************************************************
      Inicializa el package para la gestiÃ³n de siniestros
      param out          : mensajes de error
      return             : 0 todo ha sido correcto
                           1 ha habido un error
   *************************************************************************/
   FUNCTION f_inicializa_old(mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_inicializa_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - NULL';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      mensajes                    := t_iax_mensajes();
      vgobsiniestro               := ob_iax_siniestros();
      vgobsiniestro.pagos         := t_iax_pagosini();
      vgobsiniestro.garantias     := t_iax_garansini();
      vgobsiniestro.documentacion := t_iax_documentacion();
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_inicializa_old;

   FUNCTION f_set_gravar_presiniestro(pnsinies   IN VARCHAR2,
                                      psseguro   IN NUMBER,
                                      pnriesgo   IN NUMBER,
                                      pnmovimi   IN NUMBER,
                                      pfsinies   IN DATE,
                                      phsinies   IN VARCHAR2,
                                      pfnotifi   IN DATE,
                                      pccausin   IN NUMBER,
                                      pcmotsin   IN NUMBER,
                                      pcevento   IN VARCHAR2,
                                      pcculpab   IN NUMBER,
                                      pcreclama  IN NUMBER,
                                      pnasegur   IN NUMBER,
                                      pcmeddec   IN NUMBER,
                                      pctipdec   IN NUMBER,
                                      ptnomdec   IN VARCHAR2,
                                      ptnom1dec  IN VARCHAR2, --bug 19896--ETM-20/12/2011--AÃ±adir campo tnombre1 al declarante
                                      ptnom2dec  IN VARCHAR2, --BUG 19896 --ETM --20/12/2011-AÃ±adir campo 2nombre de declarante
                                      ptape1dec  IN VARCHAR2,
                                      ptape2dec  IN VARCHAR2,
                                      ptteldec   IN VARCHAR2,
                                      ptmovildec IN VARCHAR2, --BUG 19896 --ETM --20/12/2011-AÃ±adir campo telefono mov de declarante
                                      ptemaildec IN VARCHAR2, --BUG 19896 --ETM --20/12/2011-AÃ±adir campo email  de declarante
                                      ptsinies   IN VARCHAR2,
                                      pcagente   IN NUMBER, -- Bug 21817 - MDS - 2/05/2012
                                      mensajes   OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_gravar_presiniestro(';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro ||
                                   ' - pnriesgo: ' || pnriesgo ||
                                   ' - pfsinies: ' || pfsinies ||
                                   ' - pfnotifi: ' || pfnotifi ||
                                   ' - ptsinies: ' || ptsinies ||
                                   ' pcagente=' || pcagente;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnsinies    sin_siniestro.nsinies%TYPE;
      vtmotsin    VARCHAR2(1000);
      vtcausin    VARCHAR2(1000);
      vtevento    VARCHAR2(1000);
      v_index     NUMBER;
      pcempres    NUMBER;
      pcunitra    VARCHAR2(50);
      pctramit    VARCHAR2(50);
      vtunitra    VARCHAR2(1000) := '';
      vttramitad  VARCHAR2(1000) := '';
      vtcauest    VARCHAR2(1000) := '';
      vcborrab    NUMBER(4);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL OR
         pnriesgo IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnsinies := pnsinies;

      IF vnsinies IS NULL
      THEN
         vnsinies := -1;
      END IF;

      --Validacions capÃ§alera sinistre
      -- Bug 0022243 - 22/05/2012 - JMF : aÃ±adir pnsinies
      vnumerr := pac_iax_validaciones_sin.f_cabecerasini(pfsinies,
                                                         pfnotifi,
                                                         pccausin,
                                                         pcmotsin,
                                                         psseguro,
                                                         NULL,
                                                         NULL,
                                                         vnsinies,
                                                         'PRE-SINIESTRO',
                                                         0, -- 24434:ASN:05/11/2012
                                                         ptemaildec, -- 24869:NSS:11/12/2012
                                                         NULL, -- 24869:NSS:11/12/2012
                                                         NULL, -- 25537:ASN:13/08/2013
                                                         NULL,
                                                         NULL,  -- CONF-85 23/06/2016 AP
                                                         mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Bug 0022099 - 16/05/2012 - JMF: aÃ±adir asistencia
      vnumerr := pac_md_siniestros.f_set_cabecera_siniestro(vnsinies,
                                                            psseguro,
                                                            pnriesgo,
                                                            pnmovimi,
                                                            pfsinies,
                                                            phsinies,
                                                            pfnotifi,
                                                            pccausin,
                                                            pcmotsin,
                                                            pcevento,
                                                            pcculpab,
                                                            pcreclama,
                                                            pnasegur,
                                                            pcmeddec,
                                                            pctipdec,
                                                            ptnomdec,
                                                            ptnom1dec,
                                                            ptnom2dec, --BUG 19896 --ETM --20/12/2011-AÃ±adir campo 2nombre de declarante
                                                            ptape1dec,
                                                            ptape2dec,
                                                            ptteldec,
                                                            ptmovildec,
                                                            ptemaildec,
                                                            ptsinies,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL,
                                                            NULL, --BUG 19832 - 24/10/2011 - JMP: Se aÃ±ade parÃ¡metro PCCARPETA, en este caso se pasa NULL
                                                            NULL,
                                                            pcagente, -- Bug 21817 - MDS - 2/05/2012
                                                            NULL, -- BUG 0024675 - 15/11/2012 - JMF
                                                            NULL,
                                                            vgobsiniestro, --BUG 18748: LCOL701-Campo fraude en alta/modificaci?n/consulta de siniestros
                                                            mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vgobsiniestro.movimientos   := NULL;
      vgobsiniestro.tramitaciones := NULL;
      vgobsiniestro.movimientos   := t_iax_sin_movsiniestro();
      vgobsiniestro.movimientos.extend;
      v_index := vgobsiniestro.movimientos.last;
      vgobsiniestro.movimientos(v_index) := ob_iax_sin_movsiniestro();
      vpasexec := 3;
      --Ini Bug.: 18977 - 12/07/2011 - ICV
      /*vnumerr := pac_siniestros.f_get_unitradefecte(pac_md_common.f_get_cxtempresa, pcunitra,
      pctramit);*/
      vnumerr  := pac_md_siniestros.f_get_tramitador_defecto(pac_md_common.f_get_cxtempresa,
                                                             f_user,
                                                             psseguro,
                                                             pccausin,
                                                             pcmotsin,
                                                             NULL,
                                                             NULL, -- 22108:ASN:30/05/2012
                                                             NULL,
                                                             pcunitra,
                                                             pctramit,
                                                             mensajes);
      vpasexec := 4;

      IF NVL(vnumerr, 99999) > 1
      THEN
         --El error 1 es de tramitador por defecto U000
         RAISE e_object_error;
      END IF;

      vnumerr := 0;
      --Fin Bug 18977

      --busca tramitador i unitat tramitador per crear l'objecte de moviments
      vnumerr  := pac_md_siniestros.f_set_objeto_movsiniestro(vnsinies,
                                                              v_index - 1,
                                                              5,
                                                              f_sysdate,
                                                              NULL,
                                                              pcunitra,
                                                              pctramit,
                                                              vgobsiniestro.movimientos(v_index),
                                                              mensajes);
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_gravar_presiniestro;

   /*************************************************************************
      Devuelve los siniestros que cumplan con el criterio de selecciÃ³n
      param in pnpoliza     : nÃºmero de pÃ³liza
      param in pncert       : nÃºmero de cerificado por defecto 0
      param in pnsinies     : nÃºmero del siniestro
      param in cestsin      : cÃ³digo situaciÃ³n del siniestro
      param in pnnumide     : nÃºmero identidad persona
      param in psnip        : nÃºmero identificador externo
      param in pbuscar      : nombre+apellidos a buscar de la persona
      param in ptipopersona : tipo de persona
                               1 tomador
                               2 asegurado
      param out mensajes    : mensajes de error
      return                : ref cursor
   *************************************************************************/
   FUNCTION f_consultasini_old(pnpoliza  IN NUMBER,
                               pncertif  IN NUMBER DEFAULT -1,
                               pnsinies  IN NUMBER,
                               pcestsin  IN NUMBER,
                               pnnumide  IN VARCHAR2,
                               psnip     IN VARCHAR2,
                               pbuscar   IN VARCHAR2,
                               ptipopers IN NUMBER,
                               pnsubest  IN NUMBER,
                               mensajes  OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_consultasini_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnpoliza: ' || pnpoliza ||
                                   ' - pncertif: ' || pncertif ||
                                   ' - pnsinies: ' || pnsinies ||
                                   ' - pcestsin: ' || pcestsin ||
                                   ' - pnnumide: ' || pnnumide ||
                                   ' - psnip: ' || psnip || ' - pbuscar: ' ||
                                   pbuscar || ' - ptipopers: ' || ptipopers ||
                                   ' - pnsubest: ' || pnsubest;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      vcursor := pac_md_siniestros.f_consultasini_old(pnpoliza,
                                                      pncertif,
                                                      pnsinies,
                                                      pcestsin,
                                                      pnnumide,
                                                      psnip,
                                                      pbuscar,
                                                      ptipopers,
                                                      pnsubest,
                                                      mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_consultasini_old;

   /***********************************************************************
      Recupera los datos de los tomadores de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : T_IAX_TOMADORES con la colecciÃ³n de tomadores de la pÃ³liza
                           NULL si error
   ***********************************************************************/
   FUNCTION f_get_poltomadores_old(psseguro IN NUMBER,
                                   mensajes OUT t_iax_mensajes)
      RETURN t_iax_tomadores IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_poltomadores_old';
      vparam        VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec      NUMBER(5) := 1;
      vnumerr       NUMBER(8) := 0;
      v_t_tomadores t_iax_tomadores;
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vnumerr  := pac_md_obtenerdatos.f_inicializa('POL',
                                                   psseguro,
                                                   NULL,
                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec      := 5;
      v_t_tomadores := pac_md_obtenerdatos.f_leetomadores(mensajes);

      IF v_t_tomadores IS NULL
      THEN
         RAISE e_object_error;
      END IF;

      RETURN v_t_tomadores;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_poltomadores_old;

   /***********************************************************************
      Recupera los datos de los riesgos de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : T_IAX_GESTRIESGOS con la colecciÃ³n de riesgos de la pÃ³liza
                           NULL si error
   ***********************************************************************/
   FUNCTION f_get_polriesgos_old(psseguro IN NUMBER,
                                 mensajes OUT t_iax_mensajes)
      RETURN t_iax_riesgos IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_polriesgos_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_t_riesgos t_iax_riesgos := t_iax_riesgos();
      vmovimi     NUMBER;
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      SELECT MAX(nmovimi)
        INTO vmovimi
        FROM movseguro
       WHERE sseguro = psseguro;

      vnumerr := pac_md_obtenerdatos.f_inicializa('POL',
                                                  psseguro,
                                                  vmovimi,
                                                  mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec    := 5;
      v_t_riesgos := pac_md_obtenerdatos.f_leeriesgos(mensajes);

      IF v_t_riesgos IS NULL
      THEN
         RAISE e_object_error;
      END IF;

      RETURN v_t_riesgos;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_polriesgos_old;

   /***********************************************************************
      Recupera los datos del Ãºltimo recibo de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_get_pollastrecibo_old(psseguro IN NUMBER,
                                    mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_pollastrecibo_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_pollastrecibo_old(psseguro,
                                                            mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_pollastrecibo_old;

   FUNCTION f_get_pollastrecibo2(psseguro IN NUMBER,
                                 pfsinies IN DATE,
                                 mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_pollastrecibo2';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      --vgobsiniestro.fsinies
      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_pollastrecibo2(psseguro,
                                                         vgobsiniestro.fsinies,
                                                         mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_pollastrecibo2;

   /***********************************************************************
      Recupera los datos de los recibos de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_get_polrecibos_old(psseguro IN NUMBER,
                                 mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_polrecibos_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_polrecibos_old(psseguro, mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_polrecibos_old;

   /***********************************************************************
      Recupera las garantia vigentes de una la pÃ³liza para un determinado riesgo,
      a fecha de ocurrencia del siniestro
      param in psseguro  : cÃ³digo de seguro
      param in pnriesgo  : nÃºmero de riesgo
      param in pfsinies  : fecha de ocurrencia del siniestro
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_get_polgarantias_old(psseguro IN NUMBER,
                                   pnriesgo IN NUMBER,
                                   pfsinies IN DATE,
                                   mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_polgarantias_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro ||
                                   ' - pnriesgo: ' || pnriesgo ||
                                   ' - pfsinies: ' || pfsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL OR
         pnriesgo IS NULL OR
         pfsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_polgarantias_old(psseguro,
                                                           pnriesgo,
                                                           pfsinies,
                                                           mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_polgarantias_old;

   /***********************************************************************
      Recupera los documentos necesarios para poder realizar la apertura del siniestro.
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_get_documentacion_old(psseguro IN NUMBER,
                                    mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_documentacion_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_documentacion_old(psseguro,
                                                            mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_documentacion_old;

   /***********************************************************************
      Recupera los datos del tramitador
      param out pctrami   : cÃ³digo del tramitador
      param out pttrami   : Nombre del tramitador
      param out mensajes  : mensajes de error
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_get_tramitador_old(pctrami  OUT NUMBER,
                                 pttrami  OUT VARCHAR2,
                                 mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_tramitador_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - NULL';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      pctrami := 1;
      pttrami := f_user;
      RETURN vnumerr;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_tramitador_old;

   /***********************************************************************
      Graba los datos del siniestro en la variable global objeto del paquete
      param in  psseguro  : cÃ³digo de seguro
      param in  pnriesgo  : nÃºmero de riesgo
      param in  pfsinies  : fecha de ocurrencia del siniestro
      param in  phsinies  : hora de ocurrencia del siniestro
      param in  pfnotifi  : fecha de notificaciÃ³n del siniestro
      param in  pctrami   : cÃ³digo del tramitador del siniestro
      param in  ptsinies  : descripciÃ³n del siniestro
      param in  pcmotsin  : cÃ³digo del motivo del siniestro
      param in  pccausin  : cÃ³digo de la causa del siniestro
      param in  pcculpab  : cÃ³digo de la culpabilidad del siniestro
      param in  ptzonaocu : descripciÃ³n de la zona de ocurrencia del siniestro
      param out mensajes  : mensajes de error
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_set_datsiniestro_old(psseguro  IN NUMBER,
                                   pnriesgo  IN NUMBER,
                                   pfsinies  IN DATE,
                                   phsinies  IN VARCHAR2,
                                   pfnotifi  IN DATE,
                                   pctrami   IN VARCHAR2,
                                   ptsinies  IN VARCHAR2,
                                   pcmotsin  IN NUMBER,
                                   pccausin  IN NUMBER,
                                   pcculpab  IN NUMBER,
                                   ptzonaocu IN VARCHAR2,
                                   mensajes  OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_datsiniestro_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro ||
                                   ' - pnriesgo: ' || pnriesgo ||
                                   ' - pfsinies: ' || pfsinies ||
                                   ' - pfnotifi: ' || pfnotifi ||
                                   ' - ptsinies: ' || ptsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(2);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL OR
         pnriesgo IS NULL OR
         ptsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF pccausin IS NULL
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9000637);
         RETURN 1;
      END IF;

      IF pcmotsin IS NULL
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9000638);
         RETURN 1;
      END IF;

      IF pfsinies IS NULL
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9000640);
         RETURN 1;
      END IF;

      IF pfnotifi IS NULL
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9000641);
         RETURN 1;
      END IF;

      vpasexec := 3;
      --Inicialitzem l'objecte sinistre
      vnumerr := f_inicializa_old(mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 4;
      --CÃ²pia dels parÃ metres passats per parÃ metre, a la variable global objecte sinistre del paquet.
      vgobsiniestro.sseguro  := psseguro;
      vgobsiniestro.nriesgo  := pnriesgo;
      vgobsiniestro.fsinies  := pfsinies;
      vgobsiniestro.hsinies  := phsinies;
      vgobsiniestro.fnotifi  := pfnotifi;
      vgobsiniestro.ctrami   := pctrami;
      vgobsiniestro.tsinies  := ptsinies;
      vgobsiniestro.cmotsin  := pcmotsin;
      vgobsiniestro.ccausin  := pccausin;
      vgobsiniestro.tzonaocu := ptzonaocu;
      -- Cal mirar si l'agrupaciÃ³ del producte Ã©s la de Autos, i en tal cas, la culpabilitat ha de ser obligatÃ²ria
      vpasexec := 5;
      vcagrpro := pac_mdpar_productos.f_get_agrupacio(psseguro, mensajes);

      IF mensajes IS NOT NULL
      THEN
         IF mensajes.count > 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      vpasexec := 6;

      IF vcagrpro = 50
      THEN
         -- AgrupaciÃ³ Autos
         IF pcculpab IS NULL
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 1000609);
            RETURN 1;
         END IF;
      END IF;

      vgobsiniestro.cculpab := pcculpab;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_datsiniestro_old;

   /***********************************************************************
      Inserta la garantÃ­a como una de las vinculadas al siniestro que se estÃ¡ dando de alta
      param in pcgarant  : cÃ³digo de la garantÃ­a
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_set_garantias_old(pcgarant IN NUMBER,
                                mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_garantias_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pcgarant: ' || pcgarant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      i           NUMBER(8);
      vivalora    garanseg.icapital%TYPE;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pcgarant IS NULL OR
         vgobsiniestro IS NULL OR
         vgobsiniestro.sseguro IS NULL OR
         vgobsiniestro.nriesgo IS NULL OR
         vgobsiniestro.fsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      --De moment recuperem com el capital de la garantÃ­a com a capital de la valoraciÃ³.
      BEGIN
         SELECT gs.icapital
           INTO vivalora
           FROM garanseg gs
          WHERE gs.sseguro = vgobsiniestro.sseguro
            AND gs.nriesgo = vgobsiniestro.nriesgo
            AND gs.cgarant = pcgarant
            AND gs.finiefe <=
                TO_DATE(TO_CHAR(vgobsiniestro.fsinies,
                                'dd/mm/yyyy hh24:mi:ss'),
                        'dd/mm/yyyy hh24:mi:ss')
            AND (gs.ffinefe IS NULL OR
                gs.ffinefe >
                TO_DATE(TO_CHAR(vgobsiniestro.fsinies,
                                 'dd/mm/yyyy hh24:mi:ss'),
                         'dd/mm/yyyy hh24:mi:ss'));
      EXCEPTION
         WHEN no_data_found THEN
            --PÃ²lissa sense garanties a la data de sinistre => no es pot donar d'alta la valoraciÃ³ a aquesta data.
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 111012);
            RETURN 1;
      END;

      vpasexec := 5;
      vgobsiniestro.garantias.extend;
      i := vgobsiniestro.garantias.last;
      vgobsiniestro.garantias(i) := ob_iax_garansini();
      vgobsiniestro.garantias(i).cgarant := pcgarant;
      vgobsiniestro.garantias(i).fvalora := vgobsiniestro.fsinies;
      vgobsiniestro.garantias(i).ivalora := vivalora;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_garantias_old;

   /***********************************************************************
      Inserta el documento como uno de los vinculados al siniestro que se estÃ¡ dando de alta.
      param in pcdocume  : cÃ³digo del documento
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_set_documentacion_old(pcdocume IN NUMBER,
                                    mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_documentacion_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pcdocume: ' || pcdocume;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pcdocume IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_documentacion_old;

   /***********************************************************************
      Graba en la base de datos, los datos del siniestro guardado en la variable global del paquete
      param out nsinies   : nÃºmero de siniestro asignado en el alta de siniestro
      param out mensajes  : mensajes de error
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_altasiniestro_old(onsinies OUT NUMBER,
                                mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_altasiniestro_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - vgObSiniestro (variable global de paquete)';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vfsinies    DATE;
      vtmsg       VARCHAR2(1000);
      v_sproduc   productos.sproduc%TYPE;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF vgobsiniestro IS NULL OR
         vgobsiniestro.sseguro IS NULL OR
         vgobsiniestro.nriesgo IS NULL OR
         vgobsiniestro.fsinies IS NULL OR
         vgobsiniestro.fnotifi IS NULL OR
         vgobsiniestro.tsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vnumerr  := pac_seguros.f_get_sproduc(vgobsiniestro.sseguro,
                                            NULL,
                                            v_sproduc);
      -- dra 16-12-2008: bug mantis 7826
      -- Validem si tÃ© accÃ©s per contractar el producte
      vpasexec := 3;
      vnumerr  := pac_md_validaciones.f_valida_acces_prod(v_sproduc,
                                                          pac_md_common.f_get_cxtagente,
                                                          6,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 4;
      vnumerr  := pac_md_sini_grabardatos.f_altasiniestro(vgobsiniestro,
                                                          onsinies,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vtmsg := pac_iobj_mensajes.f_get_descmensaje(1000007,
                                                   pac_md_common.f_get_cxtidioma);
      pac_iobj_mensajes.crea_nuevo_mensaje(mensajes,
                                           2,
                                           0,
                                           vtmsg || onsinies);
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_altasiniestro_old;

   /***********************************************************************
      Recupera los datos de un determinado siniestro
      param in  pnsinies  : nÃºmero de siniestro
      param out mensajes  : mensajes de error
      return              : OB_IAX_SINIESTROS con la informaciÃ³n del siniestro
                            NULL -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_get_siniestro_old(pnsinies IN NUMBER,
                                mensajes OUT t_iax_mensajes)
      RETURN ob_iax_siniestros IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_siniestro_old';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vobsini     ob_iax_siniestros := ob_iax_siniestros();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      --RecuperaciÃ³ de les dades del sinistre
      vobsini := pac_md_sini_obtenerdatos.f_get_siniestro(pnsinies,
                                                          mensajes);

      IF vobsini IS NULL
      THEN
         vpasexec := 5;
         RAISE e_object_error;
      END IF;

      RETURN vobsini;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_siniestro_old;

   /*************************************************************************
      Inicializa el package para la gestiÃ³n de siniestros
      param out          : mensajes de error
      return             : 0 todo ha sido correcto
                           1 ha habido un error
   *************************************************************************/
   FUNCTION f_inicializa(mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Inicializa';
      vparam      VARCHAR2(500) := 'parÃ¡metros - NULL';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      mensajes      := t_iax_mensajes();
      vgobsiniestro := ob_iax_siniestros();
      RETURN 0;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_inicializa;

   /***********************************************************************
      Recupera los datos de un determinado siniestro del objeto
      param in  pnsinies  : nÃºmero de siniestro
      param out mensajes  : mensajes de error
      return              : OB_IAX_SINIESTROS con la informaciÃ³n del siniestro
                            NULL -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_get_siniestro(mensajes OUT t_iax_mensajes)
      RETURN ob_iax_siniestros IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_Siniestro';
      vparam      VARCHAR2(500) := 'parÃ¡metros -  ';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      vpasexec := 3;
      --RecuperaciÃ³ de les dades del sinistre

      --pac_md_siniestros.f_get_siniestro(pnsinies, mensajes);
      RETURN pac_iax_siniestros.vgobsiniestro;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_siniestro;

   /***********************************************************************
      Recupera los datos de un determinado siniestro del tablas a objeto
      param in  pnsinies  : nÃºmero de siniestro
      param out mensajes  : mensajes de error
      return              : OB_IAX_SINIESTROS con la informaciÃ³n del siniestro
                            NULL -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_inicializasiniestro(psproduc IN NUMBER,
                                  pcactivi IN NUMBER,
                                  pnsinies IN VARCHAR2,
                                  mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_inicializasiniestro';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vobsini     ob_iax_siniestros := ob_iax_siniestros();
      vnsinies    VARCHAR2(20);
   BEGIN
      vpasexec := 3;
      --RecuperaciÃ³ de les dades del sinistre
      vobsini                          := pac_md_siniestros.f_get_siniestro(pac_md_common.f_get_cxtempresa,
                                                                            psproduc,
                                                                            pcactivi,
                                                                            pnsinies,
                                                                            mensajes);
      pac_iax_siniestros.vgobsiniestro := vobsini;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_inicializasiniestro;

   /***********************************************************************
   Ens retorna la Ãºltima reserva per un sinistre donat,
     param in  pnsinies  : nÃºmero de siniestro
     param out ult_reserva  : Ãšltim moviment de la reserva del sinistre
     param out mensajes  : mensajes de error
     return              :  0 OK!
                            1 -> Se ha producido un error

   ***********************************************************************/
   FUNCTION f_get_ultimareserva(pnsinies    IN VARCHAR2,
                                ult_reserva OUT SYS_REFCURSOR,
                                mensajes    OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_ultimareserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      --RecuperaciÃ³ de les dades del sinistre
      vnumerr := pac_md_siniestros.f_get_ultimareserva(pnsinies,
                                                       ult_reserva,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         vpasexec := 5;
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_ultimareserva;

   /***********************************************************************
     Ens retorna tots els pagaments d'un sinistre idependentment de la tramitaciÃ³,
     param in  pnsinies  : nÃºmero de siniestro
     param in  pctippag  : tipo de pago 2--> pago, 7 --> recobro
     param out pagosporsinistro : CapÃ§alera del pagament
     param out mensajes  : mensajes de error
     return              :  0 OK!
                            1 -> Se ha producido un error

   ***********************************************************************/
   FUNCTION f_get_pagosporsiniestro(pnsinies         IN VARCHAR2,
                                    pctippag         IN NUMBER,
                                    pagosporsinistro OUT SYS_REFCURSOR,
                                    mensajes         OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_pagosporsinistro';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      --RecuperaciÃ³ de les dades del sinistre
      vnumerr := pac_md_siniestros.f_get_pagosporsiniestro(pnsinies,
                                                           pctippag,
                                                           pagosporsinistro,
                                                           mensajes);

      IF vnumerr <> 0
      THEN
         vpasexec := 5;
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_pagosporsiniestro;

   /***********************************************************************
     Ens retorna tots els pagaments d'una reserva i una tramitaciÃ³ concreta,
     param in  pnsinies  : nÃºmero de siniestro
     param in  pctippag  : tipo de pago 2--> pago, 7 --> recobro
     param out detallespagos : CapÃ§alera del pagament
     param out mensajes  : mensajes de error
     return              :  0 OK!
                            1 -> Se ha producido un error

   ***********************************************************************/
   FUNCTION f_get_detallespagos(pnsinies      IN VARCHAR2,
                                pntramit      IN NUMBER,
                                pctipres      IN NUMBER,
                                pctippag      IN NUMBER,
                                pcgarant      IN NUMBER,
                                psidepag      IN NUMBER,
                                pnmovres      IN NUMBER,
                                detallespagos OUT SYS_REFCURSOR,
                                mensajes      OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_detallespago';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      --RecuperaciÃ³ de les dades del sinistre
      vnumerr := pac_md_siniestros.f_get_detallespagos(pnsinies,
                                                       pntramit,
                                                       pctipres,
                                                       pctippag,
                                                       pcgarant,
                                                       psidepag,
                                                       pnmovres,
                                                       detallespagos,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         vpasexec := 5;
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_detallespagos;

   /***********************************************************************
      Recupera los datos de los tomadores de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : T_IAX_TOMADORES con la colecciÃ³n de tomadores de la pÃ³liza
                           NULL si error
   ***********************************************************************/
   FUNCTION f_get_poltomadores(psseguro IN NUMBER,
                               mensajes OUT t_iax_mensajes)
      RETURN t_iax_tomadores IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_PolTomadores';
      vparam        VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec      NUMBER(5) := 1;
      vnumerr       NUMBER(8) := 0;
      v_t_tomadores t_iax_tomadores;
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vnumerr  := pac_md_obtenerdatos.f_inicializa('POL',
                                                   psseguro,
                                                   NULL,
                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec      := 5;
      v_t_tomadores := pac_md_obtenerdatos.f_leetomadores(mensajes);

      IF v_t_tomadores IS NULL
      THEN
         RAISE e_object_error;
      END IF;

      RETURN v_t_tomadores;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_poltomadores;

   /***********************************************************************
      Recupera los datos del Ãºltimo recibo de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : ref cursor
   ***********************************************************************/
   FUNCTION f_get_pollastrecibo(psseguro IN NUMBER,
                                mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_PolLastRecibo';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_pollastrecibo(psseguro, mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_pollastrecibo;

   /*************************************************************************
      Devuelve los siniestros que cumplan con el criterio de selecciÃ³n
      param in pnpoliza     : nÃºmero de pÃ³liza
      param in pncert       : nÃºmero de cerificado por defecto 0
      param in pnsinies     : nÃºmero del siniestro
      param in cestsin      : cÃ³digo situaciÃ³n del siniestro
      param in pnnumide     : nÃºmero identidad persona
      param in psnip        : nÃºmero identificador externo
      param in pbuscar      : nombre+apellidos a buscar de la persona
      param in ptipopersona : tipo de persona
                               1 tomador
                               2 asegurado
      param in pnsubest
      param in pnsincia     : siniestro compaÃ±ia
      param in pccompani    : codigo compaÃ±ia
      param in pnpresin     : numero presiniestro
      param in pcsiglas     : tipo via
      param in ptnomvia     : nombre via
      param in pnnumvia     : numero via
      param in ptcomple     : datos complementarios
      param in pcpostal     : codigo postal
      param in pcpoblac     : ciudad
      param in pcprovin     : provincia
      param in pfgisx       : GIS X
      param in pfgisy       : GIS Y
      param in pfgisz       : GIS Z
      param in ptdescri     : descripcion
      param in pctipmat     : tipo matricula
      param in pcmatric     : matricula
      param in pctiporisc   : tipo riesgo
      param out mensajes    : mensajes de error
      return                : ref cursor
   *************************************************************************/
   FUNCTION f_consultasini(
                           -- Bug 10093 - 02/02/2010 - LCF - Anyadir param busqueda siniestros
                           pcramo   IN NUMBER,
                           psproduc IN NUMBER,
                           -- Fi Bug 10093 - 02/02/2010 - LCF
                           pnpoliza  IN NUMBER,
                           pncertif  IN NUMBER DEFAULT -1,
                           pnsinies  IN VARCHAR2,
                           pcestsin  IN NUMBER,
                           pnnumide  IN VARCHAR2,
                           psnip     IN VARCHAR2,
                           pbuscar   IN VARCHAR2,
                           ptipopers IN NUMBER,
                           pnsubest  IN NUMBER,
                           pnsincia  IN VARCHAR2, --BUG 14587 - PFA - 13/08/2010 - AÃ±adir campo siniestro compaÃ±ia
                           pfalta    IN DATE, --IAXIS-2169 AABC Adicion  de Fecha de Alta a la consulta de siniestro
                           pccompani IN NUMBER,
                           -- Bug 15006 - PFA - 16/08/2010 - nuevos campos en bÃºsqueda siniestros
                           pnpresin  IN VARCHAR2,
                           pcsiglas  IN NUMBER,
                           ptnomvia  IN VARCHAR2,
                           pnnumvia  IN NUMBER,
                           ptcomple  IN VARCHAR2,
                           pcpostal  IN VARCHAR2,
                           pcpoblac  IN NUMBER,
                           pcprovin  IN NUMBER,
                           pfgisx    IN FLOAT,
                           pfgisy    IN FLOAT,
                           pfgisz    IN FLOAT,
                           ptdescri  IN VARCHAR2,
                           pctipmat  IN NUMBER,
                           pcmatric  IN VARCHAR2,
                           ptiporisc IN NUMBER,
                           -- Fi Bug 15006 - PFA - 16/08/2010 - nuevos campos en bÃºsqueda siniestros
                           pcpolcia IN VARCHAR2, --Bug.: 14587 - ICV - 14/12/2010
                           pcactivi IN NUMBER, --Bug 18749 - 28/06/2011 - AMC
                           pfiltro  IN NUMBER,
                           pcagente IN NUMBER, -- Bug 21817 - MDS - 2/05/2012
                           pcmotor  IN VARCHAR2, -- Bug 25622/134589 - 06/02/2013 -AMC
                           pcchasis IN VARCHAR2, -- Bug 25622/134589 - 06/02/2013 -AMC
                           pnbastid IN VARCHAR2, -- Bug 25622/134589 - 06/02/2013 -AMC
                           ptrefext IN VARCHAR2, --Bug 32470/204062 - 08/05/2015-VCG
                           pctipref IN NUMBER, --Bug 32470/204062 - 08/05/2015-VCG
                           ptdescrie IN VARCHAR2, -- BUG CONF_309 - 10/09/2016 - JAEG
         pncontrato IN VARCHAR2 DEFAULT NULL, -- AP CONF-219
                           mensajes OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.ConsultaSini';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnpoliza: ' || pnpoliza ||
                                   ' - pncertif: ' || pncertif ||
                                   ' - pnsinies: ' || pnsinies ||
                                   ' - pcestsin: ' || pcestsin ||
                                   ' - pnnumide: ' || pnnumide ||
                                   ' - psnip: ' || psnip || ' - pbuscar: ' ||
                                   pbuscar || ' - ptipopers: ' || ptipopers ||
                                   ' - pnsubest: ' || pnsubest ||
                                   ' - pcramo: ' || pcramo ||
                                   ' - psproduc: ' || psproduc ||
                                   '- pnsincia: ' || pnsincia ||
                                   '- pfalta:   ' || pfalta   ||  --IAXIS-2169 AABC Adicion  de Fecha de Alta a la consulta de siniestro
                                   '- pccompani: ' || pccompani ||
                                   '- pnpresin: ' || pnpresin ||
                                   '- pcsiglas: ' || pcsiglas ||
                                   '- ptnomvia: ' || ptnomvia ||
                                   '- pnnumvia: ' || pnnumvia ||
                                   '- ptcomple: ' || ptcomple ||
                                   '- pcpostal: ' || pcpostal ||
                                   '- pcpoblac: ' || pcpoblac ||
                                   '- pcprovin: ' || pcprovin ||
                                   '- pfgisx: ' || pfgisx || '- pfgisy: ' ||
                                   pfgisy || '- pfgisz: ' || pfgisz ||
                                   '- ptdescri: ' || ptdescri ||
                                   '- pctipmat: ' || pctipmat ||
                                   '- pcmatric: ' || pcmatric ||
                                   '- ptiporisc: ' || ptiporisc ||
                                   '- pcpolcia : ' || pcpolcia ||
                                   '- pcactivi : ' || pcactivi ||
                                   ' pcagente=' || pcagente;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      vcursor := pac_md_siniestros.f_consultasini(pcramo,
                                                  psproduc,
                                                  pnpoliza,
                                                  pncertif,
                                                  pnsinies,
                                                  pcestsin,
                                                  pnnumide,
                                                  psnip,
                                                  pbuscar,
                                                  ptipopers,
                                                  pnsubest,
                                                  pnsincia,
                                                  pfalta,    --IAXIS-2169 AABC Adicion  de Fecha de Alta a la consulta de siniestro
                                                  pccompani,
                                                  pnpresin,
                                                  pcsiglas,
                                                  ptnomvia,
                                                  pnnumvia,
                                                  ptcomple,
                                                  pcpostal,
                                                  pcpoblac,
                                                  pcprovin,
                                                  pfgisx,
                                                  pfgisy,
                                                  pfgisz,
                                                  ptdescri,
                                                  pctipmat,
                                                  pcmatric,
                                                  ptiporisc,
                                                  pcpolcia,
                                                  pcactivi,
                                                  pfiltro,
                                                  pcagente,
                                                  pcmotor,
                                                  pcchasis,
                                                  pnbastid, -- Bug 25622/134589 - 06/02/2013 -AMC
                                                  ptrefext,
                                                  pctipref, --Bug 32470/204062 - 08/05/2015-VCG
                                                  ptdescrie, -- BUG CONF_309 - 10/09/2016 - JAEG
              pncontrato, -- AP CONF-219
                                                  mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_consultasini;

   -- Fi Bug 10093 - LCF - 02/02/2010
   /***********************************************************************
      Graba los datos del siniestro en la variable global objeto del paquete
      param in  psseguro  : cÃ³digo de seguro
      param in  pnriesgo  : nÃºmero de riesgo
      param in  nmovimi   : NÃºmero Movimiento Seguro
      param in  pfsinies  : fecha de ocurrencia del siniestro
      param in  phsinies  : hora de ocurrencia del siniestro
      param in  pfnotifi  : fecha de notificaciÃ³n del siniestro
      param in  pccausin   : CÃ³digo Causa Siniestro
      param in  pcmotsin  : cÃ³digo del motivo del siniestro
      param in  pcevento   : CÃ³digo Evento Siniestro
      param in  pcculpab  : cÃ³digo de la culpabilidad del siniestro
      param in  pcreclama  : CÃ³digo reclamaciÃ³n VF 200011
      param in  pnasegur   : NÃºmero asegurado (producto 2 cabezas)
      param in  pcmeddec   : CÃ³digo Medio declaraciÃ³n
      param in  pctipdec   : CÃ³digo Tipo Declarante
      param in  ptnomdec   : Nombre Declarante
      param in  ptape1dec  : Primer Apellido Declarante
      param in  ptape2dec  : Segundo Apellido Declarante
      param in  ptteldec   : TelÃ©fono Declarante
      param in  ptsinies  : descripciÃ³n del siniestro
      param in  pcnivel  : Nivel Siniestro
    param in  psperson2  : Persona relacionada
    param in  pfechapp  : Fecha para planes pensiones
      param out mensajes  : mensajes de error
      param in pmodo      : PRE_SINIESTROS
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_set_cabecera_siniestro(pnsinies     IN VARCHAR2,
                                     psseguro     IN NUMBER,
                                     pnriesgo     IN NUMBER,
                                     pnmovimi     IN NUMBER,
                                     pfsinies     IN DATE,
                                     phsinies     IN VARCHAR2,
                                     pfnotifi     IN DATE,
                                     pccausin     IN NUMBER,
                                     pcmotsin     IN NUMBER,
                                     pcevento     IN VARCHAR2,
                                     pcculpab     IN NUMBER,
                                     pcreclama    IN NUMBER,
                                     pnasegur     IN NUMBER,
                                     pcmeddec     IN NUMBER,
                                     pctipdec     IN NUMBER,
                                     ptnomdec     IN VARCHAR2,
                                     ptnom1dec    IN VARCHAR2, -- bug 19896--ETM--20/12/2011--AÃ±adir campo nombre1 al declarante
                                     ptnom2dec    IN VARCHAR2, -- bug 19896--ETM--20/12/2011--AÃ±adir campo nombre2 al declarante
                                     ptape1dec    IN VARCHAR2,
                                     ptape2dec    IN VARCHAR2,
                                     ptteldec     IN VARCHAR2,
                                     ptmovildec   IN VARCHAR2, -- bug 19896--ETM--20/12/2011--AÃ±adir campo movil al declarante
                                     ptemaildec   IN VARCHAR2, -- bug 19896--ETM--20/12/2011--AÃ±adir campo email  al declarante
                                     ptsinies     IN VARCHAR2,
                                     pctipide     IN NUMBER,
                                     pnnumide     IN VARCHAR2,
                                     psperson_dec IN NUMBER,
                                     pnsincia     IN VARCHAR2, --BUG 14587 - PFA - 13/08/2010 - AÃ±adir campo siniestro compaÃ±ia
                                     pccompani    IN NUMBER,
                                     pnpresin     IN VARCHAR2, -- Bug 15006 - PFA - 16/08/2010 - nuevos campos en bÃºsqueda siniestros
                                     -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
                                     pcnivel   IN NUMBER,
                                     psperson2 IN NUMBER,
                                     pfechapp  IN DATE DEFAULT NULL,
                                     -- Fi Bug 0015669 - JRH - 30/09/2010
                                     pcpolcia    IN VARCHAR2, --BUG17539 - JTS - 10/02/2011
                                     piperit     IN NUMBER, --BUG17539 - JTS - 10/02/2011
                                     pcfraude    IN NUMBER, --BUG18748 - jbn
                                     pccarpeta   IN NUMBER, -- BUG 19832 - 24/10/2011 - JMP
                                     pasistencia IN NUMBER, -- Bug 21828/111506 - AMC
                                     pcagente    IN NUMBER, -- Bug 21817 - MDS - 2/05/2012
                                     mensajes    OUT t_iax_mensajes,
                                     pmodo       IN VARCHAR2 DEFAULT NULL, -- Bug 0023826 - 08/10/2012 - JMF
                                     pcsalvam    IN NUMBER, -- BUG 0024675 - 15/11/2012 - JMF
                                     picapital   IN NUMBER, -- BUG 0024869 - 14/12/2012 - NSS
                                     --BUG 39475/222692
                                     pfdeteccion  DATE DEFAULT NULL,
                                     psolidaridad IN NUMBER DEFAULT NULL, --CONF-249-30/11/2016-RCS
                                     ptdetpreten IN VARCHAR2 DEFAULT NULL)
    RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_cabecera_Siniestro';
      vparam      VARCHAR2(3000) -- Bug 17064 - 04/01/2011 -AMC
      := 'parÃ¡metros - psseguro: ' || psseguro || ' - pnriesgo: ' ||
         pnriesgo || ' - pfsinies: ' || pfsinies || ' - pfnotifi: ' ||
         pfnotifi || ' - ptsinies: ' || ptsinies || ' - pnsincia: ' ||
         pnsincia || ' - pccompani: ' || pccompani || ' - pnpresin: ' ||
         pnpresin || ' pasistencia=' || pasistencia || ' pcagente=' ||
         pcagente || ' pfdeteccion=' || pfdeteccion;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnsinies    sin_siniestro.nsinies%TYPE;
      vtmotsin    VARCHAR2(1000);
      vtcausin    VARCHAR2(1000);
      vtevento    VARCHAR2(1000);
      v_index     NUMBER(5);
      v_cont      NUMBER(5);
      v_cont2     NUMBER(5);
      j           NUMBER(5);
      pcunitra    VARCHAR2(100);
      pctramit    VARCHAR2(100);
      pcactivi    NUMBER;
      psproduc    NUMBER;
      vntramit    NUMBER;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL OR
         pnriesgo IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      --Validacions capÃ§alera sinistre
      -- Bug 0022243 - 22/05/2012 - JMF : aÃ±adir pnsinies
      vnumerr := pac_iax_validaciones_sin.f_cabecerasini(pfsinies,
                                                         pfnotifi,
                                                         pccausin,
                                                         pcmotsin,
                                                         psseguro,
                                                         pcnivel,
                                                         psperson2,
                                                         pnsinies,
                                                         pmodo,
                                                         piperit, -- 24434:ASN:05/11/2012
                                                         ptemaildec, -- 24869:NSS:11/12/2012
                                                         picapital, -- 24869:NSS:13/12/2012
                                                         pctipdec, -- 25537:ASN:13/08/2013
                                                         vgobsiniestro.garantias, -- 30935:NSS:09/04/2014
                                                         pfechapp, -- CONF-85 23/06/2016 AP
                                                         mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Ini bug 18554 - 11/06/2011 - SRA
      IF pnsinies IS NOT NULL
      THEN
         vnumerr := pac_md_validaciones_sin.f_cabecerasini2(pnsinies,
                                                            pfsinies,
                                                            mensajes);
      END IF;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Fin bug 18554 - 11/06/2011 - SRA

      -- 30024708: (POSPG500)- Parametrizacion - Sinestros/0157275 actualizar preguntas  INI
      IF pnsinies IS NOT NULL
      THEN
         vnumerr := pac_md_siniestros.f_actualiza_preguntas(pnsinies,
                                                            psseguro,
                                                            pfsinies,
                                                            pcmotsin,
                                                            pccausin,
                                                            mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      -- 30024708: (POSPG500)- Parametrizacion - Sinestros/0157275 actualizar preguntas FIN
      vnsinies := pnsinies;

      IF vnsinies IS NULL
      THEN
         vnsinies := -1;
      END IF;

      -- Bug 0022099 - 16/05/2012 - JMF: aÃ±adir asistencia
      -- BUG 0024675 - 15/11/2012 - JMF: aÃ±adir csalvam
      vnumerr := pac_md_siniestros.f_set_cabecera_siniestro(vnsinies,
                                                            psseguro,
                                                            pnriesgo,
                                                            pnmovimi,
                                                            pfsinies,
                                                            phsinies,
                                                            pfnotifi,
                                                            pccausin,
                                                            pcmotsin,
                                                            pcevento,
                                                            pcculpab,
                                                            pcreclama,
                                                            pnasegur,
                                                            pcmeddec,
                                                            pctipdec,
                                                            ptnomdec,
                                                            ptnom1dec,
                                                            ptnom2dec,
                                                            ptape1dec,
                                                            ptape2dec,
                                                            ptteldec,
                                                            ptmovildec,
                                                            ptemaildec,
                                                            ptsinies,
                                                            pctipide,
                                                            pnnumide,
                                                            psperson_dec,
                                                            pnsincia,
                                                            pccompani,
                                                            pnpresin,
                                                            pcnivel,
                                                            psperson2,
                                                            pfechapp,
                                                            pcpolcia,
                                                            piperit,
                                                            pcfraude,
                                                            pccarpeta,
                                                            pasistencia,
                                                            pcagente,
                                                            pcsalvam,
                                                            pfdeteccion,
                                                            vgobsiniestro,
                                                            mensajes,
                                                            psolidaridad,
                                                            ptdetpreten);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 3;

      -- ini Bug 0023826 - 08/10/2012 - JMF
      IF pmodo = 'PRE_SINIESTROS'
      THEN
         vnumerr := pac_iax_validaciones_sin.f_valpresiniestro(vgobsiniestro,
                                                               mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      -- fin Bug 0023826 - 08/10/2012 - JMF

      -- Ini BUG:0018379 - JMC - 02/05/2011
      IF vgobsiniestro.tramites IS NOT NULL AND
         vgobsiniestro.tramites.count > 0
      THEN
         FOR i IN vgobsiniestro.tramites.first .. vgobsiniestro.tramites.last
         LOOP
            IF vgobsiniestro.tramites.exists(i)
            THEN
               -- 22702
               vnumerr := pac_md_sin_tramite.f_set_obj_sintramite(vnsinies,
                                                                  vgobsiniestro.tramites(i)
                                                                  .ntramte,
                                                                  vgobsiniestro.tramites(i)
                                                                  .ctramte,
                                                                  vgobsiniestro.tramites(i),
                                                                  mensajes);
            END IF;
         END LOOP;
      END IF;

      vpasexec := 4;

      -- Fin BUG:0018379 - JMC - 02/05/2011
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         --ASN -- 20/01/2012
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).cculpab IS NULL
               THEN
                  -- BUG 0023536 - 04/10/2012 - JMF: Afegir csubtiptra
                  vnumerr := pac_md_siniestros.f_set_objeto_sintramitacion(vnsinies,
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .ntramit,
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .ctramit,
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .ctcausin,
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .cinform,
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .ctiptra,
                                                                           pcculpab,
                                                                           --BUG17539 - JTS - 10/02/2011
                                                                           pccompani,
                                                                           pcpolcia,
                                                                           piperit,
                                                                           pnsincia,

                                                                           --Fi BUG17539
                                                                           vgobsiniestro.tramitaciones(i),
                                                                           mensajes,
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .ntramte, -- bug : 0018379 - JMC - 02/05/2011
                                                                           vgobsiniestro.tramitaciones(i)
                                                                           .csubtiptra);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 5;
      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --Es decideix baixar tota la gestiÃ³ a taules en comptes de anar mantenint l'objecte de sinistre persistent.
      --AixÃ­ per pantalla continuarem veient els objectes perÃ² alhora de grabar, no grabarem a l'objecte sinÃ³
      --a taules.

      --      vnumerr := pac_iax_siniestros.f_grabar_siniestro(vnsinies, mensajes); -- 23101:ASN:27/09/2012
      vnumerr := pac_iax_siniestros.f_grabar_sin_primera_vez(vnsinies,
                                                             mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      --BUG 26456_140722 Comentamos la llamada de pac_md_siniestros.f_ins_documentos ya que se realizara en pac_sinietros.f_post_siniestro
      /*IF vgobsiniestro.tramitaciones IS NOT NULL
         AND vgobsiniestro.tramitaciones.COUNT > 0 THEN   -- Bug 22044 - APD - 02/05/2012
         FOR i IN vgobsiniestro.tramitaciones.FIRST .. vgobsiniestro.tramitaciones.LAST LOOP
            IF vgobsiniestro.tramitaciones.EXISTS(i) THEN
               vntramit := vgobsiniestro.tramitaciones(i).ntramit;

               IF vntramit IS NOT NULL
                  AND(vgobsiniestro.tramitaciones(i).documentos IS NULL
                      OR(vgobsiniestro.tramitaciones(i).documentos IS NOT NULL
                         AND vgobsiniestro.tramitaciones(i).documentos.COUNT = 0)) THEN   --fnotifi siniestros
                  vnumerr :=
                     pac_md_siniestros.f_ins_documentos(vnsinies, vntramit, psproduc,
                                                        pcactivi, pccausin, pcmotsin,
                                                        pac_md_common.f_get_cxtidioma,
                                                        mensajes, psseguro, pfnotifi);

                  IF vnumerr <> 0 THEN
                     pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
                     RAISE e_object_error;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;*/
      vpasexec := 6;
      COMMIT;
      vnumerr := pac_iax_siniestros.f_inicializasiniestro(psproduc,
                                                          pcactivi,
                                                          vnsinies,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      /*FI -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros*/
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_cabecera_siniestro;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.tramitaciones
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   ctramit        NUMBER(4),   --CÃ³digo tipus TramitaciÃ³n
   ttramit        VARCHAR2(100),   --Des tipus TramitaciÃ³n
   ctcausin       NUMBER(2),   --CÃ³digo Tipo DaÃ±o
   ttcausin       VARCHAR2(100),   --Des tipo daÃ±o
   cinform        NUMBER(1),   --Indicador TramitaciÃ³n Informativa
   tinform        VARCHAR2(100),   --Desc. INdicador tramitaciÃ³n Informativa
   cusualt        VARCHAR2(20),   --CÃ³digo Usuario Alta
   falta          DATE,   --Fecha Alta
   cusumod        VARCHAR2(20),   --CÃ³digo Usuario ModificaciÃ³n
   fmodifi        DATE,   --Fecha ModificaciÃ³n
   ctiptra        NUMBER,
   cborrab        NUMBER,
   ttiptra        VARCHAR2(200),
   detalle        ob_iax_sin_trami_detalle,-- detall de la tramitacio
   *************************************************************************/
  FUNCTION f_set_objeto_sintramitacion(pnsinies    IN VARCHAR2,
                                       pntramit    IN NUMBER,
                                       pctramit    IN NUMBER,
                                       pctcausin   IN NUMBER,
                                       pcinform    IN NUMBER,
                                       pctiptra    IN NUMBER,
                                       pcculpab    IN NUMBER,
                                       pccompani   IN NUMBER,
                                       pcpolcia    IN VARCHAR2,
                                       piperit     IN NUMBER,
                                       pnsincia    IN VARCHAR2,
                                       pntramte    IN NUMBER, --BUG:0018379 - JMC - 09/05/2011
                                       pcsubtiptra IN NUMBER, -- BUG 0023536 - 04/10/2012 - JMF
                                       pnradica    IN VARCHAR2 DEFAULT NULL,
                                       pntramitout OUT NUMBER,
                                       mensajes    OUT t_iax_mensajes)
    RETURN NUMBER IS
    vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramitacion';
    vparam      VARCHAR2(500) := 's=' || pnsinies || ' t=' || pntramit ||
                                 ' c=' || pctramit || ' t=' || pctcausin ||
                                 ' i=' || pcinform || ' t=' || pctiptra ||
                                 ' u=' || pcculpab || ' c=' || pccompani ||
                                 ' p=' || pcpolcia || ' i=' || piperit ||
                                 ' n=' || pnsincia || ' n=' || pntramte ||
                                 ' s=' || pcsubtiptra || ' pj=' || pnradica;
    vpasexec    NUMBER(5) := 1;
    vnumerr     NUMBER(8) := 0;
    vntramit    NUMBER(8);
    v_index     NUMBER(8);
    v_secue     NUMBER(8);
    v_nradica   VARCHAR2(50) := '';
    v_tipo      NUMBER(8);
  BEGIN
    --ComprovaciÃ³ dels parÃ¡metres d'entrada
    IF pnsinies IS NULL OR pctcausin IS NULL THEN
      RAISE e_param_error;
    END IF;

    --cborrab buscar de sincotramitacion
    vpasexec    := 3;
    pntramitout := pntramit;

    IF pntramit IS NOT NULL THEN
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0 THEN
        -- Bug 22044 - APD - 02/05/2012
        FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last LOOP
          IF vgobsiniestro.tramitaciones.exists(i) THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit THEN

              vpasexec := 4;
              --JGONZALEZ obtiene el numero de secuencia si lo que se desea es actualizar una tramitacion
              IF vgobsiniestro.tramitaciones(i).NRADICA is not null THEN
                v_nradica := vgobsiniestro.tramitaciones(i).NRADICA;
              END IF;

              BEGIN
                select r.SREFEXT
                  into v_secue
                  from sin_siniestro_referencias r
                 where r.nsinies = PNSINIES
                   and r.trefext = v_nradica;
              EXCEPTION
                WHEN OTHERS THEN
                  v_secue := -1;
              END;

              -- Si el trobem, el modifiquem
              -- BUG 0023536 - 04/10/2012 - JMF: afegir pcsubtiptra
              vnumerr := pac_md_siniestros.f_set_objeto_sintramitacion(pnsinies,
                                                                       pntramit,
                                                                       pctramit,
                                                                       pctcausin,
                                                                       pcinform,
                                                                       pctiptra,
                                                                       pcculpab,
                                                                       pccompani,
                                                                       pcpolcia,
                                                                       piperit,
                                                                       pnsincia,
                                                                       vgobsiniestro.tramitaciones(i),
                                                                       mensajes,
                                                                       pntramte, --BUG:0018379 - JMC - 02/05/2011
                                                                       pcsubtiptra,
                                                                       pnradica);
              IF vnumerr <> 0 THEN
                RAISE e_object_error;
              END IF;
            END IF;
          END IF;
        END LOOP;
      END IF;
    ELSE
      vntramit := 0;

      IF vgobsiniestro.tramitaciones IS NULL THEN
        vgobsiniestro.tramitaciones := t_iax_sin_tramitacion();
      ELSIF vgobsiniestro.tramitaciones.count > 0 THEN
        vntramit := NVL(vgobsiniestro.tramitaciones(vgobsiniestro.tramitaciones.last)
                        .ntramit,
                        0) + 1;
      END IF;

      pntramitout := vntramit;
      vpasexec    := 5;
      vgobsiniestro.tramitaciones.extend;
      v_index := vgobsiniestro.tramitaciones.last;
      vgobsiniestro.tramitaciones(v_index) := ob_iax_sin_tramitacion();

      --JGONZALEZ SE ASOCIA -1 INDICANDO QUE NO EXISTE SECUENCIA PARA LA REFERENCIA EXTERNA
      v_secue := -1;

      -- BUG 0023536 - 04/10/2012 - JMF: afegir pcsubtiptra
      vnumerr := pac_md_siniestros.f_set_objeto_sintramitacion(pnsinies,
                                                               vntramit,
                                                               pctramit,
                                                               pctcausin,
                                                               pcinform,
                                                               pctiptra,
                                                               pcculpab,
                                                               pccompani,
                                                               pcpolcia,
                                                               piperit,
                                                               pnsincia,
                                                               vgobsiniestro.tramitaciones(v_index),
                                                               mensajes,
                                                               pntramte, --BUG:0018379 - JMC - 02/05/2011
                                                               pcsubtiptra,
                                                               pnradica);
      IF vnumerr <> 0 THEN
        RAISE e_object_error;
      END IF;
    END IF;

    vpasexec := 8;
    --SE CREA VALIDACION PARA SABER SI ES RESPONSABILIDAD FISCAL Y AGREGAR UNA REFERENCIA EXTERNA
    IF (PNRADICA is not null) THEN
      select DECODE(pctramit, 21, 11, 20, 10) into v_tipo from dual;
      vnumerr := F_SET_OBJETO_SINREFERENCIAS(PNSINIES,
                                             v_secue,
                                             v_tipo,
                                             PNRADICA,
                                             f_sysdate,
                                             NULL,
                                             mensajes);

      IF vnumerr <> 0 THEN
        RAISE e_object_error;
      END IF;

      vpasexec := 9;
      vnumerr  := pac_md_siniestros.f_set_referencias(PNSINIES,
                                                      vgobsiniestro.referencias,
                                                      mensajes);

      IF vnumerr <> 0 THEN
        RAISE e_object_error;
      END IF;

    END IF;

    -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
    vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                     pnsinies,
                                                     NULL, -- BUG 25537 - FAL - 04/02/2014
                                                     mensajes);

    IF vnumerr <> 0 THEN
      RAISE e_object_error;
    END IF;

    COMMIT;
    vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                     vgobsiniestro.tramitaciones,
                                                     mensajes);

    IF vnumerr <> 0 THEN
      RAISE e_object_error;
    END IF;

    -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
    vpasexec := 6;
    RETURN vnumerr;
  EXCEPTION
    WHEN e_param_error THEN
      pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                        vobjectname,
                                        1000005,
                                        vpasexec,
                                        vparam);
      ROLLBACK;
      RETURN 1;
    WHEN e_object_error THEN
      pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                        vobjectname,
                                        1000006,
                                        vpasexec,
                                        vparam);
      ROLLBACK;
      RETURN 1;
    WHEN OTHERS THEN
      pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                        vobjectname,
                                        1000001,
                                        vpasexec,
                                        vparam,
                                        NULL,
                                        SQLCODE,
                                        SQLERRM);
      ROLLBACK;
      RETURN 1;
  END f_set_objeto_sintramitacion;

   /*************************************************************************
    funciÃ³n que retorna en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.tramitaciones
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   *************************************************************************/
   FUNCTION f_get_objeto_sintramitacion(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_tramitacion IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramitacion';
      vparam        VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                     ' - pntramit: ' || pntramit;
      vpasexec      NUMBER(5) := 1;
      vnumerr       NUMBER(8) := 0;
      vntramit      NUMBER(8);
      v_index       NUMBER(8);
      obtramitacion ob_iax_sin_tramitacion := ob_iax_sin_tramitacion();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR
         pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      --cborrab buscar de sincotramitacion
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         -- Bug 22044 - APD - 02/05/2012
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  -- Si el trobem, el modifiquem
                  obtramitacion := vgobsiniestro.tramitaciones(i);
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 6;
      RETURN obtramitacion;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramitacion;

   /*************************************************************************
    funciÃ³n que borra una tramitacio
    param in  pnsinies : nÃºmero de siniestro
    param in  pntramit : nÃºmero de tramitacion
    param in  pctiptra : numero de tipo de tramitacion
    param out mensajes : mensajes de error

    Bug 12668 - 03/03/2010 - AMC
   *************************************************************************/
   FUNCTION f_del_objeto_sintramitacion(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pctiptra IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_del_objeto_sintramitacion';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   '- pntramit:' || pntramit ||
                                   ' -pctiptra:' || pctiptra;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vntramit    NUMBER(8);
      v_index     NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctiptra IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      /* --cborrab buscar de sincotramitacion
            IF vgobsiniestro.tramitaciones IS NOT NULL THEN
               FOR i IN vgobsiniestro.tramitaciones.FIRST .. vgobsiniestro.tramitaciones.LAST LOOP
                  IF vgobsiniestro.tramitaciones(i).ntramit = pntramit THEN   -- Si el trobem, el modifiquem
                     vgobsiniestro.tramitaciones.DELETE(i);
                  END IF;
               END LOOP;
            END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
            --grabem a taules i tornem a recuperar l'objecte
            vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones, pnsinies,
                                                             mensajes);
      */
      vnumerr := pac_md_siniestros.f_del_tramitacion(pnsinies,
                                                     pntramit,
                                                     pctiptra,
                                                     mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_objeto_sintramitacion;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.tramitaciones(i).movimientos
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   nmovtra        NUMBER(3),   --NÃºmero Movimiento TramitaciÃ³n
   cunitra        VARCHAR2(4),   --CÃ³digo Unidad TramitaciÃ³n
   tunitra        VARCHAR2(100),   -- desc. Unidad TramitaciÃ³n
   ctramitad      VARCHAR2(4),   --CÃ³digo Tramitador
   ttramitad      VARCHAR2(100),   --Desc. Tramitador
   cesttra        NUMBER(3),   --CÃ³digo Estado TramitaciÃ³n
   testtra        VARCHAR2(100),   --Desc. Estado TramitaciÃ³n
   csubtra        NUMBER(2),   --CÃ³digo Subestado TramitaciÃ³n
   tsubtra        VARCHAR2(100),   --Desc. Subestado TramitaciÃ³n
   festtra        DATE,   --Fecha Estado TramitaciÃ³n
   cusualt        VARCHAR2(500),   --CÃ³digo Usuario Alta
   falta          DATE,   --Fecha Alta
   *************************************************************************/
   FUNCTION f_set_objeto_sinmovtramit(pnsinies     IN VARCHAR2,
                                      pntramit     IN NUMBER,
                                      pnmovtra     IN NUMBER,
                                      pcunitra     IN VARCHAR2,
                                      pctramitad   IN VARCHAR2,
                                      pcesttra     IN NUMBER,
                                      pcsubtra     IN NUMBER,
                                      pfesttra     IN DATE,
                                      pccauest     IN NUMBER, -- 21196:ASN:26/03/2014
                                      mensajes     OUT t_iax_mensajes,
                                      pcvalida_ult IN NUMBER DEFAULT NULL) --bug 29989/165377;NSS;13-02-2014
    RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sinmovtramit';
      vparam      VARCHAR2(500) := 'pnsinies:' || pnsinies || ' pntramit:' ||
                                   pntramit || ' nmovtra:' || pnmovtra ||
                                   ' cunitra:' || pcunitra ||
                                   ' pctramitad=' || pctramitad ||
                                   ' pcesttra=' || pcesttra || ' pcsubtra=' ||
                                   pcsubtra || ' pfesttra=' || pfesttra ||
                                   ' pccauest=' || pccauest;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vntramit    NUMBER(8);
      v_index     NUMBER(8);
      vnmovtra    NUMBER(8);
   BEGIN
      --ComprovaciÃƒÂ³ dels parÃƒÂ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      -- Bug 22044 - APD - 02/05/2012 - se aÃƒÂ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vnumerr := pac_iax_validaciones_sin.f_movtrami(pnsinies,
                                                                 pntramit,
                                                                 pcesttra,
                                                                 vgobsiniestro.tramitaciones(i)
                                                                 .pagos.count,
                                                                 pcsubtra, --Bug.: 19172
                                                                 mensajes);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;

                  -- 22108:ASN:23/05/2012 ini
                  vnumerr := pac_iax_siniestros.f_valida_tramitador(pnsinies,
                                                                    pntramit,
                                                                    pctramitad,
                                                                    vgobsiniestro.ccausin,
                                                                    vgobsiniestro.cmotsin,
                                                                    mensajes);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;

                  -- 22108:ASN:23/05/2012 fin
                  IF pnmovtra IS NOT NULL
                  THEN
                     vpasexec := 5;

                     IF vgobsiniestro.tramitaciones(i)
                      .movimientos IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).movimientos.count > 0
                     THEN
                        vpasexec := 6;

                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .movimientos.first .. vgobsiniestro.tramitaciones(i)
                                                       .movimientos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).movimientos(j)
                            .nmovtra = pnmovtra AND
                              vgobsiniestro.tramitaciones(i).movimientos(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vnumerr := pac_md_siniestros.f_set_objeto_sinmovtramit(pnsinies,
                                                                                     pntramit,
                                                                                     pnmovtra,
                                                                                     pcunitra,
                                                                                     pctramitad,
                                                                                     pcesttra,
                                                                                     pcsubtra,
                                                                                     pfesttra,
                                                                                     pccauest, -- 21196:ASN:26/03/2012
                                                                                     vgobsiniestro.tramitaciones(i)
                                                                                     .movimientos(j),
                                                                                     mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     vnmovtra := 0;

                     IF vgobsiniestro.tramitaciones(i).movimientos IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).movimientos := t_iax_sin_trami_movimiento();
                     ELSIF vgobsiniestro.tramitaciones(i)
                      .movimientos.count > 0
                     THEN
                        vnmovtra := NVL(vgobsiniestro.tramitaciones(i).movimientos(vgobsiniestro.tramitaciones(i).movimientos.last)
                                        .nmovtra,
                                        0) + 1;
                     END IF;

                     vpasexec := 7;
                     vgobsiniestro.tramitaciones(i).movimientos.extend;
                     v_index := vgobsiniestro.tramitaciones(i)
                                .movimientos.last;
                     vgobsiniestro.tramitaciones(i).movimientos(v_index) := ob_iax_sin_trami_movimiento();
                     vnumerr := pac_md_siniestros.f_set_objeto_sinmovtramit(pnsinies,
                                                                            pntramit,
                                                                            vnmovtra,
                                                                            pcunitra,
                                                                            pctramitad,
                                                                            pcesttra,
                                                                            pcsubtra,
                                                                            pfesttra,
                                                                            pccauest, -- 21196:ASN:26/03/2012
                                                                            vgobsiniestro.tramitaciones(i)
                                                                            .movimientos(v_index),
                                                                            mensajes);

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes,
                                                       pcvalida_ult);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      --Ini bug 29989/165377:NSS:13-02-2014
      /*Si se ha anulado/rechazado/terminado una tramitaciÃ³n y es la Ãºltima, se cerrarÃ¡ el siniestro, con lo que
        hay que recargar los movimientos de siniestro
      */
      vnumerr := pac_md_siniestros.f_get_movsiniestros(pnsinies,
                                                       vgobsiniestro.movimientos,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      --Fin bug 29989/165377:NSS:13-02-2014

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sinmovtramit;

   /*************************************************************************
    funciÃ³n que envia el ultimo movimiento de una tramitacion
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   *************************************************************************/
   FUNCTION f_get_objeto_ult_sinmovtramit(pnsinies IN VARCHAR2,
                                          pntramit IN NUMBER,
                                          mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_movimiento IS
      vobjectname  VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_objeto_ult_sinmovtramit';
      vparam       VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                    ' - pntramit: ' || pntramit;
      vpasexec     NUMBER(5) := 1;
      vnumerr      NUMBER(8) := 0;
      vntramit     NUMBER(8);
      v_index      NUMBER(8);
      vnmovtra     NUMBER(8);
      v_movtrammit ob_iax_sin_trami_movimiento := ob_iax_sin_trami_movimiento();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      -- Bug 22044 - APD - 02/05/2012 - se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  v_index      := vgobsiniestro.tramitaciones(i)
                                  .movimientos.last;
                  v_movtrammit := vgobsiniestro.tramitaciones(i)
                                  .movimientos(v_index);
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 6;
      RETURN v_movtrammit;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN v_movtrammit;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN v_movtrammit;
   END f_get_objeto_ult_sinmovtramit;

   /*************************************************************************
       funciÃ³n graba en una variable global de la capa IAX los valores del objeto
       ob_iax_siniestros.tramitaciones(i).detalle
      nsinies        VARCHAR2(14),   --NÃºmero Siniestro
      ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
      ctramit        NUMBER(4),   --CÃ³digo tipus TramitaciÃ³n
      ttramit        VARCHAR2(200),   --Des tipus TramitaciÃ³n
      ctiptra        NUMBER(4),   --codi tipus tramitaciÃ³
      ttiptra        VARCHAR2(200),   --Des tipus TramitaciÃ³n
      ccompani       NUMBER(4),   --codi companyia
      tcompani       VARCHAR2(200),   --desc. companyia
      npoliza        NUMBER(8),   --num. polissa
      cpolcia        NUMBER(8),   -- num.polissa contraria
      iperit         NUMBER(10),   --import peritatge
      desctramit     VARCHAR2(200),   --desc. tramitacio
      persona        ob_iax_personas,   --persona tramitacio
   --Persona
      cestper        NUMBER,   --codi estat persona
      testper        VARCHAR2(200),   -- Desc. estat de la persona
   -- direccion
      tdescdireccion VARCHAR2(200),   --descripciÃ³ de la direcciÃ³
      direccion      ob_iax_direcciones,   --direccio
   --conductor
      ctipcon        NUMBER,--tipo conductor
      ttipcon        VARCHAR2(200),--desc tipo conductor
      ctipcar        NUMBER,   --tipo permiso
      ttipcar        VARCHAR2(200),--desc tipo permiso
      fcarnet        DATE, --data permis
      calcohol       NUMBER, --alcoholemia 1/0 S/N
   -- vehiculo
      ctipmat        NUMBER,   --codi tipus matricula
      ttipmat        VARCHAR2(200),   --desc tipus matricula
      cmatric        VARCHAR2(12),   --Matricula vehiculo
      cmarca         NUMBER,   -- codi marca
      tmarca         VARCHAR2(200),   -- desc marca
      cmodelo        NUMBER,   --codi model
      tmodelo        VARCHAR2(200),   -- desc. model
      cversion       VARCHAR2(11),   --CÃ³digo de VersiÃ³n de VehÃ­culo
      tversion       VARCHAR2(200
      Bug 12668 - 16/02/2010 - AMC
      cciudad       number(5),           -- cÃ³digo ciudad para chile
      fgisx         float,               -- coordenada gis x (gps)
      fgisy         float,               -- coordenada gis y (gps)
      fgisz         float,               -- coordenada gis z (gps)
      cvalida       number(2),           -- cÃ³digo validaciÃ³n direcciÃ³n. valor fijo 1006.
      Fi Bug 12668 - 16/02/2010 - AMC
      -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
      *************************************************************************/
   FUNCTION f_set_objeto_sintramidetalle(psseguro        IN NUMBER,
                                         pnsinies        IN VARCHAR2,
                                         pntramit        IN NUMBER,
                                         pctramit        IN NUMBER,
                                         pctiptra        IN NUMBER,
                                         pdesctramit     IN VARCHAR2,
                                         psperson        IN NUMBER,
                                         pcestper        IN NUMBER,
                                         ptdescdireccion IN VARCHAR2,
                                         pcdomici        IN NUMBER,
                                         pcpostal        IN VARCHAR2,
                                         pcprovin        IN NUMBER,
                                         pcpoblac        IN NUMBER,
                                         pcpais          IN NUMBER,
                                         pctipdir        IN NUMBER,
                                         pcsiglas        IN NUMBER,
                                         ptnomvia        IN VARCHAR2,
                                         pnnumvia        IN NUMBER,
                                         ptcomple        IN VARCHAR2,
                                         pcciudad        IN NUMBER,
                                         pfgisx          IN FLOAT,
                                         pfgisy          IN FLOAT,
                                         pfgisz          IN FLOAT,
                                         pcvalida        IN NUMBER,
                                         pctipcon        IN NUMBER,
                                         pctipcar        IN NUMBER,
                                         pfcarnet        IN DATE,
                                         pcalcohol       IN NUMBER,
                                         pctipmat        IN NUMBER,
                                         pcmatric        IN VARCHAR2,
                                         pcmarca         IN NUMBER,
                                         pcmodelo        IN NUMBER,
                                         pcversion       IN VARCHAR2,
                                         pnanyo          IN NUMBER, --BUG: 25762-NSS-24/01/2013
                                         pcchasis        IN VARCHAR2,
                                         pcodmotor       IN VARCHAR2,
                                         pnbastid        IN VARCHAR2,
                                         pccilindraje    IN NUMBER,
                                         mensajes        OUT t_iax_mensajes,
                                         pireclam        IN NUMBER DEFAULT NULL,
                                         piindemn        IN NUMBER DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramidetalle';
      vparam      VARCHAR2(500) := 'pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - ctramit: ' || pctramit ||
                                   ' - pctipmat: ' || pctipmat || ' ir=' ||
                                   pireclam || ' ii=' || piindemn;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vntramit    NUMBER(8);
      v_index     NUMBER(8);
      vnmovtra    NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      -- Bug 22044 - APD - 02/05/2012 - se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  --Validacions
                  vnumerr := pac_iax_validaciones_sin.f_trasini(pctiptra,
                                                                vgobsiniestro.tramitaciones(i)
                                                                .ctcausin,
                                                                vgobsiniestro.tramitaciones(i)
                                                                .cinform,
                                                                vgobsiniestro.tramitaciones(i)
                                                                .ttramit,
                                                                psperson,
                                                                pcmarca,
                                                                pcmodelo,
                                                                ptnomvia,
                                                                pcsiglas,
                                                                pcpoblac,
                                                                pcprovin,
                                                                pcpais,
                                                                ptdescdireccion,
                                                                vgobsiniestro.tramitaciones(i)
                                                                .ccompani,
                                                                vgobsiniestro.tramitaciones(i)
                                                                .cpolcia,
                                                                mensajes);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;

                  -- BUG 0023540 - 24/10/2012 - JMF: Afegir IRECLAM, IINDEMN
                  vnumerr := pac_md_siniestros.f_set_objeto_sintramidetalle(psseguro,
                                                                            pnsinies,
                                                                            pntramit,
                                                                            pctramit,
                                                                            pctiptra,
                                                                            pdesctramit,
                                                                            psperson,
                                                                            pcestper,
                                                                            ptdescdireccion,
                                                                            pcdomici,
                                                                            pcpostal,
                                                                            pcprovin,
                                                                            pcpoblac,
                                                                            pcpais,
                                                                            pctipdir,
                                                                            pcsiglas,
                                                                            ptnomvia,
                                                                            pnnumvia,
                                                                            ptcomple,
                                                                            pcciudad,
                                                                            pfgisx,
                                                                            pfgisy,
                                                                            pfgisz,
                                                                            pcvalida,
                                                                            pctipcon,
                                                                            pctipcar,
                                                                            pfcarnet,
                                                                            pcalcohol,
                                                                            pctipmat,
                                                                            pcmatric,
                                                                            pcmarca,
                                                                            pcmodelo,
                                                                            pcversion,
                                                                            pnanyo, --BUG: 25762-NSS-24/01/2013
                                                                            pcchasis,
                                                                            pcodmotor,
                                                                            pnbastid,
                                                                            pccilindraje,
                                                                            vgobsiniestro.tramitaciones(i)
                                                                            .detalle,
                                                                            mensajes,
                                                                            pireclam,
                                                                            piindemn);
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramidetalle;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.localizacion
        nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       nlocali        NUMBER(3),   --NÃºmero LocalizaciÃ³n Siniestro
       sperson        NUMBER(6),   --Secuencia Persona
       tnombre        VARCHAR2(100),--Nombre persona
       csiglas        NUMBER(2),   --CÃ³digo Tipo VÃ­a
       tsiglas        VARCHAR2(100),   --Des Siglas
       tnomvia        VARCHAR2(40),   --Nombre VÃ­a
       nnumvia        NUMBER(5),   --NÃºmero VÃ­a
       tcomple        VARCHAR2(15),   --DescripciÃ³n Complementaria
       tlocali        VARCHAR2(100),   --DirecciÃ³n no normalizada
       cpais          NUMBER(3),   --CÃ³digo PaÃ­s
       tpais          VARCHAR2(200),   -- Desc. Pais
       cprovin        NUMBER(5),   --CÃ³digo ProvÃ­ncia
       tprovin        VARCHAR2(200),   --Desc Provin
       cpoblac        NUMBER(5),   --CÃ³digo PoblaciÃ³n
       tpoblac        VARCHAR2(200),   --Desc Poblacio
       cpostal        VARCHAR2(30),   --CÃ³digo Postal
       -- Bug 20154/98048 - 15/11/2011 - AMC
        param in cviavp,    -- CÃ³digo de via predio - via principal
        param in clitvp,    -- CÃ³digo de literal predio - via principal
        param in cbisvp,    -- CÃ³digo BIS predio - via principal
        param in corvp,     -- CÃ³digo orientaciÃ³n predio - via principal
        param in nviaadco,  -- NÃºmero de via adyacente predio - coordenada
        param in clitco,    -- CÃ³digo de literal predio - coordenada
        param in corco,     -- CÃ³digo orientaciÃ³n predio - coordenada
        param in nplacaco,  -- NÃºmero consecutivo placa predio - ccordenada
        param in cor2co,    -- CÃ³digo orientaciÃ³n predio 2 - coordenada
        param in cdet1ia,   -- CÃ³digo detalle 1 - informaciÃ³n adicional
        param in tnum1ia,   -- NÃºmero predio 1 - informacion adicional
        param in cdet2ia,   -- CÃ³digo detalle 2 - informaciÃ³n adicional
        param in tnum2ia,   -- NÃºmero predio 2 - informacion adicional
        param in cdet3ia,   -- CÃ³digo detalle 3 - informaciÃ³n adicional
        param in tnum3ia    -- NÃºmero predio 3 - informacion adicional
      -- Fi Bug 20154/98048- 15/11/2011 - AMC
        param in plocalidad -- Descripcion de la localidad -- Bug 24780/130907 - 05/12/2012 - AMC
   *************************************************************************/
   FUNCTION f_set_objeto_sintramilocali(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pnlocali IN NUMBER,
                                        psperson IN NUMBER,
                                        pcsiglas IN NUMBER,
                                        ptnomvia IN VARCHAR2,
                                        pnnumvia IN NUMBER,
                                        ptcomple IN VARCHAR2,
                                        ptlocali IN VARCHAR2,
                                        pcpais   IN NUMBER,
                                        pcprovin IN NUMBER,
                                        pcpoblac IN NUMBER,
                                        pcpostal IN VARCHAR2,
                                        -- Bug 20154/98048 - 15/11/2011 - AMC
                                        pcviavp   IN NUMBER,
                                        pclitvp   IN NUMBER,
                                        pcbisvp   IN NUMBER,
                                        pcorvp    IN NUMBER,
                                        pnviaadco IN NUMBER,
                                        pclitco   IN NUMBER,
                                        pcorco    IN NUMBER,
                                        pnplacaco IN NUMBER,
                                        pcor2co   IN NUMBER,
                                        pcdet1ia  IN NUMBER,
                                        ptnum1ia  IN VARCHAR2,
                                        pcdet2ia  IN NUMBER,
                                        ptnum2ia  IN VARCHAR2,
                                        pcdet3ia  IN NUMBER,
                                        ptnum3ia  IN VARCHAR2,
                                        -- Fi Bug 20154/98048- 15/11/2011 - AMC
                                        plocalidad IN VARCHAR2, -- Bug 24780/130907 - 05/12/2012 - AMC
                                        mensajes   OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramilocali';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlocali: ' || pnlocali ||
                                   ' - psperson: ' || psperson;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlocali    NUMBER(8);
      v_index     NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      -- Bug 20154/98048- 15/11/2011 - AMC
      --      vnumerr := pac_iax_validaciones_sin.f_loctrami(ptnomvia, pcsiglas, pcpoblac, pcprovin,
      --                                                     pcpais, ptlocali, mensajes);

      --      IF vnumerr <> 0 THEN
      --         RAISE e_object_error;
      --      END IF;
      -- Fi Bug 20154/98048- 15/11/2011 - AMC
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 3;

                  IF pnlocali IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .localizaciones IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .localizaciones.first .. vgobsiniestro.tramitaciones(i)
                                                          .localizaciones.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).localizaciones(j)
                            .nlocali = pnlocali AND
                              vgobsiniestro.tramitaciones(i).localizaciones(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              vnumerr  := pac_md_siniestros.f_set_objeto_sintramilocali(pnsinies,
                                                                                        pntramit,
                                                                                        pnlocali,
                                                                                        psperson,
                                                                                        pcsiglas,
                                                                                        ptnomvia,
                                                                                        pnnumvia,
                                                                                        ptcomple,
                                                                                        ptlocali,
                                                                                        pcpais,
                                                                                        pcprovin,
                                                                                        pcpoblac,
                                                                                        pcpostal,
                                                                                        -- Bug 20154/98048 - 15/11/2011 - AMC
                                                                                        pcviavp,
                                                                                        pclitvp,
                                                                                        pcbisvp,
                                                                                        pcorvp,
                                                                                        pnviaadco,
                                                                                        pclitco,
                                                                                        pcorco,
                                                                                        pnplacaco,
                                                                                        pcor2co,
                                                                                        pcdet1ia,
                                                                                        ptnum1ia,
                                                                                        pcdet2ia,
                                                                                        ptnum2ia,
                                                                                        pcdet3ia,
                                                                                        ptnum3ia,

                                                                                        -- Fi Bug 20154/98048 - 15/11/2011 - AMC
                                                                                        plocalidad, -- Bug 24780/130907 - 05/12/2012 - AMC
                                                                                        vgobsiniestro.tramitaciones(i)
                                                                                        .localizaciones(j),
                                                                                        mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              IF pntramit = 0
                              THEN
                                 vgobsiniestro.localiza := vgobsiniestro.tramitaciones(i)
                                                           .localizaciones(vgobsiniestro.tramitaciones(i)
                                                                           .localizaciones.first);
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     /*  IF vgobsiniestro.tramitaciones(i).localizaciones IS NULL THEN
                        vgobsiniestro.tramitaciones(i).localizaciones :=
                                                                       t_iax_sin_trami_localiza
                                                                                               ();
                          IF pnlocali IS NULL THEN
                             vnlocali := vgobsiniestro.tramitaciones(i).localizaciones.COUNT;
                          END IF;


                     END IF;*/
                     vnlocali := 0;

                     IF vgobsiniestro.tramitaciones(i)
                      .localizaciones IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).localizaciones := t_iax_sin_trami_localiza();
                     ELSIF vgobsiniestro.tramitaciones(i)
                      .localizaciones.count > 0
                     THEN
                        vnlocali := NVL(vgobsiniestro.tramitaciones(i).localizaciones(vgobsiniestro.tramitaciones(i).localizaciones.last)
                                        .nlocali,
                                        0) + 1;
                     END IF;

                     vpasexec := 7;
                     vgobsiniestro.tramitaciones(i).localizaciones.extend;
                     v_index := vgobsiniestro.tramitaciones(i)
                                .localizaciones.last;
                     vgobsiniestro.tramitaciones(i).localizaciones(v_index) := ob_iax_sin_trami_localiza();
                     vpasexec := 8;
                     vnumerr := pac_md_siniestros.f_set_objeto_sintramilocali(pnsinies,
                                                                              pntramit,
                                                                              vnlocali,
                                                                              psperson,
                                                                              pcsiglas,
                                                                              ptnomvia,
                                                                              pnnumvia,
                                                                              ptcomple,
                                                                              ptlocali,
                                                                              pcpais,
                                                                              pcprovin,
                                                                              pcpoblac,
                                                                              pcpostal,
                                                                              -- Bug 20154/98048 - 15/11/2011 - AMC
                                                                              pcviavp,
                                                                              pclitvp,
                                                                              pcbisvp,
                                                                              pcorvp,
                                                                              pnviaadco,
                                                                              pclitco,
                                                                              pcorco,
                                                                              pnplacaco,
                                                                              pcor2co,
                                                                              pcdet1ia,
                                                                              ptnum1ia,
                                                                              pcdet2ia,
                                                                              ptnum2ia,
                                                                              pcdet3ia,
                                                                              ptnum3ia,
                                                                              -- Fi Bug 20154/98048 - 15/11/2011 - AMC
                                                                              plocalidad, -- Bug 24780/130907 - 05/12/2012 - AMC
                                                                              vgobsiniestro.tramitaciones(i)
                                                                              .localizaciones(v_index),
                                                                              mensajes);

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;

                     IF pntramit = 0
                     THEN
                        vgobsiniestro.localiza := vgobsiniestro.tramitaciones(i)
                                                  .localizaciones(vgobsiniestro.tramitaciones(i)
                                                                  .localizaciones.first);
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramilocali;

   /*************************************************************************
    funciÃ³n recupera una localitzacio duna tramitaciÃ³ concreta
    ob_iax_siniestros.localizacion
        nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       nlocali        NUMBER(3),   --NÃºmero LocalizaciÃ³n Siniestro

   *************************************************************************/
   FUNCTION f_get_objeto_sintramilocali(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pnlocali IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_localiza IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramilocali';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlocali: ' || pnlocali;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlocali    NUMBER(8);
      v_index     NUMBER(8);
      v_locali    ob_iax_sin_trami_localiza := ob_iax_sin_trami_localiza();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pnlocali IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnlocali IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .localizaciones IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .localizaciones.first .. vgobsiniestro.tramitaciones(i)
                                                          .localizaciones.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).localizaciones(j)
                            .nlocali = pnlocali AND
                              vgobsiniestro.tramitaciones(i).localizaciones(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              v_locali := vgobsiniestro.tramitaciones(i)
                                          .localizaciones(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- END IF;
      vpasexec := 6;
      RETURN v_locali;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramilocali;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.citaciones
       nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       ncitacion        NUMBER(3),   --NÃºmero LocalizaciÃ³n Siniestro
       sperson        NUMBER(6),   --Secuencia Persona
       fcitacion        DATE,   --fecha citacion
       hcitacion        VARCHAR2,   --hora citacion
       cpais        NUMBER(3),   --codigo pais
       cprovin        NUMBER(6),   --codigo provincia
       cpoblac        NUMBER(6),   --codigo poblacion
       tlugar        VARCHAR2,   --lugar de la citacion

      -- Fi Bug 20154/98048- 15/11/2011 - AMC
        param in plocalidad -- Descripcion de la localidad -- Bug 24780/130907 - 05/12/2012 - AMC
   *************************************************************************/
   FUNCTION f_set_objeto_sintramicit(pnsinies IN VARCHAR2,
                                     pntramit IN NUMBER,
                                     pncitacion IN NUMBER,
                                     psperson IN NUMBER,
                                     pfcitacion IN DATE,
                                     phcitacion IN VARCHAR2,
                                     pcpais IN NUMBER,
                                     pcprovin IN NUMBER,
                                     pcpoblac IN NUMBER,
                                     ptlugar IN VARCHAR2,
                                     ptaudien IN VARCHAR2,
                                     pcoral IN NUMBER,
                                     pcestado IN NUMBER,
                                     pcresolu IN NUMBER,
                                     pfnueva IN DATE,
                                     ptresult IN VARCHAR2,
                                     pcmedio IN NUMBER,
                                     mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramicit';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: '   || pntramit ||
                                   ' - pncitacion: ' || pncitacion ||
                                   ' - psperson: '   || psperson ||
                                   ' - pfcitacion: ' || pfcitacion ||
                                   ' - phcitacion: ' || phcitacion ||
                                   ' - pcpais: '     || pcpais ||
                                   ' - pcprovin: '   || pcprovin ||
                                   ' - pcpoblac: '   || pcpoblac ||
                                   ' - ptlugar: '    || ptlugar ||
                                   ' - ptaudien: '   || ptaudien ||
                                   ' - ptaudien: '   || ptaudien ||
                                   ' - pcoral: '     || pcoral ||
                                   ' - pcestado: '   || pcestado ||
                                   ' - pcresolu: '   || pcresolu ||
                                   ' - pfnueva: '    || pfnueva ||
                                   ' - ptresult: '   || ptresult ||
                                   ' - pcmedio: '    || pcmedio;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vncitacion  NUMBER(8);
      v_index     NUMBER(8);
      ob_sin_cit ob_iax_sin_trami_citacion;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR pntramit IS NULL OR psperson IS NULL OR pfcitacion IS NULL OR pcpoblac IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      vnumerr := pac_md_validaciones_sin.f_val_citacion(pnsinies,
                                                        pntramit,
                                                        pncitacion,
                                                        psperson,
                                                        pfcitacion,
                                                        phcitacion,
                                                        pcpais,
                                                        pcprovin,
                                                        pcpoblac,
                                                        ptlugar,
                                                        mensajes);

      IF vnumerr <> 0 THEN
         RAISE e_object_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 3;

                  IF pncitacion IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .citaciones IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .citaciones.first .. vgobsiniestro.tramitaciones(i)
                                                          .citaciones.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).citaciones(j)
                            .ncitacion = pncitacion AND
                              vgobsiniestro.tramitaciones(i).citaciones(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              vnumerr  := pac_md_siniestros.f_set_objeto_sintramicit(pnsinies,
                                                                                    pntramit,
                                                                                    pncitacion,
                                                                                    psperson,
                                                                                    pfcitacion,
                                                                                    phcitacion,
                                                                                    pcpais,
                                                                                    pcprovin,
                                                                                    pcpoblac,
                                                                                    ptlugar,
                                                                                    ptaudien,
                                                                                    pcoral,
                                                                                    pcestado,
                                                                                    pcresolu,
                                                                                    pfnueva,
                                                                                    ptresult,
                                                                                    pcmedio,
                                                                                    vgobsiniestro.tramitaciones(i).citaciones(j),
                                                                                    mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                           END IF;
                        END LOOP;
                     END IF;
                  ELSE

                     vncitacion := 0;

                     IF vgobsiniestro.tramitaciones(i)
                      .citaciones IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).citaciones := t_iax_sin_trami_citaciones();
                     ELSIF vgobsiniestro.tramitaciones(i)
                      .citaciones.count > 0
                     THEN
                        vncitacion := NVL(vgobsiniestro.tramitaciones(i).citaciones(vgobsiniestro.tramitaciones(i).citaciones.last)
                                        .ncitacion,
                                        0) + 1;
                     END IF;

                     vpasexec := 7;
                     vgobsiniestro.tramitaciones(i).citaciones.extend;
                     v_index := vgobsiniestro.tramitaciones(i)
                                .citaciones.last;
                     vgobsiniestro.tramitaciones(i).citaciones(v_index) := ob_iax_sin_trami_citacion();
                     vpasexec := 8;
                     vnumerr := pac_md_siniestros.f_set_objeto_sintramicit(pnsinies,
                                                                          pntramit,
                                                                          vncitacion,
                                                                          psperson,
                                                                          pfcitacion,
                                                                          phcitacion,
                                                                          pcpais,
                                                                          pcprovin,
                                                                          pcpoblac,
                                                                          ptlugar,
                                                                          ptaudien,
                                                                          pcoral,
                                                                          pcestado,
                                                                          pcresolu,
                                                                          pfnueva,
                                                                          ptresult,
                                                                          pcmedio,
                                                                          vgobsiniestro.tramitaciones(i).citaciones(v_index),
                                                                          mensajes);

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;

                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramicit;

   /*************************************************************************
    funciÃ³n BORRA una localitzacio duna tramitaciÃ³ concreta
    ob_iax_siniestros.localizacion
        nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       nlocali        NUMBER(3),   --NÃºmero LocalizaciÃ³n Siniestro

   *************************************************************************/
   FUNCTION f_del_objeto_sintramilocali(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pnlocali IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_del_objeto_sintramilocali';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlocali: ' || pnlocali;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlocali    NUMBER(8);
      v_index     NUMBER(8);
      v_locali    ob_iax_sin_trami_localiza := ob_iax_sin_trami_localiza();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pnlocali IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnlocali IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .localizaciones IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .localizaciones.first .. vgobsiniestro.tramitaciones(i)
                                                          .localizaciones.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).localizaciones(j)
                            .nlocali = pnlocali AND
                              vgobsiniestro.tramitaciones(i).localizaciones(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              vgobsiniestro.tramitaciones(i).localizaciones(j).fbaja := f_sysdate;

                              IF pntramit = 0
                              THEN
                                 vgobsiniestro.localiza.fbaja := f_sysdate;
                                 --vgobsiniestro.localiza := null;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      -- END IF;
      vpasexec := 6;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_objeto_sintramilocali;

   /*************************************************************************
    funciÃ³n recupera una localitzacio duna tramitaciÃ³ concreta
        nsinies       VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       ncitacion      NUMBER(3),   --NÃºmero Citacion Siniestro

   *************************************************************************/
   FUNCTION f_get_objeto_citacion(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pncitacion IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_citacion IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_citacion';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pncitacion: ' || pncitacion;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_citaciones    ob_iax_sin_trami_citacion := ob_iax_sin_trami_citacion();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR pntramit IS NULL OR pncitacion IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pncitacion IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .citaciones IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .citaciones.first .. vgobsiniestro.tramitaciones(i)
                                                          .citaciones.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).citaciones(j)
                            .ncitacion = pncitacion AND
                              vgobsiniestro.tramitaciones(i).citaciones(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              v_citaciones := vgobsiniestro.tramitaciones(i)
                                          .citaciones(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- END IF;
      vpasexec := 6;
      RETURN v_citaciones;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_citacion;

   /*************************************************************************
    funciÃ³n BORRA una localitzacio duna tramitaciÃ³ concreta
    ob_iax_siniestros.localizacion
        nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       nlocali        NUMBER(3),   --NÃºmero LocalizaciÃ³n Siniestro

   *************************************************************************/
   FUNCTION f_del_citacion(pnsinies IN VARCHAR2,
                           pntramit IN NUMBER,
                           pncitacion IN NUMBER,
                           mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_del_citacion';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pncitacion: ' || pncitacion;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;

   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR pntramit IS NULL OR pncitacion IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      vnumerr := pac_md_siniestros.f_del_citacion(pnsinies,
                                                  pntramit,
                                                  pncitacion,
                                                  mensajes);

      vpasexec := 3;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);
      vpasexec := 4;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_citacion;

   /*************************************************************************
    funciÃ³n recupera asistente por defecto
       nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   *************************************************************************/
   FUNCTION f_get_asiste_citacion_def(pnsinies IN VARCHAR2,
                                      pntramit IN NUMBER,
                                      mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_asiste_citacion_def';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;

   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      vcursor := pac_md_siniestros.f_get_asiste_citacion_def(pnsinies,
                                                             pntramit,
                                                             mensajes);



      RETURN vcursor;
   EXCEPTION
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_asiste_citacion_def;
 /*************************************************************************
      FUNCTION f_set_objeto_sintramiamparo
           la tabla sin_tramita_amparo .
         
      param in pnsinies : Numero Siniestro		     
       param in pntramit : Numero Tramitacion Siniestro		     
       param in pcgarant : Codigo Garantia		     
       param in pnpreten : vAlor de la pretension		     
       param in picaprie : Importe Capital Riesgo		     
       param in pcmonpreten : Codigo de moneda		     
          return             : 0 -> Tot correcte
                              1 -> Se ha producido un error
   -- BUG 004131 - 2019-05-23 - EA 
   *************************************************************************/ 
FUNCTION f_set_objeto_sintramiamparo(
      pnsinies IN VARCHAR2,		     
       pntramit IN NUMBER,		     
       pcgarant IN NUMBER,		     
       pnpreten IN NUMBER,		     
       picaprie IN NUMBER,		     
       pcmonpreten IN VARCHAR2,		     
       mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS 
        vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_amparo';
        vparam      VARCHAR2(500) := 'nsinies: ' || pnsinies || ' - ntramit: ' || pntramit || ' - cgarant: ' || pcgarant || ' - npreten: ' || pnpreten || ' - icaprie: ' || picaprie || ' - cmonpreten: ' || pcmonpreten;
		  vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
         v_index     NUMBER(8);
        
      BEGIN 
	       p_control_error('EDIER', 'PAC_IAX_SINIESTROS ',  '1');
		IF pnsinies IS NULL OR
        pntramit IS NULL OR
         pcgarant IS NULL
      THEN
        RAISE e_param_error;
      END IF;
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 4;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
			   
				 IF 
                                 vgobsiniestro.tramitaciones(i).amparos.count = 0
                              THEN
            
            p_control_error('EDIER', 'PAC_IAX_SINIESTROS ',  '3');
                                 vpasexec := 13;
                                 vgobsiniestro.tramitaciones(i).amparos.extend;
                                 v_index := vgobsiniestro.tramitaciones(i).amparos.last;
                                 vgobsiniestro.tramitaciones(i).amparos(v_index) := ob_iax_sin_trami_amparo();
                                  vnumerr := pac_md_siniestros.f_set_objeto_sintramiamparo(pnsinies, 
                                                                                           pntramit, 
                                                                                           pcgarant, 
                                                                                           pnpreten, 
                                                                                           picaprie, 
                                                                                           pcmonpreten,
                                                                                           vgobsiniestro.tramitaciones(i)
                                                                                           .amparos(v_index),
                                                                                           mensajes
                                                                                           );
            
                                  p_control_error('EDIER', 'PAC_IAX_SINIESTROS ',  '3 1');
                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;
                              END IF;
			   END IF;
               --   END IF;
            END IF;
         END LOOP;
      END IF;
 p_control_error('EDIER', 'PAC_IAX_SINIESTROS ',  '2');
                   
         IF vgobsiniestro.tramitaciones IS NOT NULL AND
            vgobsiniestro.tramitaciones.count > 0
         THEN
            FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
            LOOP
               IF vgobsiniestro.tramitaciones.exists(i)
               THEN
                  vpasexec := 4;

                  IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
                  THEN
                   
                              
						        vnumerr := pac_md_siniestros.f_set_amparos(pnsinies, pntramit, pcgarant, pnpreten, picaprie, pcmonpreten,
                                                                 vgobsiniestro.tramitaciones(i)
                                                                 .amparos,
                                                                 mensajes);
                   END IF;
               END IF;
            END LOOP;
         END IF;

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
        
 p_control_error('EDIER', 'PAC_IAX_SINIESTROS ',  '4');
   RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam,
                                           NULL, SQLCODE, SQLERRM);
         RETURN 1;
  END f_set_objeto_sintramiamparo; 

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.reserva
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   ctipres        NUMBER(2),   --CÃ³digo Tipo Reserva
   ttipres        VARCHAR2(100),--Des tipo reserva
   nmovres        NUMBER(4),   --NÃºmero Movimiento Reserva
   cgarant        NUMBER(4),   --CÃ³digo GarantÃ­a
   tgarant        VARCHAR2(100),--Des garantia
   ccalres        NUMBER(1),   --CÃ³digo CÃ¡lculo Reserva (Manual/AutomÃ¡tico)
   tcalres        Varchar2(100),--des calculo reserva
   fmovres        DATE,   --Fecha Movimiento Reserva
   cmonres        VARCHAR2(3),   --CÃ³digo Moneda Reserva
   tmonres        VARCHAR2(100),--des moneda reserva
   ireserva       NUMBER,   --Importe Reserva
   ipago          NUMBER,   --Importe Pago
   iingreso       NUMBER,   --Importe Ingreso
   irecobro       NUMBER,   --Importe Recobro
   icaprie        NUMBER,   --Importe capital risc
   ipenali        NUMBER,   --Importe penalitzaciÃ³
   fresini        DATE,   --Fecha Inicio Reserva
   fresfin        DATE,   --Fecha Fin Reserva
   sidepag        NUMBER(8),   --Secuencia Identificador Pago
   sproces        NUMBER(10),   --Secuencia Proceso
   fcontab        DATE,   --Fecha Contabilidad
   cusualt        VARCHAR2(20),   --CÃ³digo Usuario Alta
   falta          DATE,   --Fecha Alta
   cusumod        VARCHAR2(20),   --CÃ³digo Usuario ModificaciÃ³n
   fmodifi        DATE,   --Fecha ModificaciÃ³n
   iprerec        NUMBER  -- Importe previsiÃ³n de recobro
   pmodo          VARCHAR2 -- Nos indica desde donde se modifica la reserva (RESER,PAGO,RECO)
   ptorigen       VARCHAR2 -- Pantalla que llama al alta de reservas

   -- Bug 11945 - 16/12/2009 - Se aÃ±ade el parametro IPREREC
   -- Bug 12124 - 12/03/2010 - Se aÃ±ade el parametro pmodo
   *************************************************************************/
   FUNCTION f_set_objeto_sintramireserva(pnsinies         IN VARCHAR2,
                                         pntramit         IN NUMBER,
                                         pctipres         IN NUMBER,
                                         pttipres         IN VARCHAR2,
                                         pnmovres         IN NUMBER,
                                         pcgarant         IN NUMBER,
                                         pccalres         IN NUMBER,
                                         pfmovres         IN DATE,
                                         pcmonres         IN VARCHAR2,
                                         pireserva        IN NUMBER,
                                         pipago           IN NUMBER,
                                         piingreso        IN NUMBER,
                                         pirecobro        IN NUMBER,
                                         picaprie         IN NUMBER,
                                         pipenali         IN NUMBER,
                                         pfresini         IN DATE,
                                         pfresfin         IN DATE,
                                         pfultpag         IN DATE,
                                         psidepag         IN NUMBER,
                                         psproces         IN NUMBER,
                                         pfcontab         IN DATE,
                                         piprerec         IN NUMBER,
                                         pctipgas         IN NUMBER,
                                         pmodo            IN VARCHAR2,
                                         ptorigen         IN VARCHAR2, -- BUG 20014 - 24/01/2012 - JMP - LCOL_S001-SIN - Reservas y pagos en tramitaciones cerradas
                                         pifranq          IN NUMBER, -- BUG 27059 - 03/06/2013 - NSS - LCOL_S010-SIN - Franquicias en siniestros II
                                         pndias           IN NUMBER, -- BUG 27487/159742- 26/11/2013 - NSS -
                                         pcmovres         IN NUMBER, --0031294/0174788: NSS:26/05/2014
                                         pitotimp         IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:28/11/2013
                                         mensajes         OUT t_iax_mensajes,
                                         ppiva            IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:05/03/2014
                                         ppretenc         IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         ppreteiva        IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         ppreteica        IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         piva_ctipind     IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         pretenc_ctipind  IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         preteiva_ctipind IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         preteica_ctipind IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/03/2014
                                         pitotret         IN NUMBER DEFAULT NULL, -- 24637/0147756:NSS:20/05/2014
                                         pcsolidaridad    IN NUMBER DEFAULT NULL -- CONF-431 IGIL
                                         ) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramireserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pctipres: ' || pctipres ||
                                   ' - pnmovres: ' || pnmovres ||
                                   ' - pctipgas: ' || pctipgas ||
                                   ' - piprerec: ' || piprerec ||
                                   ' - ppiva: ' || ppiva || ' - ppiva: ' ||
                                   ppiva || ' - ppretenc: ' || ppretenc ||
                                   ' - ppreteiva: ' || ppreteiva ||
                                   ' - ppreteica: ' || ppreteica ||
                                   ' - piva_ctipind: ' || piva_ctipind ||
                                   ' - pretenc_ctipind: ' ||
                                   pretenc_ctipind ||
                                   ' - preteiva_ctipind: ' ||
                                   preteiva_ctipind ||
                                   ' - preteica_ctipind: ' ||
                                   preteica_ctipind;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnmovres    NUMBER(8);
      v_index     NUMBER(8);
      vsidepag    NUMBER(8);
      vipago      NUMBER;
      viingreso   NUMBER;
      virecobro   NUMBER;
      vireserva   NUMBER;
      vitotimp    NUMBER; -- 24637/0147756:NSS:05/03/2014
      vitotret    NUMBER := 0; -- 24637/0147756:NSS:20/03/2014
      vfcontab    DATE;
      trobat      BOOLEAN := FALSE;
      vimputar    NUMBER;
      pcunitra    VARCHAR2(100);
      pctramit    VARCHAR2(100);
      -- Bug 15011 - 16/06/2010 - AMC
      vmovi    NUMBER(2) := 0;
      vnmovsin NUMBER;
      vnsinies NUMBER;
      vi       NUMBER := -1;
      vj       NUMBER := -1;
      -- Fi Bug 15011 - 16/06/2010 - AMC
      vcmovres NUMBER; --0031294/0174788:NSS:26/05/2014
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vsidepag  := psidepag;
      vipago    := pipago;
      viingreso := piingreso;
      virecobro := pirecobro;
      vfcontab  := pfcontab;
      vnmovres  := 0;

      --Validacions reserves
      -- 30920 - 14/04/2014 - JTT:  No realizamos las validacines sobre la reserva cuando creamos el movimiento
      -- correspondiente a un pago/recobro.
      IF (pmodo = 'PAGO') OR
         (pmodo = 'RECO')
      THEN
         NULL;
      ELSE
         vnumerr := pac_iax_validaciones_sin.f_restrami(pnsinies,
                                                        pntramit,
                                                        vgobsiniestro.ccausin,
                                                        pctipres,
                                                        pcgarant,
                                                        pccalres,
                                                        pireserva,
                                                        picaprie,
                                                        pipenali,
                                                        pfresini,
                                                        pfresfin,
                                                        pcmonres, -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
                                                        ptorigen,
                                                        pndias, --BUG 24708/162026 - 03/01/2014 - NSS
                                                        mensajes);
      END IF;

      vpasexec := 2;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Bug 12124 - 11/03/2010 - AMC
      IF pmodo = 'RECO'
      THEN
         vimputar := pac_md_param.f_parempresa_nn('IMPUTA_RECOBRO',
                                                  mensajes);
      ELSIF pmodo = 'RESER'
      THEN
         vimputar := pac_md_param.f_parempresa_nn('IMPUTA_RESERVA',
                                                  mensajes);
      END IF;

      vpasexec := 3;
      -- 24637/0147756:NSS:05/03/2014
      vitotimp := pitotimp;
      vitotret := pitotret; -- 24637/0147756:NSS:20/05/2014

      IF vitotimp IS NULL
      THEN
         IF ppiva IS NOT NULL
         THEN
            vitotimp := pireserva * NVL(ppiva / 100, 0); -- 24637/0147756:NSS:20/05/2014
         END IF;
      END IF;

      IF vitotret IS NULL
      THEN
         IF ppretenc IS NOT NULL
         THEN
            vitotret := pireserva * NVL(ppretenc / 100, 0); -- 24637/0147756:NSS:20/05/2014
         END IF;

         IF ppreteica IS NOT NULL
         THEN
            vitotret := vitotret + (pireserva * NVL(ppreteica / 100, 0)); -- 24637/0147756:NSS:20/05/2014
         END IF;

         IF ppreteiva IS NOT NULL
         THEN
            vitotret := vitotret +
                        (NVL(vitotimp, 0) * NVL(ppreteiva / 100, 0)); -- 24637/0147756:NSS:20/05/2014 --EL RETEIVA SE CALCULA SOBRE EL IVA
         END IF;
      END IF;

      -- FIN 24637/0147756:NSS:05/03/2014

      -- Fi Bug 12124 - 11/03/2010 - AMC
      -- Bug 22044 - APD - 02/05/2012 - se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 4;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 5;

                  --     IF pnmovres IS NOT NULL THEN
                  IF vgobsiniestro.tramitaciones(i)
                   .reservas IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).reservas.count > 0
                  THEN
                     vpasexec := 6;

                     FOR j IN vgobsiniestro.tramitaciones(i).reservas.first .. vgobsiniestro.tramitaciones(i)
                                                                               .reservas.last
                     LOOP
                        vpasexec := 7;

                        IF vgobsiniestro.tramitaciones(i).reservas.exists(j)
                        THEN
                           IF vgobsiniestro.tramitaciones(i).reservas(j)
                            .ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).reservas(j)
                              .ctipres = pctipres
                           THEN
                              vpasexec := 8;

                              IF vgobsiniestro.tramitaciones(i).reservas(j)
                               .nmovres = pnmovres
                              THEN

							  /* Cambios de IAXIS-3650 : Starts*/
                              IF pmodo = 'RESER' THEN
                               vireserva := vgobsiniestro.tramitaciones(i).reservas(j)
                                                 .ireserva;
                                 END IF;
							  /* Cambios de IAXIS-3650 : Ends*/
                                 IF NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                        .cgarant,
                                        0) = NVL(pcgarant, 0)
                                 THEN
                                    --ME QUEDO con el objeto a eliminar: vi vj
                                    --vgobsiniestro.tramitaciones(i).reservas.delete(j);
                                    vgobsiniestro.tramitaciones(i).reservas.delete(j);
                                 END IF;
                              ELSE
                                 trobat   := TRUE;
                                 vpasexec := 10;

                                 -- 30920 - 14/04/2014 - JTT: Anulamos la forma actual de calcular vnmovres

                                 -- 26108 ini
                                 IF NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                        .cgarant,
                                        0) = NVL(pcgarant, 0) AND
                                    (NVL(pfresini, TRUNC(f_sysdate)) >=
                                     NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                         .fresini,
                                         TRUNC(f_sysdate)) AND
                                     NVL(pfresfin, TRUNC(f_sysdate)) <=
                                     NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                         .fresfin,
                                         TRUNC(f_sysdate))) AND
                                    (NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                         .ctipgas,
                                         -1) = NVL(pctipgas, -1)) AND
                                    (vgobsiniestro.tramitaciones(i).reservas(j)
                                     .cmonres = pcmonres OR pcmonres IS NULL)
                                 THEN
                                    -- 26108 fin
                                    vpasexec  := 11;
                                    vsidepag  := vgobsiniestro.tramitaciones(i).reservas(j)
                                                 .sidepag;
                                    viingreso := NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                                     .iingreso,
                                                     0) + NVL(piingreso, 0);

                                    IF pmodo = 'RECO' AND
                                       NVL(pirecobro, 0) > 0
                                    THEN
                                       virecobro := NVL(pirecobro, 0);
                                    ELSE
                                       virecobro := NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                                        .irecobro,
                                                        0) +
                                                    NVL(pirecobro, 0);
                                    END IF;

                                    /****++++*/
                                    IF pmodo = 'PAGO' AND
                                       NVL(pipago, 0) > 0
                                    THEN
                                       vipago := NVL(pipago, 0);
                                    ELSE
                                       vipago := NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                                     .ipago,
                                                     0) + NVL(pipago, 0);
                                    END IF;

                                    vfcontab  := vgobsiniestro.tramitaciones(i).reservas(j)
                                                 .fcontab;
                                    vireserva := vgobsiniestro.tramitaciones(i).reservas(j)
                                                 .ireserva;
                                    vnmovres  := vgobsiniestro.tramitaciones(i).reservas(j)
                                                 .nmovres;
                                 ELSE
                                    IF pcmovres = 2
                                    THEN
                                       vcmovres := NULL;
                                    ELSE
                                       vcmovres := pcmovres;
                                    END IF;
                                 END IF;

                                 --Fi Bug 11847 - 23/11/2009 - AMC
                                 IF NVL(vgobsiniestro.tramitaciones(i).reservas(j)
                                        .cgarant,
                                        0) = NVL(pcgarant, 0)
                                 THEN
                                    vi := i;
                                    vj := j;
                                 END IF;
                              END IF;
                           ELSE
                              trobat := TRUE;
                           END IF;
                        END IF;
                     END LOOP;
                  END IF;

                  vpasexec := 12;

                  IF trobat = TRUE OR
                     vgobsiniestro.tramitaciones(i).reservas.count = 0
                  THEN


                     vpasexec := 13;
                     vgobsiniestro.tramitaciones(i).reservas.extend;
                     v_index := vgobsiniestro.tramitaciones(i).reservas.last;
                     vgobsiniestro.tramitaciones(i).reservas(v_index) := ob_iax_sin_trami_reserva();

                     IF pcmovres = 2 --Viene de pantalla AXISSIN010 y hay que ver si se disminuye, aumenta o es alta
                     THEN
                        IF vireserva IS NOT NULL --Existe una reserva de ese tipo
                        THEN
                           IF vireserva > pireserva
                           THEN
                              vcmovres := 3; --Disminuye
                           ELSE
                              vcmovres := 2; --Aumenta
                           END IF;
                        ELSE
                           IF vcmovres IS NULL
                           THEN
                              --No existia reserva de ese tipo
                              vcmovres := 1; --Alta
                           END IF;
                        END IF;
                     ELSE
                        vcmovres := pcmovres; --No viene de pantalla AXISSIN010, el codigo de movimiento serÃ¡ el que se recibe
                     END IF;

                     -- Bug 11847 - 23/11/2009 - AMC
                     -- Bug 11945 - 16/12/2009 - AMC
                     -- Bug 12124 - 11/03/2010 - AMC

                     -- Bug 12124 - 11/03/2010 - AMC
                     IF pmodo = 'RESER' OR
                        pmodo = 'RECO'
                     THEN
                        IF NVL(vimputar, 0) = 1
                        THEN
                           --Coste Siniestro --32097/NSS:08/07/2014
                           vireserva := pireserva + NVL(virecobro, 0); --32097/NSS:08/07/2014
                        ELSE
                           --Reserva Pendiente
                           vireserva := pireserva;
                        END IF;
                     ELSE
                        vireserva := pireserva;
                     END IF;

                     -- Fi Bug 12124 - 11/03/2010 - AMC

                     -- Bug 30290 - 14/04/2014 - JTT: Obtenemos el valor del campo vnmovres
                     BEGIN
                        SELECT NVL(MAX(nmovres) + 1, 1)
                          INTO vnmovres
                          FROM sin_tramita_reserva
                         WHERE nsinies = pnsinies
                           AND ntramit = pntramit
                           AND ctipres = pctipres;
                     EXCEPTION
                        WHEN no_data_found THEN
                           vnmovres := 1;
                     END;

                     vnumerr := pac_md_siniestros.f_set_objeto_sintramireserva(pnsinies,
                                                                               pntramit,
                                                                               pctipres,
                                                                               pttipres,
                                                                               vnmovres,
                                                                               pcgarant,
                                                                               pccalres,
                                                                               pfmovres,
                                                                               pcmonres,
                                                                               vireserva,
                                                                               vipago,
                                                                               viingreso,
                                                                               virecobro,
                                                                               picaprie,
                                                                               pipenali,
                                                                               pfresini,
                                                                               pfresfin,
                                                                               pfultpag,
                                                                               psidepag,
                                                                               psproces,
                                                                               vfcontab,
                                                                               piprerec,
                                                                               pctipgas,
                                                                               vgobsiniestro.tramitaciones(i)
                                                                               .reservas(v_index),
                                                                               pifranq, -- Bug 27059 - 03/06/2013 - NSS
                                                                               pndias, -- Bug 27487/159742 - 26/11/2013 - NSS
                                                                               vcmovres, --0031294/0174788: NSS:26/05/2014
                                                                               vitotimp, -- Bug 24637/159742 - 05/03/2014 - NSS -- Bug 24637/159742 - 26/11/2013 - NSS
                                                                               mensajes,
                                                                               vitotret, -- 24637/0147756:NSS:20/03/2014
                                                                               piva_ctipind, -- 24637/0147756:NSS:20/03/2014
                                                                               pretenc_ctipind, -- 24637/0147756:NSS:20/03/2014
                                                                               preteiva_ctipind, -- 24637/0147756:NSS:20/03/2014
                                                                               preteica_ctipind, -- 24637/0147756:NSS:20/03/2014
                                                                               pcsolidaridad -- CONF-431 IGIL
                                                                               );

                     -- Fi Bug 12124 - 11/03/2010 - AMC
                     -- Fi Bug 11847 - 23/11/2009 - AMC
                     -- Fi Bug 11945 - 16/12/2009 - AMC
                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;

                     IF vi <> -1 AND
                        vj <> -1 AND
                        vgobsiniestro.tramitaciones(i).reservas.count <> 0
                     THEN
                        --ME QUEDO con el objeto a eliminar: vi vj
                        vgobsiniestro.tramitaciones(vi).reservas.delete(vj);
                     END IF;

                     -- Bug 14752 - 02/06/2010 - AMC

                     -- Si es un presiniestro creamos un nuevo movimiento al siniestro
                     -- 30142 - 05/03/2014 - JTT: el vector de movimientos esta ordenado descendentement recuperamos el
                     -- FIRST elemento que contiene el ultimo movimento del siniestro para conocer su estado.
                     IF vgobsiniestro.movimientos(vgobsiniestro.movimientos.first)
                      .cestsin = 5
                     THEN
                        vgobsiniestro.movimientos.extend;
                        v_index := vgobsiniestro.movimientos.last;
                        vgobsiniestro.movimientos(v_index) := ob_iax_sin_movsiniestro();
                        --Ini Bug.: 18977 - 12/07/2011 - ICV
                        /*vnumerr :=
                           pac_md_siniestros.f_get_unitradefecte(pac_md_common.f_get_cxtempresa,
                                                                 pcunitra, pctramit, mensajes);

                        IF vnumerr <> 0 THEN
                           pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
                           RAISE e_object_error;
                        END IF;*/

                        -- 22108:ASN:31/05/2012 ini
                        vnumerr := pac_md_siniestros.f_get_tramitador_defecto(pac_md_common.f_get_cxtempresa,
                                                                              f_user,
                                                                              NULL,
                                                                              vgobsiniestro.ccausin,
                                                                              vgobsiniestro.cmotsin,
                                                                              pnsinies,
                                                                              NULL, -- 22108:ASN:31/05/2012
                                                                              pntramit,
                                                                              pcunitra,
                                                                              pctramit,
                                                                              mensajes);

                        -- 22108/ASN/31/05/2012 fin
                        IF NVL(vnumerr, 99999) > 1
                        THEN
                           --El error 1 es de tramitador por defecto U000
                           RAISE e_object_error;
                        END IF;

                        vnumerr := 0;
                        --Fin Bug 18977

                        --busca tramitador i unitat tramitador per crear l'objecte de moviments
                        vnumerr  := pac_md_siniestros.f_set_objeto_movsiniestro(pnsinies,
                                                                                -- v_index - 1, -- 23896:ASN:25/10/2012
                                                                                v_index,
                                                                                0,
                                                                                f_sysdate,
                                                                                NULL,
                                                                                pcunitra,
                                                                                pctramit,
                                                                                vgobsiniestro.movimientos(v_index),
                                                                                mensajes);
                        vpasexec := 14;

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;

                        -- Bug 15011 - 16/06/2010 - AMC
                        vmovi := 1;
                        -- Fi Bug 15011 - 16/06/2010 - AMC
                     END IF;
                     -- Fi bug 14752 - 02/06/2010 - AMC
                  END IF;
               END IF;
               --   END IF;
            END IF;
         END LOOP;
        ELSE
        IF pctipres=5 AND  ptorigen='axislist003' THEN
        RETURN 1;
        END IF;
        
      END IF;

      vpasexec := 15;

      -- Bug 15011 - 16/06/2010 - AMC
      IF vmovi = 1
      THEN
         vnsinies := vgobsiniestro.nsinies;
         vnumerr  := pac_md_siniestros.f_set_movsiniestros(vgobsiniestro.movimientos,
                                                           vnsinies,
                                                           vnmovsin,
                                                           mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      -- Fi Bug 15011 - 16/06/2010 - AMC

      -- Bug 21849/111609 - 27/03/2012 - AMC
      IF ptorigen IS NULL OR
         (ptorigen != 'AXISSIN050')
      THEN
         -- Fi Bug 21849/111609 - 27/03/2012 - AMC

         -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
         --grabem a taules i tornem a recuperar l'objecte
         IF vgobsiniestro.tramitaciones IS NOT NULL AND
            vgobsiniestro.tramitaciones.count > 0
         THEN
            FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
            LOOP
               IF vgobsiniestro.tramitaciones.exists(i)
               THEN
                  vpasexec := 4;

                  IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
                  THEN
                     vnumerr := pac_md_siniestros.f_set_reservas(vgobsiniestro.nsinies,
                                                                 vgobsiniestro.tramitaciones(i)
                                                                 .reservas,
                                                                 mensajes);
                  END IF;
               END IF;
            END LOOP;
         END IF;

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         COMMIT;
         -- 23896:ASN:25/10/2012 ini
         vnumerr := pac_md_siniestros.f_get_movsiniestros(vgobsiniestro.nsinies,
                                                          vgobsiniestro.movimientos,
                                                          mensajes);
         -- 23896:ASN:25/10/2012 fin
         vnumerr := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                          vgobsiniestro.tramitaciones,
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 16;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramireserva;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestro_referencias
   pnsinies        VARCHAR2(14),   --NÃºmero Siniestro
   psrefext        NUMBER(3),   --NÃºmero referencia
   pctipref        NUMBER(2),   --CÃ³digo Tipo referencia
   ptrefext        VARCHAR2(100),--Des tipo referencia
   pfrefini        DATE,   --Fecha Inicio
   pfreffin        DATE,   --Fecha Fin

   *************************************************************************/
   FUNCTION f_set_objeto_sinreferencias(pnsinies IN VARCHAR2,
                                        psrefext IN NUMBER,
                                        pctipref IN NUMBER,
                                        ptrefext IN VARCHAR2,
                                        pfrefini IN DATE,
                                        pfreffin IN DATE,
                                        mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_Sinreferencias';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - psrefext: ' || psrefext ||
                                   ' - pctipref: ' || pctipref ||
                                   ' - ptrefext: ' || ptrefext ||
                                   ' - pfrefini: ' || pfrefini ||
                                   ' - pfreffin: ' || pfreffin;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlocali    NUMBER(8);
      v_index     NUMBER(8);
      ob_refer    ob_iax_siniestro_referencias;
      vmaxsrefext NUMBER := 0;
   BEGIN
      ob_refer         := ob_iax_siniestro_referencias();
      ob_refer.nsinies := pnsinies;
      ob_refer.ctipref := pctipref;
      ob_refer.trefext := ptrefext;
      ob_refer.frefini := pfrefini;
      ob_refer.freffin := pfreffin;
      ob_refer.ttipref := ff_desvalorfijo(800022,
                                          pac_md_common.f_get_cxtidioma,
                                          pctipref);
      vpasexec         := 2;

      IF vgobsiniestro.referencias IS NULL
      THEN
         vgobsiniestro.referencias := t_iax_siniestro_referencias();
      END IF;

      vpasexec := 4;

      IF psrefext IS NULL OR psrefext = -1
      THEN
         SELECT srefext.nextval INTO vmaxsrefext FROM dual;

         ob_refer.srefext := vmaxsrefext + 1;
         vgobsiniestro.referencias.extend;
         vgobsiniestro.referencias(vgobsiniestro.referencias.count) := ob_refer;
      ELSE
         ob_refer.srefext := psrefext;

         FOR i IN vgobsiniestro.referencias.first .. vgobsiniestro.referencias.last
         LOOP
            IF vgobsiniestro.referencias(i).srefext = psrefext
            THEN
               vgobsiniestro.referencias(i) := ob_refer;
            END IF;
         END LOOP;
      END IF;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sinreferencias;

   /*************************************************************************
     funciÃ³n graba en una variable global de la capa IAX los valores del objeto
     ob_iax_siniestros.danyos
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   ndano          NUMBER(3),   --NÃºmero DaÃ±o Siniestro
   tdano          VARCHAR2(5000),   --DescripciÃ³n DaÃ±o
    *************************************************************************/
   FUNCTION f_set_objeto_sintramidanyo(pnsinies IN VARCHAR2,
                                       pntramit IN NUMBER,
                                       pndano   IN NUMBER,
                                       pctipinf IN NUMBER,
                                       ptdano   IN VARCHAR2,
                                       pndanout OUT NUMBER,
                                       mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramidanyo';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pndano: ' || pndano || ' - ptdano: ' ||
                                   ptdano;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vndano      NUMBER(8);
      v_index     NUMBER(8);
      trobat      BOOLEAN := FALSE;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      pndanout := pndano;
      --Validacions danys
      vnumerr := pac_iax_validaciones_sin.f_dantrami(pnsinies,
                                                     pntramit,
                                                     ptdano,
                                                     mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Bug 22044 - APD - 02/05/2012 - se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pndano IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .danyos IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).danyos.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i).danyos.first .. vgobsiniestro.tramitaciones(i)
                                                                                .danyos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).danyos(j)
                            .ndano = pndano AND
                              vgobsiniestro.tramitaciones(i).danyos(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidanyo(pnsinies,
                                                                                      pntramit,
                                                                                      pndano,
                                                                                      pctipinf,
                                                                                      ptdano,
                                                                                      vgobsiniestro.tramitaciones(i)
                                                                                      .danyos(j),
                                                                                      mensajes);
                              trobat  := TRUE;

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     vndano := 0;

                     IF vgobsiniestro.tramitaciones(i).danyos IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).danyos := t_iax_sin_trami_dano();
                     ELSIF vgobsiniestro.tramitaciones(i).danyos.count > 0
                     THEN
                        vndano := NVL(vgobsiniestro.tramitaciones(i).danyos(vgobsiniestro.tramitaciones(i).danyos.last)
                                      .ndano,
                                      0) + 1;
                     END IF;

                     vpasexec := 7;
                     vgobsiniestro.tramitaciones(i).danyos.extend;
                     v_index := vgobsiniestro.tramitaciones(i).danyos.last;
                     --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                     vgobsiniestro.tramitaciones(i).danyos(v_index) := ob_iax_sin_trami_dano();
                     vnumerr := pac_md_siniestros.f_set_objeto_sintramidanyo(pnsinies,
                                                                             pntramit,
                                                                             vndano,
                                                                             pctipinf,
                                                                             ptdano,
                                                                             vgobsiniestro.tramitaciones(i)
                                                                             .danyos(v_index),
                                                                             mensajes);
                     pndanout := vndano;

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;
                     -- END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramidanyo;

   /*************************************************************************
     funciÃ³n graba en una variable global de la capa IAX los valores del objeto
     ob_iax_siniestros.danyos
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   ndano          NUMBER(3),   --NÃºmero DaÃ±o Siniestro
   tdano          VARCHAR2(5000),   --DescripciÃ³n DaÃ±o
    *************************************************************************/
   FUNCTION f_set_objeto_sintramidetdanyo(pnsinies IN VARCHAR2,
                                          pntramit IN NUMBER,
                                          pndano   IN NUMBER,
                                          pctipinf IN NUMBER,
                                          ptdano   IN VARCHAR2,
                                          dano0    IN NUMBER,
                                          dano1    IN NUMBER,
                                          dano2    IN NUMBER,
                                          dano3    IN NUMBER,
                                          dano4    IN NUMBER,
                                          dano5    IN NUMBER,
                                          dano6    IN NUMBER,
                                          dano7    IN NUMBER,
                                          dano8    IN NUMBER,
                                          dano9    IN NUMBER,
                                          dano10   IN NUMBER,
                                          mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramidanyo';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pndano: ' || pndano || ' - ptdano: ' ||
                                   ptdano;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vndano      NUMBER(8);
      v_index     NUMBER(8);
      trobat      BOOLEAN := FALSE;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- Bug 22044 - APD - 02/05/2012 - se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vnumerr := pac_iax_siniestros.f_set_objeto_sintramidanyo(pnsinies,
                                                                           pntramit,
                                                                           pndano,
                                                                           pctipinf,
                                                                           ptdano,
                                                                           vndano,
                                                                           mensajes);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;

                  IF vgobsiniestro.tramitaciones(i)
                   .danyos IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).danyos.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i).danyos.first .. vgobsiniestro.tramitaciones(i)
                                                                             .danyos.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).danyos(j)
                         .ndano = vndano AND
                           vgobsiniestro.tramitaciones(i).danyos(j)
                           .ntramit = pntramit
                        THEN
                           -- Si el trobem, el modifiquem
                           vgobsiniestro.tramitaciones(i).danyos(j).detalle := t_iax_sin_trami_detdano();
                        END IF;
                     END LOOP;

                     FOR j IN vgobsiniestro.tramitaciones(i).danyos.first .. vgobsiniestro.tramitaciones(i)
                                                                             .danyos.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).danyos(j)
                         .ndano = vndano AND
                           vgobsiniestro.tramitaciones(i).danyos(j)
                           .ntramit = pntramit
                        THEN
                           -- Si el trobem, el modifiquem
                           IF dano0 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                0,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         0,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano1 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                1,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         1,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano2 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                2,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         2,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano3 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                3,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         3,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano4 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                4,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         4,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano5 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                5,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         5,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano6 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                6,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         6,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano7 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                7,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         7,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano8 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                8,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         8,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano9 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                9,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         9,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;

                           IF dano10 = 1
                           THEN
                              --Validacions danys
                              vnumerr := pac_iax_validaciones_sin.f_dandettrami(pnsinies,
                                                                                pntramit,
                                                                                vndano,
                                                                                10,
                                                                                mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              vgobsiniestro.tramitaciones(i).danyos(j).detalle.extend;
                              v_index := vgobsiniestro.tramitaciones(i).danyos(j)
                                         .detalle.last;
                              --vgobsiniestro.tramitaciones(i).danyos(v_index-1).ndano;
                              vgobsiniestro.tramitaciones(i).danyos(j).detalle(v_index) := ob_iax_sin_trami_detdano();
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramidetdanyo(pnsinies,
                                                                                         pntramit,
                                                                                         vndano,
                                                                                         10,
                                                                                         vgobsiniestro.tramitaciones(i).danyos(j)
                                                                                         .detalle(v_index),
                                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END IF;
                     END LOOP;
                     -- END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramidetdanyo;

   /*************************************************************************
      funciÃ³n recupera un dany
      ob_iax_siniestros.danyos
    nsinies        VARCHAR2(14),   --NÃºmero Siniestro
    ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
    ndano          NUMBER(3),   --NÃºmero DaÃ±o Siniestro
   *************************************************************************/
   FUNCTION f_get_objeto_sintramidanyo(pnsinies IN VARCHAR2,
                                       pntramit IN NUMBER,
                                       pndano   IN NUMBER,
                                       mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_dano IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramidanyo';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pndano: ' || pndano;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vndano      NUMBER(8);
      v_index     NUMBER(8);
      v_dano      ob_iax_sin_trami_dano := ob_iax_sin_trami_dano();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pndano IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pndano IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i).danyos IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i).danyos.first .. vgobsiniestro.tramitaciones(i)
                                                                                .danyos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).danyos(j)
                            .ndano = pndano AND
                              vgobsiniestro.tramitaciones(i).danyos(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              v_dano := vgobsiniestro.tramitaciones(i)
                                        .danyos(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 6;
      RETURN v_dano;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramidanyo;

   /*************************************************************************
        funciÃ³n borra todo el objeto danyo de tramitaciones
   *************************************************************************/
   FUNCTION f_del_danyo(pnsinies IN VARCHAR2,
                        pntramit IN NUMBER,
                        pndano   IN NUMBER,
                        mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(200) := 'pntramit=' || pntramit || ' pnsinies=' ||
                                pnsinies || 'pndano=' || pndano;
      vobject  VARCHAR2(200) := 'PAC_IAX_persona.F_del_danyo';
      vnumerr  NUMBER;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pndano IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               vpasexec := 3;

               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;

                  IF pntramit IS NOT NULL AND
                     pndano IS NOT NULL
                  THEN
                     vpasexec := 5;

                     IF vgobsiniestro.tramitaciones(i)
                      .danyos IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).danyos.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i).danyos.first .. vgobsiniestro.tramitaciones(i)
                                                                                .danyos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).danyos(j)
                            .ndano = pndano AND
                              vgobsiniestro.tramitaciones(i).danyos(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 7;
                              vgobsiniestro.tramitaciones(i).danyos.delete(j);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;

                     vpasexec := 8;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_danyo;

   /*************************************************************************
        funciÃ³n graba en una variable global de la capa IAX los valores del objeto
        ob_iax_siniestros.destinatario
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
      ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   --   sperson        NUMBER(6),   --NUm. identificativo destinatario
   --   nnumide        VARCHAR2(14),   --NÃºmero documento
   --   tdestinatario  VARCHAR2(200),   --Nombre Destinatario
      ctipdes        NUMBER(2),   --CÃ³digo Tipo Destinatario
      ttipdes        VARCHAR2(100),   --des tipo destinatario
      cpagdes        NUMBER(1),   --Indicador aceptaciÃ³n pagos
      cactpro        NUMBER(4),   --CÃ³digo Actividad Profesional
      tactpro        VARCHAR2(100),   --Des Actividad Profesional
      pasigna        NUMBER(5,2), --asignaciÃ³n
      cpaisre        NUMBER(3),  --cÃ³digo paÃ­s residencia
      tpaisre        VARCHAR2(100), --descripciÃ³n paÃ­s
      cusualt        VARCHAR2(20),   --CÃ³digo Usuario Alta
      falta          DATE,   --Fecha Alta
      cusumod        VARCHAR2(20),   --CÃ³digo Usuario ModificaciÃ³n
      fmodifi        DATE,   --Fecha ModificaciÃ³n
      persona        ob_iax_personas,--persona destinataria
       *************************************************************************/
   FUNCTION f_set_obj_sintramidestinatari(psseguro IN NUMBER,
                                          pnsinies IN VARCHAR2,
                                          pntramit IN NUMBER,
                                          pctipdes IN NUMBER,
                                          pcpagdes IN NUMBER,
                                          pcactpro IN NUMBER,
                                          ppasigna IN NUMBER,
                                          pcpaisre IN NUMBER,
                                          psperson IN NUMBER,
                                          pctipban IN NUMBER,
                                          pcbancar IN VARCHAR2,
                                          -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones
                                          pctipcap IN NUMBER,
                                          pcrelase IN NUMBER,
                                          -- Fi Bug 0015669 - JRH - 30/09/2010
                                          psprofes IN NUMBER, -- Bug 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - NSS - 30/09/2010
                                          pcprovin IN NUMBER, -- SHA -- Bug 38224/216445 --11/11/2015
                                          mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname        VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramidestinatari';
      vparam             VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' ||
                                          pnsinies || ' - pntramit: ' ||
                                          pntramit || ' - pctipdes: ' ||
                                          pctipdes || ' - pcpagdes: ' ||
                                          pcpagdes || ' - pctipcap: ' ||
                                          pctipcap || ' - pcrelase: ' ||
                                          pcrelase || ' - pcprovin: ' ||
                                          pcprovin;
      vpasexec           NUMBER(5) := 1;
      vnumerr            NUMBER(8) := 0;
      vndano             NUMBER(8);
      v_index            NUMBER(8);
      trobat             BOOLEAN := FALSE;
      vtramidestinatario ob_iax_sin_trami_destinatario := ob_iax_sin_trami_destinatario();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      --Validacions destinataris
      vnumerr := pac_iax_validaciones_sin.f_dest(pnsinies,
                                                 pntramit,
                                                 vgobsiniestro.ccausin,
                                                 pctipdes,
                                                 pcactpro,
                                                 psperson,
                                                 ppasigna,
                                                 pcpaisre,
                                                 pcbancar,
                                                 pctipcap,
                                                 pcrelase,
                                                 mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 3;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;

                  IF psperson IS NOT NULL
                  THEN
                     vpasexec := 5;

                     IF vgobsiniestro.tramitaciones(i)
                      .destinatarios IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i)
                        .destinatarios.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .destinatarios.first .. vgobsiniestro.tramitaciones(i)
                                                         .destinatarios.last
                        LOOP
                           vpasexec := 66;

                           IF vgobsiniestro.tramitaciones(i).destinatarios(j)
                            .persona.sperson = psperson AND
                              vgobsiniestro.tramitaciones(i).destinatarios(j)
                              .ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).destinatarios(j)
                              .ctipdes = pctipdes
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 7;
                              --  vtramidestinatario := vgobsiniestro.tramitaciones(i).destinatarios(j);
                              vnumerr := pac_md_siniestros.f_set_obj_sintramidestinatari(psseguro,
                                                                                         pnsinies,
                                                                                         pntramit,
                                                                                         pctipdes,
                                                                                         pcpagdes,
                                                                                         pcactpro,
                                                                                         ppasigna,
                                                                                         pcpaisre,
                                                                                         psperson,
                                                                                         pctipban,
                                                                                         pcbancar,
                                                                                         pctipcap,
                                                                                         pcrelase,
                                                                                         psprofes, --bug 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - NSS - 26/02/2014
                                                                                         vgobsiniestro.tramitaciones(i)
                                                                                         .destinatarios(j),
                                                                                         pcprovin,
                                                                                         mensajes);
                              trobat  := TRUE;

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                              -- vgobsiniestro.tramitaciones(i).destinatarios(j) := vtramidestinatario;
                           END IF;
                        END LOOP;
                     END IF;

                     vpasexec := 8;

                     IF trobat = FALSE
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .destinatarios IS NULL
                        THEN
                           vgobsiniestro.tramitaciones(i).destinatarios := t_iax_sin_trami_destinatario();
                        END IF;

                        vpasexec := 9;
                        vpasexec := 7;
                        vgobsiniestro.tramitaciones(i).destinatarios.extend;
                        v_index := vgobsiniestro.tramitaciones(i)
                                   .destinatarios.last;
                        vpasexec := 10;
                        vgobsiniestro.tramitaciones(i).destinatarios(v_index) := ob_iax_sin_trami_destinatario();
                        vpasexec := 11;
                        vnumerr := pac_md_siniestros.f_set_obj_sintramidestinatari(psseguro,
                                                                                   pnsinies,
                                                                                   pntramit,
                                                                                   pctipdes,
                                                                                   pcpagdes,
                                                                                   pcactpro,
                                                                                   ppasigna,
                                                                                   pcpaisre,
                                                                                   psperson,
                                                                                   pctipban,
                                                                                   pcbancar,
                                                                                   pctipcap,
                                                                                   pcrelase,
                                                                                   psprofes, --bug 0024637/0147756: (POSAN500-AN-Sin) Analisis Desarrollo: Siniestros - NSS - 26/02/2014
                                                                                   vgobsiniestro.tramitaciones(i)
                                                                                   .destinatarios(v_index),
                                                                                   pcprovin,
                                                                                   mensajes);

                        IF vnumerr <> 0
                        THEN
                           --vgobsiniestro.tramitaciones(i).destinatarios.DELETE(v_index);
                           RAISE e_object_error;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_obj_sintramidestinatari;

   /*************************************************************************
        funciÃ³n borra todo el objeto destinatario de tramitaciones
        param in pnsinies : numero de siniestro
        param in pntramit : numero de siniestro
        param in pctipdes : tipo de destinatario
        param in psperson : codigo de destinario
        param out mensajes : mensajes de error

   -- Bug 14766 - 03/06/2010 - AMC
   *************************************************************************/
   FUNCTION f_del_destinatario(pnsinies IN VARCHAR2,
                               pntramit IN NUMBER,
                               pctipdes IN NUMBER,
                               psperson IN NUMBER,
                               mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(200) := 'psperson=' || psperson || ' pnsinies=' ||
                                pnsinies || 'pntramit=' || pntramit ||
                                ' pctipdes=' || pctipdes;
      vobject  VARCHAR2(200) := 'PAC_IAX_persona.F_del_destinatario';
      vnumerr  NUMBER;
      trobat   NUMBER := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pntramit IS NULL OR
         pctipdes IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 3;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;

                  IF psperson IS NOT NULL AND
                     pctipdes IS NOT NULL
                  THEN
                     vpasexec := 5;

                     -- Bug 14766 - 03/06/2010 - AMC
                     IF vgobsiniestro.tramitaciones(i)
                      .pagos IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).pagos.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                               .pagos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).pagos(j)
                            .destinatari.persona.sperson = psperson AND
                              vgobsiniestro.tramitaciones(i).pagos(j)
                              .destinatari.ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).pagos(j)
                              .destinatari.ctipdes = pctipdes
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 7;
                              pac_iobj_mensajes.crea_nuevo_mensaje(mensajes,
                                                                   1,
                                                                   9901228);
                              RETURN 1; --Existen pagos
                           END IF;
                        END LOOP;
                     END IF;

                     IF vgobsiniestro.tramitaciones(i)
                      .recobros IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).recobros.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .recobros.first .. vgobsiniestro.tramitaciones(i)
                                                    .recobros.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).recobros(j)
                            .destinatari.persona.sperson = psperson AND
                              vgobsiniestro.tramitaciones(i).recobros(j)
                              .destinatari.ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).recobros(j)
                              .destinatari.ctipdes = pctipdes
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 7;
                              pac_iobj_mensajes.crea_nuevo_mensaje(mensajes,
                                                                   1,
                                                                   9901228);
                              RETURN 1; --Existen recobros
                           END IF;
                        END LOOP;
                     END IF;

                     --Fi Bug 14766 - 03/06/2010 - AMC
                     vpasexec := 8;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- Bug 14766 - 03/06/2010 - AMC
      -- Borramos el destinatario
      vnumerr := pac_md_siniestros.f_del_destinatario(pnsinies,
                                                      pntramit,
                                                      pctipdes,
                                                      psperson,
                                                      mensajes);

      -- Fi Bug 14766 - 03/06/2010 - AMC
      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_destinatario;

   /*************************************************************************
        funciÃ³n graba en una variable global de la capa IAX los valores del objeto
        ob_iax_siniestros.destinatario
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
      ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   --   sperson        NUMBER(6),   --NUm. identificativo destinatario
   --   nnumide        VARCHAR2(14),   --NÃºmero documento
   --   tdestinatario  VARCHAR2(200),   --Nombre Destinatario
      ctipdes        NUMBER(2),   --CÃ³digo Tipo Destinatario
      ttipdes        VARCHAR2(100),   --des tipo destinatario
      cpagdes        NUMBER(1),   --Indicador aceptaciÃ³n pagos
      cactpro        NUMBER(4),   --CÃ³digo Actividad Profesional
      tactpro        VARCHAR2(100),   --Des Actividad Profesional
      pasigna        NUMBER(5,2), --asignaciÃ³n
      cpaisre        NUMBER(3),  --cÃ³digo paÃ­s residencia
      tpaisre        VARCHAR2(100), --descripciÃ³n paÃ­s
      cusualt        VARCHAR2(20),   --CÃ³digo Usuario Alta
      falta          DATE,   --Fecha Alta
      cusumod        VARCHAR2(20),   --CÃ³digo Usuario ModificaciÃ³n
      fmodifi        DATE,   --Fecha ModificaciÃ³n
      persona        ob_iax_personas,--persona destinataria
       *************************************************************************/
   FUNCTION f_get_obj_sintramidestinatari(psseguro IN NUMBER,
                                          pnsinies IN VARCHAR2,
                                          pntramit IN NUMBER,
                                          pctipdes IN NUMBER,
                                          psperson IN NUMBER,
                                          mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_destinatario IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramidestinatari';
      vparam        VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                     ' - pntramit: ' || pntramit ||
                                     ' - pctipdes: ' || pctipdes ||
                                     ' - psperson: ' || psperson;
      vpasexec      NUMBER(5) := 1;
      vnumerr       NUMBER(8) := 0;
      v_index       NUMBER(8);
      v_destinatari ob_iax_sin_trami_destinatario := ob_iax_sin_trami_destinatario();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 3;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;

                  IF psperson IS NOT NULL AND
                     pctipdes IS NOT NULL
                  THEN
                     vpasexec := 5;

                     IF vgobsiniestro.tramitaciones(i)
                      .destinatarios IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i)
                        .destinatarios.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .destinatarios.first .. vgobsiniestro.tramitaciones(i)
                                                         .destinatarios.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).destinatarios(j)
                            .persona.sperson = psperson AND
                              vgobsiniestro.tramitaciones(i).destinatarios(j)
                              .ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).destinatarios(j)
                              .ctipdes = pctipdes
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec      := 7;
                              v_destinatari := vgobsiniestro.tramitaciones(i)
                                               .destinatarios(j);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;

                     vpasexec := 8;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 6;
      RETURN v_destinatari;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN v_destinatari;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_obj_sintramidestinatari;

   FUNCTION f_get_obj_sintramidestinataris(psseguro IN NUMBER,
                                           pnsinies IN VARCHAR2,
                                           pntramit IN NUMBER,
                                           mensajes OUT t_iax_mensajes)
      RETURN t_iax_sin_trami_destinatario IS
      vobjectname     VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramidestinatarisss';
      vparam          VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' ||
                                       pnsinies || ' - pntramit: ' ||
                                       pntramit;
      vpasexec        NUMBER(5) := 1;
      vnumerr         NUMBER(8) := 0;
      v_index         NUMBER(8);
      vt_destinataris t_iax_sin_trami_destinatario := t_iax_sin_trami_destinatario();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 3;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec        := 4;
                  vt_destinataris := vgobsiniestro.tramitaciones(i)
                                     .destinatarios;
                  vpasexec        := 8;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 6;
      RETURN vt_destinataris;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_obj_sintramidestinataris;

   FUNCTION f_get_objreservas_calc(psseguro IN NUMBER,
                                   pnsinies IN VARCHAR2,
                                   pntramit IN NUMBER,
                                   mensajes OUT t_iax_mensajes)
      RETURN t_iax_sin_trami_reserva IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramireservas';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_index     NUMBER(8);
      vt_reservas t_iax_sin_trami_reserva := t_iax_sin_trami_reserva();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 3;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;
                  vnumerr  := pac_md_siniestros.f_get_objreservas_calc(vgobsiniestro.tramitaciones(i)
                                                                       .reservas,
                                                                       vt_reservas,
                                                                       mensajes);
                  vpasexec := 8;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 6;
      RETURN vt_reservas;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objreservas_calc;

   /*************************************************************************
           funciÃ³n graba en una variable global de la capa IAX los valores del objeto
           ob_iax_siniestros.recobros
   sidepag        NUMBER(8),   --Secuencia Identificador Pago
      nsinies        VARCHAR2(14),   --NÃºmero Siniestro
      ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
      ctipdes        NUMBER(2),   --CÃ³digo Tipo Destinatario
      ttipdes        VARCHAR2(100),   --Desc. Tipo Destinatario
      ctippag        NUMBER(1),   --CÃ³digo Tipo Pago
      ttippag        VARCHAR2(100),   --Desc. Tipo Pago
      cconpag        NUMBER(2),   --CÃ³digo Concepto Pago
      tconpag        VARCHAR2(100),   --Desc. COncepto Pago
      ccauind        NUMBER(3),   --CÃ³digo Causa IndemnizaciÃ³n
      tcauind        VARCHAR2(100),   --Desc. Causa IndemnizaciÃ³n
      cforpag        NUMBER(2),   --CÃ³digo Forma Pago
      tforpag        VARCHAR2(100),   --DEsc. Forma PAgo
      fordpag        DATE,   --Fecha Orden Pago
      ctipban        NUMBER(1),   --CÃ³digo Tipo Cuenta Bancaria
      ttipban        VARCHAR2(100),   --Desc. Tipo Cuenta Bancaria
      cbancar        VARCHAR2(34),   --CÃ³digo Cuenta Bancaria
      cmonres        VARCHAR2(3),   --CÃ³digo Moneda Reserva
      tmonres        VARCHAR2(100),   --Desc. Moneda Reserva
      isinret        NUMBER,   --Importe Sin RetenciÃ³n
      iconret        NUMBER,   --Importe Con RetenciÃ³n
      iretenc        NUMBER,   --Importe RetenciÃ³n
      pretenc        NUMBER(6, 3),   --Porcentaje RetenciÃ³n
      iiva           NUMBER,   --Importe IVA
      isuplid        NUMBER,   --Importe Suplido
      ifranq         NUMBER,   --Importe Franquicia Pagada
      iresred        NUMBER,   --Importe Rendimiento Reducido (Vida)
      iresrcm        NUMBER,   --Importe Rendimiento (Vida)
      cmonpag        VARCHAR2(3),   --CÃ³digo Moneda Pago
      tmonpag        VARCHAR2(100),   --Desc Moneda Pago
      isinretpag     NUMBER,   --Importe Sin RetenciÃ³n Moneda Pago
      iconretpag     NUMBER,   --Importe Con RetenciÃ³n Moneda Pago
      iretencpag     NUMBER,   --Importe RetenciÃ³n Moneda Pago
      iivapag        NUMBER,   --Importe IVA Moneda Pago
      isuplidpag     NUMBER,   --Importe Suplido Moneda Pago
      ifranqpag      NUMBER,   --Importe Franquicia Moneda Pago
      fcambio        DATE,   --Fecha de cambio
      nfacref        VARCHAR2(100),   --NÃºmero Factura/Referencia
      ffacref        DATE,   --Fecha Factura/Referencia
      cusualt        VARCHAR2(20),   --CÃ³digo Usuario Alta
      falta          DATE,   --Fecha Alta
      cusumod        VARCHAR2(20),   --CÃ³digo Usuario ModificaciÃ³n
      fmodifi        DATE,   --Fecha ModificaciÃ³n
      destinatari    ob_iax_personas,   --destinatari
      movpagos       t_iax_sin_trami_movpago,   --Coleccion movimientos de pagos
      pagogar        t_iax_sin_trami_pago_gar,   --coleccion pago garantias
      pcagente        NUMBER  CÃ³digo del agente/mediador
      pnpersrel       NUMBER  CÃ³digo persona relacionada/perjudicada

   -- Bug 11847 - 23/11/2009 - AMC
      BUG 19981 - 07/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, ireteivapag, ireteicapag, iica, iicapag  en la cabecera y llamadas
      Bug 22256/122456 - 28/09/2012 - AMC  - AÃ±adir campos cagente,npersrel,pcdomici y pctributacion
   *************************************************************************/
   FUNCTION f_set_obj_sintrami_pago_recob(psseguro      IN NUMBER,
                                          psidepag      IN NUMBER,
                                          pnsinies      IN VARCHAR2,
                                          pntramit      IN NUMBER,
                                          pctipdes      IN NUMBER,
                                          pctippag      IN NUMBER,
                                          pcconpag      IN NUMBER,
                                          pccauind      IN NUMBER,
                                          pcforpag      IN NUMBER,
                                          pfordpag      IN DATE,
                                          pctipban      IN NUMBER,
                                          pcbancar      IN VARCHAR2,
                                          pcmonres      IN VARCHAR2,
                                          pisinret      IN NUMBER,
                                          piconret      IN NUMBER,
                                          ppretenc      IN NUMBER,
                                          piretenc      IN NUMBER, -- ASN 24546
                                          piiva         IN NUMBER,
                                          pisuplid      IN NUMBER,
                                          pifranq       IN NUMBER,
                                          piresred      IN NUMBER,
                                          piresrcm      IN NUMBER,
                                          pcmonpag      IN VARCHAR2,
                                          pisinretpag   IN NUMBER,
                                          piconretpag   IN NUMBER,
                                          piretencpag   IN NUMBER,
                                          piivapag      IN NUMBER,
                                          pisuplidpag   IN NUMBER,
                                          pifranqpag    IN NUMBER,
                                          pfcambio      IN DATE,
                                          pnfacref      IN VARCHAR2,
                                          pffacref      IN DATE,
                                          psperson      IN NUMBER,
                                          psidepagtemp  IN NUMBER,
                                          pcultpag      IN NUMBER,
                                          pncheque      IN VARCHAR2,
                                          psidepagout   OUT NUMBER,
                                          mensajes      OUT t_iax_mensajes,
                                          pireteiva     IN NUMBER DEFAULT NULL,
                                          pireteica     IN NUMBER DEFAULT NULL,
                                          pireteivapag  IN NUMBER DEFAULT NULL,
                                          pireteicapag  IN NUMBER DEFAULT NULL,
                                          piica         IN NUMBER DEFAULT NULL,
                                          piicapag      IN NUMBER DEFAULT NULL,
                                          pcagente      IN NUMBER DEFAULT NULL,
                                          pnpersrel     IN NUMBER DEFAULT NULL,
                                          pcdomici      IN NUMBER DEFAULT NULL,
                                          pctributacion IN NUMBER DEFAULT NULL,
                                          pcbanco       IN NUMBER DEFAULT NULL, --24708:NSS:10/10/2013
                                          pcofici       IN NUMBER DEFAULT NULL, --24708:NSS:10/10/2013
                                          pcciudad      IN NUMBER DEFAULT NULL, --29224:NSS:24/02/2014
                                          pspersonpres  IN NUMBER DEFAULT NULL,
                                          ptobserva     IN VARCHAR2 DEFAULT NULL,
                                          piotrosgas    IN NUMBER DEFAULT NULL,
                                          pibaseipoc    IN NUMBER DEFAULT NULL,
                                          piipoconsumo  IN NUMBER DEFAULT NULL,
                                          piotrosgaspag   IN NUMBER DEFAULT NULL,
                                          pibaseipocpag   IN NUMBER DEFAULT NULL,
                                          piipoconsumopag IN NUMBER DEFAULT NULL
                                          ) RETURN NUMBER IS
      vobjectname  VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_obj_sintrami_pago_recob';
      vparam       VARCHAR2(500) := 'parÃ¡metros - psidepag: ' || psidepag ||
                                    ' - pntramit: ' || pntramit ||
                                    ' - pctippag: ' || pctippag ||
                                    ' - pctipdes: ' || pctipdes ||
                                    ' - pcbanco: ' || pcbanco ||
                                    ' - pcofici: ' || pcofici ||
                                    ' - pcciudad: ' || pcciudad;
      vpasexec     NUMBER(5) := 1;
      vnumerr      NUMBER(8) := 0;
      vsidepag     NUMBER(8);
      v_index      NUMBER(8);
      vsidepagtemp NUMBER(1) := 0;
      vcultpag     NUMBER(1);
      vilimite     NUMBER;
      --- Bug 27514/149320 - 17/07/2013 - AMC
      vtramitaciones t_iax_sin_tramitacion;
      vtramitacion   ob_iax_sin_tramitacion;
      vctramitad     VARCHAR2(4);
      --- Fi Bug 27514/149320 - 17/07/2013 - AMC

      -- Bug 27514/149698 - 24/07/2013 - AMC
      vmoneda   monedas.cmonint%TYPE;
      visinret  NUMBER;
      v_fcambio DATE;
      vtasa     NUMBER;
      v_nnumdet NUMBER;
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC
   BEGIN
      vnumerr := pac_iax_validaciones_sin.f_cabecerapago(pnsinies,
                                                         pntramit,
                                                         pctippag,
                                                         pctipdes,
                                                         pcconpag,
                                                         pccauind,
                                                         pcforpag,
                                                         pcbancar,
                                                         pfordpag,
                                                         psidepag, --Bug.: 16280 - ICV - Se aÃ±ade el paso del sidepag
                                                         mensajes);

      -- Bug 11847 - 23/11/2009 - AMC
      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      /* IF psidepagtemp IS NOT NULL THEN
         vsidepagtemp := psidepagtemp;
      END IF;*/

      --Fi Bug 11847 - 23/11/2009 - AMC

      -- Bug 27514/149320 - 17/07/2013 - AMC
      vtramitaciones := vgobsiniestro.tramitaciones;

      IF vtramitaciones IS NOT NULL
      THEN
         IF vtramitaciones.count > 0
         THEN
            FOR t IN vtramitaciones.first .. vtramitaciones.last
            LOOP
               vtramitacion := vtramitaciones(t);

               IF vtramitacion.ntramit = pntramit
               THEN
                  vctramitad := vtramitacion.movimientos(vtramitacion.movimientos.last)
                                .ctramitad;
               END IF;
            END LOOP;
         END IF;
      END IF;

      -- Bug 29804 - 26/03/2014 - JTT
      -- Validem el limit del tramitador contra el import del pagament segons el parametre VALIDARLIMTRAMITADOR
      -- Per les operacions d'alta de pagament (v_numdet = 0) tenim en compte el parametre per fer la validaciÃ³ o no
      -- per la resta d'operacions es valida sempre es valida el limit del tramitador
      vpasexec := 2;

      -- Per determinar si es una operaciÃ³ d'alta de pagament mirem si tenim el detall del pagament.
      IF psidepag IS NOT NULL
      THEN
         SELECT COUNT(*)
           INTO v_nnumdet
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag;
      ELSE
         v_nnumdet := 0;
      END IF;

      vpasexec := 3;

      IF (v_nnumdet > 0) OR
         (v_nnumdet = 0 AND NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                              'VALIDARLIMTRAMITADOR'),
                                1) = 1)
      THEN
         vpasexec := 4;
         -- Validacio del limit del tramitador

         -- Bug 27514/147806 - 04/07/2013 - AMC
         vnumerr := pac_md_siniestros.f_get_limite_tramitador(vctramitad,
                                                              pac_md_common.f_get_cxtempresa,
                                                              NULL, --ramo
                                                              vgobsiniestro.ccausin,
                                                              vgobsiniestro.cmotsin,
                                                              vilimite,
                                                              mensajes);

         --Fi Bug 27514/149320 - 17/07/2013 - AMC
         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         -- Bug 27514/149698 - 24/07/2013 - AMC
         IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                              'MULTIMONEDA'),
                0) = 1
         THEN
            vmoneda := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                                             'MONEDAEMP'));

            IF vmoneda <> pcmonres
            THEN
               v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(pcmonres,
                                                                  vmoneda);
               vtasa     := pac_eco_tipocambio.f_cambio(pcmonres,
                                                        vmoneda,
                                                        v_fcambio);
               visinret  := pisinret * vtasa;
            ELSE
               visinret := pisinret;
            END IF;
         ELSE
            visinret := pisinret;
         END IF;

         IF vilimite < NVL(visinret, 0)
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9903735);
            RAISE e_object_error;
         END IF;
      END IF;

      vpasexec := 5;

      -- Fi Bug 29804

      -- Fi Bug 27514/147806 - 04/07/2013 - AMC
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC

      --passarem el count per fer una simulaciÃ³ del sidepag, serÃ  fictici pels objectes
      IF pctippag = 2
      THEN
         -- pagos-->ctippag = 2
         -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
         IF vgobsiniestro.tramitaciones IS NOT NULL AND
            vgobsiniestro.tramitaciones.count > 0
         THEN
            FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
            LOOP
               IF vgobsiniestro.tramitaciones.exists(i)
               THEN
                  IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
                  THEN
                     /*  IF psidepag IS NULL THEN
                                       vsidepag := vgobsiniestro.tramitaciones(i).pagos.COUNT;
                                    END IF;
                     */
                     IF psidepag IS NOT NULL
                     THEN
                        IF vgobsiniestro.tramitaciones(i).pagos IS NOT NULL
                        THEN
                           FOR j IN vgobsiniestro.tramitaciones(i)
                                    .pagos.first .. vgobsiniestro.tramitaciones(i)
                                                    .pagos.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).pagos(j)
                               .sidepag = psidepag AND
                                 vgobsiniestro.tramitaciones(i).pagos(j)
                                 .ntramit = pntramit
                              THEN
                                 -- Si el trobem, el modifiquem
                                 IF pcultpag IS NULL
                                 THEN
                                    vcultpag := vgobsiniestro.tramitaciones(i).pagos(j)
                                                .cultpag;
                                 ELSE
                                    vcultpag := pcultpag;
                                 END IF;

                                 --                                 p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                                 --                                             vparam || 'ctippag=2-1',
                                 --                                             vcultpag || ' - ' || pcultpag);
                                 vnumerr     := pac_md_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                                psidepag,
                                                                                                pnsinies,
                                                                                                pntramit,
                                                                                                pctipdes,
                                                                                                pctippag,
                                                                                                pcconpag,
                                                                                                pccauind,
                                                                                                pcforpag,
                                                                                                pfordpag,
                                                                                                pctipban,
                                                                                                pcbancar,
                                                                                                pcmonres,
                                                                                                pisinret,
                                                                                                piconret,
                                                                                                ppretenc,
                                                                                                piretenc, -- ASN 24546
                                                                                                piiva,
                                                                                                pisuplid,
                                                                                                pifranq,
                                                                                                piresred,
                                                                                                piresrcm,
                                                                                                pcmonpag,
                                                                                                pisinretpag,
                                                                                                piconretpag,
                                                                                                piretencpag,
                                                                                                piivapag,
                                                                                                pisuplidpag,
                                                                                                pifranqpag,
                                                                                                pfcambio,
                                                                                                pnfacref,
                                                                                                pffacref,
                                                                                                psperson,
                                                                                                vsidepagtemp,
                                                                                                vcultpag,
                                                                                                pncheque,
                                                                                                vgobsiniestro.tramitaciones(i)
                                                                                                .pagos(j),
                                                                                                mensajes,
                                                                                                -- BUG 19981 - 07/11/2011 - MDS
                                                                                                pireteiva,
                                                                                                pireteica,
                                                                                                pireteivapag,
                                                                                                pireteicapag,
                                                                                                piica,
                                                                                                piicapag,

                                                                                                -- Bug 22256/122456 - 28/09/2012 - AMC
                                                                                                pcagente,
                                                                                                pnpersrel,
                                                                                                pcdomici,
                                                                                                pctributacion,
                                                                                                pcbanco, --24708:NSS:10/10/2013
                                                                                                pcofici, --24708:NSS:10/10/2013
                                                                                                pcciudad, --29224:NSS:24/02/2014
                                                                                                pspersonpres,
                                                                                                ptobserva,
                                                                                                piotrosgas,
                                                                                                pibaseipoc,
                                                                                                piipoconsumo,
                                                                                                piotrosgaspag,
                                                                                                pibaseipocpag,
                                                                                                piipoconsumopag
                                                                                                );
                                 psidepagout := psidepag;

                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;
                              END IF;
                           END LOOP;
                        END IF;
                     ELSE
                        /* IF vgobsiniestro.tramitaciones(i).pagos IS NULL THEN
                           vgobsiniestro.tramitaciones(i).pagos := t_iax_sin_trami_pago();
                        END IF;*/

                        -- Bug 12604 - 08/01/2010 - AMC
                        IF vgobsiniestro.tramitaciones(i).pagos IS NULL
                        THEN
                           vgobsiniestro.tramitaciones(i).pagos := t_iax_sin_trami_pago();
                        END IF;

                        -- Bug 11847 - AMC
                        SELECT sidepag.nextval INTO vsidepag FROM dual;

                        -- vsidepagtemp := 1;
                        psidepagout := vsidepag;
                        --Fi Bug 12604 - 08/01/2010 - AMC
                        vpasexec := 7;
                        vgobsiniestro.tramitaciones(i).pagos.extend;
                        v_index := vgobsiniestro.tramitaciones(i).pagos.last;
                        vgobsiniestro.tramitaciones(i).pagos(v_index) := ob_iax_sin_trami_pago();

                        IF pcultpag IS NULL
                        THEN
                           vcultpag := vgobsiniestro.tramitaciones(i).pagos(v_index)
                                       .cultpag;
                        ELSE
                           vcultpag := pcultpag;
                        END IF;

                        --                        p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                        --                                    vparam || 'ctippag=2-2', vcultpag || ' - ' || pcultpag);
                        vnumerr := pac_md_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                   vsidepag,
                                                                                   pnsinies,
                                                                                   pntramit,
                                                                                   pctipdes,
                                                                                   pctippag,
                                                                                   pcconpag,
                                                                                   pccauind,
                                                                                   pcforpag,
                                                                                   pfordpag,
                                                                                   pctipban,
                                                                                   pcbancar,
                                                                                   pcmonres,
                                                                                   pisinret,
                                                                                   piconret,
                                                                                   ppretenc,
                                                                                   piretenc, -- ASN 24546
                                                                                   piiva,
                                                                                   pisuplid,
                                                                                   pifranq,
                                                                                   piresred,
                                                                                   piresrcm,
                                                                                   pcmonpag,
                                                                                   pisinretpag,
                                                                                   piconretpag,
                                                                                   piretencpag,
                                                                                   piivapag,
                                                                                   pisuplidpag,
                                                                                   pifranqpag,
                                                                                   pfcambio,
                                                                                   pnfacref,
                                                                                   pffacref,
                                                                                   psperson,
                                                                                   vsidepagtemp,
                                                                                   vcultpag,
                                                                                   pncheque,
                                                                                   vgobsiniestro.tramitaciones(i)
                                                                                   .pagos(v_index),
                                                                                   mensajes,
                                                                                   -- BUG 19981 - 07/11/2011 - MDS
                                                                                   pireteiva,
                                                                                   pireteica,
                                                                                   pireteivapag,
                                                                                   pireteicapag,
                                                                                   piica,
                                                                                   piicapag,
                                                                                   -- Bug 22256/122456 - 28/09/2012 - AMC
                                                                                   pcagente,
                                                                                   pnpersrel,
                                                                                   pcdomici,
                                                                                   pctributacion,
                                                                                   pcbanco, --24708:NSS:10/10/2013
                                                                                   pcofici, --24708:NSS:10/10/2013
                                                                                   pcciudad, --29224:NSS:24/02/2014
                                                                                   pspersonpres,
                                                                                   ptobserva,
                                                                                   piotrosgas,
                                                                                   pibaseipoc,
                                                                                   piipoconsumo,
                                                                                   piotrosgaspag,
                                                                                   pibaseipocpag,
                                                                                   piipoconsumopag
                                                                                   );

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;

                        -- Bug 11847 - 23/11/2009 - AMC
                        vnumerr := pac_iax_siniestros.f_set_obj_sintram_movpagrecob(pntramit,
                                                                                    vsidepag,
                                                                                    NULL,
                                                                                    0,
                                                                                    NULL,
                                                                                    1, -- IAXIS-7731 19/12/2019
                                                                                    NULL,
                                                                                    pctippag,
                                                                                    0,
                                                                                    0, --Bug:19601 - 13/10/2011 - JMC
                                                                                    0,
                                                                                    mensajes);

                        --Fi Bug 11847 - 23/11/2009 - AMC
                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END LOOP;
         END IF;
      ELSIF pctippag = 7
      THEN
         --recobros ctippag = 7
         -- Bug 22044 - APD - 02/05/2012 -se aÃ±ade el IF antes del FOR
         IF vgobsiniestro.tramitaciones IS NOT NULL AND
            vgobsiniestro.tramitaciones.count > 0
         THEN
            FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
            LOOP
               IF vgobsiniestro.tramitaciones.exists(i)
               THEN
                  IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
                  THEN
                     /* IF psidepag IS NULL THEN
                                       vsidepag := vgobsiniestro.tramitaciones(i).recobros.COUNT;
                                    END IF;
                     */
                     IF psidepag IS NOT NULL
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .recobros IS NOT NULL
                        THEN
                           FOR j IN vgobsiniestro.tramitaciones(i)
                                    .recobros.first .. vgobsiniestro.tramitaciones(i)
                                                       .recobros.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).recobros(j)
                               .sidepag = psidepag AND
                                 vgobsiniestro.tramitaciones(i).recobros(j)
                                 .ntramit = pntramit
                              THEN
                                 -- Si el trobem, el modifiquem
                                 IF pcultpag IS NULL
                                 THEN
                                    vcultpag := vgobsiniestro.tramitaciones(i).recobros(j)
                                                .cultpag;
                                 ELSE
                                    vcultpag := pcultpag;
                                 END IF;

                                 --                                 p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                                 --                                             vparam || 'ctippag=7-1',
                                 --                                             vcultpag || ' - ' || pcultpag);
                                 vnumerr     := pac_md_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                                psidepag,
                                                                                                pnsinies,
                                                                                                pntramit,
                                                                                                pctipdes,
                                                                                                pctippag,
                                                                                                pcconpag,
                                                                                                pccauind,
                                                                                                pcforpag,
                                                                                                pfordpag,
                                                                                                pctipban,
                                                                                                pcbancar,
                                                                                                pcmonres,
                                                                                                pisinret,
                                                                                                piconret,
                                                                                                ppretenc,
                                                                                                piretenc, -- ASN 24546
                                                                                                piiva,
                                                                                                pisuplid,
                                                                                                pifranq,
                                                                                                piresred,
                                                                                                piresrcm,
                                                                                                pcmonpag,
                                                                                                pisinretpag,
                                                                                                piconretpag,
                                                                                                piretencpag,
                                                                                                piivapag,
                                                                                                pisuplidpag,
                                                                                                pifranqpag,
                                                                                                pfcambio,
                                                                                                pnfacref,
                                                                                                pffacref,
                                                                                                psperson,
                                                                                                vsidepagtemp,
                                                                                                vcultpag,
                                                                                                pncheque,
                                                                                                vgobsiniestro.tramitaciones(i)
                                                                                                .recobros(j),
                                                                                                mensajes,
                                                                                                -- BUG 19981 - 07/11/2011 - MDS
                                                                                                pireteiva,
                                                                                                pireteica,
                                                                                                pireteivapag,
                                                                                                pireteicapag,
                                                                                                piica,
                                                                                                piicapag,
                                                                                                -- Bug 22256/122456 - 28/09/2012 - AMC
                                                                                                pcagente,
                                                                                                pnpersrel,
                                                                                                pcdomici,
                                                                                                pctributacion,
                                                                                                pcbanco, --24708:NSS:10/10/2013
                                                                                                pcofici, --24708:NSS:10/10/2013
                                                                                                pcciudad, --29224:NSS:24/02/2014
                                                                                                pspersonpres,
                                                                                                ptobserva,
                                                                                                piotrosgas,
                                                                                                pibaseipoc,
                                                                                                piipoconsumo,
                                                                                                piotrosgaspag,
                                                                                                pibaseipocpag,
                                                                                                piipoconsumopag
                                                                                                );
                                 psidepagout := psidepag;

                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;
                              END IF;
                           END LOOP;
                        END IF;
                     ELSE
                        /*IF vgobsiniestro.tramitaciones(i).recobros IS NULL THEN
                           vgobsiniestro.tramitaciones(i).recobros := t_iax_sin_trami_pago();
                        END IF;*/

                        -- Bug 12604 - 08/01/2010 - AMC
                        IF vgobsiniestro.tramitaciones(i).recobros IS NULL
                        THEN
                           vgobsiniestro.tramitaciones(i).recobros := t_iax_sin_trami_pago();
                        END IF;

                        -- Bug 11847 - AMC
                        SELECT sidepag.nextval INTO vsidepag FROM dual;

                        --vsidepagtemp := 1;
                        psidepagout := vsidepag;
                        --Fi Bug 12604 - 08/01/2010 - AMC
                        vpasexec := 7;
                        vgobsiniestro.tramitaciones(i).recobros.extend;
                        v_index := vgobsiniestro.tramitaciones(i)
                                   .recobros.last;
                        vgobsiniestro.tramitaciones(i).recobros(v_index) := ob_iax_sin_trami_pago();

                        IF pcultpag IS NULL
                        THEN
                           vcultpag := vgobsiniestro.tramitaciones(i).recobros(v_index)
                                       .cultpag;
                        ELSE
                           vcultpag := pcultpag;
                        END IF;

                        --                        p_tab_error(f_sysdate, f_user, vobjectname, vpasexec,
                        --                                    vparam || 'ctippag=7-2', vcultpag || ' - ' || pcultpag);
                        vnumerr := pac_md_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                   vsidepag,
                                                                                   pnsinies,
                                                                                   pntramit,
                                                                                   pctipdes,
                                                                                   pctippag,
                                                                                   pcconpag,
                                                                                   pccauind,
                                                                                   pcforpag,
                                                                                   pfordpag,
                                                                                   pctipban,
                                                                                   pcbancar,
                                                                                   pcmonres,
                                                                                   pisinret,
                                                                                   piconret,
                                                                                   ppretenc,
                                                                                   piretenc, -- ASN 24546
                                                                                   piiva,
                                                                                   pisuplid,
                                                                                   pifranq,
                                                                                   piresred,
                                                                                   piresrcm,
                                                                                   pcmonpag,
                                                                                   pisinretpag,
                                                                                   piconretpag,
                                                                                   piretencpag,
                                                                                   piivapag,
                                                                                   pisuplidpag,
                                                                                   pifranqpag,
                                                                                   pfcambio,
                                                                                   pnfacref,
                                                                                   pffacref,
                                                                                   psperson,
                                                                                   vsidepagtemp,
                                                                                   vcultpag,
                                                                                   pncheque,
                                                                                   vgobsiniestro.tramitaciones(i)
                                                                                   .recobros(v_index),
                                                                                   mensajes,
                                                                                   -- BUG 19981 - 07/11/2011 - MDS
                                                                                   pireteiva,
                                                                                   pireteica,
                                                                                   pireteivapag,
                                                                                   pireteicapag,
                                                                                   piica,
                                                                                   piicapag,
                                                                                   -- Bug 22256/122456 - 28/09/2012 - AMC
                                                                                   pcagente,
                                                                                   pnpersrel,
                                                                                   pcdomici,
                                                                                   pctributacion,
                                                                                   pcbanco, --24708:NSS:10/10/2013
                                                                                   pcofici, --24708:NSS:10/10/2013
                                                                                   pcciudad, --29224:NSS:24/02/2014
                                                                                   pspersonpres,
                                                                                   ptobserva,
                                                                                   piotrosgas,
                                                                                   pibaseipoc,
                                                                                   piipoconsumo,
                                                                                   piotrosgaspag,
                                                                                   pibaseipocpag,
                                                                                   piipoconsumopag
                                                                                   );

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;

                        -- Bug 11847 - 23/11/2009 - AMC
                        vnumerr := pac_iax_siniestros.f_set_obj_sintram_movpagrecob(pntramit,
                                                                                    vsidepag,
                                                                                    NULL,
                                                                                    0,
                                                                                    NULL,
                                                                                    0,
                                                                                    NULL,
                                                                                    pctippag,
                                                                                    0,
                                                                                    0,
                                                                                    0, --Bug:19601 - 13/10/2011 - JMC
                                                                                    mensajes);

                        -- Bug 11847 - 23/11/2009 - AMC
                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END LOOP;
         END IF;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte

      -- Bug 32781 - 15/09/2014 - JTT: Corregimos el bug 25537 incluyendo la llamada a recuperar el objeto
      -- dentro de la condicion 'CONTRAVALOR_ACTUAL' (parametro que solo usa actualmente RSA). Tenemos que recuperar el objeto una vez se ha actualizado la BDD.
      -- BUG 25537 - FAL - 11/04/2014. Ya ejecuta f_set_tramitaciones desde F_SET_OBJ_SINTRAM_MOVPAGRECOB. Se evita esta llamada si calcula contravalor a fecha actual porque en esta llamada el movimiento de pago no Ã©s todavia el actual.
      IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa(),
                                           'CONTRAVALOR_ACTUAL'),
             0) = 0
      THEN
         vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                          pnsinies,
                                                          NVL(psidepag,
                                                              vsidepag), -- BUG 25537 - FAL - 04/02/2014. Se pasa psidepag/vsidepag en funciÃ³n de si existe o se crea el pago nuevo
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         COMMIT;
         -- FI BUG 25537 - FAL - 11/04/2014
         vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                          vgobsiniestro.tramitaciones,
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      -- Fi Bug 32781

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_obj_sintrami_pago_recob;

   /*************************************************************************
   funciÃ³n RETORN el pagament o el recobrament de lobjecte
         psseguro IN NUMBER,
         pnsinies IN VARCHAR2,
         pntramit IN NUMBER,
         pctippag IN NUMBER,
             *************************************************************************/
   FUNCTION f_get_obj_sintramipagorecob(psseguro IN NUMBER,
                                        pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pctippag IN NUMBER,
                                        psidepag IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_pago IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramipagorecob';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_index     NUMBER(8);
      v_pagorecob ob_iax_sin_trami_pago := ob_iax_sin_trami_pago();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         vpasexec := 3;

         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 4;

               IF pctippag = 2
               THEN
                  IF vgobsiniestro.tramitaciones(i)
                   .pagos IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).pagos.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                            .pagos.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).pagos(j)
                         .sidepag = psidepag AND
                           vgobsiniestro.tramitaciones(i).pagos(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).pagos(j)
                           .ctippag = pctippag
                        THEN
                           -- Si el trobem, el modifiquem
                           vpasexec    := 7;
                           v_pagorecob := vgobsiniestro.tramitaciones(i)
                                          .pagos(j);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;
                        END IF;
                     END LOOP;
                  END IF;
               ELSIF pctippag = 7
               THEN
                  IF vgobsiniestro.tramitaciones(i)
                   .recobros IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).recobros.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i).recobros.first .. vgobsiniestro.tramitaciones(i)
                                                                               .recobros.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).recobros(j)
                         .sidepag = psidepag AND
                           vgobsiniestro.tramitaciones(i).recobros(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).recobros(j)
                           .ctippag = pctippag
                        THEN
                           -- Si el trobem, el modifiquem
                           vpasexec    := 7;
                           v_pagorecob := vgobsiniestro.tramitaciones(i)
                                          .recobros(j);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;
                        END IF;
                     END LOOP;
                  END IF;
               END IF;

               vpasexec := 8;
            END IF;
         END IF;
      END LOOP;

      vpasexec := 6;
      RETURN v_pagorecob;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_obj_sintramipagorecob;

   /*************************************************************************
   funciÃ³n graba en una variable global de la capa IAX los valores del objeto
   ob_iax_siniestros.tramitaciones.movpagos
      sidepag        NUMBER(8),   --Secuencia Identificador Pago
      nmovpag        NUMBER(4),   --NÃºmero Movimiento Pago
      cestpag        NUMBER(1),   --CÃ³digo Estado Pago
      testpag        VARCHAR2(100),--Desc. Estado Pago
      fefepag        DATE,   --Fecha Efecto Pago
      cestval        NUMBER(1),   --CÃ³digo Estado ValidaciÃ³n Pago
      testval        VARCHAR2(100),--Desc. Estado ValidaciÃ³n Pago
      fcontab        DATE,   --Fecha Contabilidad
           cestpagant     NUMBER(1),   --CÃ³digo Estado Pago anterior

           Bug 13312 - 08/03/2010 - AMC - Se aÃ±ade el parametro cestpagant
             *************************************************************************/
   FUNCTION f_set_obj_sintram_movpagrecob(pntramit    IN NUMBER,
                                          psidepag    IN NUMBER,
                                          pnmovpag    IN NUMBER,
                                          pcestpag    IN NUMBER,
                                          pfefepag    IN DATE,
                                          pcestval    IN NUMBER,
                                          pfcontab    IN DATE,
                                          pctippag    IN NUMBER,
                                          pcestpagant IN NUMBER,
                                          pcsubpag    IN NUMBER, --Bug:19601 - 13/10/2011 - JMC
                                          pcsubpagant IN NUMBER,
                                          mensajes    OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_obj_sintrami_movpagrecob';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psidepag: ' || psidepag ||
                                   ' - cestval: ' || pcestval ||
                                   ' - pctippag: ' || pnmovpag ||
                                   ' - pctipdes: ' || pcestpag ||
                                   ' - pcsubpag: ' || pcsubpag ||
                                   ' - pcsubpagant: ' || pcsubpagant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnmovpag    NUMBER(8);
      v_index     NUMBER(8);
      vsuma       NUMBER;
      obreserva   ob_iax_sin_trami_reserva := ob_iax_sin_trami_reserva();
      vnmovres    NUMBER;
      vimputar    NUMBER;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psidepag IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 1;

      --passarem el count per fer una simulaciÃ³ del sidepag, serÃ  fictici pels objectes
      IF pctippag = 2
      THEN
         -- pagos-->sidepag = 2
         vpasexec := 2;

         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               vpasexec := 3;

               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;

                  FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                         .pagos.last
                  LOOP
                     IF vgobsiniestro.tramitaciones(i).pagos(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).pagos(j)
                        .ntramit = pntramit
                     THEN
                        -- Si el trobem, el modifiquem
                        vpasexec := 5;

                        IF pnmovpag IS NOT NULL AND
                           vgobsiniestro.tramitaciones(i).pagos(j)
                          .movpagos.count > 0
                        THEN
                           vpasexec := 6;

                           FOR n IN vgobsiniestro.tramitaciones(i).pagos(j)
                                    .movpagos.first .. vgobsiniestro.tramitaciones(i).pagos(j)
                                                       .movpagos.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).pagos(j).movpagos(n)
                               .nmovpag = pnmovpag AND
                                 vgobsiniestro.tramitaciones(i).pagos(j).movpagos(n)
                                 .sidepag = psidepag
                              THEN
                                 vnumerr := pac_md_siniestros.f_set_obj_sintram_movpagrecob(psidepag,
                                                                                            pnmovpag,
                                                                                            pcestpag,
                                                                                            pfefepag,
                                                                                            pcestval,
                                                                                            pfcontab,
                                                                                            pcestpagant,
                                                                                            pcsubpag,
                                                                                            pcsubpagant, -- Bug:19601 - 13/10/2011 - JMC
                                                                                            vgobsiniestro.tramitaciones(i).pagos(j)
                                                                                            .movpagos(n),
                                                                                            mensajes);

                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;
                              END IF;
                           END LOOP;
                        ELSE
                           vpasexec := 7;
                           vnmovpag := 0;

                           IF vgobsiniestro.tramitaciones(i).pagos(j)
                            .movpagos IS NULL
                           THEN
                              vgobsiniestro.tramitaciones(i).pagos(j).movpagos := t_iax_sin_trami_movpago();
                           ELSIF vgobsiniestro.tramitaciones(i).pagos(j)
                            .movpagos.count > 0
                           THEN
                              vnmovpag := NVL(vgobsiniestro.tramitaciones(i).pagos(j).movpagos(vgobsiniestro.tramitaciones(i).pagos(j).movpagos.last)
                                              .nmovpag,
                                              0) + 1;
                           END IF;

                           vpasexec := 7;
                           vgobsiniestro.tramitaciones(i).pagos(j).movpagos.extend;
                           v_index := vgobsiniestro.tramitaciones(i).pagos(j)
                                      .movpagos.last;
                           vgobsiniestro.tramitaciones(i).pagos(j).movpagos(v_index) := ob_iax_sin_trami_movpago();
                           vpasexec := 8;
                           vnumerr := pac_md_siniestros.f_set_obj_sintram_movpagrecob(psidepag,
                                                                                      vnmovpag,
                                                                                      pcestpag,
                                                                                      pfefepag,
                                                                                      pcestval,
                                                                                      pfcontab,
                                                                                      pcestpagant,
                                                                                      pcsubpag,
                                                                                      pcsubpagant, --Bug:19601 - 13/10/2011 - JMC
                                                                                      vgobsiniestro.tramitaciones(i).pagos(j)
                                                                                      .movpagos(v_index),
                                                                                      mensajes);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;
                        END IF;

                        vpasexec := 9;

                        -- Bug 11848 - 23/11/2009 - AMC
                        IF pcestpag = 8 -- Anulado
                        THEN
                           vpasexec := 14;
                           -- ini bug 0022514
                           vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                                            vgobsiniestro.nsinies,
                                                                            psidepag, -- BUG 25537 - FAL - 04/02/2014. Se pasa psidepag (pago a tratar) como sidepag
                                                                            mensajes);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;

                           COMMIT;
                           vpasexec := 10;

                           -- fin bug 0022514
                           FOR n IN
                           --Bug 28384:NSS:14/11/2013. Se pueden anular pagos sin detalle, por eso se aÃ±ade NVL para que
                           --no entre en el bucle.
                            NVL(vgobsiniestro.tramitaciones(i).pagos(j)
                                .pagogar.first,
                                0) .. NVL(vgobsiniestro.tramitaciones(i).pagos(j)
                                          .pagogar.last,
                                          -1)
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                               .sidepag = psidepag
                              THEN
                                 vnmovres := 1;
                                 vpasexec := 11;

                                 FOR res IN vgobsiniestro.tramitaciones(i)
                                            .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                               .reservas.last
                                 LOOP
                                    -- 26108 ini
                                    /*
                                    IF vgobsiniestro.tramitaciones(i).reservas(res).nmovres >
                                                                                      vnmovres
                                       AND vgobsiniestro.tramitaciones(i).reservas(res).ctipres =
                                             vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).reserva.ctipres
                                       AND((vgobsiniestro.tramitaciones(i).reservas(res).cgarant =
                                               vgobsiniestro.tramitaciones(i).pagos(j).pagogar
                                                                                             (n).reserva.cgarant
                                            AND vgobsiniestro.tramitaciones(i).pagos(j).pagogar
                                                                                             (n).reserva.ctipres =
                                                                                              1)
                                           OR vgobsiniestro.tramitaciones(i).pagos(j).pagogar
                                                                                             (n).reserva.ctipres <>
                                                                                              1) THEN
                                     */
                                    IF vgobsiniestro.tramitaciones(i).reservas(res)
                                     .nmovres > vnmovres AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .ctipres = vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                       .reserva.ctipres AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .cgarant,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                      .reserva.cgarant,
                                                      -1) AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .ctipgas,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                      .reserva.ctipgas,
                                                      -1) AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .cmonres = vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                       .reserva.cmonres
                                    THEN
                                       -- 26108 fin
                                       vnmovres := vgobsiniestro.tramitaciones(i).reservas(res)
                                                   .nmovres;
                                    END IF;
                                 END LOOP;

                                 vpasexec := 12;

                                 FOR res IN vgobsiniestro.tramitaciones(i)
                                            .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                               .reservas.last
                                 LOOP
                                    -- 26108 ini
                                    /*
                                    IF vgobsiniestro.tramitaciones(i).reservas(res).ctipres =
                                          vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).reserva.ctipres
                                       AND((vgobsiniestro.tramitaciones(i).reservas(res).cgarant =
                                               vgobsiniestro.tramitaciones(i).pagos(j).pagogar
                                                                                             (n).reserva.cgarant
                                            AND vgobsiniestro.tramitaciones(i).pagos(j).pagogar
                                                                                             (n).reserva.ctipres =
                                                                                              1)
                                           OR vgobsiniestro.tramitaciones(i).pagos(j).pagogar
                                                                                             (n).reserva.ctipres <>
                                                                                              1)
                                       AND vgobsiniestro.tramitaciones(i).reservas(res).nmovres =
                                                                                       vnmovres THEN   -- Si el trobem, el modifiquem

                                      */
                                    IF vgobsiniestro.tramitaciones(i).reservas(res)
                                     .ctipres = vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                       .reserva.ctipres AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .cgarant,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                      .reserva.cgarant,
                                                      -1) AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .ctipgas,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                      .reserva.ctipgas,
                                                      -1) AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .cmonres = vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                       .reserva.cmonres AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .nmovres = vnmovres
                                    THEN
                                       -- 26108 fin
                                       vpasexec           := 13;
                                       obreserva          := vgobsiniestro.tramitaciones(i)
                                                             .reservas(res);
                                       obreserva.ireserva := obreserva.ireserva + vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                            .isinret;
                                       vsuma              := -nvl(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                                  .isinret,
                                                                  0);
                                       -- Bug 11945 - 16/12/2009 - AMC
                                       vnumerr := pac_iax_siniestros.f_set_objeto_sintramireserva(obreserva.nsinies,
                                                                                                  obreserva.ntramit,
                                                                                                  obreserva.ctipres,
                                                                                                  obreserva.ttipres,
                                                                                                  obreserva.nmovres + 1,
                                                                                                  obreserva.cgarant,
                                                                                                  obreserva.ccalres,
                                                                                                  f_sysdate,
                                                                                                  obreserva.cmonres,
                                                                                                  obreserva.ireserva,
                                                                                                  vsuma,
                                                                                                  --obreserva.iingreso,
                                                                                                  NULL,
                                                                                                  --obreserva.irecobro,
                                                                                                  NULL,
                                                                                                  obreserva.icaprie,
                                                                                                  obreserva.ipenali,
                                                                                                  obreserva.fresini,
                                                                                                  obreserva.fresfin,
                                                                                                  obreserva.fultpag,
                                                                                                  psidepag,
                                                                                                  obreserva.sproces,
                                                                                                  obreserva.fcontab,
                                                                                                  obreserva.iprerec,
                                                                                                  obreserva.ctipgas,
                                                                                                  'PAGO',
                                                                                                  NULL,
                                                                                                  obreserva.ifranq, --Bug 27059 - 03/06/2013 - NSS
                                                                                                  obreserva.ndias, --Bug 27487/159742 - 26/11/2013 - NSS
                                                                                                  5, --cmovres --0031294/0174788: NSS:26/05/2014
                                                                                                  --obreserva.itotimp,   -- 24637/0147756:NSS:28/11/2013
                                                                                                  NULL, -- 24637/0147756:NSS:28/11/2013
                                                                                                  mensajes);

                                       --Fi Bug 11945 - 16/12/2009 - AMC
                                       IF vnumerr <> 0
                                       THEN
                                          RAISE e_object_error;
                                       END IF;

                                       vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).reserva := obreserva;
                                    END IF;
                                 END LOOP;
                              END IF;
                           END LOOP;
                        END IF;
                        --Fi Bug 11848 - 23/11/2009 - AMC
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;
      ELSIF pctippag = 7
      THEN
         vpasexec := 14;

         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               vpasexec := 15;

               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 16;

                  FOR j IN vgobsiniestro.tramitaciones(i).recobros.first .. vgobsiniestro.tramitaciones(i)
                                                                            .recobros.last
                  LOOP
                     IF vgobsiniestro.tramitaciones(i).recobros(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).recobros(j)
                        .ntramit = pntramit
                     THEN
                        -- Si el trobem, el modifiquem
                        vpasexec := 17;

                        IF pnmovpag IS NOT NULL AND
                           vgobsiniestro.tramitaciones(i).recobros(j)
                          .movpagos.count > 0
                        THEN
                           vpasexec := 18;

                           FOR n IN vgobsiniestro.tramitaciones(i).recobros(j)
                                    .movpagos.first .. vgobsiniestro.tramitaciones(i).recobros(j)
                                                       .movpagos.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).recobros(j).movpagos(n)
                               .nmovpag = pnmovpag AND
                                 vgobsiniestro.tramitaciones(i).recobros(j).movpagos(n)
                                 .sidepag = psidepag
                              THEN
                                 vnumerr := pac_md_siniestros.f_set_obj_sintram_movpagrecob(psidepag,
                                                                                            pnmovpag,
                                                                                            pcestpag,
                                                                                            pfefepag,
                                                                                            pcestval,
                                                                                            pfcontab,
                                                                                            pcestpagant,
                                                                                            pcsubpag,
                                                                                            pcsubpagant, --Bug:19601 - 13/10/2011 - JMC
                                                                                            vgobsiniestro.tramitaciones(i).recobros(j)
                                                                                            .movpagos(n),
                                                                                            mensajes);

                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;
                              END IF;
                           END LOOP;
                        ELSE
                           vpasexec := 19;
                           vnmovpag := 0;

                           IF vgobsiniestro.tramitaciones(i).recobros(j)
                            .movpagos IS NULL
                           THEN
                              vgobsiniestro.tramitaciones(i).recobros(j).movpagos := t_iax_sin_trami_movpago();
                           ELSIF vgobsiniestro.tramitaciones(i).recobros(j)
                            .movpagos.count > 0
                           THEN
                              vnmovpag := NVL(vgobsiniestro.tramitaciones(i).recobros(j).movpagos(vgobsiniestro.tramitaciones(i).recobros(j).movpagos.last)
                                              .nmovpag,
                                              0) + 1;
                           END IF;

                           vpasexec := 7;
                           vgobsiniestro.tramitaciones(i).recobros(j).movpagos.extend;
                           v_index := vgobsiniestro.tramitaciones(i).recobros(j)
                                      .movpagos.last;
                           vgobsiniestro.tramitaciones(i).recobros(j).movpagos(v_index) := ob_iax_sin_trami_movpago();
                           vnumerr := pac_md_siniestros.f_set_obj_sintram_movpagrecob(psidepag,
                                                                                      vnmovpag,
                                                                                      pcestpag,
                                                                                      pfefepag,
                                                                                      pcestval,
                                                                                      pfcontab,
                                                                                      pcestpagant,
                                                                                      pcsubpag,
                                                                                      pcsubpagant, --Bug:19601 - 13/10/2011 - JMC
                                                                                      vgobsiniestro.tramitaciones(i).recobros(j)
                                                                                      .movpagos(v_index),
                                                                                      mensajes);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;
                        END IF;

                        vpasexec := 20;

                        -- Bug 11848 - 23/11/2009 - AMC
                        IF pcestpag = 8 -- Anulado
                        THEN
                           vpasexec := 21;
                           vpasexec := 14;
                           -- ini bug 0022514
                           vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                                            vgobsiniestro.nsinies,
                                                                            psidepag, -- BUG 25537 - FAL - 04/02/2014. Se informa psidepag (el pago a tratar)
                                                                            mensajes);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;

                           COMMIT;
                           vpasexec := 22;

                           -- fin bug 0022514
                           FOR n IN vgobsiniestro.tramitaciones(i).recobros(j)
                                    .pagogar.first .. vgobsiniestro.tramitaciones(i).recobros(j)
                                                      .pagogar.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                               .sidepag = psidepag
                              THEN
                                 vnmovres := 1;

                                 FOR res IN vgobsiniestro.tramitaciones(i)
                                            .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                               .reservas.last
                                 LOOP
                                    -- 26108 ini
                                    /*
                                          IF vgobsiniestro.tramitaciones(i).reservas(res).nmovres >
                                                                                            vnmovres
                                             AND vgobsiniestro.tramitaciones(i).reservas(res).ctipres =
                                                   vgobsiniestro.tramitaciones(i).recobros(j).pagogar
                                                                                                   (n).reserva.ctipres
                                             AND((vgobsiniestro.tramitaciones(i).reservas(res).cgarant =
                                                     vgobsiniestro.tramitaciones(i).recobros(j).pagogar
                                                                                                   (n).reserva.cgarant
                                                  AND vgobsiniestro.tramitaciones(i).reservas(res).ctipres =
                                                                                                    1)
                                                 OR vgobsiniestro.tramitaciones(i).reservas(res).ctipres <>
                                                                                                    1) THEN
                                    */
                                    vpasexec := 23;

                                    IF vgobsiniestro.tramitaciones(i).reservas(res)
                                     .nmovres > vnmovres AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .ctipres = vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                       .reserva.ctipres AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .cgarant,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                                      .reserva.cgarant,
                                                      -1) AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .ctipgas,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                                      .reserva.ctipgas,
                                                      -1) AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .cmonres = vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                       .reserva.cmonres
                                    THEN
                                       -- 26108 fin
                                       vnmovres := vgobsiniestro.tramitaciones(i).reservas(res)
                                                   .nmovres;
                                    END IF;
                                 END LOOP;

                                 vpasexec := 24;

                                 FOR res IN vgobsiniestro.tramitaciones(i)
                                            .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                               .reservas.last
                                 LOOP
                                    -- 26108 ini
                                    /*
                                    IF vgobsiniestro.tramitaciones(i).reservas(res).ctipres =
                                          vgobsiniestro.tramitaciones(i).recobros(j).pagogar
                                                                                            (n).reserva.ctipres
                                       AND((vgobsiniestro.tramitaciones(i).reservas(res).cgarant =
                                               vgobsiniestro.tramitaciones(i).recobros(j).pagogar
                                                                                             (n).reserva.cgarant
                                            AND vgobsiniestro.tramitaciones(i).reservas(res).ctipres =
                                                                                              1)
                                           OR vgobsiniestro.tramitaciones(i).reservas(res).ctipres <>
                                                                                              1)
                                       AND vgobsiniestro.tramitaciones(i).reservas(res).nmovres =
                                                                                       vnmovres THEN

                                     */
                                    vpasexec := 25;

                                    IF vgobsiniestro.tramitaciones(i).reservas(res)
                                     .ctipres = vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                       .reserva.ctipres AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .cgarant,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                                      .reserva.cgarant,
                                                      -1) AND
                                        NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                            .ctipgas,
                                            -1) = NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                                      .reserva.ctipgas,
                                                      -1) AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .cmonres = vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                       .reserva.cmonres AND
                                       vgobsiniestro.tramitaciones(i).reservas(res)
                                       .nmovres = vnmovres
                                    THEN
                                       -- 26108 fin
                                       -- Bug 12124 - 23/03/2010 - AMC
                                       vimputar  := pac_md_param.f_parempresa_nn('IMPUTA_RECOBRO',
                                                                                 mensajes);
                                       obreserva := vgobsiniestro.tramitaciones(i)
                                                    .reservas(res);
                                       vpasexec  := 26;

                                       IF NVL(vimputar, 0) = 1
                                       THEN
                                          --Reserva Pendiente --32097:NSS:08/07/2014
                                          obreserva.ireserva := obreserva.ireserva - vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                                               .isinret;
                                       END IF;

                                       -- Para Coste Siniestro la reserva no se tiene que modificar
                                       -- Fi Bug 12124 - 23/03/2010 - AMC
                                       vsuma := -nvl(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                                                     .isinret,
                                                     0);
                                       -- Bug 11945 - 16/12/2009 - AMC
                                       vnumerr := pac_iax_siniestros.f_set_objeto_sintramireserva(obreserva.nsinies,
                                                                                                  obreserva.ntramit,
                                                                                                  obreserva.ctipres,
                                                                                                  obreserva.ttipres,
                                                                                                  obreserva.nmovres + 1,
                                                                                                  obreserva.cgarant,
                                                                                                  obreserva.ccalres,
                                                                                                  f_sysdate,
                                                                                                  obreserva.cmonres,
                                                                                                  obreserva.ireserva,
                                                                                                  NULL,

                                                                                                  --obreserva.iingreso,
                                                                                                  NULL,
                                                                                                  --obreserva.irecobro,
                                                                                                  vsuma,
                                                                                                  obreserva.icaprie,
                                                                                                  obreserva.ipenali,
                                                                                                  obreserva.fresini,
                                                                                                  obreserva.fresfin,
                                                                                                  obreserva.fultpag,
                                                                                                  psidepag,
                                                                                                  obreserva.sproces,
                                                                                                  obreserva.fcontab,
                                                                                                  obreserva.iprerec,
                                                                                                  obreserva.ctipgas,
                                                                                                  'RECO',
                                                                                                  NULL,
                                                                                                  obreserva.ifranq, --Bug 27059 - 03/06/2013 - NSS
                                                                                                  obreserva.ndias, --Bug 27487 - 26/11/2013 - NSS
                                                                                                  23, --cmovres --0031294/0174788: NSS:26/05/2014
                                                                                                  --obreserva.itotimp,   -- 24637/0147756:NSS:28/11/2013
                                                                                                  NULL, -- 24637/0147756:NSS:28/11/2013
                                                                                                  mensajes);

                                       --Fi Bug 11945 - 16/12/2009 - AMC
                                       IF vnumerr <> 0
                                       THEN
                                          RAISE e_object_error;
                                       END IF;

                                       vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n).reserva := obreserva;
                                    END IF;
                                 END LOOP;
                              END IF;
                           END LOOP;
                        END IF;
                        --Fi Bug 11848 - 23/11/2009 - AMC
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;
      END IF;

      vpasexec := 27;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte

      -- Bug 13312 - 19/03/2010 - AMC - Si es un movimiento de anulaciÃ³n al actualizar la reserva ya se baja a BB.DD
      IF pcestpag <> 8
      THEN
         vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                          vgobsiniestro.nsinies,
                                                          psidepag, -- BUG 25537 - FAL - 04/02/2014. Se pasa psidepag (pago a tratar) como sidepag
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         COMMIT;
      END IF;

      vpasexec := 28;

      --BUG 19887 - JRB - 27/12/11 - GestiÃ³n de cobro de siniestros sÃ³lo para el siniestro en cuestiÃ³n
      IF (pcestpag = 1 AND pcestval = 1) OR
         pcestpag = 8
      THEN
         vnumerr := pac_md_siniestros.f_gestiona_cobpag(psidepag,
                                                        NVL(pnmovpag,
                                                            vnmovpag),
                                                        pcestpag,
                                                        pfefepag,
                                                        pfcontab,
                                                        mensajes);
      END IF;

      IF vnumerr <> 0
      THEN
         ROLLBACK;
         RAISE e_object_error;
      ELSE
         COMMIT;
      END IF;

      vpasexec := 29;

      -- ini BUG 0025030 - 12/12/2012 - JMF
      DECLARE
         vnsinies sin_siniestro.nsinies%TYPE := vgobsiniestro.nsinies;
         v_index  NUMBER;
         vnumerr  NUMBER;

         CURSOR c1 IS
            SELECT *
              FROM sin_movsiniestro
             WHERE nsinies = vnsinies
             ORDER BY nmovsin DESC; -- 34512.#6.
      BEGIN
         vgobsiniestro.movimientos := NULL;
         vgobsiniestro.movimientos := t_iax_sin_movsiniestro();

         FOR f1 IN c1
         LOOP
            vgobsiniestro.movimientos.extend;
            v_index := vgobsiniestro.movimientos.last;
            vgobsiniestro.movimientos(v_index) := ob_iax_sin_movsiniestro();
            vnumerr := pac_md_siniestros.f_set_objeto_movsiniestro(f1.nsinies,
                                                                   f1.nmovsin,
                                                                   f1.cestsin,
                                                                   f1.festsin,
                                                                   f1.ccauest,
                                                                   f1.cunitra,
                                                                   f1.ctramitad,
                                                                   vgobsiniestro.movimientos(v_index),
                                                                   mensajes);
         END LOOP;
      END;

      vpasexec := 30;
      -- fin BUG 0025030 - 12/12/2012 - JMF
      vnumerr := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 31;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_obj_sintram_movpagrecob;

   /*************************************************************************
   funciÃ³n RETORN el ultima momviment del pagament o el recobrament de lobjecte
         psseguro IN NUMBER,
         pnsinies IN VARCHAR2,
         pntramit IN NUMBER,
         pctippag IN NUMBER,
             *************************************************************************/
   FUNCTION f_get_obj_ultim_movpagorecob(psseguro IN NUMBER,
                                         pnsinies IN VARCHAR2,
                                         pntramit IN NUMBER,
                                         pctippag IN NUMBER,
                                         psidepag IN NUMBER,
                                         mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_movpago IS
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_obj_ultim_movpagorecob';
      vparam         VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                      ' - pntramit: ' || pntramit;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      v_index        NUMBER(8);
      v_movpagorecob ob_iax_sin_trami_movpago := ob_iax_sin_trami_movpago();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         vpasexec := 3;

         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 4;

               IF pctippag = 2
               THEN
                  IF vgobsiniestro.tramitaciones(i)
                   .pagos IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).pagos.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                            .pagos.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).pagos(j)
                         .sidepag = psidepag AND
                           vgobsiniestro.tramitaciones(i).pagos(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).pagos(j)
                           .ctippag = pctippag
                        THEN
                           -- Si el trobem, el modifiquem
                           vpasexec       := 7;
                           v_index        := vgobsiniestro.tramitaciones(i).pagos(j)
                                             .movpagos.last;
                           v_movpagorecob := vgobsiniestro.tramitaciones(i).pagos(j)
                                             .movpagos(v_index);
                        END IF;
                     END LOOP;
                  END IF;
               ELSIF pctippag = 7
               THEN
                  IF vgobsiniestro.tramitaciones(i)
                   .recobros IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).recobros.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i).recobros.first .. vgobsiniestro.tramitaciones(i)
                                                                               .recobros.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).recobros(j)
                         .sidepag = psidepag AND
                           vgobsiniestro.tramitaciones(i).recobros(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).recobros(j)
                           .ctippag = pctippag
                        THEN
                           -- Si el trobem, el modifiquem
                           vpasexec       := 7;
                           v_index        := vgobsiniestro.tramitaciones(i).recobros(j)
                                             .movpagos.last;
                           v_movpagorecob := vgobsiniestro.tramitaciones(i).recobros(j)
                                             .movpagos(v_index);

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;
                        END IF;
                     END LOOP;
                  END IF;
               END IF;

               vpasexec := 8;
            END IF;
         END IF;
      END LOOP;

      vpasexec := 6;
      RETURN v_movpagorecob;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_obj_ultim_movpagorecob;

   --INI BUG 31294/174788:NSS:20/05/2014
   --******Se vuelve a montar todo el proceso de alta y modificaciÃ³n detalle pago utilizando el objeto OB_IAX_SIN_TRAMI_PAGO_GAR******
   --******por lo tanto deja de utilizarse esta funciÃ³n para el alta del detalle del pago******

   --FunciÃ³n que se tiene que bajar a otro nivel. Debido a la urgencia se crea en esta capa sÃ³lo TEMPORALMENTE.
   --XPL 31/05/2010
   -- BUG 19981 - 07/11/2011 - MDS - AÃ±adir campos preteiva, preteica, ireteiva, ireteica, ireteivapag, ireteicapag, pica, iica, iicapag en la cabecera, insert
   /*
   FUNCTION f_set_sintram_pagrecobgar_temp(
      psseguro IN NUMBER,
      pntramit IN NUMBER,
      pctippag IN NUMBER,
      psidepag IN NUMBER,
      pctipres IN NUMBER,
      pnmovres IN NUMBER,
      pcgarant IN NUMBER,
      pfperini IN DATE,
      pfperfin IN DATE,
      pcmonres IN VARCHAR2,
      pisinret IN NUMBER,
      piiva IN NUMBER,
      pisuplid IN NUMBER,
      piretenc IN NUMBER,
      pifranq IN NUMBER,
      pcmonpag IN VARCHAR2,
      pisinretpag IN NUMBER,
      piivapag IN NUMBER,
      pisuplidpag IN NUMBER,
      piretencpag IN NUMBER,
      pifranqpag IN NUMBER,
      pfcambio IN DATE,
      piresred IN NUMBER,
      piresrcm IN NUMBER,
      ppiva IN NUMBER,
      ppretenc IN NUMBER,
      pcconpag IN NUMBER,
      pnorden IN NUMBER,
      mensajes OUT t_iax_mensajes,
      ppreteiva IN NUMBER DEFAULT NULL,
      ppreteica IN NUMBER DEFAULT NULL,
      pireteiva IN NUMBER DEFAULT NULL,
      pireteica IN NUMBER DEFAULT NULL,
      pireteivapag IN NUMBER DEFAULT NULL,
      pireteicapag IN NUMBER DEFAULT NULL,
      ppica IN NUMBER DEFAULT NULL,
      piica IN NUMBER DEFAULT NULL,
      piicapag IN NUMBER DEFAULT NULL,
      pctipgas IN NUMBER DEFAULT NULL,   -- 26108
      pciva_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
      pcretenc_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
      pcreteiva_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
      pcreteica_tipind IN NUMBER DEFAULT NULL)   --bug 24637/147756:NSS:03/03/2014
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_sintram_pagrecobgar_temp';
      vparam         VARCHAR2(500)
         := 'parÃ¡metros - psidepag: ' || psidepag || ' - pntramit: ' || pntramit
            || ' - pctipres: ' || pctipres || ' - pcgarant: ' || pcgarant || ' pcmonres: '
            || pcmonres || ' pnmovres: ' || pnmovres || ' pfperini: ' || pfperini
            || ' pfperfin: ' || pfperfin || ' pnorden: ' || pnorden || ' pciva_tipind: '
            || pciva_tipind || ' pcretenc_tipind: ' || pcretenc_tipind
            || ' pcreteiva_tipind: ' || pcreteiva_tipind || ' pcreteica_tipind: '
            || pcreteica_tipind;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      vnmovres       NUMBER(8);
      v_index        NUMBER(8);
      trobat         BOOLEAN := FALSE;
      obreserva      ob_iax_sin_trami_reserva := ob_iax_sin_trami_reserva();
      obpago         ob_iax_sin_trami_pago := ob_iax_sin_trami_pago();
      vsuma          NUMBER;
      vreservas      NUMBER;
      vsidepag       NUMBER;
      v_isinret      NUMBER;
      vireserva      NUMBER;
      vcestpag       NUMBER;
      vcestval       NUMBER;
      viretenc       NUMBER;
      viiva          NUMBER;
      visuplid       NUMBER;
      vifranq        NUMBER;
      vifranq_moncia sin_tramita_reserva.ifranq_moncia%TYPE;
      viresred       NUMBER;
      viresrcm       NUMBER;
      vicaprie       NUMBER;
      vipenali       NUMBER;
      vfresini       DATE;
      vfresfin       DATE;
      vfultpago      DATE;
      vsproces       NUMBER;
      vfcontab       DATE;
      viprerec       NUMBER;
      vccalres       NUMBER;
      vcmonres       VARCHAR2(4);
      vcont          NUMBER;
      vnorden        NUMBER;
      vttipag        VARCHAR2(10);
      vnmovres_cont  NUMBER;
      visinret       NUMBER;
      virecobro      NUMBER;
      vipago         NUMBER;
      vipago_ori     NUMBER;
      min_nmovres    NUMBER;
      virecobro_ori  NUMBER;
      dif            NUMBER := 0;
      vireserva_act  NUMBER := 0;
      vctipgas       NUMBER;
      -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
      v_ireteiva     sin_tramita_pago_gar.ireteiva%TYPE;
      v_ireteica     sin_tramita_pago_gar.ireteica%TYPE;
      v_iica         sin_tramita_pago_gar.iica%TYPE;
      v_cempres      seguros.cempres%TYPE;
      v_cmultimon    parempresas.nvalpar%TYPE;
      vndias         NUMBER;   --BUG 27487/159742:NSS:26/11/2013
      v_itotimp      NUMBER;   -- 24637/0147756:NSS:28/11/2013
      vsimplog       sin_imp_sap_log.simplog%TYPE;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psidepag IS NULL
         OR pctipres IS NULL THEN
         RAISE e_param_error;
      END IF;

      -- 26108 ini
      /*
      SELECT MAX(nmovres)
        INTO vnmovres
        FROM sin_tramita_reserva
       WHERE ntramit = pntramit
         AND ctipres = pctipres
         AND NVL(ctipgas, -1) = NVL(pctipgas, -1) -- 26108
         AND cmonres = pcmonres
         AND(pcgarant IS NULL
             OR(pcgarant IS NOT NULL
                AND cgarant = NVL(pcgarant, cgarant)))
         AND nsinies = vgobsiniestro.nsinies;
       */

   /*    vnmovres := pnmovres;
   -- 261080 fin
   vpasexec := 2;
   */
   -- 26108 ini
   /*
   BEGIN
      SELECT COUNT(1)
        INTO vcont
        FROM sin_tramita_pago_gar
       WHERE sidepag = psidepag
         AND(pcgarant IS NULL
             OR(pcgarant IS NOT NULL
                AND cgarant = NVL(pcgarant, cgarant)))
         AND(NVL(fperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                          NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
         AND ctipres = pctipres;
   EXCEPTION
      WHEN OTHERS THEN
         vcont := 0;
   END;
   */
   /*     vcont := 0;
   -- 26108 fin
   vpasexec := 3;
   vnmovres_cont := vnmovres;

   IF vcont > 0 THEN   -- 26108 por aqui ya no va a entrar
      BEGIN
         -- 26108 ini
         /*
         SELECT NVL(MAX(nmovres), 0)
           INTO vnmovres_cont
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag
            AND(pcgarant IS NULL
                OR(pcgarant IS NOT NULL
                   AND cgarant = NVL(pcgarant, cgarant)))
            AND(NVL(fperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                          NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
            AND ctipres = pctipres;

         SELECT NVL(MAX(norden), 0) + 1
           INTO vnorden
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag
            AND ctipres = pctipres
            AND(pcgarant IS NULL
                OR(pcgarant IS NOT NULL
                   AND cgarant = NVL(pcgarant, cgarant)))
            AND(NVL(fperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                          NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
            AND nmovres = vnmovres_cont;
          */
   /*    SELECT MAX(nmovres)
                 INTO vnmovres_cont
                 FROM sin_tramita_reserva
                WHERE ntramit = pntramit
                  AND ctipres = pctipres
                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)
                  AND cmonres = pcmonres
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND nsinies = vgobsiniestro.nsinies;

               SELECT NVL(MAX(norden), 0) + 1
                 INTO vnorden
                 FROM sin_tramita_pago_gar
                WHERE sidepag = psidepag
                  AND ctipres = pctipres
                  AND nmovres = vnmovres_cont;
            -- 26108 fin
            EXCEPTION
               WHEN OTHERS THEN
                  vnorden := 1;
            END;
         ELSE
            vnmovres_cont := vnmovres_cont;
            vnorden := 1;
         END IF;

         vpasexec := 4;

         BEGIN
                INSERT INTO sin_tramita_pago_gar
                            (sidepag, ctipres, nmovres, cgarant, fperini, fperfin,
                             cmonres, isinret, iretenc, iiva, isuplid, ifranq, iresrcm,
                             iresred, cmonpag, isinretpag, iivapag, isuplidpag, iretencpag,
                             ifranqpag, iresrcmpag, iresredpag, fcambio, pretenc, piva, cconpag,
                             norden,
                                    -- BUG 19981 - 07/11/2011 - MDS
                                    preteiva, preteica, ireteiva, ireteica, ireteivapag,
                             ireteicapag, pica, iica, iicapag)
                     VALUES (psidepag, pctipres, vnmovres_cont, pcgarant, pfperini, pfperfin,
                             pcmonres, pisinret, piretenc, piiva, pisuplid, pifranq, piresrcm,
                             piresred, pcmonpag, pisinretpag, piivapag, pisuplidpag, piretencpag,
                             pifranqpag, NULL, NULL, pfcambio, ppretenc, ppiva, pcconpag,
                             vnorden,
                                     -- BUG 19981 - 07/11/2011 - MDS
                                     ppreteiva, ppreteica, pireteiva, pireteica, pireteivapag,
                             pireteicapag, ppica, piica, piicapag);

            --INI BUG  24637/147756:NSS:03/03/2014
            IF pciva_tipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                    VALUES (vsimplog, psidepag, pctipres, vnmovres_cont, vnorden, pciva_tipind);
            END IF;

            IF pcretenc_tipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                    VALUES (vsimplog, psidepag, pctipres, vnmovres_cont, vnorden, pcretenc_tipind);
            END IF;

            IF pcreteiva_tipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                    VALUES (vsimplog, psidepag, pctipres, vnmovres_cont, vnorden, pcreteiva_tipind);
            END IF;

            IF pcreteica_tipind IS NOT NULL THEN
               BEGIN
                  SELECT simplog.NEXTVAL
                    INTO vsimplog
                    FROM DUAL;
               EXCEPTION
                  WHEN NO_DATA_FOUND THEN
                     vsimplog := 1;
               END;

               INSERT INTO sin_imp_sap_log
                           (simplog, sidepag, ctipres, nmovres, norden, ctipind)
                    VALUES (vsimplog, psidepag, pctipres, vnmovres_cont, vnorden, pcreteica_tipind);
            END IF;

            --FIN BUG 24637/147756:NSS:03/03/2014

            -- BUG 18423 - 16/01/2012 - JMP - LCOL000 - Multimoneda
            SELECT cempres
              INTO v_cempres
              FROM seguros s, sin_siniestro ss
             WHERE ss.nsinies = vgobsiniestro.nsinies
               AND s.sseguro = ss.sseguro;

            v_cmultimon := NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0);

            IF v_cmultimon = 1 THEN
               vnumerr := pac_oper_monedas.f_contravalores_pagosini(psidepag, 2);

               IF vnumerr <> 0 THEN
                  RAISE e_object_error;
               END IF;
            END IF;
         -- FIN BUG 18423 - 16/01/2012 - JMP - LCOL000 - Multimoneda
         EXCEPTION
            WHEN OTHERS THEN
               p_tab_error(f_sysdate, f_user, 'set_pagogar22', 1, 'error', SQLERRM);
         END;

         -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
         -- aprovechar el momento para poner sum(nvl(...)) en todos los campos
         SELECT SUM(NVL(isinret, 0)), SUM(NVL(iretenc, 0)), SUM(NVL(iiva, 0)),
                SUM(NVL(isuplid, 0)), SUM(NVL(ifranq, 0)), SUM(NVL(iresred, 0)),
                SUM(NVL(iresrcm, 0)), SUM(NVL(ireteiva, 0)), SUM(NVL(ireteica, 0)),
                SUM(NVL(iica, 0))
           INTO v_isinret, viretenc, viiva,
                visuplid, vifranq, viresred,
                viresrcm, v_ireteiva, v_ireteica,
                v_iica
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag;

         vpasexec := 5;

         -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
         -- actualizar los detalles sumarizados en la cabecera
         UPDATE sin_tramita_pago
            SET isinret = v_isinret,
                iretenc = viretenc,
                iiva = viiva,
                isuplid = visuplid,
                ifranq = vifranq,
                iresred = viresred,
                iresrcm = viresrcm,
                ireteiva = v_ireteiva,
                ireteica = v_ireteica,
                iica = v_iica
          WHERE sidepag = psidepag
            AND nsinies = vgobsiniestro.nsinies
            AND ntramit = pntramit;

         COMMIT;

         -- BUG 18423 - 16/01/2012 - JMP - LCOL000 - Multimoneda
         IF v_cmultimon = 1 THEN
            vnumerr := pac_oper_monedas.f_contravalores_pagosini(psidepag, 1);

            IF vnumerr <> 0 THEN
               RAISE e_object_error;
            END IF;
         END IF;

         -- FIN BUG 18423 - 16/01/2012 - JMP - LCOL000 - Multimoneda
         vpasexec := 6;

         IF vcont > 0 THEN   --Â¡Â¡Por aquÃ­ tampoco va a entrar nunca!!
            SELECT ireserva
              INTO vireserva
              FROM sin_tramita_reserva
             WHERE nmovres = vnmovres
               AND ntramit = pntramit
               AND ctipres = pctipres
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND cmonres = pcmonres
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND(NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
               AND nsinies = vgobsiniestro.nsinies;

            vpasexec := 7;

            SELECT SUM(stpg.isinret)
              INTO v_isinret
              FROM sin_tramita_pago_gar stpg, sin_tramita_pago stp, sin_tramita_movpago stm
             WHERE stp.nsinies = vgobsiniestro.nsinies
               AND stpg.sidepag = psidepag
               AND ctipres = pctipres
   -- 26108  ini
               AND stpg.nmovres IN(SELECT nmovres
                                     FROM sin_tramita_reserva
                                    WHERE nsinies = stp.nsinies
                                      AND ntramit = stp.ntramit
                                      AND ctipres = stpg.ctipres
                                      AND NVL(cgarant, -1) = NVL(stpg.cgarant, -1)
                                      AND NVL(ctipgas, -1) = NVL(pctipgas, -1)
                                      AND cmonres = pcmonres)
               AND NVL(stpg.cgarant, 0) = NVL(pcgarant, 0)
               AND stp.sidepag = stm.sidepag
   --            AND(pcgarant IS NULL
   --                OR(pcgarant IS NOT NULL
   --                   AND stpg.cgarant = NVL(pcgarant, stpg.cgarant)))
   -- 2618 fin
               AND(NVL(stpg.fperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
               AND stm.nmovpag = (SELECT MAX(nmovpag)
                                    FROM sin_tramita_movpago stm2
                                   WHERE stm2.sidepag = stp.sidepag)
               AND stm.cestpag != 8;   --Mirem tots els pagaments NO anulats

            vpasexec := 8;
   /*
            IF pctippag = 2 THEN
               vireserva := NVL(vireserva, 0) - pisinret;

               UPDATE sin_tramita_reserva
                  SET ireserva = NVL(vireserva, 0),
                      ipago = v_isinret
                WHERE nmovres = vnmovres
                  AND ntramit = pntramit
                  AND ctipres = pctipres
                  AND nsinies = vgobsiniestro.nsinies;
            ELSE
               vireserva := NVL(vireserva, 0) + pisinret;

               UPDATE sin_tramita_reserva
                  SET ireserva = NVL(vireserva, 0),
                      irecobro = v_isinret
                WHERE nmovres = vnmovres
                  AND ntramit = pntramit
                  AND ctipres = pctipres
                  AND nsinies = vgobsiniestro.nsinies;
            END IF;
            */

   /*
   IF pctippag = 2 THEN
      vipago := v_isinret;
      vireserva := NVL(vireserva, 0) - pisinret;
   ELSE
      vireserva := NVL(vireserva, 0) + pisinret;
      virecobro := v_isinret;
   END IF;

   UPDATE sin_tramita_reserva
      SET ireserva = NVL(vireserva, 0),
          irecobro = virecobro,
          ipago = vipago
    WHERE nmovres = vnmovres
      AND ntramit = pntramit
      AND ctipres = pctipres
      AND nsinies = vgobsiniestro.nsinies;*/
   /*   vcont := vnmovres_cont;

            WHILE vcont < vnmovres LOOP
               SELECT ireserva, ipago, irecobro
                 INTO vireserva, vipago_ori, virecobro_ori
                 FROM sin_tramita_reserva
                WHERE nmovres = vcont
                  AND ntramit = pntramit
                  AND cmonres = pcmonres
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND(NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
                  AND ctipres = pctipres
                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                  AND nsinies = vgobsiniestro.nsinies;

               vpasexec := 9;

               SELECT MIN(NVL(nmovres, 0))
                 INTO min_nmovres
                 FROM sin_tramita_reserva
                WHERE ntramit = pntramit
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND(NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
                  AND ctipres = pctipres
                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                  AND cmonres = pcmonres
                  AND nmovres > vcont
                  AND nsinies = vgobsiniestro.nsinies;

               vpasexec := 10;

               SELECT ipago, irecobro, sidepag, ireserva
                 INTO vipago, virecobro, vsidepag, vireserva_act
                 FROM sin_tramita_reserva
                WHERE nmovres = min_nmovres
                  AND ntramit = pntramit
                  AND ctipres = pctipres
                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                  AND cmonres = pcmonres
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND(NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
                  AND nsinies = vgobsiniestro.nsinies;

               vpasexec := 11;

               IF vsidepag IS NOT NULL THEN
                  SELECT SUM(stpg.isinret)
                    INTO v_isinret
                    FROM sin_tramita_pago_gar stpg,
                         sin_tramita_movpago stm   --, sin_tramita_pago stp, sin_tramita_movpago stm
                   WHERE stpg.sidepag = vsidepag
                     AND ctipres = pctipres
                     AND(pcgarant IS NULL
                         OR(pcgarant IS NOT NULL
                            AND cgarant = NVL(pcgarant, stpg.cgarant)))
                     AND stpg.sidepag = stm.sidepag
                     AND stm.nmovpag = (SELECT MAX(nmovpag)
                                          FROM sin_tramita_movpago stm2
                                         WHERE stm2.sidepag = stpg.sidepag)
                     AND(NVL(stpg.fperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
                     AND stm.cestpag != 8;   --Mirem tots els pagaments NO anulats

                  vpasexec := 12;
               ELSE
                  v_isinret := 0;
                  dif := NVL(vipago, 0) - NVL(vipago_ori, 0);
                  vireserva := vireserva_act + dif;
               END IF;

               IF pctippag = 2 THEN
                  vipago := v_isinret + NVL(vipago_ori, 0);
                  vireserva :=(NVL(vireserva, 0) - v_isinret);
               ELSE
                  virecobro := v_isinret + NVL(virecobro_ori, 0);
                  vireserva :=(NVL(vireserva, 0) + v_isinret);
               END IF;

               vpasexec := 13;

               UPDATE sin_tramita_reserva
                  SET ireserva = NVL(vireserva, 0),
                      irecobro = virecobro,
                      ipago = vipago
                WHERE nmovres = min_nmovres
                  AND ntramit = pntramit
                  AND cmonres = pcmonres
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND(NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
                  AND ctipres = pctipres
                  AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
                  AND nsinies = vgobsiniestro.nsinies;

               -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
               IF v_cmultimon = 1 THEN
                  vnumerr := pac_oper_monedas.f_contravalores_reserva(vgobsiniestro.nsinies,
                                                                      pntramit, pctipres,
                                                                      min_nmovres, pcgarant);

                  IF vnumerr <> 0 THEN
                     RAISE e_object_error;
                  END IF;
               END IF;

               -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
               vcont := min_nmovres;   -- vcont + 1;
            END LOOP;
         ELSE
            SELECT ireserva, ccalres, cmonres, icaprie, ipenali, fresini, fresfin,
                   fultpag, sproces, fcontab, iprerec, ctipgas, ifranq,   -- 27059:NSS:03/06/2013
                                                                       ifranq_moncia,   --27059: JAMF  26/07/2013
                   ndias   --27487/159742: NSS  26/11/2013
              INTO vireserva, vccalres, vcmonres, vicaprie, vipenali, vfresini, vfresfin,
                   vfultpago, vsproces, vfcontab, viprerec, vctipgas, vifranq,   -- 27059:NSS:03/06/2013
                                                                              vifranq_moncia,   --27059: JAMF 26/07/2013
                   vndias   --27487/159742: NSS  26/11/2013
              FROM sin_tramita_reserva
             WHERE nmovres = vnmovres
               AND ntramit = pntramit
               AND cmonres = pcmonres
               AND ctipres = pctipres
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND(NVL(fresini, TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                                NVL(pfperini, TO_DATE('01/01/1900', 'dd/mm/yyyy')))   -- 22416:ASN:04/06/2012
               AND nsinies = vgobsiniestro.nsinies;

            vpasexec := 14;

            IF pctippag = 2 THEN
               vireserva := NVL(vireserva, 0) - pisinret;
               vipago := pisinret;
               vttipag := 'PAGO';
            ELSE
   -- 21720:ASN:23/04/2012 ini
              /* vireserva := NVL(vireserva, 0) + pisinret;
               vttipag := 'RECO';
               virecobro := pisinret; */
   /*   vttipag := 'RECO';
               vireserva := NVL(vireserva, 0);
               virecobro := 0;

               IF pcconpag != 12 THEN
                  vireserva := NVL(vireserva, 0) + pisinret;
                  vttipag := 'RECO';
                  virecobro := pisinret;
               END IF;
   -- 21720:ASN:23/04/2012 fin
            END IF;

            --27059: JAMF  26/07/2013  ponemos "siempre" el valor de la franquicia de la reserva en la cabecera del pago
            UPDATE sin_tramita_pago
               SET ifranq = vifranq,
                   ifranqpag = vifranq_moncia
             WHERE sidepag = psidepag;

            --27059 Fin
            COMMIT;
            vnumerr := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                             vgobsiniestro.tramitaciones,
                                                             mensajes);

            IF vnumerr <> 0 THEN
               RAISE e_object_error;
            END IF;

            --v_itotimp := (piiva + piica + pireteiva + pireteica) - piretenc;   -- 24637/0147756:NSS:28/11/2013
            v_itotimp := piiva + piica;   -- 24637/0147756:NSS:21/03/2014
            -- Bug 11945 - 16/12/2009 - AMC
            vnumerr :=
               pac_iax_siniestros.f_set_objeto_sintramireserva
                                                        (vgobsiniestro.nsinies, pntramit,
                                                         pctipres, NULL,   --ttipres
                                                         NULL, pcgarant, vccalres, f_sysdate,
                                                         vcmonres, vireserva, vipago, NULL,
                                                         virecobro, vicaprie, vipenali, vfresini,
                                                         vfresfin, vfultpago, psidepag, vsproces,
                                                         vfcontab, viprerec, vctipgas, vttipag,
                                                         NULL, vifranq,   -- 27059:NSS:03/06/2013
                                                         vndias,   -- 27487/159742:NSS:26/11/2013
                                                         4, --cmovres --0031294/0174788: NSS:26/05/2014
                                                         v_itotimp,   -- 24637/0147756:NSS:28/11/2013
                                                         mensajes, ppiva,   -- 24637/0147756:NSS:21/03/2014
                                                         ppretenc,   -- 24637/0147756:NSS:21/03/2014
                                                         ppreteiva,   -- 24637/0147756:NSS:21/03/2014
                                                         ppreteica);   -- 24637/0147756:NSS:21/03/2014
            --grabem a taules i tornem a recuperar l'objecte
            vnumerr :=
               pac_md_siniestros.f_set_tramitaciones
                  (vgobsiniestro.tramitaciones, vgobsiniestro.nsinies, psidepag,   -- BUG 25537 - FAL - 04/02/2014. Se pasa psidepag (pago a tratar) como sidepag
                   mensajes);

            IF vnumerr <> 0 THEN
               RAISE e_object_error;
            END IF;
         END IF;

         COMMIT;
         vnumerr := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                          vgobsiniestro.tramitaciones, mensajes);

         IF vnumerr <> 0 THEN
            RAISE e_object_error;
         END IF;

   -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
         vpasexec := 28;
         RETURN vnumerr;
      EXCEPTION
         WHEN e_param_error THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
            ROLLBACK;
            RETURN 1;
         WHEN e_object_error THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam,
                                              vnumerr);
            ROLLBACK;
            RETURN 1;
         WHEN OTHERS THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam,
                                              NULL, SQLCODE, SQLERRM);
            ROLLBACK;
            RETURN 1;
      END f_set_sintram_pagrecobgar_temp;
   */

   /*************************************************************************
   funciÃ³n graba en una variable global de la capa IAX los valores del objeto
   ob_iax_siniestros.tramitaciones.pagogar
      sidepag        NUMBER(8),   --Secuencia Identificador Pago
      ctipres        NUMBER(2),   --CÃ³digo Tipo Reserva
      ttipres        VARCHAR2(100),   --des tipo reserva
      nmovres        NUMBER(4),   --NÃºmero Movimiento Reserva
      cgarant        NUMBER(4),   --CÃ³digo GarantÃ­a
      tgarant        VARCHAR2(100),   --Des garantia
      fperini        DATE,   --Fecha Periodo Inicio
      fperfin        DATE,   --Fecha Periodo Fin
      cmonres        VARCHAR2(3),   --CÃ³digo Moneda Reserva
      tmonres        VARCHAR2(100),   --DES moneda reserva
      isinret        NUMBER,   --Importe Sin RetenciÃ³n
      iiva           NUMBER,   --Importe IVA
      isuplid        NUMBER,   --Importe Suplido
      iretenc        NUMBER,   --Importe RetenciÃ³n
      ifranq         NUMBER,   --Importe Franquicia Pagada
      cmonpag        VARCHAR2(3),   --CÃ³digo Moneda Pago
      tmonpag        VARCHAR2(100),   --Des Moneda Pago
      isinretpag     NUMBER,   -- importe bruto
      iivapag        NUMBER,   --Importe IVA Moneda Pago
      isuplidpag     NUMBER,   --Importe Suplido Moneda Pago
      iretencpag     NUMBER,   --Importe RetenciÃ³n Moneda Pago
      ifranqpag      NUMBER,   --Importe Franquicia Moneda Pago
      fcambio        DATE,   --Fecha de cambio

      -- Bug 11847 - 23/11/2009 - AMC
         BUG 19981 - 07/11/2011 - MDS - AÃ±adir campos preteiva, preteica, ireteiva, ireteica, ireteivapag, ireteicapag, pica, iica, iicapag en la cabecera y llamadas
             *************************************************************************/
   FUNCTION f_set_obj_sintram_pagrecob_gar(psseguro         IN NUMBER,
                                           pntramit         IN NUMBER,
                                           pctippag         IN NUMBER,
                                           psidepag         IN NUMBER,
                                           pctipres         IN NUMBER,
                                           pctipgas         IN NUMBER, -- 26108
                                           pnmovres         IN NUMBER,
                                           pcgarant         IN NUMBER,
                                           pfperini         IN DATE,
                                           pfperfin         IN DATE,
                                           pcmonres         IN VARCHAR2,
                                           pisinret         IN NUMBER,
                                           piiva            IN NUMBER,
                                           pisuplid         IN NUMBER,
                                           piretenc         IN NUMBER,
                                           pifranq          IN NUMBER,
                                           pcmonpag         IN VARCHAR2,
                                           pisinretpag      IN NUMBER,
                                           piivapag         IN NUMBER,
                                           pisuplidpag      IN NUMBER,
                                           piretencpag      IN NUMBER,
                                           pifranqpag       IN NUMBER,
                                           pfcambio         IN DATE,
                                           piresred         IN NUMBER,
                                           piresrcm         IN NUMBER,
                                           ppiva            IN NUMBER,
                                           ppretenc         IN NUMBER,
                                           pcconpag         IN NUMBER,
                                           pnorden          IN NUMBER,
                                           mensajes         OUT t_iax_mensajes,
                                           ppreteiva        IN NUMBER DEFAULT NULL,
                                           ppreteica        IN NUMBER DEFAULT NULL,
                                           pireteiva        IN NUMBER DEFAULT NULL,
                                           pireteica        IN NUMBER DEFAULT NULL,
                                           pireteivapag     IN NUMBER DEFAULT NULL,
                                           pireteicapag     IN NUMBER DEFAULT NULL,
                                           ppica            IN NUMBER DEFAULT NULL,
                                           piica            IN NUMBER DEFAULT NULL,
                                           piicapag         IN NUMBER DEFAULT NULL,
                                           pciva_tipind     IN NUMBER DEFAULT NULL, --bug 24637/147756:NSS:03/03/2014
                                           pcretenc_tipind  IN NUMBER DEFAULT NULL, --bug 24637/147756:NSS:03/03/2014
                                           pcreteiva_tipind IN NUMBER DEFAULT NULL, --bug 24637/147756:NSS:03/03/2014
                                           pcreteica_tipind IN NUMBER DEFAULT NULL,
                                           pitotimp         IN NUMBER DEFAULT NULL, --bug 24637/147756:NSS:14/03/2014
                                           pitotret         IN NUMBER DEFAULT NULL, --bug 24637/147756:NSS:21/03/2014
                                           piotrosgas    IN NUMBER DEFAULT NULL,
                                           pibaseipoc    IN NUMBER DEFAULT NULL,
                                           ppipoconsumo  IN NUMBER DEFAULT NULL,
                                           pctipind      IN NUMBER DEFAULT NULL,
                                           piipoconsumo  IN NUMBER DEFAULT NULL,
                                           piotrosgaspag   IN NUMBER DEFAULT NULL,
                                           pibaseipocpag   IN NUMBER DEFAULT NULL,
                                           piipoconsumopag IN NUMBER DEFAULT NULL
                                           ) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_obj_sintram_pagrecob_gar';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psidepag: ' || psidepag ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pctipres: ' || pctipres ||
                                   ' - pcgarant: ' || pcgarant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnmovres    NUMBER(8);
      v_index     NUMBER(8);
      trobat      BOOLEAN := FALSE;
      obreserva   ob_iax_sin_trami_reserva := ob_iax_sin_trami_reserva();
      obpago      ob_iax_sin_trami_pago := ob_iax_sin_trami_pago();
      vsuma       NUMBER;
      vreservas   NUMBER;
      vsidepag    NUMBER;
      vnorden     NUMBER;
      vcconpag    NUMBER; -- 21720:ASN:24/04/2012
      vilimite    NUMBER;
      --- Bug 27514/149320 - 17/07/2013 - AMC
      vtramitaciones t_iax_sin_tramitacion;
      vtramitacion   ob_iax_sin_tramitacion;
      vctramitad     VARCHAR2(4);
      --- Fi Bug 27514/149320 - 17/07/2013 - AMC

      -- Bug 27514/149698 - 24/07/2013 - AMC
      vmoneda   monedas.cmonint%TYPE;
      visinret  NUMBER;
      v_fcambio DATE;
      vtasa     NUMBER;
      v_nnumdet NUMBER := 0;
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC
      v_itotimp     NUMBER; -- 24637/0147756:NSS:28/11/2013
      v_itotret     NUMBER; -- 24637/0147756:NSS:20/05/2014
      v_itotimp_ant NUMBER; -- 31294/0174629:NSS:20/05/2014
      v_itotret_ant NUMBER; -- 31294/0174629:NSS:20/05/2014
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psidepag IS NULL OR
         pctipres IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      --- Bug 27514/149320 - 17/07/2013 - AMC
      vtramitaciones := vgobsiniestro.tramitaciones;

      IF vtramitaciones IS NOT NULL
      THEN
         IF vtramitaciones.count > 0
         THEN
            FOR t IN vtramitaciones.first .. vtramitaciones.last
            LOOP
               vtramitacion := vtramitaciones(t);

               IF vtramitacion.ntramit = pntramit
               THEN
                  vctramitad := vtramitacion.movimientos(vtramitacion.movimientos.last)
                                .ctramitad;
               END IF;
            END LOOP;
         END IF;
      END IF;

      -- Bug 29804 - 26/03/2014 - JTT
      -- Validem el limit del tramitador contra el import del pagament segons el parametre VALIDARLIMTRAMITADOR
      -- Per les operacions d'alta de pagament (v_numdet = 0) tenim en compte el parametre per fer la validaciÃ³ o no
      -- per la resta d'operacions es valida sempre es valida el limit del tramitador.
      vpasexec := 3;

      -- Per determinar si es una operaciÃ³ d'alta de pagament mirem si tenim el detall del pagament.
      IF psidepag IS NOT NULL
      THEN
         SELECT COUNT(*)
           INTO v_nnumdet
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag;
      ELSE
         v_nnumdet := 0;
      END IF;

      vpasexec := 31;

      IF (v_nnumdet > 0) OR
         (v_nnumdet = 0 AND NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                              'VALIDARLIMTRAMITADOR'),
                                1) = 1)
      THEN
         vpasexec := 32;
         -- Validacio del limit del tramitador
         -- Bug 27514/147806 - 04/07/2013 - AMC
         vnumerr := pac_md_siniestros.f_get_limite_tramitador(vctramitad,
                                                              pac_md_common.f_get_cxtempresa,
                                                              NULL, --ramo
                                                              vgobsiniestro.ccausin,
                                                              vgobsiniestro.cmotsin,
                                                              vilimite,
                                                              mensajes);

         --- Fi Bug 27514/149320 - 17/07/2013 - AMC
         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         -- Bug 27514/149698 - 24/07/2013 - AMC
         IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                              'MULTIMONEDA'),
                0) = 1
         THEN
            vmoneda := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                                             'MONEDAEMP'));

            IF vmoneda <> pcmonres
            THEN
               v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(pcmonres,
                                                                  vmoneda);
               vtasa     := pac_eco_tipocambio.f_cambio(pcmonres,
                                                        vmoneda,
                                                        v_fcambio);
               visinret  := vtasa * pisinret;
            ELSE
               visinret := pisinret;
            END IF;
         ELSE
            visinret := pisinret;
         END IF;

         IF psidepag IS NOT NULL
         THEN
            SELECT COUNT(*)
              INTO v_nnumdet
              FROM sin_tramita_pago_gar
             WHERE sidepag = psidepag;
         ELSE
            v_nnumdet := 0;
         END IF;

         IF vilimite < NVL(visinret, 0)
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9903735);
            RAISE e_object_error;
         END IF;
      END IF;

      vpasexec := 33;

      -- Fi Bug 29804
      -- Fi Bug 27514/147806 - 04/07/2013 - AMC
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC

      --BUG10393  - 08/10/2009 - DCT
      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         vpasexec := 4;

         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 5;

               FOR res IN vgobsiniestro.tramitaciones(i).reservas.first .. vgobsiniestro.tramitaciones(i)
                                                                           .reservas.last
               LOOP
                  IF vgobsiniestro.tramitaciones(i).reservas(res)
                   .nmovres = pnmovres AND
                     vgobsiniestro.tramitaciones(i).reservas(res)
                     .ntramit = pntramit AND
                     vgobsiniestro.tramitaciones(i).reservas(res)
                     .ctipres = pctipres AND
                      NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                          .ctipgas,
                          -1) = NVL(pctipgas, -1) --26108
                      AND
                     vgobsiniestro.tramitaciones(i).reservas(res)
                     .cmonres = pcmonres AND
                      ((pctipres = 1 AND vgobsiniestro.tramitaciones(i).reservas(res)
                       .cgarant = pcgarant) OR pctipres <> 1)
                  THEN
                     -- Si el trobem, el modifiquem
                     obreserva := vgobsiniestro.tramitaciones(i)
                                  .reservas(res);
                     -- Bug 14806 - 27/05/2010 - AMC
                     vnumerr := pac_iax_validaciones_sin.f_detpago(vgobsiniestro.nsinies,
                                                                   obreserva.ireserva,
                                                                   pisinret,
                                                                   piiva,
                                                                   piretenc,
                                                                   pfperini,
                                                                   pfperfin,
                                                                   piresrcm,
                                                                   piresred,
                                                                   pctipres,
                                                                   pcgarant,
                                                                   pctippag,
                                                                   obreserva.cmonres,
                                                                   psidepag, -- BUG 18423 - 17/01/2012 - JMP - Multimoneda
                                                                   pctipgas,
                                                                   pcconpag, --27909:NSS:03/09/2013
                                                                   pnmovres, --BUG 31294/174788:NSS:29/05/2014
                                                                   pnorden, --BUG 31294/174788:NSS:29/05/2014
                                                                   pireteiva, --BUG 24637/147756:NSS:29/05/2014
                                                                   pireteica, --BUG 24637/147756:NSS:29/05/2014
                                                                   mensajes,
                                                                   pitotimp, --bug 24637/147756:NSS:14/03/2014
                                                                   pitotret, --bug 24637/147756:NSS:21/03/2014
                                                                   piotrosgas,
                                                                   pibaseipoc,
                                                                   piipoconsumo
                                                                   );

                     -- Fi Bug 14806 - 27/05/2010 - AMC
                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;
                  END IF; --IF vgobsiniestro.tramitaciones(i).reservas(res).nmovres = pnmovres

                  -- 21720:ASN:23/04/2012 ini
                  IF pctippag = 7
                  THEN
                     -- recobro
                     IF vgobsiniestro.tramitaciones(i).recobros.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .recobros.first .. vgobsiniestro.tramitaciones(i)
                                                    .recobros.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).recobros(j)
                            .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).recobros(j)
                              .ntramit = pntramit
                           THEN
                              vcconpag := vgobsiniestro.tramitaciones(i).recobros(j)
                                          .cconpag;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     vcconpag := pcconpag;
                  END IF;
                  -- 21720:ASN:23/04/2012 fin
               END LOOP; --FOR res IN vgobsiniestro.tramitaciones(i).reservas.FIRST .. vgobsiniestro.tramitaciones (i).reservas.LAST LOOP

               vpasexec := 6;

               -- Bug 12124 - 11/03/2010 - AMC
               IF vgobsiniestro.tramitaciones(i).pagos.count > 0
               THEN
                  FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                         .pagos.last
                  LOOP
                     IF vgobsiniestro.tramitaciones(i).pagos(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).pagos(j)
                        .ntramit = pntramit
                     THEN
                        vnumerr := pac_iax_validaciones_sin.f_cabecerapago(vgobsiniestro.nsinies,
                                                                           pntramit,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .ctippag,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .ctipdes,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .cconpag,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .ccauind,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .cforpag,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .cbancar,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .fordpag,
                                                                           vgobsiniestro.tramitaciones(i).pagos(j)
                                                                           .sidepag, --Bug.: 16280 - ICV - 15/10/2010 - Se aÃ±ade el paso del pago
                                                                           mensajes);

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     END IF; --IF vgobsiniestro.tramitaciones(i).pagos(j).sidepag = psidepag
                  END LOOP; --FOR j IN vgobsiniestro.tramitaciones(i).pagos.FIRST .. vgobsiniestro.tramitaciones(i).pagos.LAST LOOP
               END IF;
               -- Fi Bug 12124 - 11/03/2010 - AMC
            END IF; -- IF vgobsiniestro.tramitaciones(i).ntramit = pntramit THEN
         END IF;
      END LOOP; --FOR i IN vgobsiniestro.tramitaciones.FIRST .. vgobsiniestro.tramitaciones.LAST LOOP

      --FI BUG10393  - 08/10/2009 - DCT
      vpasexec := 7;

      --INI BUG 31294/174788:NSS:20/05/2014
      --******Se vuelve a montar todo el proceso de alta y modificaciÃ³n detalle pago utilizando el objeto OB_IAX_SIN_TRAMI_PAGO_GAR******

      /* vnumerr := f_set_sintram_pagrecobgar_temp(psseguro, pntramit, pctippag, psidepag, pctipres,
                                        pnmovres, pcgarant, pfperini, pfperfin, pcmonres,
                                        pisinret, piiva, pisuplid, piretenc, pifranq, pcmonpag,
                                        pisinretpag, piivapag, pisuplidpag, piretencpag,
                                        pifranqpag, pfcambio, piresrcm, piresred, ppiva,
                                        ppretenc,
                                        --pcconpag, pnorden, mensajes, 21720:ASN:25/04/2012
                                        vcconpag, pnorden, mensajes,
                                        -- BUG 19981 - 07/11/2011 - MDS
                                        ppreteiva, ppreteica, pireteiva, pireteica,
                                        pireteivapag, pireteicapag, ppica, piica, piicapag,
                                        pctipgas,   -- 26108
                                        pciva_tipind,   -- 24637/147756:NSS:03/03/2014
                                        pcretenc_tipind,   -- 24637/147756:NSS:03/03/2014
                                        pcreteiva_tipind,   -- 24637/147756:NSS:03/03/2014
                                        pcreteica_tipind);

        --es comenta tota la gestiÃ³ de l'objecte perquÃ¨ es decideix fer-ho directament a taules ja que
        --ens anirÃ  mÃ©s bÃ© alhora de fer modifiacions.
        --XPL 31/05/2010 bug : 14607, AGA004 - Conceptos de pago a nivel de detalle del pago de un siniestro
      */
      --FIN BUG 31294/174788:NSS:20/05/2014

      --INI BUG 31294/174788:NSS:20/05/2014
      --******Se vuelve a montar todo el proceso de alta y modificaciÃ³n detalle pago utilizando el objeto OB_IAX_SIN_TRAMI_PAGO_GAR ******
      IF pctippag = 2
      THEN
         -- pagos-->sidepag = 2
         vpasexec := 8;

         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 9;

            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 10;

               FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                      .pagos.last
               LOOP
                  vpasexec := 11;

                  IF vgobsiniestro.tramitaciones(i).pagos(j)
                   .sidepag = psidepag AND
                     vgobsiniestro.tramitaciones(i).pagos(j)
                     .ntramit = pntramit
                  THEN
                     -- Si el trobem, el modifiquem
                     vpasexec := 12;

                     IF vgobsiniestro.tramitaciones(i).pagos(j)
                      .pagogar IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).pagos(j)
                        .pagogar.count > 0
                     THEN
                        vpasexec := 13;

                        FOR n IN vgobsiniestro.tramitaciones(i).pagos(j)
                                 .pagogar.first .. vgobsiniestro.tramitaciones(i).pagos(j)
                                                   .pagogar.last
                        LOOP
                           --MODIFICACIÃ“N DE PAGO
                           IF vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                            .reserva.nmovres = pnmovres AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .reserva.ctipres = pctipres AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .norden = pnorden
                           THEN
                              vpasexec := 14;
                              -- Bug 11847 - 23/11/2009 - AMC
                              -- Bug 12783 - 19/01/2010 -XPL, nomÃ©s es vol actualitzar la reserva amb l'isinret.
                              vsuma := vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                       .isinret;

                              --se busca el movimiento donde se actualizo el pago que modificamos
                              SELECT MAX(nmovres)
                                INTO vnmovres
                                FROM sin_tramita_reserva
                               WHERE nsinies = vgobsiniestro.nsinies
                                 AND ntramit = pntramit
                                 AND ctipres = pctipres
                                 AND NVL(ctipgas, -1) =
                                     NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                         .reserva.ctipgas,
                                         -1)
                                 AND NVL(cgarant, -1) = NVL(pcgarant, -1)
                                 AND NVL(fresini,
                                         TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                     NVL(pfperini,
                                         TO_DATE('01/01/1900', 'dd/mm/yyyy'))
                                 AND NVL(fresfin,
                                         TO_DATE('01/01/1900', 'dd/mm/yyyy')) =
                                     NVL(pfperfin,
                                         TO_DATE('01/01/1900', 'dd/mm/yyyy'));

                              --Fi Bug 11847 - 23/11/2009 - AMC
                              FOR res IN vgobsiniestro.tramitaciones(i)
                                         .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                            .reservas.last
                              LOOP
                                 IF vgobsiniestro.tramitaciones(i).reservas(res)
                                  .nmovres = vnmovres --  bug 31298/174629:NSS:20/05/2014
                                     AND
                                    vgobsiniestro.tramitaciones(i).reservas(res)
                                    .ntramit = pntramit AND
                                    vgobsiniestro.tramitaciones(i).reservas(res)
                                    .ctipres = pctipres AND
                                     NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                                         .ctipgas,
                                         -1) = NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                   .reserva.ctipgas,
                                                   -1) AND
                                    vgobsiniestro.tramitaciones(i).reservas(res)
                                    .cmonres = vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                    .reserva.cmonres --26108
                                     AND
                                     ((vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                      .reserva.ctipres = 1 AND vgobsiniestro.tramitaciones(i).reservas(res)
                                      .cgarant = vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                      .reserva.cgarant) OR vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                      .reserva.ctipres <> 1)
                                 THEN
                                    -- Si el trobem, el modifiquem
                                    obreserva := vgobsiniestro.tramitaciones(i)
                                                 .reservas(res);
                                    -- Bug 14806 - 27/05/2010 - AMC
                                    vnumerr := pac_iax_validaciones_sin.f_detpago(vgobsiniestro.nsinies,
                                                                                  obreserva.ireserva,
                                                                                  pisinret,
                                                                                  piiva,
                                                                                  piretenc,
                                                                                  pfperini,
                                                                                  pfperfin,
                                                                                  piresrcm,
                                                                                  piresred,
                                                                                  pctipres,
                                                                                  pcgarant,
                                                                                  pctippag,
                                                                                  obreserva.cmonres,
                                                                                  psidepag, -- BUG 18423 - 17/01/2012 - JMP - Multimoneda
                                                                                  pctipgas,
                                                                                  pcconpag, --27909:NSS:03/09/2013
                                                                                  pnmovres, --BUG 31294/174788:NSS:29/05/2014
                                                                                  pnorden, --BUG 31294/174788:NSS:29/05/2014
                                                                                  pireteiva, --BUG 24637/147756:NSS:29/05/2014
                                                                                  pireteica, --BUG 24637/147756:NSS:29/05/2014
                                                                                  mensajes,
                                                                                  pitotimp, --bug 24637/147756:NSS:14/03/2014
                                                                                  pitotret, --bug 24637/147756:NSS:21/03/2014
                                                                                  piotrosgas,
                                                                                  pibaseipoc,
                                                                                  piipoconsumo
                                                                                  );

                                    -- Fi Bug 14806 - 27/05/2010 - AMC
                                    IF vnumerr <> 0
                                    THEN
                                       RAISE e_object_error;
                                    END IF;

                                    -- INI bug 31298/174629:NSS:20/05/2014
                                    obreserva.ireserva := obreserva.ireserva +
                                                          vsuma - pisinret;
                                    obreserva.ipago    := obreserva.ipago -
                                                          vsuma + pisinret;
                                    v_itotimp_ant      := NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).iiva,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).iica,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).iipoconsumo,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).iotrosgas,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).ibaseipoc,
                                                              0);
                                    v_itotimp          := NVL(piiva, 0) +
                                                          NVL(piica, 0) +
                                                          NVL(piipoconsumo, 0) +
                                                          NVL(piotrosgas, 0) +
                                                          NVL(pibaseipoc, 0);

                                    v_itotret_ant      := NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                              .iretenc,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                              .ireteiva,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                                                              .ireteica,
                                                              0);
                                    v_itotret          := NVL(piretenc, 0) +
                                                          NVL(pireteiva, 0) +
                                                          NVL(pireteica, 0); -- 24637/0147756:NSS:21/03/2014

                                    IF NVL(obreserva.itotimp, 0) > 0
                                    THEN
                                       v_itotimp := greatest(obreserva.itotimp +
                                                             v_itotimp_ant -
                                                             v_itotimp,
                                                             0); -- 24637/0147756:NSS:21/03/2014
                                    ELSE
                                       v_itotimp := 0;
                                    END IF;

                                    IF NVL(obreserva.itotret, 0) > 0
                                    THEN
                                       v_itotret := greatest(obreserva.itotret +
                                                             v_itotret_ant -
                                                             v_itotret,
                                                             0); -- 24637/0147756:NSS:21/03/2014
                                    ELSE
                                       v_itotret := 0;
                                    END IF;

                                    -- FIN bug 31298/174629:NSS:20/05/2014

                                    -- Bug 11945 - 16/12/2009 - AMC
                                    vnumerr := pac_iax_siniestros.f_set_objeto_sintramireserva(obreserva.nsinies,
                                                                                               obreserva.ntramit,
                                                                                               obreserva.ctipres,
                                                                                               obreserva.ttipres,
                                                                                               obreserva.nmovres, -- bug 31298/174629:NSS:20/05/2014
                                                                                               obreserva.cgarant,
                                                                                               obreserva.ccalres,
                                                                                               f_sysdate,
                                                                                               obreserva.cmonres,
                                                                                               obreserva.ireserva,
                                                                                               obreserva.ipago, -- bug 31298/174629:NSS:20/05/2014
                                                                                               NULL,
                                                                                               NULL,
                                                                                               obreserva.icaprie,
                                                                                               obreserva.ipenali,
                                                                                               obreserva.fresini,
                                                                                               obreserva.fresfin,
                                                                                               obreserva.fultpag,
                                                                                               psidepag,
                                                                                               obreserva.sproces,
                                                                                               obreserva.fcontab,
                                                                                               obreserva.iprerec,
                                                                                               obreserva.ctipgas,
                                                                                               'PAGO',
                                                                                               NULL,
                                                                                               obreserva.ifranq,
                                                                                               obreserva.ndias,
                                                                                               11, --cmovres --0031294/0174788: NSS:26/05/2014
                                                                                               v_itotimp,
                                                                                               mensajes,
                                                                                               NULL, --ppiva,
                                                                                               NULL, --ppretenc,
                                                                                               NULL, --ppreteiva,
                                                                                               NULL, --ppreteica
                                                                                               NULL, --piva_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                               NULL, --pretenc_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                               NULL, --preteiva_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                               NULL, --preteica_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                               v_itotret); -- bug 31298/174629:NSS:20/05/2014

                                    --Fi Bug 11945 - 16/12/2009 - AMC
                                    IF vnumerr <> 0
                                    THEN
                                       RAISE e_object_error;
                                    END IF;

                                    vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n).reserva := obreserva;
                                 END IF;
                              END LOOP;

                              FOR x IN vgobsiniestro.tramitaciones(i)
                                       .pagos.first .. vgobsiniestro.tramitaciones(i)
                                                       .pagos.last
                              LOOP
                                 vpasexec := 77;

                                 IF vgobsiniestro.tramitaciones(i).pagos(x)
                                  .sidepag = psidepag AND
                                    vgobsiniestro.tramitaciones(i).pagos(x)
                                    .ntramit = pntramit
                                 THEN
                                    -- Si el trobem, el modifiquem
                                    obpago   := vgobsiniestro.tramitaciones(i)
                                                .pagos(x);
                                    vpasexec := 88;
                                    vpasexec := 90;

                                    FOR n IN vgobsiniestro.tramitaciones(i).pagos(x)
                                             .pagogar.first .. vgobsiniestro.tramitaciones(i).pagos(j)
                                                               .pagogar.last
                                    LOOP
                                       vpasexec := 91;

                                       IF vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                        .sidepag = psidepag AND
                                          vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                          .norden = pnorden --bug 32977:NSS:03/10/2014
                                       THEN
                                          vpasexec       := 92;
                                          obpago.isinret := NVL(obpago.isinret,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                                                .isinret,
                                                                0);
                                          -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar l'iretenc tambÃ©
                                          obpago.iretenc := NVL(obpago.iretenc,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                                                .iretenc,
                                                                0);
                                          vpasexec       := 93;
                                          vpasexec       := 94;
                                          obpago.iiva    := NVL(obpago.iiva,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n).iiva,
                                                                0);
                                          vpasexec       := 95;
                                          obpago.isuplid := NVL(obpago.isuplid,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                                                .isuplid,
                                                                0);
                                          vpasexec       := 96;
                                          obpago.ifranq  := NVL(obpago.ifranq,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                                                .ifranq,
                                                                0);
                                          obpago.iresrcm := NVL(obpago.iresrcm,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                                                .iresrcm,
                                                                0);
                                          obpago.iresred := NVL(obpago.iresred,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).pagos(x).pagogar(n)
                                                                .iresred,
                                                                0);
                                       END IF;
                                    END LOOP;

                                    -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar l'iretenc tambÃ©
                                    vnumerr := pac_iax_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                                psidepag,
                                                                                                obpago.nsinies,
                                                                                                obpago.ntramit,
                                                                                                obpago.destinatari.ctipdes,
                                                                                                obpago.ctippag,
                                                                                                obpago.cconpag,
                                                                                                obpago.ccauind,
                                                                                                obpago.cforpag,
                                                                                                obpago.fordpag,
                                                                                                obpago.ctipban,
                                                                                                obpago.cbancar,
                                                                                                obpago.cmonres,
                                                                                                NVL(obpago.isinret,
                                                                                                    0) +
                                                                                                NVL(pisinret,
                                                                                                    0),
                                                                                                NULL,
                                                                                                NULL,
                                                                                                NVL(obpago.iretenc,
                                                                                                    0) +
                                                                                                NVL(piretenc,
                                                                                                    0),
                                                                                                NVL(obpago.iiva,
                                                                                                    0) +
                                                                                                NVL(piiva,
                                                                                                    0),
                                                                                                NVL(obpago.isuplid,
                                                                                                    0) +
                                                                                                NVL(pisuplid,
                                                                                                    0),
                                                                                                NVL(obpago.ifranq,
                                                                                                    0) +
                                                                                                NVL(pifranq,
                                                                                                    0),
                                                                                                NVL(obpago.iresred,
                                                                                                    0) +
                                                                                                NVL(piresred,
                                                                                                    0),
                                                                                                obpago.iresrcm +
                                                                                                NVL(piresrcm,
                                                                                                    0),
                                                                                                obpago.cmonpag,
                                                                                                obpago.isinretpag,
                                                                                                NULL,
                                                                                                obpago.iretencpag,
                                                                                                obpago.iivapag,
                                                                                                obpago.isuplidpag,
                                                                                                obpago.ifranqpag,
                                                                                                f_sysdate,
                                                                                                obpago.nfacref,
                                                                                                obpago.ffacref,
                                                                                                obpago.destinatari.persona.sperson,
                                                                                                obpago.sidepagtemp,
                                                                                                obpago.cultpag,
                                                                                                obpago.ncheque,
                                                                                                vsidepag,
                                                                                                mensajes,
                                                                                                NVL(obpago.ireteiva,
                                                                                                    0) +
                                                                                                NVL(pireteiva,
                                                                                                    0),
                                                                                                NVL(obpago.ireteica,
                                                                                                    0) +
                                                                                                NVL(pireteica,
                                                                                                    0),
                                                                                                NVL(obpago.ireteivapag,
                                                                                                    0) +
                                                                                                NVL(pireteivapag,
                                                                                                    0),
                                                                                                NVL(obpago.ireteicapag,
                                                                                                    0) +
                                                                                                NVL(pireteicapag,
                                                                                                    0),
                                                                                                NVL(obpago.iica,
                                                                                                    0) +
                                                                                                NVL(piica,
                                                                                                    0),
                                                                                                NVL(obpago.iicapag,
                                                                                                    0) +
                                                                                                NVL(piicapag,
                                                                                                    0),
                                                                                                obpago.cagente,
                                                                                                obpago.npersrel,
                                                                                                obpago.cdomici,
                                                                                                obpago.ctributacion,
                                                                                                obpago.cbanco,
                                                                                                obpago.cofici,
                                                                                                obpago.cciudad,
                                                                                                obpago.presentador.sperson,
                                                                                                obpago.tobserva,
                                                                                                NVL(obpago.iotrosgas, 0) + NVL(piotrosgas, 0),
                                                                                                NVL(obpago.ibaseipoc, 0) + NVL(pibaseipoc, 0),
                                                                                                NVL(obpago.iipoconsumo, 0) + NVL(piipoconsumo, 0),
                                                                                                NVL(obpago.iotrosgaspag, 0) + NVL(piotrosgaspag, 0),
                                                                                                NVL(obpago.ibaseipocpag, 0) + NVL(pibaseipocpag, 0),
                                                                                                NVL(obpago.iipoconsumopag, 0) + NVL(piipoconsumopag, 0)
                                                                                                );

                                    IF vnumerr <> 0
                                    THEN
                                       RAISE e_object_error;
                                    END IF;
                                 END IF;
                              END LOOP;

                              vnumerr := pac_md_siniestros.f_set_obj_sintram_pagrecob_gar(psidepag,
                                                                                          pctipres,
                                                                                          pnmovres, -- bug 31298/174629:NSS:20/05/2014
                                                                                          pcgarant,
                                                                                          pfperini,
                                                                                          pfperfin,
                                                                                          pcmonres,
                                                                                          pisinret,
                                                                                          piiva,
                                                                                          pisuplid,
                                                                                          piretenc,
                                                                                          pifranq,
                                                                                          pcmonpag,
                                                                                          pisinretpag,
                                                                                          piivapag,
                                                                                          pisuplidpag,
                                                                                          piretencpag,
                                                                                          pifranqpag,
                                                                                          pfcambio,
                                                                                          piresrcm,
                                                                                          piresred,
                                                                                          ppiva,
                                                                                          ppretenc,
                                                                                          pcconpag,
                                                                                          pnorden,
                                                                                          vgobsiniestro.tramitaciones(i).pagos(j)
                                                                                          .pagogar(n),
                                                                                          mensajes,
                                                                                          ppreteiva,
                                                                                          ppreteica,
                                                                                          pireteiva,
                                                                                          pireteica,
                                                                                          pireteivapag,
                                                                                          pireteicapag,
                                                                                          ppica,
                                                                                          piica,
                                                                                          piicapag,
                                                                                          pciva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                          pcretenc_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                          pcreteiva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                          pcreteica_tipind,
                                                                                          piotrosgas,
                                                                                          pibaseipoc,
                                                                                          ppipoconsumo,
                                                                                          pctipind,
                                                                                          piipoconsumo,
                                                                                          piotrosgaspag,
                                                                                          pibaseipocpag,
                                                                                          piipoconsumopag
                                                                                          );
                              trobat  := TRUE;

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;

                     vpasexec := 15;

                     --ALTA DE PAGO
                     IF trobat = FALSE
                     THEN
                        --creem una nova reserva amb les dades anteriors de la reserva i actualitzem la reserva de l'objecte pagament
                        FOR jj IN vgobsiniestro.tramitaciones(i)
                                  .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                     .reservas.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).reservas(jj)
                            .nmovres = pnmovres AND
                              vgobsiniestro.tramitaciones(i).reservas(jj)
                              .ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).reservas(jj)
                              .ctipres = pctipres
                           THEN
                              -- Si el trobem, el modifiquem
                              obreserva := vgobsiniestro.tramitaciones(i)
                                           .reservas(jj);
                              vpasexec  := 155;
                              -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar sense iva ni retencio
                              obreserva.ireserva := obreserva.ireserva -
                                                    NVL(pisinret, 0); -- - NVL(piiva, 0) - NVL(piretenc, 0));
                              vsuma              := NVL(obreserva.ipago, 0) +
                                                    NVL(pisinret, 0); --- NVL(piiva, 0) - NVL(piretenc, 0);
                              -- INI bug 31298/174629:NSS:20/05/2014
                              v_itotimp := NVL(piiva, 0) + NVL(piica, 0); -- 24637/0147756:NSS:21/03/2014
                              v_itotret := NVL(piretenc, 0) +
                                           NVL(pireteiva, 0) +
                                           NVL(pireteica, 0); -- 24637/0147756:NSS:21/03/2014

                              IF NVL(obreserva.itotimp, 0) > 0
                              THEN
                                 v_itotimp := greatest(obreserva.itotimp -
                                                       v_itotimp,
                                                       0); -- 24637/0147756:NSS:21/03/2014
                              ELSE
                                 v_itotimp := 0;
                              END IF;

                              IF NVL(obreserva.itotret, 0) > 0
                              THEN
                                 v_itotret := greatest(obreserva.itotret -
                                                       v_itotret,
                                                       0); -- 24637/0147756:NSS:21/03/2014
                              ELSE
                                 v_itotret := 0;
                              END IF;

                              -- Bug 11945 - 16/12/2009 - AMC
                              -- FIN bug 31298/174629:NSS:20/05/2014
                              vnumerr := pac_iax_siniestros.f_set_objeto_sintramireserva(obreserva.nsinies,
                                                                                         obreserva.ntramit,
                                                                                         obreserva.ctipres,
                                                                                         obreserva.ttipres,
                                                                                         NULL,
                                                                                         obreserva.cgarant,
                                                                                         obreserva.ccalres,
                                                                                         f_sysdate,
                                                                                         obreserva.cmonres,
                                                                                         obreserva.ireserva-NVL(piotrosgas,0),
                                                                                         vsuma+NVL(piotrosgas,0),
                                                                                         NULL,
                                                                                         NULL,
                                                                                         obreserva.icaprie,
                                                                                         obreserva.ipenali,
                                                                                         obreserva.fresini,
                                                                                         obreserva.fresfin,
                                                                                         obreserva.fultpag,
                                                                                         psidepag,
                                                                                         obreserva.sproces,
                                                                                         obreserva.fcontab,
                                                                                         obreserva.iprerec,
                                                                                         obreserva.ctipgas,
                                                                                         'PAGO',
                                                                                         NULL,
                                                                                         obreserva.ifranq,
                                                                                         obreserva.ndias,
                                                                                         4, --cmovres --0031294/0174788: NSS:26/05/2014
                                                                                         v_itotimp, --bug 31298/174629:NSS:20/05/2014
                                                                                         mensajes,
                                                                                         ppiva,
                                                                                         ppretenc,
                                                                                         ppreteiva,
                                                                                         ppreteica,
                                                                                         NULL, --piva_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                         NULL, --pretenc_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                         NULL, --preteiva_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                         NULL, --preteica_ctipind -- 24637/0147756:NSS:20/03/2014
                                                                                         v_itotret --bug 31298/174629:NSS:20/05/2014
                                                                                         );

                              --Fi Bug 11945 - 16/12/2009 - AMC
                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;

                        IF vgobsiniestro.tramitaciones(i).pagos(j)
                         .pagogar IS NULL
                        THEN
                           vnorden := 1;
                           vgobsiniestro.tramitaciones(i).pagos(j).pagogar := t_iax_sin_trami_pago_gar();
                        ELSIF vgobsiniestro.tramitaciones(i).pagos(j)
                         .pagogar.count > 0
                        THEN
                           vnorden := NVL(vgobsiniestro.tramitaciones(i).pagos(j).pagogar(vgobsiniestro.tramitaciones(i).pagos(j).pagogar.last)
                                          .norden,
                                          0) + 1;
                        END IF;

                        vpasexec := 16;

                        --actualitzem la cabecera del pagament.
                        FOR x IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                               .pagos.last
                        LOOP
                           vpasexec := 77;

                           IF vgobsiniestro.tramitaciones(i).pagos(x)
                            .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).pagos(x)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              obpago   := vgobsiniestro.tramitaciones(i)
                                          .pagos(x);
                              vpasexec := 88;
                              -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar el iretenc tambÃ©
                              vnumerr := pac_iax_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                          psidepag,
                                                                                          obpago.nsinies,
                                                                                          obpago.ntramit,
                                                                                          obpago.destinatari.ctipdes,
                                                                                          obpago.ctippag,
                                                                                          obpago.cconpag,
                                                                                          obpago.ccauind,
                                                                                          obpago.cforpag,
                                                                                          obpago.fordpag,
                                                                                          obpago.ctipban,
                                                                                          obpago.cbancar,
                                                                                          obpago.cmonres,
                                                                                          NVL(obpago.isinret,
                                                                                              0) +
                                                                                          NVL(pisinret,
                                                                                              0),
                                                                                          NULL,
                                                                                          NULL,
                                                                                          NVL(obpago.iretenc,
                                                                                              0) +
                                                                                          NVL(piretenc,
                                                                                              0),
                                                                                          NVL(obpago.iiva,
                                                                                              0) +
                                                                                          NVL(piiva,
                                                                                              0),
                                                                                          NVL(obpago.isuplid,
                                                                                              0) +
                                                                                          NVL(pisuplid,
                                                                                              0),
                                                                                          NVL(obpago.ifranq,
                                                                                              0) +
                                                                                          NVL(pifranq,
                                                                                              0),
                                                                                          NVL(obpago.iresred,
                                                                                              0) +
                                                                                          NVL(piresred,
                                                                                              0),
                                                                                          obpago.iresrcm +
                                                                                          NVL(piresrcm,
                                                                                              0),
                                                                                          obpago.cmonpag,
                                                                                          obpago.isinretpag,
                                                                                          NULL,
                                                                                          obpago.iretencpag,
                                                                                          obpago.iivapag,
                                                                                          obpago.isuplidpag,
                                                                                          obpago.ifranqpag,
                                                                                          f_sysdate,
                                                                                          obpago.nfacref,
                                                                                          obpago.ffacref,
                                                                                          obpago.destinatari.persona.sperson,
                                                                                          obpago.sidepagtemp,
                                                                                          obpago.cultpag,
                                                                                          obpago.ncheque,
                                                                                          vsidepag,
                                                                                          mensajes,
                                                                                          NVL(obpago.ireteiva,
                                                                                              0) +
                                                                                          NVL(pireteiva,
                                                                                              0),
                                                                                          NVL(obpago.ireteica,
                                                                                              0) +
                                                                                          NVL(pireteica,
                                                                                              0),
                                                                                          NVL(obpago.ireteivapag,
                                                                                              0) +
                                                                                          NVL(pireteivapag,
                                                                                              0),
                                                                                          NVL(obpago.ireteicapag,
                                                                                              0) +
                                                                                          NVL(pireteicapag,
                                                                                              0),
                                                                                          NVL(obpago.iica,
                                                                                              0) +
                                                                                          NVL(piica,
                                                                                              0),
                                                                                          NVL(obpago.iicapag,
                                                                                              0) +
                                                                                          NVL(piicapag,
                                                                                              0),
                                                                                          obpago.cagente,
                                                                                          obpago.npersrel,
                                                                                          obpago.cdomici,
                                                                                          obpago.ctributacion,
                                                                                          obpago.cbanco,
                                                                                          obpago.cofici,
                                                                                          obpago.cciudad,
                                                                                          obpago.presentador.sperson,
                                                                                          obpago.tobserva,
                                                                                          NVL(obpago.iotrosgas, 0) + NVL(piotrosgas, 0),
                                                                                          NVL(obpago.ibaseipoc, 0) + NVL(pibaseipoc, 0),
                                                                                          NVL(obpago.iipoconsumo, 0) + NVL(piipoconsumo, 0),
                                                                                          NVL(obpago.iotrosgaspag, 0) + NVL(piotrosgaspag, 0),
                                                                                          NVL(obpago.ibaseipocpag, 0) + NVL(pibaseipocpag, 0),
                                                                                          NVL(obpago.iipoconsumopag, 0) + NVL(piipoconsumopag, 0)
                                                                                          );

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;

                        vgobsiniestro.tramitaciones(i).pagos(j).pagogar.extend;
                        v_index := vgobsiniestro.tramitaciones(i).pagos(j)
                                   .pagogar.last;
                        vgobsiniestro.tramitaciones(i).pagos(j).pagogar(v_index) := ob_iax_sin_trami_pago_gar;

                        IF obreserva IS NOT NULL
                        THEN
                           vgobsiniestro.tramitaciones(i).pagos(j).pagogar(v_index).reserva := obreserva;
                        END IF;

                        --guardem les dades del detall del pagament
                        vnumerr  := pac_md_siniestros.f_set_obj_sintram_pagrecob_gar(psidepag,
                                                                                     pctipres,
                                                                                     pnmovres,
                                                                                     pcgarant,
                                                                                     pfperini,
                                                                                     pfperfin,
                                                                                     pcmonres,
                                                                                     pisinret,
                                                                                     piiva,
                                                                                     pisuplid,
                                                                                     piretenc,
                                                                                     pifranq,
                                                                                     pcmonpag,
                                                                                     pisinretpag,
                                                                                     piivapag,
                                                                                     pisuplidpag,
                                                                                     piretencpag,
                                                                                     pifranqpag,
                                                                                     pfcambio,
                                                                                     piresrcm,
                                                                                     piresred,
                                                                                     ppiva,
                                                                                     ppretenc,
                                                                                     pcconpag,
                                                                                     vnorden,
                                                                                     vgobsiniestro.tramitaciones(i).pagos(j)
                                                                                     .pagogar(v_index),
                                                                                     mensajes,
                                                                                     ppreteiva,
                                                                                     ppreteica,
                                                                                     pireteiva,
                                                                                     pireteica,
                                                                                     pireteivapag,
                                                                                     pireteicapag,
                                                                                     ppica,
                                                                                     piica,
                                                                                     piicapag,
                                                                                     pciva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                     pcretenc_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                     pcreteiva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                     pcreteica_tipind,
                                                                                     piotrosgas,
                                                                                     pibaseipoc,
                                                                                     ppipoconsumo,
                                                                                     pctipind,
                                                                                     piipoconsumo,
                                                                                     piotrosgaspag,
                                                                                     pibaseipocpag,
                                                                                     piipoconsumopag
                                                                                     );
                        vpasexec := 17;

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;

                        vpasexec := 66;
                     END IF;
                  END IF;
               END LOOP;
            END IF;
         END LOOP;
      ELSIF pctippag = 7
      THEN
         --recobros
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 18;

            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 19;

               FOR j IN vgobsiniestro.tramitaciones(i).recobros.first .. vgobsiniestro.tramitaciones(i)
                                                                         .recobros.last
               LOOP
                  vpasexec := 20;

                  IF vgobsiniestro.tramitaciones(i).recobros(j)
                   .sidepag = psidepag AND
                     vgobsiniestro.tramitaciones(i).recobros(j)
                     .ntramit = pntramit
                  THEN
                     -- Si el trobem, el modifiquem
                     vpasexec := 21;

                     IF vgobsiniestro.tramitaciones(i).recobros(j)
                      .pagogar IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).recobros(j)
                        .pagogar.count > 0
                     THEN
                        vpasexec := 22;

                        FOR k IN vgobsiniestro.tramitaciones(i).recobros(j)
                                 .pagogar.first .. vgobsiniestro.tramitaciones(i).recobros(j)
                                                   .pagogar.last
                        LOOP
                           --MODIFICACION DE RECOBRO
                           IF vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                            .reserva.nmovres = pnmovres AND
                              vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                              .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                              .reserva.ctipres = pctipres AND
                              vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                              .norden = pnorden
                           THEN
                              vpasexec := 23;
                              -- Bug 11847 - 23/11/2009 - AMC
                              -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar nomÃ©s amb l'isinret
                              vsuma := vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                                       .isinret;

                              --Fi Bug 11847 - 23/11/2009 - AMC
                              FOR l IN vgobsiniestro.tramitaciones(i)
                                       .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                          .reservas.last
                              LOOP
                                 IF vgobsiniestro.tramitaciones(i).reservas(l)
                                  .nmovres = pnmovres --+ 1 -- bug 31298/174629:NSS:20/05/2014
                                     AND
                                    vgobsiniestro.tramitaciones(i).reservas(l)
                                    .ntramit = pntramit AND
                                    vgobsiniestro.tramitaciones(i).reservas(l)
                                    .ctipres = pctipres
                                 THEN
                                    -- Si el trobem, el modifiquem
                                    obreserva := vgobsiniestro.tramitaciones(i)
                                                 .reservas(l);

                                    -- ini bug 31298/174629:NSS:20/05/2014
                                    --obreserva.ireserva := obreserva.ireserva + vsuma;
                                    IF pcconpag = 12
                                    THEN
                                       obreserva.ireserva := obreserva.ireserva +
                                                             pisinret;
                                    END IF;

                                    obreserva.irecobro := obreserva.irecobro -
                                                          vsuma + pisinret;
                                    obreserva.iprerec  := obreserva.iprerec -
                                                          pisinret;
                                    obreserva.iprerec  := greatest(obreserva.iprerec,
                                                                   0);
                                    v_itotimp_ant      := NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k).iiva,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k).iica,
                                                              0);
                                    v_itotimp          := NVL(piiva, 0) +
                                                          NVL(piica, 0);
                                    v_itotret_ant      := NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                                                              .iretenc,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                                                              .ireteiva,
                                                              0) +
                                                          NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k)
                                                              .ireteica,
                                                              0);
                                    v_itotret          := NVL(piretenc, 0) +
                                                          NVL(pireteiva, 0) +
                                                          NVL(pireteica, 0); -- 24637/0147756:NSS:21/03/2014

                                    IF NVL(obreserva.itotimp, 0) > 0
                                    THEN
                                       v_itotimp := greatest(obreserva.itotimp +
                                                             v_itotimp_ant -
                                                             v_itotimp,
                                                             0); -- 24637/0147756:NSS:21/03/2014
                                    ELSE
                                       v_itotimp := 0;
                                    END IF;

                                    IF NVL(obreserva.itotret, 0) > 0
                                    THEN
                                       v_itotret := greatest(obreserva.itotret +
                                                             v_itotret_ant -
                                                             v_itotret,
                                                             0); -- 24637/0147756:NSS:21/03/2014
                                    ELSE
                                       v_itotret := 0;
                                    END IF;

                                    -- fin bug 31298/174629:NSS:20/05/2014

                                    -- Bug 11945 - 16/12/2009 - AMC
                                    vnumerr := pac_iax_siniestros.f_set_objeto_sintramireserva(obreserva.nsinies,
                                                                                               obreserva.ntramit,
                                                                                               obreserva.ctipres,
                                                                                               obreserva.ttipres,
                                                                                               obreserva.nmovres, -- bug 31298/174629:NSS:20/05/2014
                                                                                               obreserva.cgarant,
                                                                                               obreserva.ccalres,
                                                                                               f_sysdate,
                                                                                               obreserva.cmonres,
                                                                                               obreserva.ireserva,
                                                                                               NULL,
                                                                                               NULL,
                                                                                               obreserva.irecobro, -- bug 31298/174629:NSS:20/05/2014
                                                                                               obreserva.icaprie,
                                                                                               obreserva.ipenali,
                                                                                               obreserva.fresini,
                                                                                               obreserva.fresfin,
                                                                                               obreserva.fultpag,
                                                                                               psidepag,
                                                                                               obreserva.sproces,
                                                                                               obreserva.fcontab,
                                                                                               obreserva.iprerec,
                                                                                               obreserva.ctipgas,
                                                                                               'RECO',
                                                                                               NULL,
                                                                                               obreserva.ifranq,
                                                                                               obreserva.ndias,
                                                                                               22, --cmovres --0031294/0174788: NSS:26/05/2014
                                                                                               v_itotimp, -- bug 31298/174629:NSS:20/05/2014
                                                                                               mensajes,
                                                                                               NULL, --ppiva,   -- bug 31298/174629:NSS:20/05/2014
                                                                                               NULL, --ppretenc,-- bug 31298/174629:NSS:20/05/2014
                                                                                               NULL, --ppreteiva,-- bug 31298/174629:NSS:20/05/2014
                                                                                               NULL, --ppreteica-- bug 31298/174629:NSS:20/05/2014
                                                                                               v_itotret -- bug 31298/174629:NSS:20/05/2014
                                                                                               );

                                    --Fi Bug 11945 - 16/12/2009 - AMC
                                    IF vnumerr <> 0
                                    THEN
                                       RAISE e_object_error;
                                    END IF;

                                    vgobsiniestro.tramitaciones(i).recobros(j).pagogar(k).reserva := obreserva;
                                 END IF;
                              END LOOP;

                              FOR m IN vgobsiniestro.tramitaciones(i)
                                       .recobros.first .. vgobsiniestro.tramitaciones(i)
                                                          .recobros.last
                              LOOP
                                 vpasexec := 77;

                                 IF vgobsiniestro.tramitaciones(i).recobros(m)
                                  .sidepag = psidepag AND
                                    vgobsiniestro.tramitaciones(i).recobros(m)
                                    .ntramit = pntramit
                                 THEN
                                    -- Si el trobem, el modifiquem
                                    obpago   := vgobsiniestro.tramitaciones(i)
                                                .recobros(m);
                                    vpasexec := 88;
                                    vpasexec := 90;

                                    FOR n IN vgobsiniestro.tramitaciones(i).recobros(m)
                                             .pagogar.first .. vgobsiniestro.tramitaciones(i).recobros(j)
                                                               .pagogar.last
                                    LOOP
                                       vpasexec := 91;

                                       IF vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                        .sidepag = psidepag AND
                                          vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                          .norden = pnorden --bug 32977:NSS:03/10/2014
                                       THEN
                                          vpasexec       := 92;
                                          obpago.isinret := NVL(obpago.isinret,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                                                .isinret,
                                                                0);
                                          vpasexec       := 93;
                                          -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar l'iretenc tambÃ©Ã§
                                          obpago.iretenc := NVL(obpago.iretenc,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                                                .iretenc,
                                                                0);
                                          vpasexec       := 94;
                                          obpago.iiva    := NVL(obpago.iiva,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n).iiva,
                                                                0);
                                          vpasexec       := 95;
                                          obpago.isuplid := NVL(obpago.isuplid,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                                                .isuplid,
                                                                0);
                                          vpasexec       := 96;
                                          obpago.ifranq  := NVL(obpago.ifranq,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                                                .ifranq,
                                                                0);
                                          obpago.iresrcm := NVL(obpago.iresrcm,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                                                .iresrcm,
                                                                0);
                                          obpago.iresred := NVL(obpago.iresred,
                                                                0) -
                                                            NVL(vgobsiniestro.tramitaciones(i).recobros(m).pagogar(n)
                                                                .iresred,
                                                                0);
                                       END IF;
                                    END LOOP; --n

                                    -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar l'iretenc tambÃ©
                                    vnumerr := pac_iax_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                                psidepag,
                                                                                                obpago.nsinies,
                                                                                                obpago.ntramit,
                                                                                                obpago.destinatari.ctipdes,
                                                                                                obpago.ctippag,
                                                                                                obpago.cconpag,
                                                                                                obpago.ccauind,
                                                                                                obpago.cforpag,
                                                                                                obpago.fordpag,
                                                                                                obpago.ctipban,
                                                                                                obpago.cbancar,
                                                                                                obpago.cmonres,
                                                                                                NVL(obpago.isinret,
                                                                                                    0) +
                                                                                                NVL(pisinret,
                                                                                                    0),
                                                                                                NULL,
                                                                                                NULL,
                                                                                                NVL(obpago.iretenc,
                                                                                                    0) +
                                                                                                NVL(piretenc,
                                                                                                    0),
                                                                                                NVL(obpago.iiva,
                                                                                                    0) +
                                                                                                NVL(piiva,
                                                                                                    0),
                                                                                                NVL(obpago.isuplid,
                                                                                                    0) +
                                                                                                NVL(pisuplid,
                                                                                                    0),
                                                                                                NVL(obpago.ifranq,
                                                                                                    0) +
                                                                                                NVL(pifranq,
                                                                                                    0),
                                                                                                NVL(obpago.iresred,
                                                                                                    0) +
                                                                                                NVL(piresred,
                                                                                                    0),
                                                                                                NVL(obpago.iresrcm,
                                                                                                    0) +
                                                                                                NVL(piresrcm,
                                                                                                    0),
                                                                                                obpago.cmonpag,
                                                                                                obpago.isinretpag,
                                                                                                NULL,
                                                                                                obpago.iretencpag,
                                                                                                obpago.iivapag,
                                                                                                obpago.isuplidpag,
                                                                                                obpago.ifranqpag,
                                                                                                f_sysdate,
                                                                                                obpago.nfacref,
                                                                                                obpago.ffacref,
                                                                                                obpago.destinatari.persona.sperson,
                                                                                                obpago.sidepagtemp,
                                                                                                obpago.cultpag,
                                                                                                obpago.ncheque,
                                                                                                vsidepag,
                                                                                                mensajes,
                                                                                                NVL(obpago.ireteiva,
                                                                                                    0) +
                                                                                                NVL(pireteiva,
                                                                                                    0),
                                                                                                NVL(obpago.ireteica,
                                                                                                    0) +
                                                                                                NVL(pireteica,
                                                                                                    0),
                                                                                                NVL(obpago.ireteivapag,
                                                                                                    0) +
                                                                                                NVL(pireteivapag,
                                                                                                    0),
                                                                                                NVL(obpago.ireteicapag,
                                                                                                    0) +
                                                                                                NVL(pireteicapag,
                                                                                                    0),
                                                                                                NVL(obpago.iica,
                                                                                                    0) +
                                                                                                NVL(piica,
                                                                                                    0),
                                                                                                NVL(obpago.iicapag,
                                                                                                    0) +
                                                                                                NVL(piicapag,
                                                                                                    0),
                                                                                                obpago.cagente,
                                                                                                obpago.npersrel,
                                                                                                obpago.cdomici,
                                                                                                obpago.ctributacion,
                                                                                                obpago.cbanco,
                                                                                                obpago.cofici,
                                                                                                obpago.cciudad,
                                                                                                obpago.presentador.sperson,
                                                                                                obpago.tobserva,
                                                                                                NVL(obpago.iotrosgas, 0) + NVL(piotrosgas, 0),
                                                                                                NVL(obpago.ibaseipoc, 0) + NVL(pibaseipoc, 0),
                                                                                                NVL(obpago.iipoconsumo, 0) + NVL(piipoconsumo, 0),
                                                                                                NVL(obpago.iotrosgaspag, 0) + NVL(piotrosgaspag, 0),
                                                                                                NVL(obpago.ibaseipocpag, 0) + NVL(pibaseipocpag, 0),
                                                                                                NVL(obpago.iipoconsumopag, 0) + NVL(piipoconsumopag, 0)
                                                                                                );

                                    IF vnumerr <> 0
                                    THEN
                                       RAISE e_object_error;
                                    END IF;
                                 END IF;
                              END LOOP; --m

                              vnumerr := pac_md_siniestros.f_set_obj_sintram_pagrecob_gar(psidepag,
                                                                                          pctipres,
                                                                                          pnmovres, -- bug 31298/174629:NSS:20/05/2014
                                                                                          pcgarant,
                                                                                          pfperini,
                                                                                          pfperfin,
                                                                                          pcmonres,
                                                                                          pisinret,
                                                                                          piiva,
                                                                                          pisuplid,
                                                                                          piretenc,
                                                                                          pifranq,
                                                                                          pcmonpag,
                                                                                          pisinretpag,
                                                                                          piivapag,
                                                                                          pisuplidpag,
                                                                                          piretencpag,
                                                                                          pifranqpag,
                                                                                          pfcambio,
                                                                                          piresrcm,
                                                                                          piresred,
                                                                                          ppiva,
                                                                                          ppretenc,
                                                                                          pcconpag,
                                                                                          pnorden,
                                                                                          vgobsiniestro.tramitaciones(i).recobros(j)
                                                                                          .pagogar(k),
                                                                                          mensajes,
                                                                                          ppreteiva,
                                                                                          ppreteica,
                                                                                          pireteiva,
                                                                                          pireteica,
                                                                                          pireteivapag,
                                                                                          pireteicapag,
                                                                                          ppica,
                                                                                          piica,
                                                                                          piicapag,
                                                                                          pciva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                          pcretenc_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                          pcreteiva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                          pcreteica_tipind,
                                                                                          piotrosgas,
                                                                                          pibaseipoc,
                                                                                          ppipoconsumo,
                                                                                          pctipind,
                                                                                          piipoconsumo,
                                                                                          piotrosgaspag,
                                                                                          pibaseipocpag,
                                                                                          piipoconsumopag
                                                                                          );

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              trobat := TRUE;
                           END IF;
                        END LOOP; --k
                     END IF;

                     vpasexec := 24;
                     vnorden  := 1;

                     --ALTA DE RECOBRO
                     IF trobat = FALSE
                     THEN
                        --creem una nova reserva amb les dades anteriors de la reserva i actualitzem la reserva de l'objecte pagament
                        FOR q IN vgobsiniestro.tramitaciones(i)
                                 .reservas.first .. vgobsiniestro.tramitaciones(i)
                                                    .reservas.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).reservas(q)
                            .nmovres = pnmovres AND
                              vgobsiniestro.tramitaciones(i).reservas(q)
                              .ntramit = pntramit AND
                              vgobsiniestro.tramitaciones(i).reservas(q)
                              .ctipres = pctipres
                           THEN
                              -- Si el trobem, el modifiquem
                              obreserva := vgobsiniestro.tramitaciones(i)
                                           .reservas(q);
                              vpasexec  := 26;
                              -- ini bug 31298/174629:NSS:20/05/2014
                              -- Bug 12783 - 19/01/2010 -XPL, s'actualitzar nomÃ©s amb l'iretenc
                              vsuma := NVL(pisinret, 0); --   - NVL(piiva, 0) - NVL(piretenc, 0);

                              IF pcconpag = 12
                              THEN
                                 obreserva.ireserva := obreserva.ireserva +
                                                       vsuma;
                              END IF;

                              obreserva.irecobro := obreserva.irecobro +
                                                    vsuma;
                              obreserva.iprerec  := obreserva.iprerec -
                                                    vsuma;
                              obreserva.iprerec  := greatest(obreserva.iprerec,
                                                             0);
                              -- INI bug 31298/174629:NSS:20/05/2014
                              v_itotimp := NVL(piiva, 0) + NVL(piica, 0); -- 24637/0147756:NSS:21/03/2014
                              v_itotret := NVL(piretenc, 0) +
                                           NVL(pireteiva, 0) +
                                           NVL(pireteica, 0); -- 24637/0147756:NSS:21/03/2014

                              IF NVL(obreserva.itotimp, 0) > 0
                              THEN
                                 v_itotimp := greatest(obreserva.itotimp -
                                                       v_itotimp,
                                                       0); -- 24637/0147756:NSS:21/03/2014
                              ELSE
                                 v_itotimp := 0;
                              END IF;

                              IF NVL(obreserva.itotret, 0) > 0
                              THEN
                                 v_itotret := greatest(obreserva.itotret -
                                                       v_itotret,
                                                       0); -- 24637/0147756:NSS:21/03/2014
                              ELSE
                                 v_itotret := 0;
                              END IF;

                              -- Bug 11945 - 16/12/2009 - AMC
                              -- FIN bug 31298/174629:NSS:20/05/2014
                              -- fin bug 31298/174629:NSS:20/05/2014

                              -- Bug 11945 - 16/12/2009 - AMC
                              vnumerr := pac_iax_siniestros.f_set_objeto_sintramireserva(obreserva.nsinies,
                                                                                         obreserva.ntramit,
                                                                                         obreserva.ctipres,
                                                                                         obreserva.ttipres,
                                                                                         NULL,
                                                                                         obreserva.cgarant,
                                                                                         obreserva.ccalres,
                                                                                         f_sysdate,
                                                                                         obreserva.cmonres,
                                                                                         obreserva.ireserva,
                                                                                         NULL,
                                                                                         NULL,
                                                                                         obreserva.irecobro,
                                                                                         obreserva.icaprie,
                                                                                         obreserva.ipenali,
                                                                                         obreserva.fresini,
                                                                                         obreserva.fresfin,
                                                                                         obreserva.fultpag,
                                                                                         psidepag,
                                                                                         obreserva.sproces,
                                                                                         obreserva.fcontab,
                                                                                         obreserva.iprerec,
                                                                                         obreserva.ctipgas,
                                                                                         'RECO',
                                                                                         NULL,
                                                                                         obreserva.ifranq,
                                                                                         obreserva.ndias,
                                                                                         22, --cmovres --0031294/0174788: NSS:26/05/2014
                                                                                         v_itotimp,
                                                                                         mensajes,
                                                                                         NULL, --ppiva,  -- bug 31298/174629:NSS:20/05/2014
                                                                                         NULL, --ppretenc,-- bug 31298/174629:NSS:20/05/2014
                                                                                         NULL, --ppreteiva,-- bug 31298/174629:NSS:20/05/2014
                                                                                         NULL, --ppreteica-- bug 31298/174629:NSS:20/05/2014
                                                                                         v_itotret);

                              --Fi Bug 11945 - 16/12/2009 - AMC
                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;

                        IF vgobsiniestro.tramitaciones(i).recobros(j)
                         .pagogar IS NULL OR
                           vgobsiniestro.tramitaciones(i).recobros(j)
                           .pagogar.count = 0
                        THEN
                           vgobsiniestro.tramitaciones(i).recobros(j).pagogar := t_iax_sin_trami_pago_gar();
                        ELSIF vgobsiniestro.tramitaciones(i).recobros(j)
                         .pagogar.count > 0
                        THEN
                           vnorden := NVL(vgobsiniestro.tramitaciones(i).recobros(j).pagogar(vgobsiniestro.tramitaciones(i).recobros(j).pagogar.last)
                                          .norden,
                                          0) + 1;
                        END IF;

                        vpasexec := 25;
                        vgobsiniestro.tramitaciones(i).recobros(j).pagogar.extend;
                        v_index := vgobsiniestro.tramitaciones(i).recobros(j)
                                   .pagogar.last;
                        vgobsiniestro.tramitaciones(i).recobros(j).pagogar(v_index) := ob_iax_sin_trami_pago_gar();
                        vgobsiniestro.tramitaciones(i).recobros(j).pagogar(v_index).reserva := obreserva;
                        --guardem les dades del detall del pagament
                        vnumerr  := pac_md_siniestros.f_set_obj_sintram_pagrecob_gar(psidepag,
                                                                                     pctipres,
                                                                                     pnmovres,
                                                                                     pcgarant,
                                                                                     pfperini,
                                                                                     pfperfin,
                                                                                     pcmonres,
                                                                                     pisinret,
                                                                                     piiva,
                                                                                     pisuplid,
                                                                                     piretenc,
                                                                                     pifranq,
                                                                                     pcmonpag,
                                                                                     pisinretpag,
                                                                                     piivapag,
                                                                                     pisuplidpag,
                                                                                     piretencpag,
                                                                                     pifranqpag,
                                                                                     pfcambio,
                                                                                     piresrcm,
                                                                                     piresred,
                                                                                     ppiva,
                                                                                     ppretenc,
                                                                                     pcconpag,
                                                                                     NULL, --32097:NSS:08/07/2014
                                                                                     vgobsiniestro.tramitaciones(i).recobros(j)
                                                                                     .pagogar(v_index),
                                                                                     mensajes,
                                                                                     ppreteiva,
                                                                                     ppreteica,
                                                                                     pireteiva,
                                                                                     pireteica,
                                                                                     pireteivapag,
                                                                                     pireteicapag,
                                                                                     ppica,
                                                                                     piica,
                                                                                     piicapag,
                                                                                     pciva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                     pcretenc_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                     pcreteiva_tipind, --bug 24637/147756:NSS:03/03/2014
                                                                                     pcreteica_tipind,
                                                                                     piotrosgas,
                                                                                     pibaseipoc,
                                                                                     ppipoconsumo,
                                                                                     pctipind,
                                                                                     piipoconsumo,
                                                                                     piotrosgaspag,
                                                                                     pibaseipocpag,
                                                                                     piipoconsumopag
                                                                                     );
                        vpasexec := 27;

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;

                        vpasexec := 66;

                        --actualitzem la cabecera del recobrament.
                        FOR x IN vgobsiniestro.tramitaciones(i)
                                 .recobros.first .. vgobsiniestro.tramitaciones(i)
                                                    .recobros.last
                        LOOP
                           vpasexec := 77;

                           IF vgobsiniestro.tramitaciones(i).recobros(x)
                            .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).recobros(x)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              obpago   := vgobsiniestro.tramitaciones(i)
                                          .recobros(x);
                              vpasexec := 88;
                              vnumerr  := pac_iax_siniestros.f_set_obj_sintrami_pago_recob(psseguro,
                                                                                           psidepag,
                                                                                           obpago.nsinies,
                                                                                           obpago.ntramit,
                                                                                           obpago.destinatari.ctipdes,
                                                                                           obpago.ctippag,
                                                                                           obpago.cconpag,
                                                                                           obpago.ccauind,
                                                                                           obpago.cforpag,
                                                                                           obpago.fordpag,
                                                                                           obpago.ctipban,
                                                                                           obpago.cbancar,
                                                                                           obpago.cmonres,
                                                                                           NVL(obpago.isinret,
                                                                                               0) +
                                                                                           NVL(pisinret,
                                                                                               0),
                                                                                           NULL,
                                                                                           NULL,
                                                                                           NVL(obpago.iretenc,
                                                                                               0) +
                                                                                           NVL(piretenc,
                                                                                               0),
                                                                                           NVL(obpago.iiva,
                                                                                               0) +
                                                                                           NVL(piiva,
                                                                                               0),
                                                                                           NVL(obpago.isuplid,
                                                                                               0) +
                                                                                           NVL(pisuplid,
                                                                                               0),
                                                                                           NVL(obpago.ifranq,
                                                                                               0) +
                                                                                           NVL(pifranq,
                                                                                               0),
                                                                                           NVL(obpago.iresred,
                                                                                               0) +
                                                                                           NVL(piresred,
                                                                                               0),
                                                                                           NVL(obpago.iresrcm,
                                                                                               0) +
                                                                                           NVL(piresrcm,
                                                                                               0),
                                                                                           obpago.cmonpag,
                                                                                           obpago.isinretpag,
                                                                                           NULL,
                                                                                           obpago.iretencpag,
                                                                                           obpago.iivapag,
                                                                                           obpago.isuplidpag,
                                                                                           obpago.ifranqpag,
                                                                                           f_sysdate,
                                                                                           obpago.nfacref,
                                                                                           obpago.ffacref,
                                                                                           obpago.destinatari.persona.sperson,
                                                                                           obpago.sidepagtemp,
                                                                                           obpago.cultpag,
                                                                                           obpago.ncheque,
                                                                                           vsidepag,
                                                                                           mensajes,
                                                                                           NVL(obpago.ireteiva,
                                                                                               0) +
                                                                                           NVL(pireteiva,
                                                                                               0),
                                                                                           NVL(obpago.ireteica,
                                                                                               0) +
                                                                                           NVL(pireteica,
                                                                                               0),
                                                                                           NVL(obpago.ireteivapag,
                                                                                               0) +
                                                                                           NVL(pireteivapag,
                                                                                               0),
                                                                                           NVL(obpago.ireteicapag,
                                                                                               0) +
                                                                                           NVL(pireteicapag,
                                                                                               0),
                                                                                           NVL(obpago.iica,
                                                                                               0) +
                                                                                           NVL(piica,
                                                                                               0),
                                                                                           NVL(obpago.iicapag,
                                                                                               0) +
                                                                                           NVL(piicapag,
                                                                                               0),
                                                                                           obpago.cagente,
                                                                                           obpago.npersrel,
                                                                                           obpago.cdomici,
                                                                                           obpago.ctributacion,
                                                                                           obpago.cbanco,
                                                                                           obpago.cofici,
                                                                                           obpago.cciudad,
                                                                                           obpago.presentador.sperson,
                                                                                           obpago.tobserva,
                                                                                           NVL(obpago.iotrosgas, 0) + NVL(piotrosgas, 0),
                                                                                           NVL(obpago.ibaseipoc, 0) + NVL(pibaseipoc, 0),
                                                                                           NVL(obpago.iipoconsumo, 0) + NVL(piipoconsumo, 0),
                                                                                           NVL(obpago.iotrosgaspag, 0) + NVL(piotrosgaspag, 0),
                                                                                           NVL(obpago.ibaseipocpag, 0) + NVL(pibaseipocpag, 0),
                                                                                           NVL(obpago.iipoconsumopag, 0) + NVL(piipoconsumopag, 0)
                                                                                           );

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END LOOP; --j
            END IF;
         END LOOP; --i
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       vgobsiniestro.nsinies,
                                                       psidepag, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vpasexec := 100;
      vnumerr  := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                        vgobsiniestro.tramitaciones,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI

      --FIN  BUG 31294/174788:NSS:20/05/2014
      --Se vuelve a montar todo el proceso de alta y modificaciÃ³n detalle pago utilizando el objeto OB_IAX_SIN_TRAMI_PAGO_GAR
      vpasexec := 101;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_obj_sintram_pagrecob_gar;

   /*************************************************************************
   funciÃ³n borra en una variable global de la capa IAX los valores del objeto
   ob_iax_siniestros.tramitaciones.pagogar

           -- Bug 11847 - 23/11/2009 - AMC
           -- Bug 13166 - 15/02/2009 - AMC
      *************************************************************************/
   FUNCTION f_del_obj_sintram_pagrecob_gar(pnsinies IN VARCHAR2,
                                           pntramit IN NUMBER,
                                           pctippag IN NUMBER,
                                           psidepag IN NUMBER,
                                           pctipres IN NUMBER,
                                           pcgarant IN NUMBER,
                                           pnmovres IN NUMBER,
                                           pnorden  IN NUMBER,
                                           mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_obj_sintram_pagrecob_gar';
      vparam         VARCHAR2(500) := 'parÃ¡metros - psidepag: ' || psidepag ||
                                      ' - pntramit: ' || pntramit ||
                                      ' - pnsinies: ' || pnsinies ||
                                      ' - pctippag: ' || pctippag ||
                                      ' pctipres:' || pctipres ||
                                      ' pcgarant:' || pcgarant ||
                                      ' pnmovres:' || pnmovres ||
                                      ' pnorden:' || pnorden;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      vnmovres       NUMBER(8);
      v_index        NUMBER(8);
      trobat         BOOLEAN := FALSE;
      vobreserva     ob_iax_sin_trami_reserva := ob_iax_sin_trami_reserva(); -- 26108
      vobreserva_ori ob_iax_sin_trami_reserva := ob_iax_sin_trami_reserva(); -- 26108
      --      obpago         ob_iax_sin_trami_pago := ob_iax_sin_trami_pago();
      vobpagogar ob_iax_sin_trami_pago_gar := ob_iax_sin_trami_pago_gar(); -- 26108
      vsuma      NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psidepag IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      --passarem el count per fer una simulaciÃ³ del sidepag, serÃ  fictici pels objectes
      IF pctippag = 2
      THEN
         -- pagos-->sidepag = 2
         vpasexec := 3;

         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 4;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 5;

                  FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                         .pagos.last
                  LOOP
                     vpasexec := 6;

                     IF vgobsiniestro.tramitaciones(i).pagos(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).pagos(j)
                        .ntramit = pntramit
                     THEN
                        -- Si el trobem, el modifiquem
                        vpasexec := 7;
                        -- Bug 13166 - 15/02/2009 - AMC
                        vnumerr := pac_md_siniestros.f_del_movpaggar(psidepag,
                                                                     pnsinies,
                                                                     pntramit,
                                                                     pctipres,
                                                                     pcgarant,
                                                                     pnmovres,
                                                                     pnorden,
                                                                     mensajes);

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;
      ELSIF pctippag = 7
      THEN
         --recobros
         -- Bug 13166 - 15/02/2009 - AMC
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 8;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 9;

                  FOR j IN vgobsiniestro.tramitaciones(i).recobros.first .. vgobsiniestro.tramitaciones(i)
                                                                            .recobros.last
                  LOOP
                     vpasexec := 10;

                     IF vgobsiniestro.tramitaciones(i).recobros(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).recobros(j)
                        .ntramit = pntramit
                     THEN
                        -- Si el trobem, el modifiquem
                        vpasexec := 11;
                        vnumerr  := pac_md_siniestros.f_del_movpaggar(psidepag,
                                                                      pnsinies,
                                                                      pntramit,
                                                                      pctipres,
                                                                      pcgarant,
                                                                      pnmovres,
                                                                      pnorden,
                                                                      mensajes);

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;
         -- Fi Bug 13166 - 15/02/2009 - AMC
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_obj_sintram_pagrecob_gar;

   /*************************************************************************
   funciÃ³n RETORNA LOBJECTE DE PAGOS_GAR
         psseguro IN NUMBER,
         pnsinies IN VARCHAR2,
         pntramit IN NUMBER,
         pctippag IN NUMBER,
             *************************************************************************/
   FUNCTION f_get_obj_sintram_pagrecob_gar(psseguro IN NUMBER,
                                           pnsinies IN VARCHAR2,
                                           pntramit IN NUMBER,
                                           pctippag IN NUMBER,
                                           psidepag IN NUMBER,
                                           pctipres IN NUMBER,
                                           pnmovres IN NUMBER,
                                           pnorden  IN NUMBER,
                                           mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_pago_gar IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_obj_sintram_pagrecob_gar';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_index     NUMBER(8);
      v_obpagogar ob_iax_sin_trami_pago_gar := ob_iax_sin_trami_pago_gar();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF pctippag = 2
      THEN
         -- pagos-->sidepag = 2
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  FOR j IN vgobsiniestro.tramitaciones(i).pagos.first .. vgobsiniestro.tramitaciones(i)
                                                                         .pagos.last
                  LOOP
                     IF vgobsiniestro.tramitaciones(i).pagos(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).pagos(j)
                        .ntramit = pntramit
                     THEN
                        -- Si el trobem, el modifiquem
                        FOR n IN vgobsiniestro.tramitaciones(i).pagos(j)
                                 .pagogar.first .. vgobsiniestro.tramitaciones(i).pagos(j)
                                                   .pagogar.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                            .reserva.nmovres = pnmovres AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .reserva.ctipres = pctipres AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .norden = pnorden
                           THEN
                              v_obpagogar := vgobsiniestro.tramitaciones(i).pagos(j)
                                             .pagogar(n);
                           END IF;
                        END LOOP;
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;
      ELSIF pctippag = 7
      THEN
         --recobros
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  FOR j IN vgobsiniestro.tramitaciones(i).recobros.first .. vgobsiniestro.tramitaciones(i)
                                                                            .recobros.last
                  LOOP
                     IF vgobsiniestro.tramitaciones(i).recobros(j)
                      .sidepag = psidepag AND
                        vgobsiniestro.tramitaciones(i).recobros(j)
                        .ntramit = pntramit
                     THEN
                        -- Si el trobem, el modifiquem
                        FOR n IN vgobsiniestro.tramitaciones(i).recobros(j)
                                 .pagogar.first .. vgobsiniestro.tramitaciones(i).recobros(j)
                                                   .pagogar.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                            .reserva.nmovres = pnmovres AND
                              vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                              .sidepag = psidepag AND
                              vgobsiniestro.tramitaciones(i).recobros(j).pagogar(n)
                              .reserva.ctipres = pctipres AND
                              vgobsiniestro.tramitaciones(i).pagos(j).pagogar(n)
                              .norden = pnorden
                           THEN
                              v_obpagogar := vgobsiniestro.tramitaciones(i).recobros(j)
                                             .pagogar(n);
                           END IF;
                        END LOOP;
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;
      END IF;

      --INI BUG 31294/174788: NSS:19/06/2014
      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               FOR res IN vgobsiniestro.tramitaciones(i).reservas.first .. vgobsiniestro.tramitaciones(i)
                                                                           .reservas.last
               LOOP
                  IF vgobsiniestro.tramitaciones(i).reservas(res)
                   .ntramit = pntramit AND
                     vgobsiniestro.tramitaciones(i).reservas(res)
                     .ctipres = v_obpagogar.reserva.ctipres AND
                      NVL(vgobsiniestro.tramitaciones(i).reservas(res)
                          .ctipgas,
                          -1) = NVL(v_obpagogar.reserva.ctipgas, -1) --26108
                      AND
                     vgobsiniestro.tramitaciones(i).reservas(res)
                     .cmonres = v_obpagogar.reserva.cmonres AND
                      ((v_obpagogar.reserva.ctipres = 1 AND vgobsiniestro.tramitaciones(i).reservas(res)
                       .cgarant = v_obpagogar.reserva.cgarant) OR
                       v_obpagogar.reserva.ctipres <> 1)
                  THEN
                     vnumerr := pac_md_siniestros.f_get_imp_ult_mov_reserva(pnsinies,
                                                                            pntramit,
                                                                            v_obpagogar.reserva.ctipres,
                                                                            v_obpagogar.reserva.ctipgas,
                                                                            v_obpagogar.reserva.cgarant,
                                                                            v_obpagogar.reserva.fresini,
                                                                            v_obpagogar.reserva.fresfin,
                                                                            v_obpagogar.reserva.ireserva,
                                                                            v_obpagogar.reserva.ipago,
                                                                            v_obpagogar.reserva.irecobro,
                                                                            v_obpagogar.reserva.itotimp,
                                                                            v_obpagogar.reserva.itotret,
                                                                            mensajes);
                     /*En la modificacion del detalle del pago debe verse los importes reales de lo que se puede disponer.
                       Los importes actuales en la reserva quitando lo que hay ahora mismo en ese detalle del pago
                     */
                     v_obpagogar.reserva.ireserva := v_obpagogar.reserva.ireserva +
                                                     v_obpagogar.isinret;
                     v_obpagogar.reserva.ipago    := v_obpagogar.reserva.ipago -
                                                     v_obpagogar.isinret;

                     IF v_obpagogar.reserva.itotimp > 0
                     THEN
                        v_obpagogar.reserva.itotimp := v_obpagogar.reserva.itotimp -
                                                       v_obpagogar.iiva;
                     END IF;

                     IF v_obpagogar.reserva.itotret > 0
                     THEN
                        v_obpagogar.reserva.itotret := v_obpagogar.reserva.itotret -
                                                       (v_obpagogar.iretenc +
                                                       v_obpagogar.ireteiva +
                                                       v_obpagogar.ireteica);
                     END IF;

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;
                  END IF;
               END LOOP;
            END IF;
         END IF;
      END LOOP;

      --FIN BUG 31294/174788: NSS:19/06/2014
      vpasexec := 6;
      RETURN v_obpagogar;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_obj_sintram_pagrecob_gar;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.tramitacion.agenda
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   nlinage        NUMBER(6),   --NÃºmero LÃ­nea
   ctipreg        NUMBER(3),   --CÃ³digo Tipo Registro
   ttipreg        VARCHAR2(100),   --Des Tipo Registro
   cmanual        NUMBER(3),   --CÃ³digo Registro Manual
   tmanual        VARCHAR2(100),   --Desc Registro Manual
   cestage        NUMBER(3),   --CÃ³digo Estado Agenda
   testage        VARCHAR2(100),   --Desc Registro Manual
   ffinage        DATE,   --Fecha FinalizaciÃ³n
   ttitage        VARCHAR2(100),   --TÃ­tulo AnotaciÃ³n
   tlinage        VARCHAR2(2000),   --DescripciÃ³n AnotaciÃ³n

   Bug 12604 - 08/01/2010 - AMC - Se quita el parametro pfrec
   *************************************************************************/
   FUNCTION f_set_objeto_sintramiagenda(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pnlinage IN NUMBER,
                                        pctipreg IN NUMBER,
                                        pcmanual IN NUMBER,
                                        pcestage IN NUMBER,
                                        pffinage IN DATE,
                                        pttitage IN VARCHAR2,
                                        ptlinage IN VARCHAR2,
                                        mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramiagenda';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - nlinage: ' || pnlinage ||
                                   ' - ctipreg: ' || pctipreg;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlinage    NUMBER(8);
      v_index     NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_iax_validaciones_sin.f_agenda(pctipreg,
                                                   pcmanual,
                                                   pcestage,
                                                   pffinage,
                                                   pttitage,
                                                   ptlinage,
                                                   NULL,
                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnlinage IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i).agenda IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i).agenda.first .. vgobsiniestro.tramitaciones(i)
                                                                                .agenda.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).agenda(j)
                            .nlinage = pnlinage AND
                              vgobsiniestro.tramitaciones(i).agenda(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vnumerr := pac_md_siniestros.f_set_objeto_sintramiagenda(pnsinies,
                                                                                       pntramit,
                                                                                       pnlinage,
                                                                                       pctipreg,
                                                                                       pcmanual,
                                                                                       pcestage,
                                                                                       pffinage,
                                                                                       pttitage,
                                                                                       ptlinage,
                                                                                       vgobsiniestro.tramitaciones(i)
                                                                                       .agenda(j),
                                                                                       mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              IF pntramit = 0
                              THEN
                                 vgobsiniestro.agenda := vgobsiniestro.tramitaciones(i)
                                                         .agenda;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     vnlinage := 0;

                     IF vgobsiniestro.tramitaciones(i).agenda IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).agenda := t_iax_sin_trami_agenda();
                     ELSIF vgobsiniestro.tramitaciones(i).agenda.count > 0
                     THEN
                        vnlinage := NVL(vgobsiniestro.tramitaciones(i).agenda(vgobsiniestro.tramitaciones(i).agenda.last)
                                        .nlinage,
                                        0) + 1;
                     END IF;

                     /*  if vnlinage is null then
                     vnlinage := 77;
                     end if;*/
                     vpasexec := 7;
                     vgobsiniestro.tramitaciones(i).agenda.extend;
                     v_index := vgobsiniestro.tramitaciones(i).agenda.last;
                     vgobsiniestro.tramitaciones(i).agenda(v_index) := ob_iax_sin_trami_agenda();
                     vnumerr := pac_md_siniestros.f_set_objeto_sintramiagenda(pnsinies,
                                                                              pntramit,
                                                                              vnlinage,
                                                                              pctipreg,
                                                                              pcmanual,
                                                                              pcestage,
                                                                              pffinage,
                                                                              pttitage,
                                                                              ptlinage,
                                                                              vgobsiniestro.tramitaciones(i)
                                                                              .agenda(v_index),
                                                                              mensajes);

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;

                     IF pntramit = 0
                     THEN
                        IF vgobsiniestro.agenda IS NULL
                        THEN
                           vgobsiniestro.agenda := t_iax_sin_trami_agenda();
                        END IF;

                        vgobsiniestro.agenda.extend;
                        v_index := vgobsiniestro.agenda.last;
                        vgobsiniestro.agenda(v_index) := ob_iax_sin_trami_agenda();
                        vgobsiniestro.agenda(v_index) := vgobsiniestro.tramitaciones(i)
                                                         .agenda(v_index);
                        --vgobsiniestro.agenda := vgobsiniestro.tramitaciones(i).agenda(v_index);
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
         /*  ELSE
         IF vgobsiniestro.tramitaciones IS NULL THEN
            vgobsiniestro.tramitaciones := t_iax_sin_tramitacion();
         END IF;

         vgobsiniestro.tramitaciones.EXTEND;
         v_index := vgobsiniestro.tramitaciones.LAST;
         vgobsiniestro.tramitaciones(v_index) := ob_iax_sin_tramitacion();
         vnumerr := pac_iax_siniestros.f_set_objeto_sintramitacion(pnsinies, pntramit, NULL,
                                                                   NULL, NULL, NULL, mensajes);

         IF vnumerr <> 0 THEN
            RAISE e_object_error;
         END IF;

         vnumerr := pac_iax_siniestros.f_set_objeto_sintramiagenda(pnsinies, pntramit, 0,
                                                                   pctipreg, pcmanual,
                                                                   pcestage, pffinage,
                                                                   pttitage, ptlinage,
                                                                   mensajes);

         IF vnumerr <> 0 THEN
            RAISE e_object_error;
         END IF;*/
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      -- END IF;
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramiagenda;

   /*************************************************************************
      FUNCTION f_ins_personarel
         Inserta a la taula SIN_TRAMITA_PERSONAREL dels parÃ metres informats.
         param in pnsinies     : nÃºmero sinistre
         param in pntramit     : nÃºmero tramitaciÃ³ sinistre
         param in pnpersrel    : nÃºmero linia
         param in pctipide     : codi tipus registre
         param in pnnumide     : codi registre manual
         param in ptnombre     : codi estat agenda
         param in ptapelli1    : data finalitzaciÃ³
         param in ptapelli2    : tÃ­tol anotaciÃ³
         param in pttelefon    : descripciÃ³ anotaciÃ³
         param in psperson     : descripciÃ³ anotaciÃ³
         param in ptdesc       : descripciÃ³ anotaciÃ³
         param in ptnombre2    : segundo nombre
         param in ptmovil      : telf. movil
         param in ptemail      : email
         return                : 0 -> Tot correcte
                                1 -> S'ha produit un error

         Bug 22325/115249 - 05/06/2012 - AMC
         -- Bug 0024690 - 13/11/2012 - JMF : aÃ±adir ctiprel
   *************************************************************************/
   FUNCTION f_set_sintramipersonarel(pnsinies  IN VARCHAR2,
                                     pntramit  IN NUMBER,
                                     pnpersrel IN NUMBER,
                                     pctipide  IN NUMBER,
                                     pnnumide  IN VARCHAR2,
                                     ptnombre  IN VARCHAR2,
                                     ptapelli1 IN VARCHAR2,
                                     ptapelli2 IN VARCHAR2,
                                     pttelefon IN VARCHAR2,
                                     psperson  IN NUMBER,
                                     ptdesc    IN VARCHAR2,
                                     ptnombre2 IN VARCHAR2,
                                     ptmovil   IN VARCHAR2,
                                     ptemail   IN VARCHAR2,
                                     pctiprel  IN NUMBER,
                                     mensajes  OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_sintramipersonarel';
      vparam      VARCHAR2(1000) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                    ' pntramit:' || pntramit ||
                                    ' pnpersrel:' || pnpersrel ||
                                    ' pctipide:' || pctipide ||
                                    ' pnnumide:' || pnnumide ||
                                    ' ptnombre:' || ptnombre ||
                                    ' ptapelli1:' || ptapelli1 ||
                                    ' ptapelli2:' || ptapelli2 ||
                                    ' pttelefon:' || pttelefon ||
                                    ' sperson:' || psperson || ' ptdesc:' ||
                                    ptdesc || ' ptnombre2:' || ptnombre2 ||
                                    ' ptmovil:' || ptmovil || ' ptemail:' ||
                                    ptemail || ' tr=' || pctiprel;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnperrel    NUMBER(8);
      v_index     NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- Grabamos la persona relacionada  en las tablas
      vnumerr := pac_md_siniestros.f_set_sintramipersonarel(pnsinies,
                                                            pntramit,
                                                            pnpersrel,
                                                            pctipide,
                                                            pnnumide,
                                                            ptnombre,
                                                            ptapelli1,
                                                            ptapelli2,
                                                            pttelefon,
                                                            psperson,
                                                            ptdesc,
                                                            ptnombre2,
                                                            ptmovil,
                                                            ptemail,
                                                            pctiprel,
                                                            mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      COMMIT;
      -- Recargamos los valores del objeto, ya que recuperamos los valores del objeto de forma genÃ©rica.
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_sintramipersonarel;

   /*************************************************************************
   funciÃ³n graba en una variable global de la capa IAX los valores del objeto
   ob_iax_siniestros.tramitacion.personarel
      pnsinies IN VARCHAR2,  -- NÃºmero de siniestro
      pntramit IN NUMBER, -- NÃºmero de tramitacion
      pnpersrel IN NUMBER, -- CÃ³digo de persoan relacionada
      pctipide IN NUMBER,  -- Tipo identificador
      pnnumide IN VARCHAR2,  -- NÃºmero id
      ptnombre IN VARCHAR2, -- Nombre
      ptapelli1 IN VARCHAR2, -- Primer Apellido
      ptapelli2 IN VARCHAR2, -- Segundo apellido
      pttelefon IN VARCHAR2, -- Telf.
      psperson IN NUMBER, --CÃ³digo persona
      ptdesc IN VARCHAR2, -- DescripciÃ³n

   Bug 12604 - 08/01/2010 - AMC - Se quita el parametro pfrec
   *************************************************************************/
   FUNCTION f_del_sintramipersonarel(pnsinies  IN VARCHAR2,
                                     pntramit  IN NUMBER,
                                     pnpersrel IN NUMBER,
                                     mensajes  OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_sintramipersonarel';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnpersrel: ' || pnpersrel;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnperrel    NUMBER(8);
      v_index     NUMBER(8);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- Borramos la persona relacionada  en las tablas
      vnumerr := pac_md_siniestros.f_del_sintramipersonarel(pnsinies,
                                                            pntramit,
                                                            pnpersrel,
                                                            mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      -- Recargamos los valores del objeto, ya que recuperamos los valores del objeto de forma genÃ©rica.
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_sintramipersonarel;

   /*************************************************************************
   funciÃ³n devuelve una linea de la agenda
   ob_iax_siniestros.tramitacion.agenda
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   pnpersrel      NUMBER(6),   --NÃºmero LÃ­nea persona relacionada
   *************************************************************************/
   FUNCTION f_get_objeto_personarel(pnsinies  IN VARCHAR2,
                                    pntramit  IN NUMBER,
                                    pnpersrel IN NUMBER,
                                    mensajes  OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_personarel IS
      vobjectname  VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_personarel';
      vparam       VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                    ' - pntramit: ' || pntramit ||
                                    ' - pnpersrel: ' || pnpersrel;
      vpasexec     NUMBER(5) := 1;
      vnumerr      NUMBER(8) := 0;
      vcagrpro     NUMBER(8);
      vnlinage     NUMBER(8);
      v_index      NUMBER(8);
      v_personarel ob_iax_sin_trami_personarel := ob_iax_sin_trami_personarel();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pnpersrel IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnpersrel IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .personasrel IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).personasrel.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .personasrel.first .. vgobsiniestro.tramitaciones(i)
                                                       .personasrel.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).personasrel(j)
                            .npersrel = pnpersrel AND
                              vgobsiniestro.tramitaciones(i).personasrel(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              v_personarel := vgobsiniestro.tramitaciones(i)
                                              .personasrel(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- END IF;
      vpasexec := 6;
      RETURN v_personarel;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_personarel;

   /*************************************************************************
    funciÃ³n devuelve una linea de la agenda
    ob_iax_siniestros.tramitacion.agenda
   nsinies        VARCHAR2(14),   --NÃºmero Siniestro
   ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   nlinage        NUMBER(6),   --NÃºmero LÃ­nea
   *************************************************************************/
   FUNCTION f_get_objeto_sintramiagenda(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pnlinage IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_agenda IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramiagenda';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - nlinage: ' || pnlinage;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlinage    NUMBER(8);
      v_index     NUMBER(8);
      v_agenda    ob_iax_sin_trami_agenda := ob_iax_sin_trami_agenda();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pnlinage IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnlinage IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .agenda IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).agenda.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i).agenda.first .. vgobsiniestro.tramitaciones(i)
                                                                                .agenda.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).agenda(j)
                            .nlinage = pnlinage AND
                              vgobsiniestro.tramitaciones(i).agenda(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              v_agenda := vgobsiniestro.tramitaciones(i)
                                          .agenda(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- END IF;
      vpasexec := 6;
      RETURN v_agenda;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramiagenda;

   /*************************************************************************
    funciÃ³n borra una linea de la agenda ob_iax_siniestros.tramitacion.agenda
     param in pnsinies   : NÃºmero Siniestro
     param in pntramit   : NÃºmero TramitaciÃ³n Siniestro
     param in pnlinage   : NÃºmero LÃ­nea
     param in psproduc   : CÃ³digo de producto
     param in pcactivi   : CÃ³digo de la actividad
     param out mensajes  : Mensajes de error

    Bug 15153 - 23/06/2010 - AMC - Se aÃ±aden los parametros sproduc y cactivi
   *************************************************************************/
   FUNCTION f_del_objeto_sintramiagenda(pnsinies IN VARCHAR2,
                                        pntramit IN NUMBER,
                                        pnlinage IN NUMBER,
                                        psproduc IN NUMBER,
                                        pcactivi IN NUMBER,
                                        mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_del_objeto_sintramiagenda';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - nlinage: ' || pnlinage ||
                                   ' psproduc:' || psproduc || ' pcactivi:' ||
                                   pcactivi;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlinage    NUMBER(8);
      v_index     NUMBER(8);
      vborrado    NUMBER(2) := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pnlinage IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- Bug 15153 - 23/06/2010 - AMC
      vnumerr := pac_md_siniestros.f_del_agenda(pnsinies,
                                                pntramit,
                                                pnlinage,
                                                mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_iax_siniestros.f_inicializasiniestro(psproduc,
                                                          pcactivi,
                                                          pnsinies,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Fi Bug 15153 - 23/06/2010 - AMC
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_objeto_sintramiagenda;

   /*************************************************************************
      Devuelve los siniestros que cumplan con el criterio de selecciÃ³n
      param in pnpoliza     : nÃºmero de pÃ³liza
      param in pncert       : nÃºmero de cerificado por defecto 0
      param in pnsinies     : nÃºmero del siniestro1
      param out mensajes    : mensajes de error
      return                : ref cursor
   *************************************************************************/
   FUNCTION f_consulta_lstsini(pnpoliza IN NUMBER,
                               pncertif IN NUMBER,
                               pnsinies IN VARCHAR2,
                               pcestsin IN NUMBER, -- BUG 16645 --ETM--23/11/2010--0016645: GRC - BÃºsqueda de siniestros
                               pfiltro  IN NUMBER,
                               pnriesgo IN NUMBER,
                               mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.consulta_lstsini';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnpoliza: ' || pnpoliza ||
                                   ' - pncertif: ' || pncertif ||
                                   ' - pnsinies: ' || pnsinies ||
                                   ' - pcestsin: ' || pcestsin;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      vcursor := pac_md_siniestros.f_consulta_lstsini(pnpoliza,
                                                      pncertif,
                                                      pnsinies,
                                                      pcestsin,
                                                      pfiltro,
                                                      pnriesgo,
                                                      mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_consulta_lstsini;

   /***********************************************************************
      Recupera los datos del tomador de la poliza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      return             : objeto tomadores
   ***********************************************************************/
   FUNCTION f_get_asegurados(psseguro IN NUMBER,
                             mensajes OUT t_iax_mensajes)
      RETURN t_iax_asegurados IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_asegurados';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      asegurados  t_iax_asegurados;
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec   := 3;
      asegurados := pac_md_siniestros.f_leeasegurados(psseguro, mensajes);

      IF asegurados IS NULL
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 5;
      RETURN asegurados;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_asegurados;

   /*************************************************************************
    funciÃ³n devuelvo las garantias de un seguro

    -- Bug 11847 - 23/11/2009 - AMC
    -- Bug 0020472 - JMF - 09/12/2011: porigen (0-crear siniestro, 1-crear reserva)
   *************************************************************************/
   FUNCTION f_get_garantias(psseguro IN NUMBER,
                            pnriesgo IN NUMBER,
                            pccausin IN NUMBER,
                            pcmotsin IN NUMBER,
                            pfsinies IN DATE,
                            porigen  IN NUMBER DEFAULT 0,
                            pctramit IN NUMBER DEFAULT NULL, -- 25812:ASN:23/01/2013
                            pnsinies IN NUMBER DEFAULT NULL, -- 25812:ASN:27/05/2013
                            pntramit IN NUMBER DEFAULT NULL, -- 25812:ASN:27/05/2013
                            pctipres IN NUMBER DEFAULT NULL, -- 25812:ASN:27/05/2013
                            mensajes OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_garantias';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      -- Bug 11847 - 23/11/2009 - AMC
      -- Bug 0020472 - JMF - 09/12/2011: porigen
      vcursor := pac_md_siniestros.f_get_garantias(psseguro,
                                                   pnriesgo,
                                                   pccausin,
                                                   pcmotsin,
                                                   pfsinies,
                                                   porigen,
                                                   pctramit, -- 25812:ASN:23/01/2013
                                                   pnsinies,
                                                   pntramit,
                                                   pctipres,
                                                   mensajes); -- 25812:ASN:27/05/2013
      --Fi Bug 11847 - 23/11/2009 - AMC
      vpasexec := 5;
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN e_object_error THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_garantias;

   /*************************************************************************
    funciÃ³n devuelve la franquicia de una garantia

    -- Bug 11847 - 23/11/2009 - AMC
   *************************************************************************/
   FUNCTION f_get_franquicia_garantia(psseguro IN NUMBER,
                                      pnriesgo IN NUMBER,
                                      pcgarant IN NUMBER,
                                      mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_franquicia_garantias';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vifranq     NUMBER(10);
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      -- Bug 11847 - 23/11/2009 - AMC
      vifranq := pac_md_siniestros.f_get_franquicia_garantia(psseguro,
                                                             pnriesgo,
                                                             pcgarant,
                                                             mensajes);
      --Fi Bug 11847 - 23/11/2009 - AMC
      RETURN vifranq;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_franquicia_garantia;

   /***********************************************************************
      Graba el objeto siniestros a las tablas de la bbdd
      param out mensajes  : mensajes de error
      param in pCTRAMITAD : codigo tramitador siniestro (opcional)
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
   -- BUG 0024964 - 03/12/2012 - JMF: afegir pCTRAMITAD
   ***********************************************************************/
   FUNCTION f_grabar_siniestro(pnsinies   OUT VARCHAR2,
                               mensajes   OUT t_iax_mensajes,
                               pctramitad IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_grabar_siniestro';
      vparam        VARCHAR2(500) := 'pCTRAMITAD - ' || pctramitad;
      vpasexec      NUMBER(5) := 1;
      vnumerr       NUMBER(8) := 0;
      vnsinies      sin_siniestro.nsinies%TYPE;
      vtmotsin      VARCHAR2(1000);
      vtcausin      VARCHAR2(1000);
      vtevento      VARCHAR2(1000);
      vtmsg         VARCHAR2(1000);
      vtramitadores NUMBER;
      vilimite      NUMBER;
      vireserva     NUMBER;
      tramitacion   ob_iax_sin_tramitacion;
      -- Bug 27514/149698 - 24/07/2013 - AMC
      vmoneda   monedas.cmonint%TYPE;
      visinret  NUMBER;
      v_fcambio DATE;
      vtasa     NUMBER;
      vcmonres  monedas.cmonint%TYPE;
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC
      nmensajebl NUMBER;
      vmensajebl VARCHAR2(1000);
   BEGIN
      vnumerr  := pac_md_siniestros.f_grabar_siniestro(vgobsiniestro,
                                                       mensajes);
      pnsinies := vgobsiniestro.nsinies;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vpasexec := 2;

      -- 22603:ASN:18/07/2012 ini
      -- esto se decide en pac_md_siniestros.f_estado_final (llamado desde f_post_siniestro)
      /*
      -- Ini Bug 22153 - MDS - 31/05/2012
      IF vgobsiniestro.movimientos(vgobsiniestro.movimientos.LAST).cestsin = 5 THEN
         -- es un presiniestro, el mensaje es diferente
         vtmsg := pac_iobj_mensajes.f_get_descmensaje(9903757, pac_md_common.f_get_cxtidioma);
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 2, 0, vtmsg || 'P' || pnsinies);
      ELSE
         -- lo que habÃ­a antes
         vtmsg := pac_iobj_mensajes.f_get_descmensaje(1000007, pac_md_common.f_get_cxtidioma);
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 2, 0, vtmsg || pnsinies);
      END IF;

      -- Fin Bug 22153 - MDS - 31/05/2012
      */
      -- 22603:ASN:18/07/2012 fin

      -- 22670:ASN:28/06/2012 ini
      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vtramitadores := pac_md_param.f_parempresa_nn('TRAMITADORES',
                                                    mensajes);
      vpasexec      := 3;

      IF NVL(vtramitadores, 0) = 1
      THEN
         -- BUG 0024964 - 03/12/2012 - JMF
         IF pctramitad IS NOT NULL
         THEN
            -- Bug 27514/147806 - 04/07/2013 - AMC
            vpasexec := 31;
            vnumerr  := pac_md_siniestros.f_get_limite_tramitador(pctramitad,
                                                                  pac_md_common.f_get_cxtempresa,
                                                                  NULL, --ramo
                                                                  vgobsiniestro.ccausin,
                                                                  vgobsiniestro.cmotsin,
                                                                  vilimite,
                                                                  mensajes);

            /* 30299 - 05/03/2014 - JTT:
               Si la funcio d'obtenir el limit del tramitador ens retorna error, ho considerem un avis
               continuant amb l'exxecuciÃ³ normal.
            */
            IF vnumerr <> 0
            THEN
               vilimite := 0;
               vnumerr  := 0;
            END IF;

            vpasexec    := 4;
            tramitacion := vgobsiniestro.tramitaciones(vgobsiniestro.tramitaciones.last);

            -- 31933 - 30/06/2014 - JTT: Controlamos los presiniestros (no generan movimiento de reserva)
            IF tramitacion.reservas IS NOT NULL
            THEN
               IF tramitacion.reservas.count > 0
               THEN
                  vpasexec  := 5;
                  vireserva := tramitacion.reservas(tramitacion.reservas.last)
                               .ireserva;
                  vcmonres  := tramitacion.reservas(tramitacion.reservas.last)
                               .cmonres;

                  -- Bug 27514/149698 - 24/07/2013 - AMC
                  IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                       'MULTIMONEDA'),
                         0) = 1
                  THEN
                     vpasexec := 6;
                     vmoneda  := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                                                       'MONEDAEMP'));

                     IF vmoneda <> vcmonres
                     THEN
                        v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(vcmonres,
                                                                           vmoneda);
                        vtasa     := pac_eco_tipocambio.f_cambio(vcmonres,
                                                                 vmoneda,
                                                                 v_fcambio);
                        vireserva := vtasa * vireserva;
                     END IF;
                  END IF;
               ELSE
                  vireserva := 0;
               END IF;
            END IF;

            -- Fi Bug 319933/178143

            -- Fi Bug 27514/147806 - 04/07/2013 - AMC
            -- Fi Bug 27514/149698 - 24/07/2013 - AMC
            vpasexec := 7;

            IF vilimite < vireserva
            THEN
               vgobsiniestro.movimientos(vgobsiniestro.movimientos.last).ctramitad := NULL;
            ELSE
               vgobsiniestro.movimientos(vgobsiniestro.movimientos.last).ctramitad := pctramitad;
            END IF;

            vpasexec := 8;

            SELECT MAX(ctramitpad)
              INTO vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
                   .cunitra
              FROM sin_redtramitador
             WHERE cempres = f_empres
               AND ctramitad = pctramitad
               AND f_sysdate BETWEEN fmovini AND
                   NVL(fmovfin, f_sysdate + 1);
         END IF;

         vpasexec := 9;

         IF pctramitad IS NULL OR
            vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
           .ctramitad IS NULL
         THEN
            -- 23101:ASN:29/08/2012 ini
            vpasexec := 10;
            vnumerr  := pac_md_siniestros.f_get_tramitador(pnsinies,
                                                           99,
                                                           99,
                                                           vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
                                                           .cunitra,
                                                           vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
                                                           .ctramitad,
                                                           mensajes);

            IF vnumerr <> 0
            THEN
               RAISE e_object_error;
            END IF;
         END IF;

         vpasexec := 11;

         -- Fi Bug 27514/147806 - 04/07/2013 - AMC
         IF vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
          .ctramitad = 'T000'
         THEN
            -- 23101:ASN:21/12/2012 ini
            vpasexec := 12;
            vnumerr  := pac_md_siniestros.f_msg_responsable(pnsinies,
                                                            NULL,
                                                            NULL,
                                                            1,
                                                            9904405,
                                                            9904405,
                                                            mensajes); -- Informamos que no se pudo asignar

            IF vnumerr <> 0
            THEN
               RAISE e_object_error;
            END IF; -- 23101:ASN:21/12/2012  fin
         ELSE
            vpasexec := 13;
            vnumerr  := pac_md_siniestros.f_set_tramitador(pnsinies,
                                                           vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
                                                           .cunitra,
                                                           vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
                                                           .ctramitad,
                                                           mensajes);

            IF vnumerr <> 0
            THEN
               RAISE e_object_error;
            END IF;

            vpasexec := 14;
         END IF;

         vpasexec := 15;
         -- 23101:ASN:29/08/2012 fin
         vnumerr  := pac_md_siniestros.f_tramitador_asignado(vgobsiniestro.movimientos(vgobsiniestro.movimientos.last)
                                                             .ctramitad,
                                                             mensajes);
         vpasexec := 16;
      END IF;

      -- Start 04/11/2014: Develop Black List -> BUG: 29817
      IF vnumerr = 0
      THEN
         IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                              'POST_ACCION_LRE'),
                0) = 1
         THEN
            nmensajebl := pac_propio.f_acciones_post_siniestro(vgobsiniestro.sseguro,
                                                               0,
                                                               vgobsiniestro.ccausin);
         END IF;
      END IF;

      -- End 04/11/2014: Develop Black List -> BUG: 29817

      -- 22670:ASN:28/06/2012 fin
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_grabar_siniestro;

   /***********************************************************************
     Fa els calculs dels imports del detall de pagaments
      param out mensajes  : mensajes de error
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
    BUG 19981 - 16/11/2011 - MDS - AÃ±adir campos pica, iica, preteiva, ireteiva, preteica, ireteica
   ***********************************************************************/
   FUNCTION f_objcalcula_imports_detpagos(ircmbrut   IN NUMBER,
                                          ireduccion IN NUMBER,
                                          isinret    IN NUMBER,
                                          isuplid    IN NUMBER,
                                          importe    OUT NUMBER,
                                          pretenc    IN NUMBER,
                                          iretenc    OUT NUMBER,
                                          piva       IN NUMBER,
                                          iiva       OUT NUMBER,
                                          ineta      OUT NUMBER,
                                          mensajes   OUT t_iax_mensajes,
                                          pica       IN NUMBER,
                                          iica       OUT NUMBER,
                                          preteiva   IN NUMBER,
                                          ireteiva   OUT NUMBER,
                                          preteica   IN NUMBER,
                                          ireteica   OUT NUMBER,
                                          pccalimp   IN NUMBER,
                                          psidepag   IN NUMBER,
                                          psperson   IN NUMBER,
                                          pfordpag   IN DATE,
                                          pctipgas   IN NUMBER,
                                          pcconcep   IN NUMBER,
                                          pcagente   IN NUMBER,
                                          poretenc   OUT NUMBER,
                                          poiva      OUT NUMBER,
                                          poica      OUT NUMBER,
                                          poreteiva  OUT NUMBER,
                                          poreteica  OUT NUMBER,
                                          piotrosgas  IN NUMBER,
                                          pibaseipoc  IN NUMBER,
                                          pipoconsumo IN NUMBER,
                                          pcmonres    IN VARCHAR2,
                                          pcmonpag    IN VARCHAR2,
                                          pctipres    IN NUMBER,
                                          pcgarant    IN NUMBER,
                                          piipoconsumo  OUT NUMBER,
                                          ppoipoconsumo OUT NUMBER,
                                          pisinretpag   OUT NUMBER,
                                          pinetapag     OUT NUMBER,
                                          pifranq       OUT NUMBER,
                                          valorpesos IN NUMBER,--tarea 3481 andre pfeifer 13/06/19
                                          pvalorconvertido OUT NUMBER--tarea 3481 andre pfeifer 13/06/19
                                          ) RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_objcalcula_imports_detpagos';
      vparam         VARCHAR2(500) := 'parÃ¡metros - ircmbrut: ' || ircmbrut ||
                                      ' ireduccion: ' || ireduccion ||
                                      ' isinret: ' || isinret ||
                                      ' isuplid: ' || isuplid ||
                                      ' pretenc: ' || pretenc || ' piva: ' || piva ||
                                      ' pica: ' || pica || ' preteiva: ' ||
                                      preteiva || ' preteica: ' || preteica ||
                                      ' pccalimp: ' || pccalimp ||
                                      ' psidepag: ' || psidepag ||
                                      ' pctipgas: ' || pctipgas ||
                                      ' psperson: ' || psperson ||
                                      ' pfordpag: ' || pfordpag ||
                                      ' pcconcep: ' || pcconcep ||
                                      ' pcagente: ' || pcagente;
      vpasexec       NUMBER(5) := 0;
      vnumerr        NUMBER(8) := 0;
      vnsinies       sin_siniestro.nsinies%TYPE;
      vtmotsin       VARCHAR2(1000);
      vtcausin       VARCHAR2(1000);
      vtevento       VARCHAR2(1000);
      v_calcimp_empr NUMBER;
      wcmodfis       sin_det_causa_motivo.cmodfis%TYPE;
      v_sseguro sin_siniestro.sseguro%TYPE;
      v_nmovimi sin_siniestro.nmovimi%TYPE;
      v_nriesgo sin_siniestro.nriesgo%TYPE;
      v_fsinies sin_siniestro.fsinies%TYPE;
      vresult   NUMBER;
      v_mon_res NUMBER := pac_monedas.f_cmoneda_n(pcmonres);
      v_mon_res_cal VARCHAR2(10);
      v_mon_pag VARCHAR2(10);
      v_fcambio DATE;
      v_itasa   NUMBER;
      v_cmoneda_n NUMBER;
	  v_itasa_reversa number;--tarea 3481 andre pfeifer


      FUNCTION get_cmodfis(psidepag IN NUMBER) RETURN NUMBER IS
         wnsinies sin_tramita_pago.nsinies%TYPE;
         wsseguro sin_siniestro.sseguro%TYPE;
         wsproduc seguros.sproduc%TYPE;
      BEGIN
         BEGIN
            SELECT nsinies
              INTO wnsinies
              FROM sin_tramita_pago
             WHERE sidepag = psidepag;

            SELECT sseguro
              INTO wsseguro
              FROM sin_siniestro
             WHERE nsinies = wnsinies;

            SELECT sproduc
              INTO wsproduc
              FROM seguros
             WHERE sseguro = wsseguro;

            -- Cal establir el cmodfis dels ppa's a 3 per poder discriminar.
            SELECT MAX(cmodfis)
              INTO wcmodfis
              FROM sin_gar_causa_motivo sg,
                   sin_det_causa_motivo sd
             WHERE sproduc = wsproduc
               AND sg.scaumot = sd.scaumot
               AND ctipdes <> 0;
         EXCEPTION
            WHEN OTHERS THEN
               wcmodfis := 0;
         END;

         RETURN(wcmodfis);
      END get_cmodfis;
   BEGIN
      wcmodfis := get_cmodfis(psidepag);

      IF ircmbrut IS NOT NULL
      THEN
         importe := ircmbrut - NVL(ireduccion, 0);
      ELSE
         importe := NVL(isinret, 0) - NVL(isuplid, 0);
      END IF;

      v_calcimp_empr := pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                            'CALCULO_IMP');

      IF pctipres = 1 THEN
         --
         SELECT sn.sseguro, sn.nmovimi, sn.nriesgo, sn.fsinies
           INTO v_sseguro, v_nmovimi, v_nriesgo, v_fsinies
           FROM sin_siniestro sn
          WHERE sn.nsinies = (SELECT sp.nsinies
                                FROM sin_tramita_pago sp
                               WHERE sp.sidepag = psidepag);
         --
         vresult := pac_md_sin_franquicias.f_calcular_deducible(v_sseguro, v_nriesgo, pcgarant , importe, v_nmovimi, pifranq, mensajes);
         --
         IF pifranq >= importe THEN
           pifranq := importe;
           importe := 0;
         END IF;
         --
      ELSE
         pifranq := 0;
      END IF;
	  importe:=importe-nvl(pifranq,0);
      -- cÃ lcul d'impostos
      IF pccalimp = 1 AND
         v_calcimp_empr = 1
      THEN
         vnumerr := pac_md_siniestros.f_objcalcula_imports_detpagos(psperson,
                                                                    pcagente,
                                                                    pfordpag,
                                                                    psidepag,
                                                                    pctipgas,
                                                                    pcconcep,
                                                                    importe,
                                                                    iretenc,
                                                                    poretenc,
                                                                    iiva,
                                                                    poiva,
                                                                    ineta,
                                                                    iica,
                                                                    poica,
                                                                    ireteiva,
                                                                    poreteiva,
                                                                    ireteica,
                                                                    poreteica,
                                                                    mensajes);
      ELSE
         vpasexec := 60;

         -- NMM. 24856/194322. Si Ã©s un ppa el % de retenciÃ³
         -- s'aplica a l'import brut no a l'import base
         IF wcmodfis = 3
         THEN
            iretenc := NVL(isinret, 0) * NVL((NVL(pretenc, 0) / 100), 0);
         ELSE
            iretenc := NVL(importe, 0) * NVL((NVL(pretenc, 0) / 100), 0);
         END IF;

         iiva      := NVL(importe, 0) * NVL((NVL(piva, 0) / 100), 0);
         iica      := NVL(importe, 0) * NVL((NVL(pica, 0) / 100), 0);
         ireteiva  := NVL(iiva, 0) * NVL((NVL(preteiva, 0) / 100), 0);
     -- INI Inc. 2055 - ACL - 27/04/2018
         -- ireteica  := NVL(importe, 0) * NVL((NVL(preteica, 0) / 100), 0);
     ireteica  := NVL(importe, 0) * NVL(preteica, 0);
     -- FIN Inc. 2055 - ACL - 27/04/2018
         poretenc  := NVL(poretenc, 0);
         poiva     := NVL(poiva, 0);
         poica     := NVL(poica, 0);
         poreteiva := NVL(poreteiva, 0);
         poreteica := NVL(poreteica, 0);

         piipoconsumo := NVL(pibaseipoc, 0) * NVL(pipoconsumo, 0) / 100;
         piipoconsumo := f_round(piipoconsumo, v_mon_res);
         ppoipoconsumo := NVL(ppoipoconsumo, 0);
      END IF;
-- bug  4714 el deducible se pasa a restar del valor total.
      iretenc  := f_round(iretenc, v_mon_res);
      iiva     := f_round(iiva, v_mon_res);
      iica     := f_round(iica, v_mon_res);
      ireteiva := f_round(ireteiva, v_mon_res);
      ireteica := f_round(ireteica, v_mon_res);
      ineta    := NVL(isinret, 0) + NVL(iiva, 0) - NVL(iretenc, 0) -
                  NVL(ireteiva, 0) - NVL(ireteica, 0) +
                  NVL(piotrosgas, 0) + NVL(pibaseipoc, 0) + NVL(piipoconsumo, 0)- NVL(pifranq, 0);
      --
      IF pcmonpag IS NULL THEN
         v_mon_pag := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                              'MONEDAEMP'));
      ELSE
         v_mon_pag := pcmonpag;
      END IF;
      --
      IF pcmonres IS NULL THEN
         v_mon_res_cal := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                              'MONEDAEMP'));
      ELSE
         v_mon_res_cal := pcmonres;
      END IF;
      --
      v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(v_mon_res_cal, v_mon_pag, NVL(pfordpag, f_sysdate));
      --
      IF v_fcambio IS NULL THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           9902592,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      END IF;
      --
      v_itasa := pac_eco_tipocambio.f_cambio(v_mon_res_cal, v_mon_pag, v_fcambio);
      v_itasa_reversa := pac_eco_tipocambio.f_cambio(v_mon_pag, v_mon_res_cal, v_fcambio);--tarea 3481 andre pfeifer 13/06/19
	  v_cmoneda_n := pac_monedas.f_cmoneda_n(v_mon_pag);
      --
      pisinretpag := f_round(NVL(isinret, 0) * v_itasa, v_cmoneda_n);
	  pvalorconvertido := round(NVL(valorpesos, 0) * v_itasa_reversa, 6);--tarea 3481 andre pfeifer 13/06/19
      pinetapag := f_round(ineta * v_itasa, v_cmoneda_n);
      --
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_objcalcula_imports_detpagos;
   /********************************************************************
   Funcion que retorna el valor en dolares dependiendo el valor en pesos 
   IAXIS 5454 AABC 7/11/2019
   *********************************************************************/
   FUNCTION f_sin_calcula_importe(pcmonres         IN  VARCHAR2,     
                                  pcmonresdes      IN  VARCHAR2,
                                  valorpesos       IN  NUMBER,
                                  pvalorconvertido OUT NUMBER,                                  
                                  mensajes         OUT t_iax_mensajes
                                  ) RETURN NUMBER IS
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_objcalcula_imports_detpagos';
      vpasexec       NUMBER(5) := 0;
      vnumerr        NUMBER(8) := 0;
      vnsinies       sin_siniestro.nsinies%TYPE;
      vtmotsin       VARCHAR2(1000);
      vtcausin       VARCHAR2(1000);
      vtevento       VARCHAR2(1000);
      v_calcimp_empr NUMBER;
      wcmodfis       sin_det_causa_motivo.cmodfis%TYPE;
      v_sseguro sin_siniestro.sseguro%TYPE;
      v_nmovimi sin_siniestro.nmovimi%TYPE;
      v_nriesgo sin_siniestro.nriesgo%TYPE;
      v_fsinies sin_siniestro.fsinies%TYPE;
      vresult   NUMBER;
      v_mon_res NUMBER := pac_monedas.f_cmoneda_n(pcmonres);
      v_mon_res_cal VARCHAR2(10);
      v_mon_pag VARCHAR2(10);
      v_fcambio DATE;
      v_itasa   NUMBER;
      v_cmoneda_n NUMBER;
	  v_itasa_reversa number;--tarea 3481 andre pfeifer
      vparam      VARCHAR2(10) := NULL;

   BEGIN
      --
      IF pcmonres IS NULL THEN
         v_mon_res_cal := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                              'MONEDAEMP'));
      ELSE
         v_mon_res_cal := pcmonres;
         v_mon_pag     := pcmonresdes; 
      END IF;
      --
      v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(v_mon_res_cal, v_mon_pag, f_sysdate);
      --
      IF v_fcambio IS NULL THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           9902592,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      END IF;
      --
      v_itasa_reversa := pac_eco_tipocambio.f_cambio(v_mon_res_cal,v_mon_pag, v_fcambio);
	  v_cmoneda_n := pac_monedas.f_cmoneda_n(v_mon_pag);
      --
	  pvalorconvertido := round(NVL(valorpesos, 0) / v_itasa_reversa, 0);
      --
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_sin_calcula_importe;
   /***********************************************************************
      retorna el tramitador i la unitat tramitadora per defecte
      pcempres IN  NUMBER,
      pcunitra OUT VARCHAR2,
      pctramit OUT VARCHAR2,
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_get_unitradefecte(pcempres IN NUMBER,
                                pcunitra OUT VARCHAR2,
                                pctramit OUT VARCHAR2,
                                mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_unitradefecte';
      vparam      VARCHAR2(500) := 'parÃ¡metros - ';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_get_unitradefecte(pcempres,
                                                       pcunitra,
                                                       pctramit,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_unitradefecte;

   /***********************************************************************
      Retorna las causas de un siniestro
      param  in  pcempres :  cÃ³digo de la empresa
      param  in  pcramo  : cÃ³digo del ramo
      param  in  psproduc   : cÃ³digo del producto
      param  in  pccausin   : cÃ³digo de la causa del siniestro
      param  in  pcmotsin   : cÃ³digo motivo de siniestro
      param  in  pctipdes : cÃ³digo tipo destinatario
      param out mensajes  : mensajes de error
      return              : sys_refcursor

      22/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_get_causas_motivos(pcempres IN NUMBER,
                                 pcramo   IN NUMBER,
                                 psproduc IN NUMBER,
                                 pccausin IN NUMBER,
                                 pcmotsin IN NUMBER,
                                 pctipdes IN NUMBER,
                                 mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_causas_motivos';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pcempres:' || pcempres ||
                                   ' pcramo:' || pcramo || ' psproduc:' ||
                                   ' pccausin:' || pccausin || ' pcmotsin:' ||
                                   pcmotsin || ' pctipdes:' || pctipdes;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      cur := pac_md_siniestros.f_get_causas_motivos(pcempres,
                                                    pcramo,
                                                    psproduc,
                                                    pccausin,
                                                    pcmotsin,
                                                    pctipdes,
                                                    mensajes);
      RETURN cur;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
   END f_get_causas_motivos;

   /***********************************************************************
      Retorna los destinatarios de un siniestro
      param  in  pscaumot :  cÃ³digo de la causa
      param  in  pctipdes  : cÃ³digo del tipo de destinatario
      param out mensajes  : mensajes de error
      return              : sys_refcursor

      22/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_get_caumot_destinatario(pscaumot IN NUMBER,
                                      pctipdes IN NUMBER,
                                      mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_caumot_destinatario';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' pctipdes:' || pctipdes;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      cur := pac_md_siniestros.f_get_caumot_destinatario(pscaumot,
                                                         pctipdes,
                                                         mensajes);
      RETURN cur;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
   END f_get_caumot_destinatario;

   /***********************************************************************
      Retorna las formulas
      param  in  pscaumot :  cÃ³digo de la causa
      param  in  pctipdes  : cÃ³digo del tipo de destinatario
      param  in  pccampo  : cÃ³digo del campo
      param  in  pcclave  : cÃ³digo de la formula
      param out mensajes  : mensajes de error
      return              : sys_refcursor

      22/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_get_caumot_destformula(pscaumot IN NUMBER,
                                     pctipdes IN NUMBER,
                                     pccampo  IN VARCHAR2,
                                     pcclave  IN NUMBER,
                                     mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_caumot_destformula';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' pctipdes:' || pctipdes || ' pccampo:' ||
                                   pccampo || ' pcclave:' || pcclave;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL OR
         pctipdes IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      cur := pac_md_siniestros.f_get_caumot_destformula(pscaumot,
                                                        pctipdes,
                                                        pccampo,
                                                        pcclave,
                                                        mensajes);
      RETURN cur;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
   END f_get_caumot_destformula;

   /***********************************************************************
      Retorna los productos
      param  in  pscaumot :  cÃ³digo de la causa
      param  in  psproduc  : cÃ³digo del producto
      param  in  pcactivi  : cÃ³digo de la actividad
      param  in  pcgarant  : cÃ³digo de la garantia
      param  in  pctramit  : cÃ³digo de la tramitaciÃ³n
      param out mensajes  : mensajes de error
      return              : sys_refcursor

      22/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_get_caumot_producte(pscaumot IN NUMBER,
                                  psproduc IN NUMBER,
                                  pcactivi IN NUMBER,
                                  pcgarant IN NUMBER,
                                  pctramit IN NUMBER,
                                  mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_caumot_producte';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' psproduc:' || psproduc || ' pcactivi:' ||
                                   pcactivi || ' pcgarant:' || pcgarant ||
                                   ' pctramit:' || pctramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      cur := pac_md_siniestros.f_get_caumot_producte(pscaumot,
                                                     psproduc,
                                                     pcactivi,
                                                     pcgarant,
                                                     pctramit,
                                                     mensajes);
      RETURN cur;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN NULL;
   END f_get_caumot_producte;

   /***********************************************************************
      Inserta o actualiza en sin_causa_motivo
      param  in  pscaumot : cÃ³digo de la causa/motivo
      param  in  pccausin : cÃ³digo de la causa del siniestro
      param  in  pcmotsin : cÃ³digo del motivo del siniestro
      param  in  pcpagaut : si los pagos son automaticos
      param  in  pcmotmov : cÃ³digo motivo del movimiento
      param  in  pcmotfin : cÃ³digo motivo movimiento fin
      param  in  pcmovimi : cÃ³digo motivo movimiento inicial
      param  in  pcdesaut : si genera destinatario automaticamente
      param  in  pcultpag : Pago se crea marcado como Ãºltimo pago
      param  out mensajes : mensajes de error
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      25/05/2009   AMC                 Sinistres.  Bug: 8816
      Bug 12753     18/01/2010  AMC Se aÃ±ade el parametro pcdesaut
      -- Bug 0022490 - 09/07/2012 - JMF: aÃ±adir pcultpag
   ***********************************************************************/
   FUNCTION f_set_sin_causa_motivo(pscaumot IN NUMBER,
                                   pccausin IN NUMBER,
                                   pcmotsin IN NUMBER,
                                   pcpagaut IN NUMBER,
                                   pcmotmov IN NUMBER,
                                   pcmotfin IN NUMBER,
                                   pcmovimi IN NUMBER,
                                   pcdesaut IN NUMBER,
                                   pcultpag IN NUMBER,
                                   mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ metres - pscaumot: ' || pscaumot ||
                                   ' pccausin:' || pccausin || ' pcmotsin:' ||
                                   pcmotsin || ' pcpagaut:' || pcpagaut ||
                                   ' pcmotmov:' || pcmotmov || ' pcmotfin:' ||
                                   pcmotfin || ' pcmovimi:' || pcmovimi ||
                                   ' pcdesaut:' || pcdesaut || ' pcultpag=' ||
                                   pcultpag;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_set_sin_causa_motivo';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      -- ComprovaciÃ³ pas de parÃ metres
      IF pscaumot IS NULL OR
         pccausin IS NULL OR
         pcmotsin IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_set_sin_causa_motivo(pscaumot,
                                                          pccausin,
                                                          pcmotsin,
                                                          NVL(pcpagaut, 0),
                                                          pcmotmov,
                                                          pcmotfin,
                                                          pcmovimi,
                                                          pcdesaut,
                                                          pcultpag,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_sin_causa_motivo;

   /***********************************************************************
      Recupera un registro de sin_causa_motivo
      param  in  pscaumot : cÃ³digo de la causa/motivo
      param  out  pccausin : cÃ³digo de la causa del siniestro
      param  out  pcmotsin : cÃ³digo del motivo del siniestro
      param  out  pcpagaut : si los pagos son automaticos
      param  out  pcmotmov : cÃ³digo motivo del movimiento
      param  out  pcmotfin : cÃ³digo motivo movimiento fin
      param  out  pcmovimi : cÃ³digo motivo movimiento inicial
      param  out  pcdesaut : si genera destinatario automaticamente
      param  out  pcultpag : Pago se crea marcado como Ãºltimo pago

      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      26/05/2009   AMC                 Sinistres.  Bug: 8816
      Bug 12753     18/01/2010  AMC Se aÃ±ade el parametro pcdesaut
      -- Bug 0022490 - 09/07/2012 - JMF: aÃ±adir pcultpag
   ***********************************************************************/
   FUNCTION f_get_caumot(pscaumot IN NUMBER,
                         pccausin OUT NUMBER,
                         pcmotsin OUT NUMBER,
                         pcpagaut OUT NUMBER,
                         pcmotmov OUT NUMBER,
                         pcmotfin OUT NUMBER,
                         pcmovimi OUT NUMBER,
                         pcdesaut OUT NUMBER,
                         pcultpag OUT NUMBER,
                         mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ metres - pscaumot: ' || pscaumot;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_get_caumot';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      -- ComprovaciÃ³ pas de parÃ metres
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_get_caumot(pscaumot,
                                                pccausin,
                                                pcmotsin,
                                                pcpagaut,
                                                pcmotmov,
                                                pcmotfin,
                                                pcmovimi,
                                                pcdesaut,
                                                pcultpag,
                                                mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_caumot;

   /***********************************************************************
      Guarda a la taula una nova conf. per el producte
      param  in  pscaumot :  cÃ³digo de la causa
      param  in  psproduc  : cÃ³digo del producto
      param  in  pcactivi  : cÃ³digo de la actividad
      param  in  pcgarant  : cÃ³digo de la garantia
      param  in  pctramit  : cÃ³digo de la tramitaciÃ³n
      param out mensajes  : mensajes de error
      return              : NUMBER

      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_set_caumot_producte(pscaumot IN NUMBER,
                                  psproduc IN NUMBER,
                                  pcactivi IN NUMBER,
                                  pcgarant IN NUMBER,
                                  pctramit IN NUMBER,
                                  mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_caumot_producte';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' psproduc:' || psproduc || ' pcactivi:' ||
                                   pcactivi || ' pcgarant:' || pcgarant ||
                                   ' pctramit:' || pctramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_set_caumot_producte(pscaumot,
                                                         psproduc,
                                                         pcactivi,
                                                         pcgarant,
                                                         pctramit,
                                                         mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_caumot_producte;

   /***********************************************************************
      Eliminar de la taula una conf. del producte
      param  in  pscaumot :  cÃ³digo de la causa
      param  in  psproduc  : cÃ³digo del producto
      param  in  pcactivi  : cÃ³digo de la actividad
      param  in  pcgarant  : cÃ³digo de la garantia
      param  in  pctramit  : cÃ³digo de la tramitaciÃ³n
      param out mensajes  : mensajes de error
      return              : NUMBER

      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot_producte(pscaumot IN NUMBER,
                                  psproduc IN NUMBER,
                                  pcactivi IN NUMBER,
                                  pcgarant IN NUMBER,
                                  pctramit IN NUMBER,
                                  mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_caumot_producte';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' psproduc:' || psproduc || ' pcactivi:' ||
                                   pcactivi || ' pcgarant:' || pcgarant ||
                                   ' pctramit:' || pctramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_caumot_producte(pscaumot,
                                                         psproduc,
                                                         pcactivi,
                                                         pcgarant,
                                                         pctramit,
                                                         mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_caumot_producte;

   /***********************************************************************
      Grabar les formulas
      param  in  pscaumot :  cÃ³digo de la causa
      param  in  pctipdes  : cÃ³digo del tipo de destinatario
      param  in  pccampo  : cÃ³digo del campo
      param  in  pcclave  : cÃ³digo de la formula
      param out mensajes  : mensajes de error
      return              : sys_refcursor

      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_set_caumot_destformula(pscaumot IN NUMBER,
                                     pctipdes IN NUMBER,
                                     pccampo  IN VARCHAR2,
                                     pcclave  IN NUMBER,
                                     mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_caumot_destformula';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' pctipdes:' || pctipdes || ' pccampo:' ||
                                   pccampo || ' pcclave:' || pcclave;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_set_caumot_destformula(pscaumot,
                                                            pctipdes,
                                                            pccampo,
                                                            pcclave,
                                                            mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_caumot_destformula;

   /***********************************************************************
      Eliminar de la taula una conf. formula
      scaumot  IN  NUMBER,
      pctipdes  IN  NUMBER,
      pccampo   IN  VARCHAR2,
      pcclave   IN  NUMBER,
      param out mensajes  : mensajes de error
      return              : NUMBER

      26/05/2009   XPL                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot_destformula(pscaumot IN NUMBER,
                                     pctipdes IN NUMBER,
                                     pccampo  IN VARCHAR2,
                                     pcclave  IN NUMBER,
                                     mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_caumot_destformula';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' pctipdes:' || pctipdes || ' pccampo:' ||
                                   pccampo || ' pcclave:' || pcclave;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_caumot_destformula(pscaumot,
                                                            pctipdes,
                                                            pccampo,
                                                            pcclave,
                                                            mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_caumot_destformula;

   /***********************************************************************
      Grabar en sin_det_causa_motivo
      param  in  pscaumot : cÃ³digo de la causa/motivo
      param  in  pctipdes : cÃ³digo tipo destinatario
      param  in  pcmodfis : cÃ³digo del modelo fiscal
      param  out mensajes : mensajes de error
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      27/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_set_sindetcausamot(pscaumot IN NUMBER,
                                 pctipdes IN NUMBER,
                                 pcmodfis IN NUMBER,
                                 mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_sindetcausamot';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' pctipdes:' || pctipdes || ' pcmodfis:' ||
                                   pcmodfis;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pscaumot IS NULL OR
         pctipdes IS NULL OR
         pcmodfis IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_set_sindetcausamot(pscaumot,
                                                        pctipdes,
                                                        pcmodfis,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_sindetcausamot;

   /***********************************************************************
      Devuelve el siguiente codigo de causa/motivo
      param  out  pscaumot : PrÃ³ximo cÃ³digo de la causa/motivo
      param  out  mensajes : Mensajes de error
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      27/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_get_nextscaumot(pscaumot OUT NUMBER,
                              mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := '';
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_get_nextscaumot';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_get_nextscaumot(pscaumot, mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_nextscaumot;

   /***********************************************************************
      Eliminar de la taula sin_det_causa_motivo
      param  in  pscaumot : cÃ³digo de la causa/motivo
      param  in  pctipdes : cÃ³digo tipo destinatario
      param  out  mensajes : Mensajes de error
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      27/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot_destinatario(pscaumot IN NUMBER,
                                      pctipdes IN NUMBER,
                                      mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot ||
                                   ' pctipdes:' || pctipdes;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_del_caumot_destinatario';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_del_caumot_destinatario(pscaumot,
                                                             pctipdes,
                                                             mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_caumot_destinatario;

   /***********************************************************************
      Eliminar de la taula sin_det_causa_motivo
      param  in  pscaumot : cÃ³digo de la causa/motivo
      param  out  mensajes : Mensajes de error
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      28/05/2009   AMC                 Sinistres.  Bug: 8816
   ***********************************************************************/
   FUNCTION f_del_caumot(pscaumot IN NUMBER,
                         mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ¡metros - pscaumot:' || pscaumot;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_del_caumot';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_del_caumot(pscaumot, mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_caumot;

   /***********************************************************************
     FUNCTION F_ESTADO_TRAMITACION:
      Cambia el estado de una tramitaciÃ³n
      param in pnsinies : NÃºmero siniestro
      param in pntramit : NÃºmero tramitaciÃ³n
      param in pcesttra : CÃ³digo estado
      param  out  mensajes : Mensajes de error
      return            : 0 -> Tot correcte
                          1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_estado_tramitacion(pnsinies IN VARCHAR2,
                                 pntramit IN NUMBER,
                                 pcesttra IN NUMBER,
                                 mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' - pntramit:' || pntramit ||
                                   ' - pcesttra:' || pcesttra;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_estado_tramitacion';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_estado_tramitacion(pnsinies,
                                                        pntramit,
                                                        pcesttra,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_estado_tramitacion;

   /***********************************************************************
     FUNCTION F_ESTADO_SINIESTRO:
      Cambia el estado de un siniestro
      param in  pnsinies   : NÃºmero Siniestro
      param in pcestsin    : codi estat sinistre
      param in pccauest    : codi causa estat sinistre
      param in pcunitra    : codi unitat tramitaciÃ³
      param in pctramitad  : codi tramitador
      param in pcsubtra    : codi subestat tramitaciÃ³
      param  out  mensajes : Mensajes de error
      return               : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_estado_siniestro(pnsinies   IN VARCHAR2,
                               pcestsin   IN NUMBER,
                               pccauest   IN NUMBER,
                               pcunitra   IN VARCHAR2,
                               pctramitad IN VARCHAR2,
                               pcsubtra   IN NUMBER,
                               pfsinfin   IN DATE,
                               pobserv    IN VARCHAR2 DEFAULT NULL,  --IAXIS 3663 AABC 12/04/2019 Adicion campo observacion
                               mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' - pcestsin:' || pcestsin ||
                                   ' - pccauest:' || pccauest ||
                                   ' - pcunitra:' || pcunitra ||
                                   ' - pctramitad:' || pctramitad ||
                                   ' - pcsubtra:' || pcsubtra ||
                                   ' - pfsinfin:' || pfsinfin;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_estado_siniestro';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_estado_siniestro(pnsinies,
                                                      pcestsin,
                                                      pccauest,
                                                      pcunitra,
                                                      pctramitad,
                                                      pcsubtra,
                                                      pfsinfin,
                                                      'CAMBIO_ESTADO',
                                                      pobserv,         --IAXIS 3663 AABC 12/04/2019 Adicion campo observacion
                                                      mensajes);

      IF vnumerr <> 0
      THEN
         --pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr); -- ETM 01/02/2012
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_estado_siniestro;

   /***********************************************************************
     FUNCTION F_SET_DOCUMENTOS:
         Inserta a la taula SIN_TRAMITA_DOCUMENTO dels parÃ metres informats.
         param in psproduc    : CÃ³digo producto
         param in pcactivi    : CÃ³digo actividad
         param in pccausin    : CÃ³digo causa
         param in pcmotsin    : CÃ³digo motivo
         param in pcidioma    : CÃ³digo idioma
         param in pctramit    : CÃ³digo tramitaciÃ³n (opcional, sinÃ³ = 0)
         param  out  mensajes : Mensajes de error
         return               : 0 -> Tot correcte
                                1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_set_documentos(pnsinies IN VARCHAR2,
                             psproduc IN NUMBER,
                             pcactivi IN NUMBER,
                             pccausin IN NUMBER,
                             pcmotsin IN NUMBER,
                             pcidioma IN NUMBER,
                             mensajes OUT t_iax_mensajes,
                             pntramit IN NUMBER DEFAULT 0) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' - psproduc:' || psproduc ||
                                   ' - pcactivi:' || pcactivi ||
                                   ' - pccausin:' || pccausin ||
                                   ' - pcmotsin:' || pcmotsin ||
                                   ' - pcidioma:' || pcidioma ||
                                   ' - pntramit:' || pntramit;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_set_documentos';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_set_documentos(pnsinies,
                                                    psproduc,
                                                    pcactivi,
                                                    pccausin,
                                                    pcmotsin,
                                                    pcidioma,
                                                    mensajes,
                                                    pntramit);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_documentos;

   /***********************************************************************
     FUNCTION F_SET_CAUSA:
         Inserta una causa amb els  parÃ metres informats.
         param in pccauest     : CÃ³digo Causa Estado
         param in pcestsin     : CÃ³digo Estado Siniestro
         param in pcidioma     : CÃ³digo Idioma
         param in ptcauest     : DescripciÃ³n Causa Estado
         param out  mensajes   : Mensajes de error
         return                : 0 -> Tot correcte
                                 1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_set_causa(pccauest IN NUMBER,
                        pcestsin IN NUMBER,
                        pcidioma IN NUMBER,
                        ptcauest IN VARCHAR2,
                        mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobject  VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_causa';
      vparam   VARCHAR2(500) := 'parÃ¡metros - pccauest:' || pccauest ||
                                ' - pcestsin:' || pcestsin ||
                                ' - pcidioma:' || pcidioma ||
                                ' - ptcauest:' || ptcauest;
      vpasexec NUMBER(5) := 1;
      vnumerr  NUMBER(8) := 0;
   BEGIN
      -- ComprovaciÃ³ pas de parÃ metres
      IF pccauest IS NULL OR
         pcestsin IS NULL OR
         pcidioma IS NULL OR
         ptcauest IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_set_causa(pccauest,
                                               pcestsin,
                                               pcidioma,
                                               ptcauest,
                                               mensajes);

      IF vnumerr <> 0
      THEN
         vpasexec := 2;
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         RETURN 1;
   END f_set_causa;

   /***********************************************************************
      FUNCTION f_get_causas
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST las causas
         param in pccauest  : CÃ³digo Causa Estado
         param in pcestsin  : CÃ³digo Estado Siniestro
         param in ptcauest  : DescripciÃ³n Estado
         param out mensajes : T_IAX_MENSAJES
         return             : ref cursor
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_get_causas(pccauest IN NUMBER,
                         pcestsin IN NUMBER,
                         ptcauest IN VARCHAR2,
                         mensajes OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(200) := 'parÃ¡metros - pccauest:' || pccauest ||
                                ' - pcestsin:' || pcestsin ||
                                ' - ptcauest:' || ptcauest;
      vobject  VARCHAR2(50) := 'PAC_IAX_SINIESTROS.F_get_causas';
      vcursor  SYS_REFCURSOR;
   BEGIN
      vpasexec := 2;
      vcursor  := pac_md_siniestros.f_get_causas(pccauest,
                                                 pcestsin,
                                                 ptcauest,
                                                 mensajes);
      vpasexec := 3;
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
   END f_get_causas;

   /***********************************************************************
      FUNCTION f_get_causa
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST una causa en
         concreto con sus descripciones
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         param out mensajes : T_IAX_MENSAJES
         return             : ref cursor
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_get_causa(pccauest IN NUMBER,
                        pcestsin IN NUMBER,
                        mensajes OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(200) := 'parÃ¡metros - pccauest:' || pccauest ||
                                ' - pcestsin:' || pcestsin;
      vobject  VARCHAR2(50) := 'PAC_IAX_SINIESTROS.F_get_causa';
      vcursor  SYS_REFCURSOR;
   BEGIN
      vpasexec := 2;
      vcursor  := pac_md_siniestros.f_get_causa(pccauest,
                                                pcestsin,
                                                mensajes);
      vpasexec := 3;
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
   END f_get_causa;

   /***********************************************************************
     FUNCTION f_del_causa
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST una causa en
         concreto con sus descripciones
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_del_causa(pccauest IN NUMBER,
                        pcestsin IN NUMBER,
                        mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_causa';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pccauest:' || pccauest ||
                                   ' pcestsin:' || pcestsin;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pccauest IS NULL OR
         pcestsin IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_causa(pccauest, pcestsin, mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_causa;

   /***********************************************************************
      FUNCTION f_del_detcausa
         Recupera de la tabla SIN_CODCAUEST y SIN_DESCAUEST una causa en
         concreto con sus descripciones
         param in pccauest : CÃ³digo Causa Estado
         param in pcestsin : CÃ³digo Estado Siniestro
         param in pcidioma : CÃ³digo Idioma
         return            : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/07/2009   XVM                 Sinistres.  Bug: 8820
   ***********************************************************************/
   FUNCTION f_del_detcausa(pccauest IN NUMBER,
                           pcestsin IN NUMBER,
                           pcidioma IN NUMBER,
                           mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_detcausa';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pccauest:' || pccauest ||
                                   ' pcestsin:' || pcestsin || ' pcidioma:' ||
                                   pcidioma;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pccauest IS NULL OR
         pcestsin IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_detcausa(pccauest,
                                                  pcestsin,
                                                  pcidioma,
                                                  mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_detcausa;

   /***********************************************************************
     FUNCTION F_INS_DOCUMENTOS:
         Inserta a la taula SIN_TRAMITA_DOCUMENTO dels parÃ metres informats.
         param in psproduc    : CÃ³digo producto
         param in pcactivi    : CÃ³digo actividad
         param in pccausin    : CÃ³digo causa
         param in pcmotsin    : CÃ³digo motivo
         param in pcidioma    : CÃ³digo idioma
         param in pctramit    : CÃ³digo tramitaciÃ³n (opcional, sinÃ³ = 0)
         param  out  mensajes : Mensajes de error
         return               : 0 -> Tot correcte
                                1 -> S'ha produit un error
   ***********************************************************************/
   FUNCTION f_ins_documentos(pnsinies IN VARCHAR2,
                             psproduc IN NUMBER,
                             pcactivi IN NUMBER,
                             pccausin IN NUMBER,
                             pcmotsin IN NUMBER,
                             pcidioma IN NUMBER,
                             mensajes OUT t_iax_mensajes,
                             pntramit IN NUMBER DEFAULT 0) RETURN NUMBER IS
      vpasexec    NUMBER(8) := 1;
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' - psproduc:' || psproduc ||
                                   ' - pcactivi:' || pcactivi ||
                                   ' - pccausin:' || pccausin ||
                                   ' - pcmotsin:' || pcmotsin ||
                                   ' - pcidioma:' || pcidioma ||
                                   ' - pntramit:' || pntramit;
      vobjectname VARCHAR2(50) := 'PAC_IAX_SINIESTROS.f_ins_documentos';
      vnumerr     NUMBER(10) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_ins_documentos(pnsinies,
                                                    pntramit,
                                                    psproduc,
                                                    pcactivi,
                                                    pccausin,
                                                    pcmotsin,
                                                    pcidioma,
                                                    mensajes,
                                                    NULL,
                                                    NULL);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_ins_documentos;

   /*************************************************************************
    funciÃ³n recupera documentos de una tramitaciÃ³n concreta
    ob_iax_siniestros.documentacion
       nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       ndocume        NUMBER(6),   --NÃºmero Documento

   *************************************************************************/
   FUNCTION f_get_objeto_sintramidocumento(pnsinies IN VARCHAR2,
                                           pntramit IN NUMBER,
                                           pndocume IN NUMBER,
                                           mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_trami_documento IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_get_objeto_sintramidocumento';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pndocume: ' || pndocume;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_index     NUMBER(8);
      v_documento ob_iax_sin_trami_documento := ob_iax_sin_trami_documento();
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL OR
         pndocume IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pndocume IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .documentos IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .documentos.first .. vgobsiniestro.tramitaciones(i)
                                                      .documentos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).documentos(j)
                            .ndocume = pndocume AND
                              vgobsiniestro.tramitaciones(i).documentos(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              ---------
                              vnumerr := pac_md_siniestros.f_get_ttitdoc(vgobsiniestro.tramitaciones(i).documentos(j)
                                                                         .cdocume,
                                                                         vgobsiniestro.tramitaciones(i).documentos(j)
                                                                         .ttitdoc,
                                                                         mensajes);

                              IF vnumerr <> 0
                              THEN
                                 pac_iobj_mensajes.crea_nuevo_mensaje(mensajes,
                                                                      1,
                                                                      vnumerr);
                                 RAISE e_object_error;
                              END IF;

                              ---------
                              v_documento := vgobsiniestro.tramitaciones(i)
                                             .documentos(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- END IF;
      vpasexec := 6;
      RETURN v_documento;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramidocumento;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.documentacion
       nsinies        VARCHAR2(14),   --NÃºmero Siniestro
       ntramit        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
       ndocume        NUMBER(6),   --NÃºmero Documento
       cdocume        NUMBER(6),   --CÃ³digo Documento
       iddoc          NUMBER(10),  --Identificador documento GEDOX
       freclama       DATE,        --Fecha reclamacion
       frecibe        DATE,        --Fecha recepcion
       fcaduca        DATE,        --Fecha caducidad
       cobliga        NUMBER(1)    --CÃ³digo obligatoriedad
       descripcion    VARCHAR2     --Descripcion del usuario para el documento
   *************************************************************************/
   FUNCTION f_set_objeto_sintramidocumento(pnsinies     IN VARCHAR2,
                                           pntramit     IN NUMBER,
                                           pndocume     IN NUMBER,
                                           pcdocume     IN NUMBER,
                                           piddoc       IN NUMBER,
                                           pfreclama    IN DATE,
                                           pfrecibe     IN DATE,
                                           pfcaduca     IN DATE,
                                           pcobliga     IN NUMBER,
                                           pdescripcion IN VARCHAR2,
                                           pndocume_out OUT NUMBER,
                                           mensajes     OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramidocumento';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pndocume: ' || pndocume ||
                                   ' - pcdocume: ' || pcdocume ||
                                   ' - piddoc: ' || piddoc ||
                                   ' - pfreclama: ' ||
                                   TO_CHAR(pfreclama, 'DD/MM/YYYY') ||
                                   ' - pfrecibe: ' ||
                                   TO_CHAR(pfrecibe, 'DD/MM/YYYY') ||
                                   ' - pfcaduca: ' ||
                                   TO_CHAR(pfcaduca, 'DD/MM/YYYY') ||
                                   ' - pcobliga: ' || pcobliga ||
                                   ' - pdescripcion: ' || pdescripcion;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vndocume    sin_tramita_documento.ndocume%TYPE;
      v_index     NUMBER(8);
      vcaccion    NUMBER;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      --BUG 27063 - INICIO - DCT - 30/05/2013
      IF TRUNC(pfrecibe) > TRUNC(f_sysdate)
      THEN
         --La fecha de recepciÃ³n no puede ser futura
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9905626);
         RETURN 1;
      END IF;

      --BUG 27063 - FIN - DCT - 30/05/2013
      vpasexec := 21;

      -- Bug 34622 - JTT - 02/03/2015 - Validaciones sobre el documento de cierre (cdocume = 521)
      IF pcdocume = 521
      THEN
         -- documento de cierre
         vcaccion := 1;

         IF pndocume IS NULL
         THEN
            vnumerr := pac_validaciones_sin.f_validar_documento_cierre(pnsinies,
                                                                       pntramit,
                                                                       pcdocume);

            IF vnumerr <> 0
            THEN
               pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
               RETURN 1;
            END IF;
         END IF;
      END IF;

      -- Fi bug 34622
      vpasexec := 3;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 222;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 4;

                  IF pndocume IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .documentos IS NOT NULL
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .documentos.first .. vgobsiniestro.tramitaciones(i)
                                                      .documentos.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).documentos(j)
                            .ndocume = pndocume AND
                              vgobsiniestro.tramitaciones(i).documentos(j)
                              .ntramit = pntramit
                           THEN
                              -- Si el trobem, el modifiquem
                              vpasexec := 5;
                              vnumerr  := pac_md_siniestros.f_set_objeto_sintramidocumento(pnsinies,
                                                                                           pntramit,
                                                                                           pndocume,
                                                                                           pcdocume,
                                                                                           piddoc,
                                                                                           pfreclama,
                                                                                           pfrecibe,
                                                                                           pfcaduca,
                                                                                           pcobliga,
                                                                                           pdescripcion,
                                                                                           vcaccion,
                                                                                           vgobsiniestro.tramitaciones(i)
                                                                                           .documentos(j),
                                                                                           mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              pndocume_out := pndocume;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     vndocume := 0;

                     IF vgobsiniestro.tramitaciones(i).documentos IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).documentos := t_iax_sin_trami_documento();
                     ELSIF vgobsiniestro.tramitaciones(i)
                      .documentos.count > 0
                     THEN
                        vndocume := NVL(vgobsiniestro.tramitaciones(i).documentos(vgobsiniestro.tramitaciones(i).documentos.last)
                                        .ndocume,
                                        0) + 1;
                     END IF;

                     vpasexec := 7;
                     vgobsiniestro.tramitaciones(i).documentos.extend;
                     v_index := vgobsiniestro.tramitaciones(i)
                                .documentos.last;
                     vgobsiniestro.tramitaciones(i).documentos(v_index) := ob_iax_sin_trami_documento();
                     -- BUG 10393 - 23/09/2009 - DCT - canviar parametro pndocume por vndocume
                     vpasexec := 8;
                     vnumerr  := pac_md_siniestros.f_set_objeto_sintramidocumento(pnsinies,
                                                                                  pntramit,
                                                                                  vndocume,
                                                                                  pcdocume,
                                                                                  piddoc,
                                                                                  pfreclama,
                                                                                  pfrecibe,
                                                                                  pfcaduca,
                                                                                  pcobliga,
                                                                                  pdescripcion,
                                                                                  vcaccion,
                                                                                  vgobsiniestro.tramitaciones(i)
                                                                                  .documentos(v_index),
                                                                                  mensajes);

                     -- FI BUG 10393 - 23/09/2009 - DCT - canviar parametro pndocume por vndocume
                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;

                     pndocume_out := vndocume;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      -- END IF;
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramidocumento;

   /***********************************************************************
      FUNCTION F_SET_MOVSINIESTRO
      Guarda un moviment de sinistre
      param  in  pnsinies    : cÃ³digo siniestro
      param  in  pcestsin    : cÃ³digo estado siniestro
      param  in  pfestsin    : data estado siniestro
      param  in  pccauest    : cÃ³digo causa estado siniestro
      param  in  pcunitra    : cÃ³digo unidad tramitaciÃ³n
      param  in  pctramitad  : cÃ³digo tramitador
      param out pnmovsin  : nÃºmero movimiento
      param out mensajes  : mensajes de error
      return              : NUMBER
      26/05/2009   XVM
   ***********************************************************************/
   FUNCTION f_set_movsiniestro(pnsinies   IN VARCHAR2,
                               pcestsin   IN NUMBER,
                               pfestsin   IN DATE,
                               pccauest   IN NUMBER,
                               pcunitra   IN VARCHAR2,
                               pctramitad IN VARCHAR2,
                               pnmovsin   OUT NUMBER,
                               mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_movsiniestro';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' pcestsin:' || pcestsin || ' pfestsin:' ||
                                   pfestsin || ' pccauest:' || pccauest ||
                                   ' pcunitra:' || pcunitra ||
                                   ' pctramitad:' || pctramitad;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_ins_movsiniestro(pnsinies,
                                                      pcestsin,
                                                      pfestsin,
                                                      pccauest,
                                                      pcunitra,
                                                      pctramitad,
                                                      pnmovsin,
                                                      mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_movsiniestro;

   /***********************************************************************
      Recupera los datos de los conductores de la poliza
      param in psseguro  : cÃ³digo de seguro
      param in pnriesgo  : NÃºmero de riesgo
      param out mensajes : mensajes de error
      return             : objeto tomadores
   ***********************************************************************/
   FUNCTION f_get_conductores(psseguro IN NUMBER,
                              pnriesgo IN NUMBER,
                              mensajes OUT t_iax_mensajes)
      RETURN t_iax_autconductores IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_conductores';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      conductores t_iax_autconductores;
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL OR
         pnriesgo IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec    := 3;
      conductores := pac_md_obtenerdatos.f_leeconductores(pnriesgo,
                                                          mensajes);

      IF conductores IS NULL
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 5;
      RETURN conductores;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_conductores;

   /***********************************************************************
      Recupera los datos de los riesgos de la pÃ³liza
      param in psseguro  : cÃ³digo de seguro
      param out mensajes : mensajes de error
      param in pnriesgo  : nÃºmero de riesgo
      return             : T_IAX_GESTRIESGOS con la colecciÃ³n de riesgos de la pÃ³liza
                           NULL si error
   ***********************************************************************/
   FUNCTION f_get_polriesgos(psseguro IN NUMBER,
                             mensajes OUT t_iax_mensajes,
                             pnriesgo IN NUMBER DEFAULT NULL)
      RETURN t_iax_riesgos IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_PolRiesgos';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_t_riesgos t_iax_riesgos := t_iax_riesgos();
      vmovimi     NUMBER;
      --IAXIS-4961 AABC INICIALIZACION DE DATOS DE POLIZA
      vsproduc    NUMBER;
      vcramo      NUMBER;
      vctipseg    NUMBER;
      vccolect    NUMBER;
      vcmodali    NUMBER;
      vcempres    NUMBER;
      vcidioma    NUMBER := pac_md_common.f_get_cxtidioma;
      --IAXIS-4961 AABC INICIALIZACION DE DATOS DE POLIZA
   BEGIN
      --ComprovaciÃ³ de parÃ metres d'entrada
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      SELECT MAX(nmovimi)
        INTO vmovimi
        FROM movseguro
       WHERE sseguro = psseguro;
       --IAXIS-4961 AABC INICIALIZACION DE DATOS DE POLIZA
       SELECT s.sproduc , p.cramo , p.ctipseg, p.ccolect, p.cmodali , s.cempres
         INTO vsproduc , vcramo , vctipseg , vccolect , vcmodali , vcempres
         FROM seguros s, productos p
        WHERE p.sproduc = s.sproduc
          AND s.sseguro = psseguro;
       --IAXIS-4961 AABC INICIALIZACION DE DATOS DE POLIZA
      vnumerr := pac_md_obtenerdatos.f_inicializa('POL',
                                                  psseguro,
                                                  vmovimi,
                                                  mensajes);
      --IAXIS-4961 AABC INICIALIZACION DE DATOS DE POLIZA
      vnumerr := pac_iaxpar_productos.f_inicializa(vsproduc,vcmodali,vcempres,vcidioma,vccolect,vcramo,vctipseg,mensajes);
      --IAXIS-4961 AABC INICIALIZACION DE DATOS DE POLIZA                                            

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec    := 5;
      v_t_riesgos := pac_md_obtenerdatos.f_leeriesgos(mensajes, pnriesgo);

      IF v_t_riesgos IS NULL
      THEN
         RAISE e_object_error;
      END IF;

      RETURN v_t_riesgos;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_polriesgos;

   /***********************************************************************
      Recupera los datos del documento siniestro
      param in pcdocume: CÃ³digo del documento
      param in pcidioma : CÃ³digo del idioma
      param out pttitdoc: Nombre identificativo Documento
      param out ptdocume : DescripciÃ³n Documento
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_get_documentos(pcdocume IN NUMBER,
                             pcidioma IN NUMBER,
                             pttitdoc OUT VARCHAR2,
                             ptdocume OUT VARCHAR2,
                             mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_Documentos';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pcdocume: ' || pcdocume ||
                                   ' - pcidioma: ' || pcidioma;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pcdocume IS NULL OR
         pcidioma IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 1;
      vnumerr  := pac_md_siniestros.f_get_documentos(pcdocume,
                                                     pcidioma,
                                                     pttitdoc,
                                                     ptdocume,
                                                     mensajes);
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_documentos;

   /***********************************************************************
         14/10/2009 XPL bug. 11192. Alta de siniestros de Vida
      Dona d'alta la capÃ§alera i localitzaciÃ³ de Sinistres VIDA XPL
      pnsinies IN VARCHAR2,
      psproduc IN NUMBER,
      pcactivi IN NUMBER,
      psseguro IN NUMBER,
      pnriesgo IN NUMBER,
      pfsinies IN DATE,
      pfnotifi IN DATE,
      pccausin IN NUMBER,
      pcmotsin IN NUMBER,
      phsinies IN VARCHAR2,
      pcculpab IN NUMBER,
      ptsinies IN VARCHAR2,
      ptzonaocu IN VARCHAR2,
      mensajes OUT t_iax_mensajes
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_set_objeto_cabecera_vida(pnsinies   IN VARCHAR2,
                                       psproduc   IN NUMBER,
                                       pcactivi   IN NUMBER,
                                       psseguro   IN NUMBER,
                                       pnriesgo   IN NUMBER,
                                       pfsinies   IN DATE,
                                       pfnotifi   IN DATE,
                                       pccausin   IN NUMBER,
                                       pcmotsin   IN NUMBER,
                                       phsinies   IN VARCHAR2,
                                       pcculpab   IN NUMBER,
                                       ptsinies   IN VARCHAR2,
                                       ptzonaocu  IN VARCHAR2,
                                       pcmeddec   IN NUMBER,
                                       pctipdec   IN NUMBER,
                                       ptnomdec   IN VARCHAR2,
                                       ptnom1dec  IN VARCHAR2, -- bug 19896--ETM--20/12/2011---AÃ±adir el campo tnombre1 al declarante
                                       ptnom2dec  IN VARCHAR2, -- bug 19896--ETM--20/12/2011---AÃ±adir el campo tnombre2 al declarante
                                       ptape1dec  IN VARCHAR2,
                                       ptape2dec  IN VARCHAR2,
                                       ptteldec   IN VARCHAR2,
                                       ptmovildec IN VARCHAR2, -- bug 19896--ETM--20/12/2011--AÃ±adir campo movil al declarante
                                       ptemaildec IN VARCHAR2, -- bug 19896--ETM--20/12/2011--AÃ±adir campo email  al declarante
                                       pctipide   IN NUMBER,
                                       pnnumide   IN VARCHAR2,
                                       pnsincia   IN VARCHAR2, --BUG 14587 - PFA - 13/08/2010 - AÃ±adir campo siniestro compaÃ±ia
                                       pccompani  IN NUMBER,
                                       pnpresin   IN VARCHAR2, -- Bug 15006 - PFA - 16/08/2010 - nuevos campos en bÃºsqueda siniestros
                                       pcagente   IN NUMBER, -- Bug 21817 - MDS - 2/05/2012
                                       mensajes   OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_objeto_cabecera_vida';
      vparam      VARCHAR2(500) := 'parÃ¡metros - ';
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnsinies    sin_siniestro.nsinies%TYPE;
      vtmotsin    VARCHAR2(1000);
      vtcausin    VARCHAR2(1000);
      vtevento    VARCHAR2(1000);
   BEGIN
      vnumerr := pac_iax_siniestros.f_inicializasiniestro(psproduc,
                                                          pcactivi,
                                                          pnsinies,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- Bug 0022243 - 22/05/2012 - JMF : aÃ±adir pnsinies
      vnumerr := pac_iax_validaciones_sin.f_cabecerasini(pfsinies,
                                                         pfnotifi,
                                                         pccausin,
                                                         pcmotsin,
                                                         psseguro,
                                                         NULL,
                                                         NULL,
                                                         pnsinies,
                                                         '**',
                                                         0, -- 24434:ASN:05/11/2012
                                                         ptemaildec, -- 24869:NSS:11/12/2012
                                                         NULL, -- 24869:NSS:13/12/2012
                                                         NULL, -- 25537:asn:13/08/2013
                                                         NULL,
                                                         NULL,  -- CONF-85 23/06/2016 AP
                                                         mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      vnumerr := pac_iax_siniestros.f_set_cabecera_siniestro(pnsinies,
                                                             psseguro,
                                                             pnriesgo,
                                                             NULL,
                                                             pfsinies,
                                                             phsinies,
                                                             pfnotifi,
                                                             pccausin,
                                                             pcmotsin,
                                                             NULL,
                                                             pcculpab,
                                                             NULL,
                                                             NULL,
                                                             pcmeddec,
                                                             pctipdec,
                                                             ptnomdec,
                                                             ptnom1dec,
                                                             ptnom2dec,
                                                             ptape1dec,
                                                             ptape2dec,
                                                             ptteldec,
                                                             ptmovildec,
                                                             ptemaildec,
                                                             ptsinies,
                                                             pctipide,
                                                             pnnumide,
                                                             NULL,
                                                             pnsincia,
                                                             pccompani,
                                                             pnpresin,
                                                             NULL,
                                                             NULL,
                                                             NULL,
                                                             NULL,
                                                             NULL,
                                                             NULL,
                                                             NULL, -- BUG 19832 - 24/10/2011 - JMP: Se aÃ±ade parÃ¡metro PCCARPETA, se pasa NULL en este caso
                                                             NULL,
                                                             pcagente, -- Bug 21817 - MDS - 2/05/2012
                                                             mensajes,
                                                             NULL, -- BUG 0024675 - 15/11/2012 - JMF: modo
                                                             NULL, -- 24869:NSS:13/12/2012
                                                             NULL -- BUG 0024675 - 15/11/2012 - JMF: csalvam
                                                             );

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      IF ptzonaocu IS NOT NULL
      THEN
         -- al ser de vida le pasamos ntrami = 0, sÃ³lo grabamos localizaciÃ³n si tzonaocu no es nulo(VIDA)
         vnumerr := pac_iax_siniestros.f_set_objeto_sintramilocali(pnsinies,
                                                                   0,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   ptzonaocu,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,

                                                                   -- Bug 20154/98048 - 15/11/2011 - AMC
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   NULL,
                                                                   -- Fi Bug 20154/98048 - 15/11/2011 - AMC
                                                                   NULL, -- Bug 24780/130907 - 05/12/2012 - AMC
                                                                   mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --Es decideix baixar tota la gestiÃ³ a taules en comptes de anar mantenint l'objecte de sinistre persistent.
      --AixÃ­ per pantalla continuarem veient els objectes perÃ² alhora de grabar, no grabarem a l'objecte sinÃ³
      --a taules.
      vnumerr                                  := pac_iax_siniestros.f_grabar_siniestro(vnsinies,
                                                                                        mensajes);
      pac_iax_siniestros.vgobsiniestro.nsinies := vnsinies;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vnumerr := pac_iax_siniestros.f_inicializasiniestro(psproduc,
                                                          pcactivi,
                                                          vnsinies,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_objeto_cabecera_vida;

   -- BUG11434:DRA:13/11/2009:Inici
   /***********************************************************************
      Recupera los datos de un pago / recobro
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n
      param in  psidepag  : nÃºmero d pago
      param out  ob_iax_sin_trami_pago :  ob_iax_sin_trami_pago
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_get_pagrecob(pnsinies    IN VARCHAR2,
                           pntramit    IN NUMBER,
                           psidepag    IN NUMBER,
                           ob_pagrecob OUT ob_iax_sin_trami_pago,
                           mensajes    OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_pagrecob';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - psidepag: ' || psidepag;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_get_pagrecob(pnsinies,
                                                  pntramit,
                                                  psidepag,
                                                  ob_pagrecob,
                                                  mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_get_pagrecob;

   -- BUG11434:DRA:13/11/2009:Fi
   /***********************************************************************
      FUNCTION F_get_desunitradefecte
      Obtenim descripciÃ³ unitat tram i tramitador i els codis per Defecte
      param  out  ptunitra    : desc unidad tramitaciÃ³n
      param  out  pttramitad  : desc tramitador
      param  out  pcunitra    : cÃ³digo unidad tramitaciÃ³n
      param  out  pctramitad  : cÃ³digo tramitador
      param in out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_get_desunitradefecte(p_cuser   IN VARCHAR2,
                                   p_sseguro IN NUMBER,
                                   p_ccausin IN NUMBER,
                                   p_cmotsin IN NUMBER,
                                   p_nsinies IN NUMBER,
                                   p_ntramit IN NUMBER,
                                   ptunitra  OUT VARCHAR2,
                                   pttramit  OUT VARCHAR2,
                                   pcunitra  OUT VARCHAR2,
                                   pctramit  OUT VARCHAR2,
                                   mensajes  OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_objeto_cabecera_vida';
      vparam      VARCHAR2(500) := 'parÃ metres - p_cuser: ' || p_cuser ||
                                   'p_sseguro : ' || p_sseguro ||
                                   ' p_ccausin : ' || p_ccausin ||
                                   'p_cmotsin : ' || p_cmotsin ||
                                   ' p_nsinies : ' || p_nsinies ||
                                   'p_ntramit : ' || p_ntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnsinies    NUMBER(8);
      vtmotsin    VARCHAR2(1000);
      vtcausin    VARCHAR2(1000);
      vtevento    VARCHAR2(1000);
   BEGIN
      vnumerr := pac_md_siniestros.f_get_descunitradefecte(p_cuser,
                                                           p_sseguro,
                                                           p_ccausin,
                                                           p_cmotsin,
                                                           p_nsinies,
                                                           p_ntramit,
                                                           ptunitra,
                                                           pttramit,
                                                           pcunitra,
                                                           pctramit,
                                                           mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_desunitradefecte;

   /***********************************************************************
      Recupera el historico de reservas por tipo
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n
      param in  pctipres  : CÃ³digo de tipo de reservar
      param in  pcgarant  : CÃ³digo de la garantia
      param in  pnmovres  : Numero de movimiento de la reserva
      param in  psproduc  : CÃ³digo del producto
      param in  pcactivi  : CÃ³digo de la actividad
      param out  t_iax_sin_trami_reserva :  t_iax_sin_trami_reserva
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error

      -- Bug 14490 - 18/05/2010 - AMC - Se aÃ±ade los parametros pnmovres,psproduc,pcactivi
   ***********************************************************************/
   FUNCTION f_get_histreservas(pnsinies   IN VARCHAR2,
                               pntramit   IN NUMBER,
                               pctipres   IN NUMBER,
                               pctipgas   IN NUMBER, -- 26108
                               pcgarant   IN NUMBER,
                               pnmovres   IN NUMBER,
                               psproduc   IN NUMBER,
                               pcactivi   IN NUMBER,
                               pcmonres   IN VARCHAR2,
                               t_reservas OUT t_iax_sin_trami_reserva,
                               mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      cur         SYS_REFCURSOR;
      vsquery     VARCHAR2(5000);
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_histreservas';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramit:' || pntramit || ' pctipres:' ||
                                   pctipres || ' pcgarant:' || pcgarant ||
                                   ' pnmovres:' || pnmovres || ' psproduc:' ||
                                   psproduc || ' pcactivi:' || pcactivi ||
                                   ' pcmonres:' || pcmonres;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL OR
         pnmovres IS NULL OR
         psproduc IS NULL OR
         pcactivi IS NULL OR
         pcmonres IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      t_reservas := t_iax_sin_trami_reserva();
      vnumerr    := pac_md_siniestros.f_get_histreservas(pnsinies,
                                                         pntramit,
                                                         pctipres,
                                                         pctipgas, -- 26108
                                                         pcgarant,
                                                         pnmovres,
                                                         psproduc,
                                                         pcactivi,
                                                         pcmonres,
                                                         t_reservas,
                                                         mensajes);
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_histreservas;

   /**************************************************************************
      FunciÃ³n que genera un destinatario automatico
      param in  psseguro : Numero de seguro
      param in  pfsinies : Fecha siniestro
      param in  pccausin : CÃ³digo causa siniestro
      param in  pcmotsin : CÃ³digo motivo siniestro
      param in  pcgarant : CÃ³digo de la garantia
      param out psperson : CÃ³digo persona
      param out pctipdes : Codigo tipo destinatario
      param out pctipban : CÃ³digo tipo cuenta bancaria
      param out pcbancar : Cuenta bancaria
      param out pcpaise  : CÃ³digo PaÃ­s Residencia
      param out pctipcap : Tipo de prestaciÃ³n.  Valor 205.-- Bug 0017970 - 16/03/2011 - JMF
      param out mensajes : Mensajes de error
      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      Bug 12753 - 19/01/2010 - AMC
   ***********************************************************************/
   FUNCTION f_destina_aut(psseguro IN seguros.sseguro%TYPE,
                          pfsinies IN sin_siniestro.fsinies%TYPE,
                          pccausin IN sin_siniestro.ccausin%TYPE,
                          pcmotsin IN sin_siniestro.cmotsin%TYPE,
                          pcgarant IN codigaran.cgarant%TYPE,
                          psperson OUT sin_tramita_destinatario.sperson%TYPE,
                          pctipdes OUT sin_tramita_destinatario.ctipdes%TYPE,
                          pctipban OUT sin_tramita_destinatario.ctipban%TYPE,
                          pcbancar OUT sin_tramita_destinatario.cbancar%TYPE,
                          pcpaisre OUT sin_tramita_destinatario.cpaisre%TYPE,
                          pctipcap OUT sin_tramita_destinatario.ctipcap%TYPE,
                          mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_destina_aut';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro ||
                                   ' pfsinies:' || pfsinies || ' pccausin:' ||
                                   pccausin || ' pcmotsin:' || pcmotsin ||
                                   ' pcgarant:' || pcgarant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF psseguro IS NULL OR
         pfsinies IS NULL OR
         pccausin IS NULL OR
         pcmotsin IS NULL OR
         pcgarant IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_destina_aut(psseguro,
                                                 pfsinies,
                                                 pccausin,
                                                 pcmotsin,
                                                 pcgarant,
                                                 psperson,
                                                 pctipdes,
                                                 pctipban,
                                                 pcbancar,
                                                 pcpaisre,
                                                 pctipcap,
                                                 mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_destina_aut;

   /**************************************************************************
      FunciÃ³n que inserta un pago
      param in  pnsinies : nÃºmero de siniestro
      param in  pnriesgo : nÃºero de riesgp
      param in  pntramit : nÃºmero de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      param in  pcgarant : cÃ³digo de la garantia
      param in  pfsinies : fecha del siniestro
      param in  pfperini : fecha inicio periodo
      param in  pfperfin : fecha fin periodo
      param in  psproduc : CÃ³digo del producto
      param in  pcactivi : CÃ³digo de la actividad
      param out pcpaise  : Codigo de identificafiÃ³n del pago
      param out mensajes : Mensajes de error

      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      Bug 11849 - 20/01/2010 - AMC
   ***********************************************************************/
   FUNCTION f_inserta_pago(pnsinies IN sin_tramita_pago.nsinies%TYPE,
                           pnriesgo IN sin_siniestro.nriesgo%TYPE,
                           pntramit IN sin_tramita_pago.ntramit%TYPE,
                           pctipres IN sin_tramita_reserva.ctipres%TYPE,
                           pctipgas IN sin_tramita_reserva.ctipgas%TYPE, -- 26108
                           pcgarant IN sin_tramita_reserva.cgarant%TYPE,
                           pfsinies IN DATE,
                           pfperini IN sin_tramita_reserva.fresini%TYPE,
                           pfperfin IN sin_tramita_reserva.fresfin%TYPE,
                           psproduc IN NUMBER,
                           pcactivi IN NUMBER,
                           psidepag OUT sin_tramita_pago.sidepag%TYPE,
                           pipago   OUT sin_tramita_pago.isinret%TYPE,
                           mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_inserta_pago';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pnriesgo:' || pnriesgo || ' pntramit:' ||
                                   pntramit || ' pctipres:' || pctipres ||
                                   ' pcgarant:' || pcgarant || ' pfsinies:' ||
                                   pfsinies || ' pfperini:' || pfperini ||
                                   ' pfperfin:' || pfperfin;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vilimite    NUMBER;
      --- Bug 27514/149320 - 17/07/2013 - AMC
      vtramitaciones t_iax_sin_tramitacion;
      vtramitacion   ob_iax_sin_tramitacion;
      vctramitad     VARCHAR2(4);
      --- Fi Bug 27514/149320 - 17/07/2013 - AMC

      -- Bug 27514/149698 - 24/07/2013 - AMC
      vmoneda   monedas.cmonint%TYPE;
      vipago    NUMBER;
      v_fcambio DATE;
      vtasa     NUMBER;
      vcmonres  monedas.cmonint%TYPE;
      v_nnumdet NUMBER := 0;
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC
   BEGIN
      IF pnsinies IS NULL OR
         pnriesgo IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL OR
         pcgarant IS NULL OR
         pfsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_inserta_pago(pnsinies,
                                                  pnriesgo,
                                                  pntramit,
                                                  pctipres,
                                                  pctipgas, -- 26108
                                                  pcgarant,
                                                  pfsinies,
                                                  pfperini,
                                                  pfperfin,
                                                  psidepag,
                                                  pipago,
                                                  mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      --- Bug 27514/149320 - 17/07/2013 - AMC
      vtramitaciones := vgobsiniestro.tramitaciones;

      IF vtramitaciones IS NOT NULL
      THEN
         IF vtramitaciones.count > 0
         THEN
            FOR t IN vtramitaciones.first .. vtramitaciones.last
            LOOP
               vtramitacion := vtramitaciones(t);

               IF vtramitacion.ntramit = pntramit
               THEN
                  vctramitad := vtramitacion.movimientos(vtramitacion.movimientos.last)
                                .ctramitad;
                  vcmonres   := vtramitacion.reservas(vtramitacion.reservas.last)
                                .cmonres;
               END IF;
            END LOOP;
         END IF;
      END IF;

      -- Bug 29804 - 26/03/2014 - JTT
      -- Validem el limit del tramitador contra el import del pagament segons el parametre VALIDARLIMTRAMITADOR
      -- Per les operacions d'alta de pagament (v_numdet = 0) tenim en compte el parametre per fer la validaciÃ³ o no
      -- per la resta d'operacions es valida sempre es valida el limit del tramitador.
      vpasexec := 2;

      -- Per determinar si es una operaciÃ³ d'alta de pagament mirem si tenim el detall del pagament.
      IF psidepag IS NOT NULL
      THEN
         SELECT COUNT(*)
           INTO v_nnumdet
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag;
      ELSE
         v_nnumdet := 0;
      END IF;

      vpasexec := 3;

      IF (v_nnumdet > 0) OR
         (v_nnumdet = 0 AND NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                              'VALIDARLIMTRAMITADOR'),
                                1) = 1)
      THEN
         vpasexec := 4;
         -- Validacio del limit del tramitador

         -- Bug 27514/147806 - 04/07/2013 - AMC
         vnumerr := pac_md_siniestros.f_get_limite_tramitador(vctramitad,
                                                              pac_md_common.f_get_cxtempresa,
                                                              NULL, --ramo
                                                              vgobsiniestro.ccausin,
                                                              vgobsiniestro.cmotsin,
                                                              vilimite,
                                                              mensajes);

         ---Fi Bug 27514/149320 - 17/07/2013 - AMC
         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         -- Bug 27514/149698 - 24/07/2013 - AMC
         IF NVL(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                              'MULTIMONEDA'),
                0) = 1
         THEN
            vmoneda := pac_monedas.f_cmoneda_t(pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                                                             'MONEDAEMP'));

            IF vmoneda <> vcmonres
            THEN
               v_fcambio := pac_eco_tipocambio.f_fecha_max_cambio(vcmonres,
                                                                  vmoneda);
               vtasa     := pac_eco_tipocambio.f_cambio(vcmonres,
                                                        vmoneda,
                                                        v_fcambio);
               vipago    := vtasa * pipago;
            ELSE
               vipago := pipago;
            END IF;
         ELSE
            vipago := pipago;
         END IF;

         IF vilimite < NVL(vipago, 0)
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9903735);
            RAISE e_object_error;
         END IF;
      END IF;

      vpasexec := 5;
      -- Fi Bug 29804

      -- Fi Bug 27514/147806 - 04/07/2013 - AMC
      -- Fi Bug 27514/149698 - 24/07/2013 - AMC
      vnumerr := f_inicializasiniestro(psproduc,
                                       pcactivi,
                                       pnsinies,
                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_inserta_pago;

   /**************************************************************************
      FunciÃ³n que inserta un pago
      param in  pnsinies : nÃºmero de siniestro
      param in  pntramit : nÃºmero de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      param in  psproduc : CÃ³digo de producto
      param in  pcactivi : CÃ³digo de la actividad
      param in  pcgarant : cÃ³digo de la garantia
      param out pfperini : fecha inicio periodo
      param out mensajes : mensajes de error

      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      Bug 12207 - 01/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_get_fechareserva(pnsinies IN sin_tramita_pago.nsinies%TYPE,
                               pntramit IN sin_tramita_pago.ntramit%TYPE,
                               pctipres IN sin_tramita_reserva.ctipres%TYPE,
                               pctipgas IN sin_tramita_reserva.ctipgas%TYPE, -- 26108
                               psproduc IN NUMBER,
                               pcactivi IN NUMBER,
                               pcgarant IN sin_tramita_reserva.cgarant%TYPE,
                               pfperini OUT sin_tramita_reserva.fresini%TYPE,
                               mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_fechareserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramit:' || pntramit || ' pctipres:' ||
                                   pctipres || ' psproduc:' || psproduc ||
                                   ' pcactivi:' || pcactivi || ' pcgarant:' ||
                                   pcgarant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL OR
         psproduc IS NULL OR
         pcactivi IS NULL OR
         pcgarant IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_get_fechareserva(pnsinies,
                                                      pntramit,
                                                      pctipres,
                                                      pctipgas, -- 26108
                                                      psproduc,
                                                      pcactivi,
                                                      pcgarant,
                                                      pfperini,
                                                      mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_fechareserva;
/**************************************************************************
      FunciÃ³n que borrar amparo
      param in  pnsinies : nÃºmero de siniestro
      param in  pntramit : nÃºmero de tramitacion
     
      param in  pcgarant : cÃ³digo de la garantia
      param in  psproduc : CÃ³digo del producto
      param in  pcactivi : CÃ³digo de la actividad
      param out mensajes : mensajes de error

      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      Bug 12207 - 01/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_del_amparo(pnsinies IN sin_tramita_amparo.nsinies%TYPE,
                             pntramit IN sin_tramita_amparo.ntramit%TYPE,                             
                             pcgarant IN sin_tramita_amparo.cgarant%TYPE,
                             psproduc IN NUMBER,
                             pcactivi IN NUMBER,
                             mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_amparo';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramit:' || pntramit  ||
                                   ' pcgarant:' || pcgarant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pcgarant IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_amparo(pnsinies,
                                                    pntramit,                                                    
                                                    pcgarant,
                                                    mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := f_inicializasiniestro(psproduc,
                                       pcactivi,
                                       pnsinies,
                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_amparo;
   /**************************************************************************
      FunciÃ³n que borrar el ultimo movimiento de una reserva si no tiene pagos
      param in  pnsinies : nÃºmero de siniestro
      param in  pntramit : nÃºmero de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      param in  pnmovres : Numero de movimiento
      param in  pcgarant : cÃ³digo de la garantia
      param in  psproduc : CÃ³digo del producto
      param in  pcactivi : CÃ³digo de la actividad
      param out mensajes : mensajes de error

      return              : 0 -> Tot correcte
                            1 -> S'ha produit un error

      Bug 12207 - 01/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_del_ultreserva(pnsinies IN sin_tramita_pago.nsinies%TYPE,
                             pntramit IN sin_tramita_pago.ntramit%TYPE,
                             pctipres IN sin_tramita_reserva.ctipres%TYPE,
                             pctipgas IN sin_tramita_reserva.ctipgas%TYPE, -- 26108
                             pnmovres IN sin_tramita_reserva.nmovres%TYPE,
                             pcgarant IN sin_tramita_reserva.cgarant%TYPE,
                             psproduc IN NUMBER,
                             pcactivi IN NUMBER,
                             mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_ultreserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramit:' || pntramit || ' pctipres:' ||
                                   pctipres || ' pnmovres:' || pnmovres ||
                                   ' pcgarant:' || pcgarant;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL OR
         pnmovres IS NULL OR
         pcgarant IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_ultreserva(pnsinies,
                                                    pntramit,
                                                    pctipres,
                                                    pctipgas, -- 26108
                                                    pnmovres,
                                                    pcgarant,
                                                    mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := f_inicializasiniestro(psproduc,
                                       pcactivi,
                                       pnsinies,
                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_ultreserva;
/*************************************************************************
      FUNCTION f_get_amparo
           la tabla sin_tramita_amparo .
         
      param in pnsinies : Numero Siniestro		     
       param in pntramit : Numero Tramitacion Siniestro		     
       param in pcgarant : Codigo Garantia		     
          return             : 0 -> Tot correcte
                              1 -> Se ha producido un error
   -- BUG 004131 - 2019-05-23 - EA 
   *************************************************************************/ 
FUNCTION f_get_amparo(
      pnsinies IN VARCHAR2,		     
       pntramit IN NUMBER,		     
       pcgarant IN NUMBER,		     
       ob_amparo OUT ob_iax_sin_trami_amparo,
		mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS 
        vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_amparo';
        vparam      VARCHAR2(500) := 'nsinies: ' || pnsinies || ' - ntramit: ' || pntramit || ' - cgarant: ' || pcgarant;
		  vpasexec       NUMBER(5) := 1;
        vnumerr        NUMBER(8) := 1;
        
      BEGIN 
		

         ob_amparo := ob_iax_sin_trami_amparo();
						        
                        vnumerr    := pac_md_siniestros.f_get_amparo(pnsinies, pntramit, pcgarant,ob_amparo,mensajes);
               IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
        

   
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam,
                                           NULL, SQLCODE, SQLERRM);
         RETURN 1;
  END f_get_amparo; 
   /***********************************************************************
      Recupera los datos de una determinada reserva
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n
      param in  pctipres  : nÃºmero de tipo de reserva
      param in  pnmovres  : nÃºmero de movimiento de reserva
      param out  ob_iax_sin_trami_reserva :  ob_iax_sin_trami_reserva
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error

      Bug 12207 - 03/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_get_reserva(pnsinies   IN VARCHAR2,
                          pntramit   IN NUMBER,
                          pctipres   IN NUMBER,
                          pnmovres   IN NUMBER,
                          pcgarant   IN NUMBER,
                          ob_reserva OUT ob_iax_sin_trami_reserva,
                          mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_reserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   'ntramit ' || pntramit || ' ctipres : ' ||
                                   pctipres || ' nmovres : ' || pnmovres;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      ob_reserva := ob_iax_sin_trami_reserva();
      vnumerr    := pac_md_siniestros.f_get_reserva(pnsinies,
                                                    pntramit,
                                                    pctipres,
                                                    pnmovres,
                                                    pcgarant,
                                                    ob_reserva,
                                                    mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_reserva;

   /***********************************************************************
      Recupera los datos de una determinada referencia
      param in  pnsinies  : nÃºmero de siniestro
      param in  psrefext  : nÃºmero de referencia
      param out  ob_iax_siniestro_referencias :  ob_iax_siniestro_referencias
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error

      Bug 18932 - 02/09/2011 - JRB
   ***********************************************************************/
   FUNCTION f_get_referencia(pnsinies       IN VARCHAR2,
                             psrefext       IN NUMBER,
                             ob_referencias OUT ob_iax_siniestro_referencias,
                             mensajes       OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_referencia';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   'psrefext ' || psrefext;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      ob_referencias := ob_iax_siniestro_referencias();
      vnumerr        := pac_md_siniestros.f_get_referencia(pnsinies,
                                                           psrefext,
                                                           ob_referencias,
                                                           mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_referencia;

   /**************************************************************************
      FunciÃ³n que comprueba la modificacion de la fresfin de una reserva
      param in  pnsinies : nÃºmero de siniestro
      param in  pntramit : nÃºmero de tramitacion
      param in  pctipres : cÃ³digo del tipo de reserva
      param in  pcgarant : cÃ³digo de la garantia
      param in  pfresfin : Fecha fin de la reserva
      param out pfresfin_out : Fecha permitida como fecha fin reserva
      param out mensajes : Mensajes de error

      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error

      Bug 12207 - 03/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_actfresfin(pnsinies     IN sin_tramita_pago.nsinies%TYPE,
                         pntramit     IN sin_tramita_pago.ntramit%TYPE,
                         pctipres     IN sin_tramita_reserva.ctipres%TYPE,
                         pcgarant     IN sin_tramita_reserva.cgarant%TYPE,
                         pfresfin     IN sin_tramita_reserva.fresfin%TYPE,
                         pfresfin_out OUT sin_tramita_reserva.fresfin%TYPE,
                         mensajes     OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_actfresfin';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramit:' || pntramit || ' pctipres:' ||
                                   pctipres || ' pcgarant:' || pcgarant ||
                                   ' pfresfin:' || pfresfin;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL OR
         pcgarant IS NULL OR
         pfresfin IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_actfresfin(pnsinies,
                                                pntramit,
                                                pctipres,
                                                pcgarant,
                                                pfresfin,
                                                pfresfin_out,
                                                mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_actfresfin;

   /**************************************************************************
       FUNCTION f_pago_aut
       Crea un pago automÃ¡tico
       param in pdata   : fecha final de pago
       param out pncobros : Numero de cobros generados
       param out mensajes : Mensajes de error

       return              : 0 -> Tot correcte
                             Codigo error -> S'ha produit un error

       Bug 12207 - 03/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_pago_aut(p_data   IN DATE,
                       pncobros OUT NUMBER,
                       psproces OUT NUMBER, -- Bug 16580 - 15/11/2010 - AMC
                       mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_pago_aut';
      vparam      VARCHAR2(500) := 'parÃ¡metros - p_data: ' || p_data;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF p_data IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_pago_aut(p_data,
                                              vproductos,
                                              pncobros,
                                              psproces,
                                              mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_pago_aut;

   --INI BUG 31294/174788:NSS:20/05/2014
   --******Se vuelve a montar todo el proceso de alta y modificaciÃ³n detalle pago utilizando el objeto OB_IAX_SIN_TRAMI_PAGO_GAR******
   --******por lo tanto deja de utilizarse esta funciÃ³n para la modificaciÃ³n del pago******
   /*
   -- BUG 19981 - 07/11/2011 - MDS - AÃ±adir campos preteiva, preteica, ireteiva, ireteica, ireteivapag, ireteicapag, pica, iica, iicapag en la cabecera, insert
      FUNCTION f_set_sintram_pagrecob_gar2(
         psseguro IN NUMBER,
         pntramit IN NUMBER,
         pctippag IN NUMBER,
         psidepag IN NUMBER,
         pctipres IN NUMBER,
         pctipgas IN NUMBER,   -- 26108
         pnmovres IN NUMBER,
         pcgarant IN NUMBER,
         pfperini IN DATE,
         pfperfin IN DATE,
         pcmonres IN VARCHAR2,
         pisinret IN NUMBER,
         piiva IN NUMBER,
         pisuplid IN NUMBER,
         piretenc IN NUMBER,
         pifranq IN NUMBER,
         pcmonpag IN VARCHAR2,
         pisinretpag IN NUMBER,
         piivapag IN NUMBER,
         pisuplidpag IN NUMBER,
         piretencpag IN NUMBER,
         pifranqpag IN NUMBER,
         pfcambio IN DATE,
         piresred IN NUMBER,
         piresrcm IN NUMBER,
         ppiva IN NUMBER,
         ppretenc IN NUMBER,
         pcconpag IN NUMBER,
         pnorden IN NUMBER,
         mensajes OUT t_iax_mensajes,
         ppreteiva IN NUMBER DEFAULT NULL,
         ppreteica IN NUMBER DEFAULT NULL,
         pireteiva IN NUMBER DEFAULT NULL,
         pireteica IN NUMBER DEFAULT NULL,
         pireteivapag IN NUMBER DEFAULT NULL,
         pireteicapag IN NUMBER DEFAULT NULL,
         ppica IN NUMBER DEFAULT NULL,
         piica IN NUMBER DEFAULT NULL,
         piicapag IN NUMBER DEFAULT NULL,
         pciva_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
         pcretenc_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
         pcreteiva_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
         pcreteica_tipind IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:14/03/2014
         pitotimp IN NUMBER DEFAULT NULL,   --bug 24637/147756:NSS:03/03/2014
         pitotret IN NUMBER DEFAULT NULL   --bug 24637/147756:NSS:21/03/2014
                                        )
         RETURN NUMBER IS
         vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_sintram_pagrecob_gar2';
         vparam         VARCHAR2(500)
            := 'parÃ¡metros - psidepag: ' || psidepag || ' - pntramit: ' || pntramit
               || ' - pctipres: ' || pctipres || ' - pcgarant: ' || pcgarant;
         vpasexec       NUMBER(5) := 1;
         vnumerr        NUMBER(8) := 0;
         vnmovres       NUMBER(8);
         v_index        NUMBER(8);
         trobat         BOOLEAN := FALSE;
         obreserva      ob_iax_sin_trami_reserva := ob_iax_sin_trami_reserva();
         obpago         ob_iax_sin_trami_pago := ob_iax_sin_trami_pago();
         vsuma          NUMBER;
         vreservas      NUMBER;
         vsidepag       NUMBER;
         v_isinret      NUMBER;
         vireserva      NUMBER;
         vcestpag       NUMBER;
         vcestval       NUMBER;
         viretenc       NUMBER;
         viiva          NUMBER;
         visuplid       NUMBER;
         vifranq        NUMBER;
         viresred       NUMBER;
         viresrcm       NUMBER;
         vcont          NUMBER;
         vipago         NUMBER;
         virecobro      NUMBER;
         vipago_ori     NUMBER;
         virecobro_ori  NUMBER;
         dif            NUMBER := 0;
         vireserva_act  NUMBER := 0;
         min_nmovres    NUMBER;
         -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
         v_ireteiva     sin_tramita_pago_gar.ireteiva%TYPE;
         v_ireteica     sin_tramita_pago_gar.ireteica%TYPE;
         v_iica         sin_tramita_pago_gar.iica%TYPE;
         v_cempres      seguros.cempres%TYPE;
         v_cmultimon    parempresas.nvalpar%TYPE;
      BEGIN
         --ComprovaciÃ³ dels parÃ¡metres d'entrada
         IF psidepag IS NULL
            OR pnmovres IS NULL   -- 26108
            OR pctipres IS NULL THEN
            RAISE e_param_error;
         END IF;

         vpasexec := 1;

         SELECT MAX(nmovres)
           INTO vnmovres
           FROM sin_tramita_reserva
          WHERE ntramit = pntramit
            AND ctipres = pctipres
            AND cmonres = pcmonres
            AND(pcgarant IS NULL
                OR(pcgarant IS NOT NULL
                   AND cgarant = NVL(pcgarant, cgarant)))
            AND nsinies = vgobsiniestro.nsinies;

         vpasexec := 2;

         SELECT cestpag, cestval
           INTO vcestpag, vcestval
           FROM sin_tramita_movpago
          WHERE sidepag = psidepag
            AND nmovpag = (SELECT MAX(st.nmovpag)
                             FROM sin_tramita_movpago st
                            WHERE st.sidepag = psidepag);

         IF vcestpag != 0
            OR vcestval != 0 THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, 9001435);
            RAISE e_object_error;
         END IF;

         vpasexec := 3;

         -- BUG16506:DRA:17/11/2010:Inici
         FOR i IN vgobsiniestro.tramitaciones.FIRST .. vgobsiniestro.tramitaciones.LAST LOOP
            vpasexec := 4;

            IF vgobsiniestro.tramitaciones.EXISTS(i) THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit THEN
                  vpasexec := 5;

                  IF vgobsiniestro.tramitaciones(i).pagos.COUNT > 0 THEN
                     FOR j IN
                        vgobsiniestro.tramitaciones(i).pagos.FIRST .. vgobsiniestro.tramitaciones
                                                                                               (i).pagos.LAST LOOP
                        IF vgobsiniestro.tramitaciones(i).pagos(j).sidepag = psidepag
                           AND vgobsiniestro.tramitaciones(i).pagos(j).ntramit = pntramit THEN
                           obpago := vgobsiniestro.tramitaciones(i).pagos(j);
                        END IF;   --IF vgobsiniestro.tramitaciones(i).pagos(j).sidepag = psidepag
                     END LOOP;   --FOR j IN vgobsiniestro.tramitaciones(i).pagos.FIRST .. vgobsiniestro.tramitaciones(i).pagos.LAST LOOP
                  END IF;

                  FOR res IN
                     vgobsiniestro.tramitaciones(i).reservas.FIRST .. vgobsiniestro.tramitaciones
                                                                                                (i).reservas.LAST LOOP
                     IF vgobsiniestro.tramitaciones(i).reservas(res).nmovres = vnmovres
                        AND vgobsiniestro.tramitaciones(i).reservas(res).ntramit = pntramit
                        AND vgobsiniestro.tramitaciones(i).reservas(res).ctipres = pctipres
                        AND vgobsiniestro.tramitaciones(i).reservas(res).cmonres = pcmonres
                        AND((pctipres = 1
                             AND vgobsiniestro.tramitaciones(i).reservas(res).cgarant = pcgarant)
                            OR pctipres <> 1)
                        AND NVL(vgobsiniestro.tramitaciones(i).reservas(res).ctipgas, -1) =
                                                                          NVL(pctipgas, -1)   -- 26108
                                                                                           THEN
                        obreserva := vgobsiniestro.tramitaciones(i).reservas(res);
                        vnumerr :=
                           pac_iax_validaciones_sin.f_detpago
                                 (vgobsiniestro.nsinies,
                                  obreserva.ireserva + NVL(obpago.isinret, 0), pisinret, piiva,
                                  piretenc, pfperini, pfperfin, piresrcm, piresred, pctipres,
                                  pcgarant, pctippag, obreserva.cmonres,   -- BUG 18423 - 17/01/2012 - JMP - Multimoneda
                                  psidepag, pctipgas, pcconpag,   --27909:NSS;03/09/2013
                                  mensajes, pitotimp,   --bug 24637/147756:NSS:14/03/2014
                                  pitotret   --bug 24637/147756:NSS:14/03/2014
                                          );

                        IF vnumerr <> 0 THEN
                           RAISE e_object_error;
                        END IF;
                     END IF;
                  END LOOP;
               END IF;
            END IF;
         END LOOP;

         -- BUG16506:DRA:17/11/2010:Fi
         BEGIN
            vpasexec := 4;

            UPDATE sin_tramita_pago_gar
               SET isinret = pisinret,
                   iiva = piiva,
                   isuplid = pisuplid,
                   iretenc = piretenc,
                   ifranq = pifranq,
                   isinretpag = pisinretpag,
                   iivapag = piivapag,
                   isuplidpag = pisuplidpag,
                   iretencpag = piretencpag,
                   ifranqpag = pifranqpag,
                   iresrcm = piresrcm,
                   iresred = piresred,
                   pretenc = ppretenc,
                   piva = ppiva,
                   --nmovres = vnmovres,
                   cconpag = pcconpag,
                   -- BUG 19981 - 07/11/2011 - MDS
                   preteiva = ppreteiva,
                   preteica = ppreteica,
                   ireteiva = pireteiva,
                   ireteica = pireteica,
                   ireteivapag = pireteivapag,
                   ireteicapag = pireteicapag,
                   pica = ppica,
                   iica = piica,
                   iicapag = piicapag,
                   cmonres = NVL(pcmonres, cmonres)
             WHERE sidepag = psidepag
               AND nmovres = pnmovres
               AND ctipres = pctipres
               --   and cmonres = pcmonres
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND norden = pnorden;
         EXCEPTION
            WHEN OTHERS THEN
               vpasexec := 5;

               UPDATE sin_tramita_pago_gar
                  SET isinret = pisinret,
                      iiva = piiva,
                      isuplid = pisuplid,
                      iretenc = piretenc,
                      ifranq = pifranq,
                      isinretpag = pisinretpag,
                      iivapag = piivapag,
                      isuplidpag = pisuplidpag,
                      iretencpag = piretencpag,
                      ifranqpag = pifranqpag,
                      iresrcm = piresrcm,
                      iresred = piresred,
                      pretenc = ppretenc,
                      piva = ppiva,
                      cconpag = pcconpag,
                      -- BUG 19981 - 07/11/2011 - MDS
                      preteiva = ppreteiva,
                      preteica = ppreteica,
                      ireteiva = pireteiva,
                      ireteica = pireteica,
                      ireteivapag = pireteivapag,
                      ireteicapag = pireteicapag,
                      pica = ppica,
                      iica = piica,
                      iicapag = piicapag,
                      cmonres = NVL(pcmonres, cmonres)
                WHERE sidepag = psidepag
                  AND nmovres = pnmovres
                  AND ctipres = pctipres
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND norden = pnorden;
         END;

         --bug 0024637/0147756: NSS:03/03/2014
         IF pciva_tipind IS NOT NULL THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pciva_tipind
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = pnorden
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 1);   --IVA
         END IF;

         IF pcretenc_tipind IS NOT NULL THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pcretenc_tipind
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = pnorden
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 2);   --RETEFUENTE
         END IF;

         IF pcreteiva_tipind IS NOT NULL THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pcreteiva_tipind
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = pnorden
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 3);   --RETEIVA
         END IF;

         IF pcreteica_tipind IS NOT NULL THEN
            UPDATE sin_imp_sap_log
               SET ctipind = pcreteica_tipind
             WHERE sidepag = psidepag
               AND ctipres = pctipres
               AND nmovres = pnmovres
               AND norden = pnorden
               AND ctipind IN(SELECT ctipind
                                FROM tipos_indicadores
                               WHERE cimpret = 4);   --RETEICA
         END IF;

         --FIN bug 0024637/0147756: NSS:03/03/2014

         -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
         SELECT cempres
           INTO v_cempres
           FROM seguros s, sin_siniestro ss
          WHERE ss.nsinies = vgobsiniestro.nsinies
            AND s.sseguro = ss.sseguro;

         v_cmultimon := NVL(pac_parametros.f_parempresa_n(v_cempres, 'MULTIMONEDA'), 0);

         IF v_cmultimon = 1 THEN
            vnumerr := pac_oper_monedas.f_contravalores_pagosini(psidepag, 2);

            IF vnumerr <> 0 THEN
               RAISE e_object_error;
            END IF;
         END IF;

         -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
         vpasexec := 6;

         -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
         -- aprovechar el momento para poner sum(nvl(...)) en todos los campos
         SELECT SUM(NVL(isinret, 0)), SUM(NVL(iretenc, 0)), SUM(NVL(iiva, 0)),
                SUM(NVL(isuplid, 0)), SUM(NVL(ifranq, 0)), SUM(NVL(iresred, 0)),
                SUM(NVL(iresrcm, 0)), SUM(NVL(ireteiva, 0)), SUM(NVL(ireteica, 0)),
                SUM(NVL(iica, 0))
           INTO v_isinret, viretenc, viiva,
                visuplid, vifranq, viresred,
                viresrcm, v_ireteiva, v_ireteica,
                v_iica
           FROM sin_tramita_pago_gar
          WHERE sidepag = psidepag;

         vpasexec := 7;

         -- BUG 19981 - 17/11/2011 - MDS - AÃ±adir campos ireteiva, ireteica, iica
         -- actualizar los detalles sumarizados en la cabecera
         UPDATE sin_tramita_pago
            SET isinret = v_isinret,
                iretenc = viretenc,
                iiva = viiva,
                isuplid = visuplid,
                ifranq = vifranq,
                iresred = viresred,
                iresrcm = viresrcm,
                ireteiva = v_ireteiva,
                ireteica = v_ireteica,
                iica = v_iica
          WHERE sidepag = psidepag
            AND nsinies = vgobsiniestro.nsinies
            AND ntramit = pntramit;

         -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
         IF v_cmultimon = 1 THEN
            vnumerr := pac_oper_monedas.f_contravalores_pagosini(psidepag, 1);

            IF vnumerr <> 0 THEN
               RAISE e_object_error;
            END IF;
         END IF;

         -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
         vcont := pnmovres;

         WHILE vcont < vnmovres LOOP
            vpasexec := 8;

            SELECT ireserva, ipago, irecobro
              INTO vireserva, vipago_ori, virecobro_ori
              FROM sin_tramita_reserva
             WHERE nmovres = vcont
               AND ntramit = pntramit
               AND ctipres = pctipres
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND cmonres = pcmonres
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND nsinies = vgobsiniestro.nsinies;

            vpasexec := 9;

            SELECT MIN(NVL(nmovres, 0))
              INTO min_nmovres
              FROM sin_tramita_reserva
             WHERE ntramit = pntramit
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND ctipres = pctipres
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND cmonres = pcmonres
               AND nmovres > vcont
               AND nsinies = vgobsiniestro.nsinies;

            vpasexec := 10;

            SELECT ipago, irecobro, sidepag, ireserva
              INTO vipago, virecobro, vsidepag, vireserva_act
              FROM sin_tramita_reserva
             WHERE nmovres = min_nmovres
               AND ntramit = pntramit
               AND cmonres = pcmonres
               AND ctipres = pctipres
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND nsinies = vgobsiniestro.nsinies;

            IF vsidepag IS NOT NULL THEN
               vpasexec := 11;

               SELECT SUM(stpg.isinret)
                 INTO v_isinret
                 FROM sin_tramita_pago_gar stpg,
                      sin_tramita_movpago stm   --, sin_tramita_pago stp, sin_tramita_movpago stm
                WHERE stpg.sidepag = vsidepag
                  AND ctipres = pctipres
                  AND(pcgarant IS NULL
                      OR(pcgarant IS NOT NULL
                         AND cgarant = NVL(pcgarant, cgarant)))
                  AND stpg.sidepag = stm.sidepag
                  AND stm.nmovpag = (SELECT MAX(nmovpag)
                                       FROM sin_tramita_movpago stm2
                                      WHERE stm2.sidepag = stpg.sidepag)
                  AND stm.cestpag != 8;   --Mirem tots els pagaments NO anulats
            ELSE
               v_isinret := 0;
               dif := NVL(vipago, 0) - NVL(vipago_ori, 0);
               vireserva := vireserva_act + dif;
            END IF;

            vpasexec := 12;

            IF pctippag = 2 THEN
               vipago := v_isinret + NVL(vipago_ori, 0);
               vireserva :=(NVL(vireserva, 0) - v_isinret);
            ELSE
               virecobro := v_isinret + NVL(virecobro_ori, 0);
               vireserva :=(NVL(vireserva, 0) + v_isinret);
            END IF;

            vpasexec := 13;


            UPDATE sin_tramita_reserva
               SET ireserva = NVL(vireserva, 0),
                   irecobro = virecobro,
                   ipago = vipago
             WHERE nmovres = min_nmovres
               AND ntramit = pntramit
               AND ctipres = pctipres
               AND NVL(ctipgas, -1) = NVL(pctipgas, -1)   -- 26108
               AND cmonres = pcmonres
               AND(pcgarant IS NULL
                   OR(pcgarant IS NOT NULL
                      AND cgarant = NVL(pcgarant, cgarant)))
               AND nsinies = vgobsiniestro.nsinies;

            -- BUG 18423 - 16/01/2012 - JMP - Multimoneda
            IF v_cmultimon = 1 THEN
               vnumerr := pac_oper_monedas.f_contravalores_reserva(vgobsiniestro.nsinies,
                                                                   pntramit, pctipres,
                                                                   min_nmovres, pcgarant);

               IF vnumerr <> 0 THEN
                  RAISE e_object_error;
               END IF;
            END IF;

            -- FIN BUG 18423 - 16/01/2012 - JMP - Multimoneda
            vcont := min_nmovres;   --vcont + 1;
         END LOOP;

   -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
         --grabem a taules i tornem a recuperar l'objecte
         /*vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                          vgobsiniestro.nsinies, mensajes);

         IF vnumerr <> 0 THEN
            RAISE e_object_error;
         END IF;*/
   /*
         COMMIT;
         vpasexec := 14;
         vnumerr := pac_md_siniestros.f_get_tramitaciones(vgobsiniestro.nsinies,
                                                          vgobsiniestro.tramitaciones, mensajes);

         IF vnumerr <> 0 THEN
            RAISE e_object_error;
         END IF;

   -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
         vpasexec := 28;
         RETURN vnumerr;
      EXCEPTION
         WHEN e_param_error THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
            ROLLBACK;
            RETURN 1;
         WHEN e_object_error THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam,
                                              vnumerr);
            ROLLBACK;
            RETURN 1;
         WHEN OTHERS THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam,
                                              NULL, SQLCODE, SQLERRM);
            ROLLBACK;
            RETURN 1;
      END f_set_sintram_pagrecob_gar2;
   */
   /***********************************************************************
      Recupera los datos del riesgo de hogar
      param in psseguro  : cÃ³digo de seguro
      param in pnriesgo  : cÃ³digo del riesgo
      param out mensajes : mensajes de error
      return             : ref cursor

      Bug 12668 - 24/02/2010 - AMC
   ***********************************************************************/
   FUNCTION f_get_datsitriesgo(psseguro IN NUMBER,
                               pnriesgo IN NUMBER,
                               mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_datsitriesgo';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro:' || psseguro ||
                                   ' pnriesgo:' || pnriesgo;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
      vsquery     VARCHAR2(5000);
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF psseguro IS NULL OR
         pnriesgo IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vcursor  := pac_md_siniestros.f_get_datsitriesgo(psseguro,
                                                       pnriesgo,
                                                       mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_datsitriesgo;

   /**************************************************************************
      FunciÃ³n que indica si una reserva se puede modificar
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitacion
      param in  pctipres  : CÃ³digo del tipo de reserva
      param in  pcgarant  : CÃ³digo de la garantia
      param in  pnmovres  : Numero de movimiento d la reserva
      param in  psproduc  : Codigo del producto
      param in  pcactivi  : Codigo de la actividad
      param in  pmodificable : 0 - No modificable
                               1 - Modificable
      param out mensajes  : Mensajes de error
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error

      Bug 14490 - 19/05/2010 - AMC
   ***********************************************************************/
   FUNCTION f_mov_reserva(pnsinies     IN VARCHAR2,
                          pntramit     IN NUMBER,
                          pctipres     IN NUMBER,
                          pctipgas     IN NUMBER, -- 26108
                          pcgarant     IN NUMBER,
                          pnmovres     IN NUMBER,
                          psproduc     IN NUMBER,
                          pcactivi     IN NUMBER,
                          pmodificable OUT NUMBER,
                          mensajes     OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_mov_reserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' pntramit:' || pntramit || ' pctipres:' ||
                                   pctipres || ' pcgarant:' || pcgarant ||
                                   ' pnmovres:' || pnmovres || ' psproduc:' ||
                                   psproduc || ' pcactivi:' || pcactivi;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL
        -- OR pcgarant IS NULL -- 26108
         OR
         pnmovres IS NULL OR
         psproduc IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_mov_reserva(pnsinies,
                                                 pntramit,
                                                 pctipres,
                                                 pctipgas, -- 26108
                                                 pcgarant,
                                                 pnmovres,
                                                 psproduc,
                                                 NVL(pcactivi, 0),
                                                 pmodificable,
                                                 mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_mov_reserva;

   /**************************************************************************
      FunciÃ³n que devuelve si se permite borrar una reserva
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitacion
      param in  pctipres  : CÃ³digo del tipo de reserva
      param in  pcgarant  : CÃ³digo de la garantia
      param in  pfresini  : Fecha de inicio de la reserva
      param in  psproduc  : Codigo del producto
      param in  pcactivi  : Codigo de la actividad
      param out pmodificable : 0 - No modificable
                               1 - Modificable
      param out mensajes  : Mensajes de error
      return              : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error

      Bug 14490 - 20/05/2010 - AMC
   ***********************************************************************/
   FUNCTION f_perdelreserva(pnsinies     IN VARCHAR2,
                            pntramit     IN NUMBER,
                            pctipres     IN NUMBER,
                            pctipgas     IN NUMBER, -- 26108
                            pcgarant     IN NUMBER,
                            pfresini     IN DATE,
                            psproduc     IN NUMBER,
                            pcactivi     IN NUMBER,
                            pmodificable OUT NUMBER,
                            mensajes     OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_perdelreserva';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies ||
                                   ' pntramit:' || pntramit || ' pctipres:' ||
                                   pctipres || ' pcgarant:' || pcgarant ||
                                   ' pfresini:' || pfresini || ' psproduc:' ||
                                   psproduc || ' pcactivi:' || pcactivi;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pctipres IS NULL
        -- OR pcgarant IS NULL -- 26108
        --OR pfresini IS NULL --ICV Bug.: 16102
         OR
         psproduc IS NULL OR
         pcactivi IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_perdelreserva(pnsinies,
                                                   pntramit,
                                                   pctipres,
                                                   pctipres, -- 26108
                                                   pcgarant,
                                                   pfresini,
                                                   psproduc,
                                                   pcactivi,
                                                   pmodificable,
                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_perdelreserva;

   /**************************************************************************
      FunciÃ³n que devuelve si se debe generar la reserva y el destinatario
      param in  pccausin  : nÃºmero de siniestro
      param in  pcmotsin  : nÃºmero de tramitacion
      param in  pcgarant  : CÃ³digo de la garantia
      param in  psproduc  : Codigo del producto
      param in  pcactivi  : Codigo de la actividad
      param out pgenerar : 0 - No se genera
                           1 - Se genera
      param out mensajes  : Mensajes de error
      return             : 0 -> Tot correcte
                            Codigo error -> S'ha produit un error

      Bug 14752 - 01/06/2010 - AMC
   ***********************************************************************/
   FUNCTION f_gen_resdestinatari(pccausin IN NUMBER,
                                 pcmotsin IN NUMBER,
                                 pcgarant IN NUMBER,
                                 psproduc IN NUMBER,
                                 pcactivi IN NUMBER,
                                 pgenerar OUT NUMBER,
                                 mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_gen_resdestinatari';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pccausin:' || pccausin ||
                                   ' pcmotsin:' || pcmotsin || ' pcgarant:' ||
                                   pcgarant || ' psproduc:' || psproduc ||
                                   ' pcactivi:' || pcactivi;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pccausin IS NULL OR
         pcmotsin IS NULL OR
         pcgarant IS NULL OR
         psproduc IS NULL OR
         pcactivi IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_gen_resdestinatari(pccausin,
                                                        pcmotsin,
                                                        pcgarant,
                                                        psproduc,
                                                        pcactivi,
                                                        pgenerar,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      -- Si no se genera reserva el siniestro se debe ser un presiniestro
      IF pgenerar = 0 AND
         vgobsiniestro.movimientos IS NOT NULL
      THEN
         IF vgobsiniestro.movimientos.count > 0
         THEN
            vgobsiniestro.movimientos(1).cestsin := 5; -- presiniestro
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_gen_resdestinatari;

   /**************************************************************************
      FunciÃ³n que devuelve el capital de una garantia
      param in  pcgarant  : CÃ³digo de la garantia
      param in  psseguro  : CÃ³digo del seguro
      param in  pnsinies  : CÃ³digo del siniestro
      param out pcapital  : Capital de la garantia
      param out mensajes  : mensajes de error
      return              : 0 -> Tot correcte
                           Codigo error -> S'ha produit un error

      Bug 14816 - 02/06/2010 - AMC
   ***********************************************************************/
   FUNCTION f_get_capitalgar(pcgarant IN NUMBER,
                             psseguro IN NUMBER,
                             pnsinies IN VARCHAR2,
                             pcapital OUT NUMBER,
                             mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_capitalgar';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pcgarant:' || pcgarant ||
                                   ' psseguro:' || psseguro || ' pnsinies:' ||
                                   pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pcgarant IS NULL OR
         psseguro IS NULL OR
         pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_get_capitalgar(pcgarant,
                                                    psseguro,
                                                    pnsinies,
                                                    pcapital,
                                                    mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_capitalgar;

   /**************************************************************************
      FunciÃ³n que retorna los siniestros de una pÃ³liza, siendo optativo filtrar por su nÃºmero de riesgo.
      param in  psseguro  : cÃ³digo que identifica la pÃ³liza en AXIS
      param in  pnriesgo  : cÃ³digo que identifica el riesgo de la pÃ³liza en AXIS
      param out mensajes  : mensajes de error
      return sys_refcursor: cursor que devuelve el listado

      Bug 15965 - 10/09/2010 - SRA
   ***********************************************************************/
   FUNCTION f_consulta_lstsini_riesgo(psseguro IN NUMBER,
                                      pnriesgo IN NUMBER,
                                      mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.CONSULTA_LSTSINI_RIESGO';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro ||
                                   ' - pnriesgo: ' || pnriesgo;
      vpasexec    NUMBER(5) := 0;
      vcursor     SYS_REFCURSOR;
      vnresult    NUMBER;
   BEGIN
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 1;
      vnresult := pac_md_siniestros.f_consulta_lstsini_riesgo(psseguro,
                                                              pnriesgo,
                                                              vcursor,
                                                              mensajes);
      vpasexec := 2;

      IF vnresult <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 3;
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnresult);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);

         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         RETURN vcursor;
   END f_consulta_lstsini_riesgo;

   -- Bug 0015669 - JRH - 30/09/2010 - Alta prestaciones

   /***********************************************************************
     f_set_obj_sinprestaren
      Crea un objeto prestaciÃ³n con los datos.
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n
      param in  psperson  : nÃºmero identificativo del destinatario
      param in  pctipdes  : nÃºmero tipo destinatario
      param out  vprestaren :  ob_iax_sin_PRESTAREN
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_set_obj_sinprestaren(pnsinies IN VARCHAR2,
                                   pntramit IN NUMBER,
                                   psperson IN NUMBER,
                                   pctipdes IN NUMBER,
                                   psseguro IN NUMBER,
                                   pf1paren IN DATE,
                                   pfuparen IN DATE,
                                   pcforpag IN NUMBER,
                                   pibruren IN NUMBER,
                                   pcrevali IN NUMBER,
                                   pprevali IN NUMBER,
                                   pirevali IN NUMBER,
                                   pctipdur IN NUMBER,
                                   pnpartot IN NUMBER,
                                   pctipban IN NUMBER,
                                   pcbancar IN VARCHAR2,
                                   pcestado IN NUMBER,
                                   pcmotivo IN NUMBER,
                                   pcblopag IN NUMBER,
                                   pnmes1   IN NUMBER,
                                   pnmes2   IN NUMBER,
                                   pnmes3   IN NUMBER,
                                   pnmes4   IN NUMBER,
                                   pnmes5   IN NUMBER,
                                   pnmes6   IN NUMBER,
                                   pnmes7   IN NUMBER,
                                   pnmes8   IN NUMBER,
                                   pnmes9   IN NUMBER,
                                   pnmes10  IN NUMBER,
                                   pnmes11  IN NUMBER,
                                   pnmes12  IN NUMBER,
                                   pnpresta IN NUMBER,
                                   mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_obj_sinprestaren';
      vparam      VARCHAR2(2000) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                    ' ntramit ' || pntramit ||
                                    ' sperson = ' || psperson ||
                                    ' pctipdes : ' || pctipdes ||
                                    ' psseguro : ' || psseguro ||
                                    ' pf1paren: ' || pf1paren ||
                                    ' pfuparen: ' || pfuparen ||
                                    ' pcforpag: ' || pcforpag ||
                                    ' pibruren: ' || pibruren ||
                                    ' pcrevali: ' || pcrevali ||
                                    ' pprevali: ' || pprevali ||
                                    ' pirevali: ' || pirevali ||
                                    ' pctipdur: ' || pctipdur ||
                                    ' pnpartot: ' || pnpartot ||
                                    ' pctipban: ' || pctipban ||
                                    ' pcbancar: ' || pcbancar ||
                                    ' pnmes1  : ' || pnmes1 ||
                                    ' pnmes2  : ' || pnmes2 ||
                                    ' pnmes3  : ' || pnmes3 ||
                                    ' pnmes4  : ' || pnmes4 ||
                                    ' pnmes5  : ' || pnmes5 ||
                                    ' pnmes6  : ' || pnmes6 ||
                                    ' pnmes7  : ' || pnmes7 ||
                                    ' pnmes8  : ' || pnmes8 ||
                                    ' pnmes9  : ' || pnmes9 ||
                                    ' pnmes10 : ' || pnmes10 ||
                                    ' pnmes11 : ' || pnmes11 ||
                                    ' pnmes12 : ' || pnmes12 ||
                                    ' pnpresta : ' || pnpresta;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vsquery     VARCHAR2(5000);
      vcagente    NUMBER;
      pagas       ob_iax_nmesextra := ob_iax_nmesextra();
      vtrobat     BOOLEAN := FALSE;
      verror EXCEPTION;
   BEGIN
      IF pnsinies IS NULL OR
         psperson IS NULL
        --JRH CASA
         OR
         pntramit IS NULL OR
         pctipdes IS NULL
        --Fin JRH CASA
         OR
         pcforpag IS NULL OR
         pf1paren IS NULL OR
         pibruren IS NULL OR
         pctipban IS NULL OR
         pcbancar IS NULL OR
         pcestado IS NULL OR
         pcblopag IS NULL OR
         pcrevali IS NULL OR
         pctipdur IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_iax_validaciones_sin.f_prest(pnsinies,
                                                  pntramit,
                                                  psperson,
                                                  pctipdes,
                                                  psseguro,
                                                  pf1paren,
                                                  pfuparen,
                                                  pcforpag,
                                                  pibruren,
                                                  pcrevali,
                                                  pprevali,
                                                  pirevali,
                                                  pctipdur,
                                                  pnpartot,
                                                  pctipban,
                                                  pcbancar,
                                                  pcestado,
                                                  pcmotivo,
                                                  pcblopag,
                                                  pnpresta,
                                                  mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 1;

      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         vpasexec := 3;

         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 4;

               IF psperson IS NOT NULL
               THEN
                  vpasexec := 5;

                  IF vgobsiniestro.tramitaciones(i)
                   .destinatarios IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).destinatarios.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i)
                              .destinatarios.first .. vgobsiniestro.tramitaciones(i)
                                                      .destinatarios.last
                     LOOP
                        vpasexec := 66;

                        IF vgobsiniestro.tramitaciones(i).destinatarios(j)
                         .persona.sperson = psperson AND
                           vgobsiniestro.tramitaciones(i).destinatarios(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).destinatarios(j)
                           .ctipdes = pctipdes
                        THEN
                           -- Si el trobem, el modifiquem
                           vpasexec := 7;
                           --  vtramidestinatario := vgobsiniestro.tramitaciones(i).destinatarios(j);
                           vnumerr := pac_md_siniestros.f_set_obj_sinprestaren(pnsinies,
                                                                               pntramit,
                                                                               psperson,
                                                                               pctipdes,
                                                                               psseguro,
                                                                               pf1paren,
                                                                               pfuparen,
                                                                               pcforpag,
                                                                               pibruren,
                                                                               pcrevali,
                                                                               pprevali,
                                                                               pirevali,
                                                                               pctipdur,
                                                                               pnpartot,
                                                                               pctipban,
                                                                               pcbancar,
                                                                               pcestado,
                                                                               pcmotivo,
                                                                               pcblopag,
                                                                               pnmes1,
                                                                               pnmes2,
                                                                               pnmes3,
                                                                               pnmes4,
                                                                               pnmes5,
                                                                               pnmes6,
                                                                               pnmes7,
                                                                               pnmes8,
                                                                               pnmes9,
                                                                               pnmes10,
                                                                               pnmes11,
                                                                               pnmes12,
                                                                               pnpresta,
                                                                               vgobsiniestro.tramitaciones(i).destinatarios(j)
                                                                               .t_prestaren,
                                                                               mensajes);
                           vtrobat := TRUE;

                           IF vnumerr <> 0
                           THEN
                              RAISE e_object_error;
                           END IF;
                           -- vgobsiniestro.tramitaciones(i).destinatarios(j) := vtramidestinatario;
                        END IF;
                     END LOOP;
                  END IF;

                  vpasexec := 8;

                  IF vtrobat = FALSE
                  THEN
                     RAISE verror;
                  END IF;
               END IF;
            END IF;
         END IF;
      END LOOP;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros INICI
      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                       pnsinies,
                                                       NULL, -- BUG 25537 - FAL - 04/02/2014
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      vpasexec := 6;
      RETURN vnumerr;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_obj_sinprestaren;

   --JRH CASA

   /***********************************************************************
     f_set_obj_sinprestaren
      Crea un objeto prestaciÃ³n con los datos.
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n
      param in  psperson  : nÃºmero identificativo del destinatario
      param in  pctipdes  : nÃºmero tipo destinatario
      param out  vprestaren :  ob_iax_sin_PRESTAREN
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_del_prestaren(pnsinies IN VARCHAR2,
                            pntramit IN NUMBER,
                            psperson IN NUMBER,
                            pctipdes IN NUMBER,
                            pnpresta IN NUMBER,
                            --psseguro IN NUMBER,
                            mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_prestaren';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' ntramit ' || pntramit ||
                                   ' psperson = ' || psperson ||
                                   ' pctipdes : ' || pctipdes ||
                                   ' pnpresta : ' || pnpresta;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vsquery     VARCHAR2(5000);
      vcagente    NUMBER;
      vtrobat     BOOLEAN := FALSE;
      verror EXCEPTION;
   BEGIN
      IF pnsinies IS NULL OR
         psperson IS NULL
        --JRH CASA
         OR
         pntramit IS NULL OR
         pctipdes IS NULL OR
         pnpresta IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         vpasexec := 3;

         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 4;

               IF psperson IS NOT NULL
               THEN
                  vpasexec := 5;

                  IF vgobsiniestro.tramitaciones(i)
                   .destinatarios IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).destinatarios.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i)
                              .destinatarios.first .. vgobsiniestro.tramitaciones(i)
                                                      .destinatarios.last
                     LOOP
                        vpasexec := 66;

                        IF vgobsiniestro.tramitaciones(i).destinatarios(j)
                         .persona.sperson = psperson AND
                           vgobsiniestro.tramitaciones(i).destinatarios(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).destinatarios(j)
                           .ctipdes = pctipdes
                        THEN
                           -- Si el trobem, el modifiquem
                           vpasexec := 7;

                           IF vgobsiniestro.tramitaciones(i).destinatarios(j)
                            .t_prestaren IS NOT NULL
                           THEN
                              FOR k IN vgobsiniestro.tramitaciones(i).destinatarios(j)
                                       .t_prestaren.first .. vgobsiniestro.tramitaciones(i).destinatarios(j)
                                                             .t_prestaren.last
                              LOOP
                                 IF vgobsiniestro.tramitaciones(i).destinatarios(j).t_prestaren(k)
                                  .npresta = pnpresta
                                 THEN
                                    vgobsiniestro.tramitaciones(i).destinatarios(j).t_prestaren.delete(k);
                                    vtrobat := TRUE;
                                 END IF;
                              END LOOP;
                           END IF;
                           -- vgobsiniestro.tramitaciones(i).destinatarios(j) := vtramidestinatario;
                        END IF;
                     END LOOP;
                  END IF;

                  vpasexec := 8;

                  IF vtrobat = FALSE
                  THEN
                     RAISE verror;
                  END IF;
               END IF;
            END IF;
         END IF;
      END LOOP;

      vpasexec := 9;
      -- Bug 14766 - 03/06/2010 - AMC
      -- Borramos la prestaciÃ³n
      vnumerr := pac_md_siniestros.f_del_prestaren(pnsinies,
                                                   pntramit,
                                                   psperson,
                                                   pctipdes,
                                                   pnpresta,
                                                   --psseguro,
                                                   mensajes);

      -- Fi Bug 14766 - 03/06/2010 - AMC
      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 10;
      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_del_prestaren;

   /***********************************************************************
     f_get_obj_sinprestaren
      Crea un objeto prestaciÃ³n con los datos.
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n
      param in  psperson  : nÃºmero identificativo del destinatario
      param in  pctipdes  : nÃºmero tipo destinatario
      param out  vprestaren :  ob_iax_sin_PRESTAREN
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   ***********************************************************************/
   FUNCTION f_get_obj_sinprestaren(pnsinies IN VARCHAR2,
                                   pntramit IN NUMBER,
                                   psperson IN NUMBER,
                                   pctipdes IN NUMBER,
                                   psseguro IN NUMBER,
                                   pnpresta IN NUMBER,
                                   mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_prestaren IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_obj_sinprestaren';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramit ' || pntramit ||
                                   ' psperson = ' || psperson ||
                                   ' pctipdes : ' || pctipdes;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vsquery     VARCHAR2(5000);
      vcagente    NUMBER;
      vprest      ob_iax_sin_prestaren;
   BEGIN
      IF pnsinies IS NULL OR
         psperson IS NULL
        --JRH CASA
         OR
         pntramit IS NULL OR
         pctipdes IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
      LOOP
         vpasexec := 3;

         IF vgobsiniestro.tramitaciones.exists(i)
         THEN
            IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
            THEN
               vpasexec := 4;

               IF psperson IS NOT NULL AND
                  pctipdes IS NOT NULL
               THEN
                  vpasexec := 5;

                  IF vgobsiniestro.tramitaciones(i)
                   .destinatarios IS NOT NULL AND
                     vgobsiniestro.tramitaciones(i).destinatarios.count > 0
                  THEN
                     FOR j IN vgobsiniestro.tramitaciones(i)
                              .destinatarios.first .. vgobsiniestro.tramitaciones(i)
                                                      .destinatarios.last
                     LOOP
                        IF vgobsiniestro.tramitaciones(i).destinatarios(j)
                         .persona.sperson = psperson AND
                           vgobsiniestro.tramitaciones(i).destinatarios(j)
                           .ntramit = pntramit AND
                           vgobsiniestro.tramitaciones(i).destinatarios(j)
                           .ctipdes = pctipdes
                        THEN
                           -- Si el trobem, el modifiquem
                           FOR k IN vgobsiniestro.tramitaciones(i).destinatarios(j)
                                    .t_prestaren.first .. vgobsiniestro.tramitaciones(i).destinatarios(j)
                                                          .t_prestaren.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).destinatarios(j).t_prestaren(k)
                               .npresta = pnpresta
                              THEN
                                 vpasexec := 7;
                                 vprest   := vgobsiniestro.tramitaciones(i).destinatarios(j)
                                             .t_prestaren(k);
                              END IF;
                           END LOOP;
                        END IF;
                     END LOOP;
                  END IF;

                  vpasexec := 8;
               END IF;
            END IF;
         END IF;
      END LOOP;

      RETURN vprest;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_obj_sinprestaren;

   -- Fi Bug 0015669 - JRH - 30/09/2010

   /*************************************************************************
      FUNCTION f_get_productos_pagos
      Nos devuelve los productos de RENTAS o BAJA
      param in pcempres    : Empresa
      param in idioma   : Idioma
      param in pfiltro   : 1 REntas, 2 Bajas
      return           : cÃ³digo de error

       ---- Bug 15044 - 08/11/2010 - XPL
   *************************************************************************/
   FUNCTION f_get_productos_pagos(pcempres   IN NUMBER,
                                  pfiltro    IN NUMBER,
                                  pproductos OUT t_iax_info,
                                  mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_productos_pagos';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pcempres: ' || pcempres ||
                                   ' - pfiltro: ' || pfiltro;
      vpasexec    NUMBER(5) := 0;
      vcursor     SYS_REFCURSOR;
      vnresult    NUMBER;
   BEGIN
      vpasexec := 1;
      vnresult := pac_md_siniestros.f_get_productos_pagos(pcempres,
                                                          pfiltro,
                                                          pproductos,
                                                          mensajes);
      vpasexec := 2;

      IF vnresult <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec   := 3;
      vproductos := pproductos;
      RETURN vnresult;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vnresult;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnresult);
         RETURN vnresult;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vnresult;
   END f_get_productos_pagos;

   /*************************************************************************
      FUNCTION f_get_productos_pagos_ob
      Nos devuelve el objeto de productos marcado para hacer los pagos
      param out pproductos   : Objeto de productos
      return           : cÃ³digo de error

       ---- Bug 15044 - 08/11/2010 - XPL
   *************************************************************************/
   FUNCTION f_get_productos_pagos_ob(pproductos OUT t_iax_info,
                                     mensajes   OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_productos_pagos_ob';
      vparam      VARCHAR2(500) := 'parÃ¡metros -';
      vpasexec    NUMBER(5) := 0;
      vcursor     SYS_REFCURSOR;
      vnresult    NUMBER := 0;
   BEGIN
      pproductos := vproductos;
      RETURN vnresult;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vnresult;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnresult);
         RETURN vnresult;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vnresult;
   END f_get_productos_pagos_ob;

   /*************************************************************************
      FUNCTION f_marcar_producto
      FunciÃ³n que nos selecciona o desseleccionar los productos para hacer los pagos
      Si sproduc es nulo marcaremos/desmarcaremos(dp de pmarcado) todos los productos
      param in psproduc   : Producto
      param in pmarcado   : 1/0

      return           : cÃ³digo de error

       ---- Bug 15044 - 08/11/2010 - XPL
   *************************************************************************/
   FUNCTION f_marcar_producto(psproduc IN NUMBER,
                              pmarcado IN NUMBER,
                              mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_marcar_producto';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psproduc: ' || psproduc ||
                                   ' - pmarcado: ' || pmarcado;
      vpasexec    NUMBER(5) := 0;
      vcursor     SYS_REFCURSOR;
      vnresult    NUMBER;
   BEGIN
      vpasexec := 1;

      IF vproductos IS NOT NULL AND
         vproductos.count > 0
      THEN
         FOR j IN vproductos.first .. vproductos.last
         LOOP
            IF vproductos(j).valor_columna = psproduc
            THEN
               vproductos(j).seleccionado := pmarcado;
            ELSIF psproduc IS NULL
            THEN
               vproductos(j).seleccionado := pmarcado;
            END IF;
         END LOOP;
      END IF;

      IF vnresult <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN vnresult;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vnresult;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnresult);
         RETURN vnresult;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vnresult;
   END f_marcar_producto;

   /*************************************************************************
      FUNCTION funciÃ³n que hace los pagos de rentas
      Nos devuelve los productos de RENTAS o BAJA
      param in p_data    : Fecha
      param in pproductos   : Objeto que contiene los productos a hacer los pagos
      param out pncobro   : Numero de cobros
      return           : cÃ³digo de error

       ---- Bug 15044 - 08/11/2010 - XPL
   *************************************************************************/
   FUNCTION f_pago_renta_aut(p_data   IN DATE,
                             pncobros OUT NUMBER,
                             psproces OUT NUMBER, -- Bug 16580 - 15/11/2010 - AMC
                             mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_pago_aut';
      vparam      VARCHAR2(500) := 'parÃ¡metros - p_data: ' || p_data;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF p_data IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_pago_renta_aut(p_data,
                                                    vproductos,
                                                    pncobros,
                                                    psproces,
                                                    mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_pago_renta_aut;

   -- BUG16506:DRA:14/12/2010:Inici
   /*************************************************************************
      FUNCTION que devuelve el tramitador y la unidad de tramitaciÃ³n del usuario
      Si no tiene unidad de tramitaciÃ³n devolverÃ¡ la unidad por defecto, pero
      devolverÃ¡ un 1 para indicar que no es el tramitador del usuario
      param in p_cuser      : Fecha
      param out p_cunitra   : Objeto que contiene los productos a hacer los pagos
      param out p_ctramitad : Numero de cobros
      return                : 0 --> OK, 1 --> No es el del usuario, NULL --> Error
   *************************************************************************/
   FUNCTION f_get_tramitador_defecto(p_cuser     IN VARCHAR2,
                                     p_sseguro   IN NUMBER,
                                     p_ccausin   IN NUMBER,
                                     p_cmotsin   IN NUMBER,
                                     p_nsinies   IN VARCHAR2, -- 22108:ASN:18/05/2012
                                     p_ntramte   IN NUMBER, -- 22108:ASN:18/05/2012
                                     p_ntramit   IN NUMBER,
                                     p_cunitra   OUT VARCHAR2,
                                     p_ctramitad OUT VARCHAR2,
                                     mensajes    OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_tramitador_defecto';
      vparam      VARCHAR2(500) := 'parametros - p_cuser: ' || p_cuser;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF p_cuser IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_get_tramitador_defecto(pac_md_common.f_get_cxtempresa,
                                                             p_cuser,
                                                             p_sseguro,
                                                             p_ccausin,
                                                             p_cmotsin,
                                                             p_nsinies,
                                                             p_ntramte, -- 22108:ASN:18/05/2012
                                                             p_ntramit,
                                                             p_cunitra,
                                                             p_ctramitad,
                                                             mensajes);

      IF NVL(vnumerr, 99999) > 1
      THEN
         RAISE e_object_error;
      END IF;

      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_tramitador_defecto;

   -- BUG16506:DRA:14/12/2010:Fi

   --bug.: 15738 - ICV - 21/12/2010
   /*************************************************************************
      FunciÃ³n que ejecuta el map 405 (Carta de pago)
      param in  psidepag : cÃ³digo de pago de siniestros
      param out  pnomfichero : Nombre fichero
   *************************************************************************/
   FUNCTION f_imprimir_pago(psidepag    IN NUMBER,
                            pcmapead    IN VARCHAR2,
                            pnomfichero OUT VARCHAR2,
                            mensajes    OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(3000) := 'psidepag=' || psidepag || ' pcmapead=' ||
                                 pcmapead;
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_imprimir_pago';
      vnum_err NUMBER(1) := 0;
      vcempres NUMBER;
   BEGIN
      IF psidepag IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnum_err := pac_md_siniestros.f_imprimir_pago(psidepag,
                                                    pcmapead,
                                                    pnomfichero,
                                                    mensajes);

      IF vnum_err <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN vnum_err;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         RETURN 1;
   END f_imprimir_pago;

   --Fin Bug.: 15738

   -- Ini bug 18554 - 14/06/2011 - SRA
   FUNCTION f_get_hissin_siniestros(pnsinies IN sin_tramita_movimiento.nsinies%TYPE,
                                    mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vsquery  VARCHAR2(2000);
      vcursor  SYS_REFCURSOR;
      vnresult NUMBER;
      vpasexec NUMBER := 0;
      vobject  VARCHAR2(200) := 'pac_iax_siniestros.f_get_hissin_siniestros';
      vparam   VARCHAR2(200) := 'pnsinies: ' || pnsinies;
   BEGIN
      vpasexec := 1;

      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vcursor  := pac_md_siniestros.f_get_hissin_siniestros(pnsinies,
                                                            mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
   END f_get_hissin_siniestros;

   -- Fin bug 18554 - 14/06/2011 - SRA
   -- Ini bug 016364 - 27/06/2011 - XPL
   /*************************************************************************
         FunciÃ³n actualiza el movimiento de siniestro a pre-siniestro
   *************************************************************************/
   FUNCTION f_crear_presiniestro(mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(3000) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.crear_presiniestro';
      vnum_err NUMBER(1) := 0;
      vcempres NUMBER;
   BEGIN
      -- Si no se genera reserva el siniestro se debe ser un presiniestro
      IF vgobsiniestro.movimientos IS NOT NULL
      THEN
         IF vgobsiniestro.movimientos.count > 0
         THEN
            vgobsiniestro.movimientos(1).cestsin := 5; -- presiniestro
         END IF;
      END IF;

      vnum_err := pac_md_siniestros.f_grabar_siniestro(vgobsiniestro,
                                                       mensajes);

      IF vnum_err <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vpasexec := 14;
      vnum_err := pac_iax_siniestros.f_inicializasiniestro(NULL,
                                                           NULL,
                                                           vgobsiniestro.nsinies,
                                                           mensajes);

      IF vnum_err <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN vnum_err;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         RETURN 1;
   END f_crear_presiniestro;

   -- Fi bug 016364 - 27/06/2011 - XPL

   /*************************************************************************
    Borrar el objeto
   pnsinies        VARCHAR2(14),   --NÃºmero Siniestro
   psrefext        NUMBER(3),   --NÃºmero referencia
   pctipref        NUMBER(2),   --CÃ³digo Tipo referencia
   ptrefext        VARCHAR2(100),--Des tipo referencia
   pfrefini        DATE,   --Fecha Inicio
   pfreffin        DATE,   --Fecha Fin

   *************************************************************************/
   FUNCTION f_delete_sinreferencias(psrefext IN NUMBER,
                                    mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_delete_sinreferencias';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psrefext: ' || psrefext;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcagrpro    NUMBER(8);
      vnlocali    NUMBER(8);
      v_index     NUMBER(8);
   BEGIN
      vpasexec := 2;

      IF vgobsiniestro.referencias IS NOT NULL
      THEN
         vpasexec := 3;

         --Recuperem el max srefext
         FOR i IN vgobsiniestro.referencias.first .. vgobsiniestro.referencias.last
         LOOP
            IF vgobsiniestro.referencias(i).srefext = psrefext
            THEN
               vgobsiniestro.referencias.delete(i);
            END IF;
         END LOOP;
      END IF;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_delete_sinreferencias;

   /*************************************************************************
      FUNCTION f_get_objeto_sintramijuzgado
          Recupera una lÃ­nea de juzgado
            ob_iax_siniestros.tramitacion.juzgado
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlinjuz        NUMBER(6),      --NÃºmero LÃ­nea
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_get_objeto_sintramijuzgado(pnsinies IN VARCHAR2,
                                         pntramit IN NUMBER,
                                         pnlinjuz IN NUMBER,
                                         mensajes OUT t_iax_mensajes)
      RETURN ob_iax_sin_tramita_juzgado IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_objeto_sintramijuzgado';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlinjuz: ' || pnlinjuz;
      vpasexec    NUMBER(5) := 1;
      v_juzgado   ob_iax_sin_tramita_juzgado := ob_iax_sin_tramita_juzgado();
   BEGIN
      -- ComprovaciÃ³n de los parÃ¡metros de entrada
      IF pntramit IS NULL OR
         pnlinjuz IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnlinjuz IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .juzgados IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).juzgados.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .juzgados.first .. vgobsiniestro.tramitaciones(i)
                                                    .juzgados.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).juzgados(j)
                            .nlinjuz = pnlinjuz AND
                              vgobsiniestro.tramitaciones(i).juzgados(j)
                              .ntramit = pntramit
                           THEN
                              v_juzgado := vgobsiniestro.tramitaciones(i)
                                           .juzgados(j);
                           END IF;
                        END LOOP;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      RETURN v_juzgado;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramijuzgado;

   /***********************************************************************
      FUNCTION f_set_objeto_sintramijuzgado
          Guarda en una variable global de la capa IAX los valores del objeto ob_iax_siniestros.tramitacion.juzgado
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlinjuz        NUMBER(6),      --NÃºmero LÃ­nea
            ...
            ...
            ...

         return               : 0 -> Todo correcto
                                1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   ***********************************************************************/
   FUNCTION f_set_objeto_sintramijuzgado(pnsinies     IN VARCHAR2,
                                         pntramit     IN NUMBER,
                                         pnlinjuz     IN NUMBER,
                                         pcorgjud     IN NUMBER,
                                         pnorgjud     IN VARCHAR2, --BUG 22048 --ETM --SE MODIFICA EL CAMPO DE NUMERICO A VARCHAR
                                         ptrefjud     IN VARCHAR2,
                                         pcsiglas     IN NUMBER,
                                         ptnomvia     IN VARCHAR2,
                                         pnnumvia     IN NUMBER,
                                         ptcomple     IN VARCHAR2,
                                         ptdirec      IN VARCHAR2,
                                         pcpais       IN NUMBER,
                                         pcprovin     IN NUMBER,
                                         pcpoblac     IN NUMBER,
                                         pcpostal     IN VARCHAR2,
                                         ptasunto     IN VARCHAR2,
                                         pnclasede    IN NUMBER,
                                         pntipopro    IN NUMBER,
                                         pnprocedi    IN VARCHAR2,
                                         pfnotiase    IN DATE,
                                         pfrecpdem    IN DATE,
                                         pfnoticia    IN DATE,
                                         pfcontase    IN DATE,
                                         pfcontcia    IN DATE,
                                         pfaudprev    IN DATE,
                                         pfjuicio     IN DATE,
                                         pcmonjuz     IN VARCHAR2,
                                         pcpleito     IN NUMBER,
                                         pipleito     IN NUMBER,
                                         piallana     IN NUMBER,
                                         pisentenc    IN NUMBER,
                                         pisentcap    IN NUMBER,
                                         pisentind    IN NUMBER,
                                         pisentcos    IN NUMBER,
                                         pisentint    IN NUMBER,
                                         pisentotr    IN NUMBER,
                                         pcargudef    IN NUMBER,
                                         pcresplei    IN NUMBER,
                                         pcapelant    IN NUMBER,
                                         pthipoase    IN VARCHAR2,
                                         pthipoter    IN VARCHAR2,
                                         pttipresp    IN VARCHAR2,
                                         pcopercob    IN NUMBER,
                                         ptreasmed    IN VARCHAR2,
                                         pcestproc    IN NUMBER,
                                         pcetaproc    IN NUMBER,
                                         ptconcjur    IN VARCHAR2,
                                         ptestrdef    IN VARCHAR2,
                                         ptrecomen    IN VARCHAR2,
                                         ptobserv     IN VARCHAR2,
                                         pfcancel     IN DATE,
                                         pnlinjuz_out OUT NUMBER,
                                         mensajes     OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramijuzgado';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlinjuz: ' || pnlinjuz;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnlinjuz    sin_tramita_juzgado.nlinjuz%TYPE;
      v_index     NUMBER(8);
   BEGIN
      -- ComprovaciÃ³n de los parÃ¡metros de entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 1;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 2;

                  -- modificar una lÃ­nea de juzgado ya existente
                  IF pnlinjuz IS NOT NULL
                  THEN
                     IF vgobsiniestro.tramitaciones(i)
                      .juzgados IS NOT NULL AND
                        vgobsiniestro.tramitaciones(i).juzgados.count > 0
                     THEN
                        FOR j IN vgobsiniestro.tramitaciones(i)
                                 .juzgados.first .. vgobsiniestro.tramitaciones(i)
                                                    .juzgados.last
                        LOOP
                           IF vgobsiniestro.tramitaciones(i).juzgados(j)
                            .nlinjuz = pnlinjuz AND
                              vgobsiniestro.tramitaciones(i).juzgados(j)
                              .ntramit = pntramit
                           THEN
                              -- lÃ­nea de juzgado encontrada, se modifica
                              vpasexec := 3;
                              vnumerr  := pac_md_siniestros.f_set_objeto_juzgado( -- pk
                                                                                 pnsinies,
                                                                                 pntramit,
                                                                                 pnlinjuz,
                                                                                 -- mas datos
                                                                                 pcorgjud,
                                                                                 pnorgjud,
                                                                                 ptrefjud,
                                                                                 pcsiglas,
                                                                                 ptnomvia,
                                                                                 pnnumvia,
                                                                                 ptcomple,
                                                                                 ptdirec,
                                                                                 pcpais,
                                                                                 pcprovin,
                                                                                 pcpoblac,
                                                                                 pcpostal,
                                                                                 ptasunto,
                                                                                 pnclasede,
                                                                                 pntipopro,
                                                                                 pnprocedi,
                                                                                 pfnotiase,
                                                                                 pfrecpdem,
                                                                                 pfnoticia,
                                                                                 pfcontase,
                                                                                 pfcontcia,
                                                                                 pfaudprev,
                                                                                 pfjuicio,
                                                                                 pcmonjuz,
                                                                                 pcpleito,
                                                                                 pipleito,
                                                                                 piallana,
                                                                                 pisentenc,
                                                                                 pisentcap,
                                                                                 pisentind,
                                                                                 pisentcos,
                                                                                 pisentint,
                                                                                 pisentotr,
                                                                                 pcargudef,
                                                                                 pcresplei,
                                                                                 pcapelant,
                                                                                 pthipoase,
                                                                                 pthipoter,
                                                                                 pttipresp,
                                                                                 pcopercob,
                                                                                 ptreasmed,
                                                                                 pcestproc,
                                                                                 pcetaproc,
                                                                                 ptconcjur,
                                                                                 ptestrdef,
                                                                                 ptrecomen,
                                                                                 ptobserv,
                                                                                 pfcancel,

                                                                                 -- lÃ­nea de juzgado modificada
                                                                                 vgobsiniestro.tramitaciones(i)
                                                                                 .juzgados(j),
                                                                                 mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;

                              pnlinjuz_out := pnlinjuz;
                           END IF;
                        END LOOP;
                     END IF;
                     -- crear una lÃ­nea de juzgado nueva
                  ELSE
                     vnlinjuz := 0;

                     IF vgobsiniestro.tramitaciones(i).juzgados IS NULL
                     THEN
                        vgobsiniestro.tramitaciones(i).juzgados := t_iax_sin_tramita_juzgado();
                     ELSIF vgobsiniestro.tramitaciones(i).juzgados.count > 0
                     THEN
                        vnlinjuz := NVL(vgobsiniestro.tramitaciones(i).juzgados(vgobsiniestro.tramitaciones(i).juzgados.last)
                                        .nlinjuz,
                                        0) + 1;
                     END IF;

                     vpasexec := 4;
                     vgobsiniestro.tramitaciones(i).juzgados.extend;
                     v_index := vgobsiniestro.tramitaciones(i).juzgados.last;
                     vgobsiniestro.tramitaciones(i).juzgados(v_index) := ob_iax_sin_tramita_juzgado();
                     vpasexec := 5;
                     vnumerr := pac_md_siniestros.f_set_objeto_juzgado( -- pk
                                                                       pnsinies,
                                                                       pntramit,
                                                                       vnlinjuz,
                                                                       -- mas datos
                                                                       pcorgjud,
                                                                       pnorgjud,
                                                                       ptrefjud,
                                                                       pcsiglas,
                                                                       ptnomvia,
                                                                       pnnumvia,
                                                                       ptcomple,
                                                                       ptdirec,
                                                                       pcpais,
                                                                       pcprovin,
                                                                       pcpoblac,
                                                                       pcpostal,
                                                                       ptasunto,
                                                                       pnclasede,
                                                                       pntipopro,
                                                                       pnprocedi,
                                                                       pfnotiase,
                                                                       pfrecpdem,
                                                                       pfnoticia,
                                                                       pfcontase,
                                                                       pfcontcia,
                                                                       pfaudprev,
                                                                       pfjuicio,
                                                                       pcmonjuz,
                                                                       pcpleito,
                                                                       pipleito,
                                                                       piallana,
                                                                       pisentenc,
                                                                       pisentcap,
                                                                       pisentind,
                                                                       pisentcos,
                                                                       pisentint,
                                                                       pisentotr,
                                                                       pcargudef,
                                                                       pcresplei,
                                                                       pcapelant,
                                                                       pthipoase,
                                                                       pthipoter,
                                                                       pttipresp,
                                                                       pcopercob,
                                                                       ptreasmed,
                                                                       pcestproc,
                                                                       pcetaproc,
                                                                       ptconcjur,
                                                                       ptestrdef,
                                                                       ptrecomen,
                                                                       ptobserv,
                                                                       pfcancel,

                                                                       -- lÃ­nea de juzgado creada
                                                                       vgobsiniestro.tramitaciones(i)
                                                                       .juzgados(v_index),
                                                                       mensajes);

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;

                     pnlinjuz_out := vnlinjuz;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- grabar en la base de datos
      vpasexec := 6;
      vnumerr  := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                        pnsinies,
                                                        NULL, -- BUG 25537 - FAL - 04/02/2014
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      -- recuperar de la base de datos
      vpasexec := 7;
      vnumerr  := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                        vgobsiniestro.tramitaciones,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramijuzgado;

   /***********************************************************************
          FUNCTION f_del_objeto_sintramijuzgado
          Borra una lÃ­nea de juzgado
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlinjuz        NUMBER(6),      --NÃºmero LÃ­nea
          return               : 0 -> Todo correcto
                                1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   ***********************************************************************/
   FUNCTION f_del_objeto_sintramijuzgado(pnsinies IN VARCHAR2,
                                         pntramit IN NUMBER,
                                         pnlinjuz IN NUMBER,
                                         mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Del_objeto_sintramijuzgado';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlinjuz: ' || pnlinjuz;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      -- ComprovaciÃ³n de los parÃ¡metros de entrada
      IF pntramit IS NULL OR
         pnlinjuz IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- borrar de la base de datos
      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_del_juzgado(pnsinies,
                                                  pntramit,
                                                  pnlinjuz,
                                                  mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      -- recuperar de la base de datos
      vpasexec := 3;
      vnumerr  := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                        vgobsiniestro.tramitaciones,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_objeto_sintramijuzgado;

   /*************************************************************************
      FUNCTION f_get_objeto_sintramidemand
          Recupera una lÃ­nea de demantante/demandado
            ob_iax_siniestros.tramitacion.demands
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlindem        NUMBER(6),      --NÃºmero LÃ­nea
      Bug 19821 - 10/11/2011 - MDS
   *************************************************************************/
   FUNCTION f_get_objeto_sintramidemand(pnsinies  IN VARCHAR2,
                                        pntramit  IN NUMBER,
                                        pnlindem  IN NUMBER,
                                        pntipodem IN NUMBER,
                                        mensajes  OUT t_iax_mensajes)
      RETURN ob_iax_sin_tramita_demand IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_objeto_sintramidemand';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlindem: ' || pnlindem;
      vpasexec    NUMBER(5) := 1;
      v_demand    ob_iax_sin_tramita_demand := ob_iax_sin_tramita_demand();
   BEGIN
      -- ComprovaciÃ³n de los parÃ¡metros de entrada
      IF pntramit IS NULL OR
         pnlindem IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  IF pnlindem IS NOT NULL
                  THEN
                     -- Bug 20340/109094 - 15/03/2012 - AMC
                     IF pntipodem = 1
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .demandantes IS NOT NULL AND
                           vgobsiniestro.tramitaciones(i)
                           .demandantes.count > 0
                        THEN
                           FOR j IN vgobsiniestro.tramitaciones(i)
                                    .demandantes.first .. vgobsiniestro.tramitaciones(i)
                                                          .demandantes.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).demandantes(j)
                               .nlindem = pnlindem AND
                                 vgobsiniestro.tramitaciones(i).demandantes(j)
                                 .ntramit = pntramit
                              THEN
                                 v_demand := vgobsiniestro.tramitaciones(i)
                                             .demandantes(j);
                              END IF;
                           END LOOP;
                        END IF;
                     ELSIF pntipodem = 2
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .demandados IS NOT NULL AND
                           vgobsiniestro.tramitaciones(i)
                           .demandados.count > 0
                        THEN
                           FOR j IN vgobsiniestro.tramitaciones(i)
                                    .demandados.first .. vgobsiniestro.tramitaciones(i)
                                                         .demandados.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).demandados(j)
                               .nlindem = pnlindem AND
                                 vgobsiniestro.tramitaciones(i).demandados(j)
                                 .ntramit = pntramit
                              THEN
                                 v_demand := vgobsiniestro.tramitaciones(i)
                                             .demandados(j);
                              END IF;
                           END LOOP;
                        END IF;
                     END IF;
                     -- Fi Bug 20340/109094 - 15/03/2012 - AMC
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      RETURN v_demand;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_sintramidemand;

   /***********************************************************************
      FUNCTION f_set_objeto_sintramidemand
          Guarda en una variable global de la capa IAX los valores del objeto ob_iax_siniestros.tramitacion.demands
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlindem        NUMBER(6),      --NÃºmero LÃ­nea
         ...
         ...
         ...

         return               : 0 -> Todo correcto
                                1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
   ***********************************************************************/
   FUNCTION f_set_objeto_sintramidemand(pnsinies     IN VARCHAR2,
                                        pntramit     IN NUMBER,
                                        pnlindem     IN NUMBER,
                                        psperson     IN NUMBER,
                                        pntipodem    IN NUMBER,
                                        pttramita    IN VARCHAR2,
                                        psperson2    IN NUMBER,
                                        pnprocedi    IN VARCHAR2,
                                        ptcompani    IN VARCHAR2,
                                        pnlindem_out OUT NUMBER,
                                        mensajes     OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_sintramidemand';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlindem: ' || pnlindem;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnlindem    sin_tramita_demand.nlindem%TYPE;
      v_index     NUMBER(8);
   BEGIN
      -- ComprovaciÃ³n de los parÃ¡metros de entrada
      IF pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.tramitaciones IS NOT NULL AND
         vgobsiniestro.tramitaciones.count > 0
      THEN
         FOR i IN vgobsiniestro.tramitaciones.first .. vgobsiniestro.tramitaciones.last
         LOOP
            vpasexec := 1;

            IF vgobsiniestro.tramitaciones.exists(i)
            THEN
               IF vgobsiniestro.tramitaciones(i).ntramit = pntramit
               THEN
                  vpasexec := 2;

                  -- modificar una lÃ­nea de demandante/demandado ya existente
                  IF pnlindem IS NOT NULL
                  THEN
                     -- Bug 20340/109094 - 15/03/2012 - AMC
                     IF pntipodem = 1
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .demandantes IS NOT NULL AND
                           vgobsiniestro.tramitaciones(i)
                           .demandantes.count > 0
                        THEN
                           FOR j IN vgobsiniestro.tramitaciones(i)
                                    .demandantes.first .. vgobsiniestro.tramitaciones(i)
                                                          .demandantes.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).demandantes(j)
                               .nlindem = pnlindem AND
                                 vgobsiniestro.tramitaciones(i).demandantes(j)
                                 .ntramit = pntramit
                              THEN
                                 -- lÃ­nea de demandante/demandado encontrada, se modifica
                                 vpasexec := 3;
                                 vnumerr  := pac_md_siniestros.f_set_objeto_demand( -- pk
                                                                                   pnsinies,
                                                                                   pntramit,
                                                                                   pnlindem,
                                                                                   -- mas datos
                                                                                   psperson,
                                                                                   pntipodem,
                                                                                   pttramita,
                                                                                   psperson2,
                                                                                   pnprocedi,
                                                                                   ptcompani,

                                                                                   -- lÃ­nea de demandante/demandado modificada
                                                                                   vgobsiniestro.tramitaciones(i)
                                                                                   .demandantes(j),
                                                                                   mensajes);

                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;

                                 pnlindem_out := pnlindem;
                              END IF;
                           END LOOP;
                        END IF;
                     ELSIF pntipodem = 2
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .demandados IS NOT NULL AND
                           vgobsiniestro.tramitaciones(i)
                           .demandados.count > 0
                        THEN
                           FOR j IN vgobsiniestro.tramitaciones(i)
                                    .demandados.first .. vgobsiniestro.tramitaciones(i)
                                                         .demandados.last
                           LOOP
                              IF vgobsiniestro.tramitaciones(i).demandados(j)
                               .nlindem = pnlindem AND
                                 vgobsiniestro.tramitaciones(i).demandados(j)
                                 .ntramit = pntramit
                              THEN
                                 -- lÃ­nea de demandante/demandado encontrada, se modifica
                                 vpasexec := 3;
                                 vnumerr  := pac_md_siniestros.f_set_objeto_demand( -- pk
                                                                                   pnsinies,
                                                                                   pntramit,
                                                                                   pnlindem,
                                                                                   -- mas datos
                                                                                   psperson,
                                                                                   pntipodem,
                                                                                   pttramita,
                                                                                   psperson2,
                                                                                   pnprocedi,
                                                                                   ptcompani,

                                                                                   -- lÃ­nea de demandante/demandado modificada
                                                                                   vgobsiniestro.tramitaciones(i)
                                                                                   .demandados(j),
                                                                                   mensajes);

                                 IF vnumerr <> 0
                                 THEN
                                    RAISE e_object_error;
                                 END IF;

                                 pnlindem_out := pnlindem;
                              END IF;
                           END LOOP;
                        END IF;
                     END IF;
                     -- Fi Bug 20340/109094 - 15/03/2012 - AMC
                     -- crear una lÃ­nea de demandante/demandado nueva
                  ELSE
                     vnlindem := 0;

                     -- Bug 20340/109094 - 15/03/2012 - AMC
                     IF pntipodem = 1
                     THEN
                        IF vgobsiniestro.tramitaciones(i)
                         .demandantes IS NULL
                        THEN
                           vgobsiniestro.tramitaciones(i).demandantes := t_iax_sin_tramita_demand();
                        ELSIF vgobsiniestro.tramitaciones(i)
                         .demandantes.count > 0
                        THEN
                           vnlindem := NVL(vgobsiniestro.tramitaciones(i).demandantes(vgobsiniestro.tramitaciones(i).demandantes.last)
                                           .nlindem,
                                           0) + 1;
                        END IF;

                        vpasexec := 4;
                        vgobsiniestro.tramitaciones(i).demandantes.extend;
                        v_index := vgobsiniestro.tramitaciones(i)
                                   .demandantes.last;
                        vgobsiniestro.tramitaciones(i).demandantes(v_index) := ob_iax_sin_tramita_demand();
                        vpasexec := 5;
                        vnumerr := pac_md_siniestros.f_set_objeto_demand( -- pk
                                                                         pnsinies,
                                                                         pntramit,
                                                                         vnlindem,
                                                                         -- mas datos
                                                                         psperson,
                                                                         pntipodem,
                                                                         pttramita,
                                                                         psperson2,
                                                                         pnprocedi,
                                                                         ptcompani,

                                                                         -- lÃ­nea de demandante/demandado creada
                                                                         vgobsiniestro.tramitaciones(i)
                                                                         .demandantes(v_index),
                                                                         mensajes);

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     ELSIF pntipodem = 2
                     THEN
                        IF vgobsiniestro.tramitaciones(i).demandados IS NULL
                        THEN
                           vgobsiniestro.tramitaciones(i).demandados := t_iax_sin_tramita_demand();
                        ELSIF vgobsiniestro.tramitaciones(i)
                         .demandados.count > 0
                        THEN
                           vnlindem := NVL(vgobsiniestro.tramitaciones(i).demandados(vgobsiniestro.tramitaciones(i).demandados.last)
                                           .nlindem,
                                           0) + 1;
                        END IF;

                        vpasexec := 4;
                        vgobsiniestro.tramitaciones(i).demandados.extend;
                        v_index := vgobsiniestro.tramitaciones(i)
                                   .demandados.last;
                        vgobsiniestro.tramitaciones(i).demandados(v_index) := ob_iax_sin_tramita_demand();
                        vpasexec := 5;
                        vnumerr := pac_md_siniestros.f_set_objeto_demand( -- pk
                                                                         pnsinies,
                                                                         pntramit,
                                                                         vnlindem,
                                                                         -- mas datos
                                                                         psperson,
                                                                         pntipodem,
                                                                         pttramita,
                                                                         psperson2,
                                                                         pnprocedi,
                                                                         ptcompani,

                                                                         -- lÃ­nea de demandante/demandado creada
                                                                         vgobsiniestro.tramitaciones(i)
                                                                         .demandados(v_index),
                                                                         mensajes);

                        IF vnumerr <> 0
                        THEN
                           RAISE e_object_error;
                        END IF;
                     END IF;

                     -- Fi Bug 20340/109094 - 15/03/2012 - AMC
                     pnlindem_out := vnlindem;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      -- grabar en la base de datos
      vpasexec := 6;
      vnumerr  := pac_md_siniestros.f_set_tramitaciones(vgobsiniestro.tramitaciones,
                                                        pnsinies,
                                                        NULL, -- BUG 25537 - FAL - 04/02/2014
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      -- recuperar de la base de datos
      vpasexec := 7;
      vnumerr  := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                        vgobsiniestro.tramitaciones,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sintramidemand;

   /***********************************************************************
      FUNCTION f_del_objeto_sintramidemand
          Borra una lÃ­nea de demantante/demandado
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlindem        NUMBER(6),      --NÃºmero LÃ­nea
          return               : 0 -> Todo correcto
                                 1 -> Se ha producido un error
      Bug 19821 - 10/11/2011 - MDS
      Bug 20340/109094 - 15/03/2012 - AMC
   ***********************************************************************/
   FUNCTION f_del_objeto_sintramidemand(pnsinies  IN VARCHAR2,
                                        pntramit  IN NUMBER,
                                        pnlindem  IN NUMBER,
                                        pntipodem IN NUMBER,
                                        mensajes  OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Del_objeto_sintramidemand';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlindem: ' || pnlindem;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      -- ComprovaciÃ³n de los parÃ¡metros de entrada
      IF pntramit IS NULL OR
         pnlindem IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- borrar de la base de datos
      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_del_demand(pnsinies,
                                                 pntramit,
                                                 pnlindem,
                                                 pntipodem,
                                                 mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      -- recuperar de la base de datos
      vpasexec := 3;
      vnumerr  := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                        vgobsiniestro.tramitaciones,
                                                        mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_objeto_sintramidemand;

   /***********************************************************************
      Bug:19882 - 01/12/2011 - AFM

      graba los datos de movimiento de pago / recobro
      param in  sidepag  : nÃºmero tipo pago
      param out  ob_iax_sin_trami_movpago :  ob_iax_sin_trami_movpago
      param out mensajes : mensajes de error
      return             : 0 OK
                           1 Error
   ***********************************************************************/
   FUNCTION f_set_movpago(psidepag    IN NUMBER,
                          pnmovpag    IN NUMBER,
                          pmediopago  IN NUMBER,
                          preferencia IN VARCHAR2,
                          pfcambio    IN DATE,
                          ptotal      IN NUMBER,
                          piica       IN NUMBER,
                          piiva       IN NUMBER,
                          pireteica   IN NUMBER,
                          pireteiva   IN NUMBER,
                          piretenc    IN NUMBER,
                          pmoneda     IN VARCHAR2,
                          pcestpag    IN NUMBER, -- Bug 24192 - MDS - 25/10/2012
                          pcestval    IN NUMBER, -- Bug 24192 - MDS - 25/10/2012
                          piotrosgas  IN NUMBER,
                          pibaseipoc  IN NUMBER,
                          ppipoconsumo IN NUMBER,
                          pndocpag    IN NUMBER, -- IAXIS-7731 19/12/2019
                          mensajes    OUT t_iax_mensajes) 
         RETURN NUMBER IS                   
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_movpago';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psidepag: ' || psidepag ||
                                   ' - pnmovpag: ' || pnmovpag;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      t_movpagos  t_iax_sin_trami_movpago := t_iax_sin_trami_movpago();
      v_movpago   ob_iax_sin_trami_movpago := NULL; --ob_iax_sin_trami_movpago();
      --
      -- Inicio IAXIS-7731 19/12/2019
      -- 
      TYPE t_tranrev IS TABLE OF NUMBER;
      --
      -- Transiciones adicionales a realizar automáticamente si se recibe una Reversión (pcestpag = 3)
      -- Reversado (3) -> Pendiente (0)
      --
      v_tranrev    t_tranrev := t_tranrev(0);
      -- 
      v_nnumestcor NUMBER := 0; -- Contador para número de transiciones finalizadas correctamente
      --
      -- Fin IAXIS-7731 19/12/2019
      --
   BEGIN
      vpasexec := 1;

      IF psidepag IS NULL
      THEN
         RAISE e_param_error;
      END IF;
      --
      -- Inicio IAXIS-7731 19/12/2019
      -- 
      IF pcestpag NOT IN (0, 2, 3) THEN
        vnumerr := 89907094;        
        pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
        RETURN 1; 
      END IF;
      --
      -- Fin IAXIS-7731 19/12/2019
      --
      vpasexec := 2;

      IF pnmovpag IS NULL
      THEN
         --Cargamos todos los movimientos segun el idpago
         vnumerr := pac_md_siniestros.f_get_movpagos(psidepag,
                                                     t_movpagos,
                                                     mensajes);

         --if no hay rows la capa MD no devuelve error!!!
         IF vnumerr = 0 AND
            t_movpagos.last IS NOT NULL
         THEN
            --Recuperamos el Ãºltimo movimiento del pago
            t_movpagos(t_movpagos.last).nmovpag := t_movpagos.last;
            --validamos estado de pago antes de aceptar el pago
            vnumerr := pac_md_validaciones_sin.f_movpago(psidepag,
                                                         pcestpag,
                                                         pcestval,
                                                         1,
                                                         mensajes);

            t_movpagos(t_movpagos.last).cestpag := pcestpag;
            t_movpagos(t_movpagos.last).cestval := pcestval;
            t_movpagos(t_movpagos.last).csubpag := NULL;
            -- BUG POSINS-115 - 21/06/2016 - JTT
            -- Informamos la fecha contable con la fecha de cambio que nos responde SAP, que corresponde con la fecha
            -- contable del pago. Esta funciÃ³n solo se llama desde el listener L003.
            --
            -- Inicio IAXIS-7731 19/12/2019
            -- 
            t_movpagos(t_movpagos.last).fefepag := trunc(f_sysdate); 
            t_movpagos(t_movpagos.last).ndocpag := pndocpag; 
            --
            -- Fin IAXIS-7731 19/12/2019
            --
            t_movpagos(t_movpagos.last).fcontab := pfcambio;
            -- FIN BUG POSINS-115

            v_movpago := t_movpagos(t_movpagos.last);
         END IF;
      ELSE
         --Ya tiene los mov. cargados en memoria
         vnumerr := pac_md_siniestros.f_get_movpago(psidepag,
                                                    pnmovpag,
                                                    v_movpago,
                                                    mensajes);
      END IF;

      -- BUG 21357/107298 - 14/02/2012 - JMP - Control de existencia de movimientos de pago
      IF v_movpago IS NULL
      THEN
         RETURN 9901744; -- No existe movimiento del pago
      END IF;

      -- FIN BUG 21357/107298 - 14/02/2012 - JMP - Control de existencia de movimientos de pago
      vpasexec := 3;

      IF vnumerr = 0 AND
         v_movpago IS NOT NULL
      THEN
         vnumerr := pac_md_siniestros.f_set_movpago(psidepag,
                                                    v_movpago,
                                                    mensajes);
      END IF;

      --BUG 19882 - 28/12/2011 - Actualiza campos que llegan de la interface
      IF vnumerr = 0 AND
         v_movpago IS NOT NULL
      THEN
         vnumerr := pac_md_siniestros.f_actualiza_pago(psidepag,
                                                       pmediopago,
                                                       preferencia,
                                                       pfcambio,
                                                       ptotal,
                                                       piica,
                                                       piiva,
                                                       pireteica,
                                                       pireteiva,
                                                       piretenc,
                                                       pmoneda,
                                                       piotrosgas,
                                                       pibaseipoc,
                                                       ppipoconsumo,
                                                       mensajes);

      
      END IF;
      --
      -- Inicio IAXIS-7731 19/12/2019
      --
      -- Si es una reversión, se deberá dejar el pago nuevamente en estado "Pendiente" para permitir al usuario
      -- anular el pago manualmente.
      --
      IF pcestpag = 3 AND vnumerr = 0 THEN 
        --
        FOR i IN v_tranrev.FIRST .. v_tranrev.LAST LOOP
           --
           vnumerr := f_set_movpago(psidepag, pnmovpag, pmediopago, preferencia, pfcambio, ptotal,
                                    piica, piiva, pireteica, pireteiva, piretenc, pmoneda, v_tranrev(i),
                                    1, piotrosgas, pibaseipoc, ppipoconsumo, NULL, mensajes);
           --
           IF vnumerr = 0 THEN
             --
             v_nnumestcor := i;
             --
           ELSE 
             --  
             EXIT;
             --
           END IF;  
           --
        END LOOP;  
        --
      END IF;  
      --
      -- Debido a la recursividad, el siguiente bloque de código se va a ejecutar al menos dos veces en caso de ser una 
      -- Reversión, por lo que, se hará commit si y solo si:
      -- Durante un pago (2) no se presentaron errores ó, se envió una Reversión (3) y tanto la Reversión como sus transiciones
      -- sucesivas tampoco presentaron errores y fueron en total 1 (correspondientes a 0 -> Pendiente). 
      --
      IF vnumerr = 0 AND (pcestpag = 2 OR v_nnumestcor = 1) THEN
        COMMIT;
      ELSIF vnumerr <> 0 THEN 
        ROLLBACK;
      END IF;
      --
      -- Fin IAXIS-7731 19/12/2019
      --
      RETURN vnumerr; -->0,OK; 1,KO
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_movpago;

   -- Ini Bug 21172 - MDS - 02/03/2012
   /*************************************************************************
      FUNCTION f_get_reserva_multiple
         Devuelve las reservas efectuadas para un siniestro/trÃ¡mite

         param in  pnsinies : NÃºmero de siniestro
         param in  pntramit : NÃºmero de trÃ¡mite
         param out t_iax_mensajes

         return    t_iax_sin_trami_reserva_mult
   *************************************************************************/
   FUNCTION f_get_reserva_multiple(pnsinies IN sin_siniestro.nsinies%TYPE,
                                   pntramit IN sin_tramita_reserva.ntramit%TYPE,
                                   pctramit IN sin_tramitacion.ctramit%TYPE, -- 25812:ASN:23/01/2013
                                   mensajes OUT t_iax_mensajes)
      RETURN t_iax_sin_trami_reserva_mult IS
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_reserva_multiple';
      vparam         VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                      ' ntramit: ' || pntramit;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      t_reserva_mult t_iax_sin_trami_reserva_mult;
   BEGIN
      --ComprobaciÃ³n de parÃ¡metros de entrada
      IF pnsinies IS NULL OR
         pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_get_reserva_multiple(pnsinies,
                                                           pntramit,
                                                           pctramit, -- 25812:ASN:23/01/2013
                                                           t_reserva_mult,
                                                           mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN t_reserva_mult;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_reserva_multiple;

   -- Fin Bug 21172 - MDS - 02/03/2012
   --INI BUG 21740 --ETM -27/03/2012
   /*************************************************************************
      FUNCTION f_update_presiniestros
        Actualiza el estado A presiniestro
         param in  pcmodo : modo de entrada
   *************************************************************************/
   FUNCTION f_update_presiniestros(pcmodo   IN VARCHAR2,
                                   mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_update_presiniestros';
      vparam      VARCHAR2(500) := 'parÃƒÂ¡metros - pcmodo:' || pcmodo;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      v_index     NUMBER;
   BEGIN
      v_index := vgobsiniestro.movimientos.last;
      vgobsiniestro.movimientos(v_index).cestsin := 5;
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_update_presiniestros;

   --fin BUG 21740 --ETM -27/03/2012

   /***********************************************************************
      FUNCTION f_get_objeto_defraudador
         Recupera un objeto defraudador ob_iax_siniestros.defraudadores
         param in pnsinies         : nÃºmero de siniestro
         param in pndefrau         : nÃºmero de defraudador
         param out pdefraudador    : ob_iax_defraudadores
         param out mensajes        : mensajes de error
         return                    : 0 OK
                                     1 Error
      Bug 21855 - 07/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_get_objeto_defraudador(pnsinies IN sin_defraudadores.nsinies%TYPE,
                                     pndefrau IN sin_defraudadores.ndefrau%TYPE,
                                     mensajes OUT t_iax_mensajes)
      RETURN ob_iax_defraudadores IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_objeto_defraudador';
      vparam        VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                     ' - pndefrau: ' || pndefrau;
      vpasexec      NUMBER(5) := 1;
      v_defraudador ob_iax_defraudadores := ob_iax_defraudadores();
   BEGIN
      -- ComprobaciÃ³n de los parÃ¡metros de entrada
      -- pnsinies : puede ser NULL, ya que en el alta rÃ¡pida de siniestro aÃºn no tiene valor
      -- pndefrau : es obligatorio
      IF pndefrau IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF vgobsiniestro.defraudadores IS NOT NULL AND
         vgobsiniestro.defraudadores.count > 0
      THEN
         FOR i IN vgobsiniestro.defraudadores.first .. vgobsiniestro.defraudadores.last
         LOOP
            IF vgobsiniestro.defraudadores(i).ndefrau = pndefrau
            THEN
               v_defraudador := vgobsiniestro.defraudadores(i);
            END IF;
         END LOOP;
      END IF;

      RETURN v_defraudador;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_defraudador;

   /***********************************************************************
      FUNCTION f_set_objeto_defraudador
         Guarda en una variable global de la capa IAX los valores del objeto
         param in pnsinies        : nÃºmero de siniestro
         param in pndefrau        : nÃºmero de defraudador
         ...
         ...
         ...
         param out pndefrau_out   : nÃºmero de defraudador
         param out mensajes       : mensajes de error
         return                   : 0 -> Todo correcto
                                    1 -> Se ha producido un error
      Bug 21855 - 07/05/2012 - MDS
   ***********************************************************************/
   FUNCTION f_set_objeto_defraudador(pnsinies     IN sin_defraudadores.nsinies%TYPE,
                                     pndefrau     IN sin_defraudadores.ndefrau%TYPE,
                                     psperson     IN sin_defraudadores.sperson%TYPE,
                                     pctiprol     IN sin_defraudadores.ctiprol%TYPE,
                                     pfiniefe     IN sin_defraudadores.finiefe%TYPE,
                                     pffinefe     IN sin_defraudadores.ffinefe%TYPE,
                                     pndefrau_out OUT sin_defraudadores.ndefrau%TYPE,
                                     mensajes     OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Set_objeto_defraudador';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pndefrau: ' || pndefrau ||
                                   ' - psperson: ' || psperson ||
                                   ' - pctiprol: ' || pctiprol;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vndefrau    sin_defraudadores.ndefrau%TYPE := 0;
      v_index     NUMBER(8);
   BEGIN
      -- ComprobaciÃ³n de los parÃ¡metros de entrada
      -- pnsinies : puede ser NULL, ya que en el alta rÃ¡pida de siniestro aÃºn no tiene valor
      -- pndefrau : es opcional (informado --> modifica, NULL --> crea)
      -- psperson : obligatorio
      -- pctiprol : obligatorio
      vpasexec := 1;

      IF vgobsiniestro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 11;

      IF psperson IS NULL OR
         pctiprol IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF pndefrau IS NOT NULL
      THEN
         -- modificar un defraudador existente
         vpasexec := 2;

         IF vgobsiniestro.defraudadores IS NOT NULL AND
            vgobsiniestro.defraudadores.count > 0
         THEN
            FOR i IN vgobsiniestro.defraudadores.first .. vgobsiniestro.defraudadores.last
            LOOP
               IF vgobsiniestro.defraudadores(i).ndefrau = pndefrau
               THEN
                  -- defraudador encontrado, se modifica
                  vpasexec := 3;
                  vnumerr  := pac_md_siniestros.f_set_objeto_defraudador(
                                                                         -- pk
                                                                         pnsinies,
                                                                         pndefrau,
                                                                         -- mÃ¡s datos
                                                                         psperson,
                                                                         pctiprol,
                                                                         pfiniefe,
                                                                         pffinefe,

                                                                         -- defraudador modificado
                                                                         vgobsiniestro.defraudadores(i),
                                                                         mensajes);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;

                  pndefrau_out := pndefrau;
               END IF;
            END LOOP;
         END IF;
      ELSE
         -- crear un defraudador nuevo
         vpasexec := 4;

         IF vgobsiniestro.defraudadores IS NULL
         THEN
            -- crear una lista nueva
            vpasexec                    := 41;
            vndefrau                    := 0;
            vgobsiniestro.defraudadores := t_iax_defraudadores();
         ELSIF vgobsiniestro.defraudadores.count > 0
         THEN
            -- aÃ±adir un defraudador
            vndefrau := NVL(vgobsiniestro.defraudadores(vgobsiniestro.defraudadores.last)
                            .ndefrau,
                            0) + 1;
         END IF;

         vpasexec := 5;
         vgobsiniestro.defraudadores.extend;
         v_index := vgobsiniestro.defraudadores.last;
         vgobsiniestro.defraudadores(v_index) := ob_iax_defraudadores();
         vpasexec := 6;
         vnumerr := pac_md_siniestros.f_set_objeto_defraudador(
                                                               -- pk
                                                               pnsinies,
                                                               vndefrau,
                                                               -- mÃ¡s datos
                                                               psperson,
                                                               pctiprol,
                                                               pfiniefe,
                                                               pffinefe,

                                                               -- defraudador creado
                                                               vgobsiniestro.defraudadores(v_index),
                                                               mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         pndefrau_out := vndefrau;
      END IF;

      -- acceder a la base de datos sÃ³lo si existe el siniestro
      IF pnsinies IS NOT NULL
      THEN
         -- grabar en la base de datos
         vpasexec := 7;
         /*
         vnumerr := pac_md_siniestros.f_grabar_siniestro(vgobsiniestro, mensajes);
         */
         vnumerr := pac_md_siniestros.f_set_defraudadores(pnsinies,
                                                          vgobsiniestro.defraudadores,
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         COMMIT;
         -- recuperar de la base de datos
         vpasexec := 8;
         /*
         vgobsiniestro := pac_md_siniestros.f_get_siniestro(pac_md_common.f_get_cxtempresa,
                                                            psproduc, pcactivi, pnsinies,
                                                            mensajes);
         */
         vnumerr := pac_md_siniestros.f_get_defraudadores(pnsinies,
                                                          vgobsiniestro.defraudadores,
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
            RAISE e_object_error;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_defraudador;

   /*************************************************************************
      FUNCTION f_del_objeto_defraudador
         Borra un defraudador
         param in pnsinies  : nÃºmero de siniestro
         param in pndefrau  : nÃºmero de defraudador
         param out mensajes : mensajes de error
         return             : 0 -> Todo correcto
                              1 -> Se ha producido un error
      Bug 21855 - 07/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_del_objeto_defraudador(pnsinies IN sin_defraudadores.nsinies%TYPE,
                                     pndefrau IN sin_defraudadores.ndefrau%TYPE,
                                     mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Del_objeto_defraudador';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pndefrau: ' || pndefrau;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      -- ComprobaciÃ³n de los parÃ¡metros de entrada
      -- pnsinies : puede ser NULL, ya que en el alta rÃ¡pida de siniestro aÃºn no tiene valor
      -- pndefrau : es obligatorio
      IF pndefrau IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      -- borrar el defraudador
      IF vgobsiniestro.defraudadores IS NOT NULL AND
         vgobsiniestro.defraudadores.count > 0
      THEN
         FOR i IN vgobsiniestro.defraudadores.first .. vgobsiniestro.defraudadores.last
         LOOP
            IF vgobsiniestro.defraudadores(i).ndefrau = pndefrau
            THEN
               -- defraudador encontrado, se borra
               vpasexec := 2;
               vgobsiniestro.defraudadores.delete(i);
            END IF;
         END LOOP;
      END IF;

      -- acceder a la base de datos sÃ³lo si existe el siniestro
      IF pnsinies IS NOT NULL
      THEN
         -- borrar de la base de datos
         vpasexec := 3;
         vnumerr  := pac_md_siniestros.f_del_defraudador(pnsinies,
                                                         pndefrau,
                                                         mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         COMMIT;
         --
         -- recuperar de la base de datos
         vpasexec := 4;
         /*
         vgobsiniestro := pac_md_siniestros.f_get_siniestro(pac_md_common.f_get_cxtempresa,
                                                            psproduc, pcactivi, pnsinies,
                                                            mensajes);
         */
         vnumerr := pac_md_siniestros.f_get_defraudadores(pnsinies,
                                                          vgobsiniestro.defraudadores,
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
            RAISE e_object_error;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_objeto_defraudador;

   /***********************************************************************
      FUNCTION f_get_objeto_defraudadores
         Recupera la colecciÃ³n de defraudadores ob_iax_siniestros.defraudadores
         param in pnsinies         : nÃºmero de siniestro
         param out pdefraudador    : t_iax_defraudadores
         param out mensajes        : mensajes de error
         return                    : 0 OK
                                     1 Error
      Bug 21855 - 09/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_get_objeto_defraudadores(pnsinies IN sin_defraudadores.nsinies%TYPE,
                                       mensajes OUT t_iax_mensajes)
      RETURN t_iax_defraudadores IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_Get_objeto_defraudadores';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies;
      vpasexec    NUMBER(5) := 1;
   BEGIN
      -- ComprobaciÃ³n de los parÃ¡metros de entrada
      -- pnsinies : puede ser NULL, ya que en el alta rÃ¡pida de siniestro aÃºn no tiene valor
      RETURN vgobsiniestro.defraudadores;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN NULL;
   END f_get_objeto_defraudadores;

   /***********************************************************************
      FUNCTION f_get_personas_defraudadores
         Recupera la lista de personas (defraudadores) relacionadas con el siniestro
         param in psseguro          : nÃºmero de seguro
         param in pnsinies          : nÃºmero de siniestro
         param in pntipodefraudador : 1-Asegurado, 2-Tomador, 3-Mediador, 4-Persona relacionada
         param out mensajes         : mensajes de error
         return                     : sys_refcursor
      Bug 21855 - 14/05/2012 - MDS
   *************************************************************************/
   FUNCTION f_get_personas_defraudadores(psseguro          IN NUMBER,
                                         pnsinies          IN sin_defraudadores.nsinies%TYPE,
                                         pntipodefraudador IN NUMBER,
                                         mensajes          OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_personas_defraudadores';
      vparam      VARCHAR2(500) := 'parÃ¡metros - psseguro: ' || psseguro ||
                                   ' pnsinies: ' || pnsinies ||
                                   ' pntipodefraudador: ' ||
                                   pntipodefraudador;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      -- ComprobaciÃ³n de los parÃ¡metros de entrada
      -- pnsinies : puede ser NULL, ya que en el alta rÃ¡pida de siniestro aÃºn no tiene valor
      IF psseguro IS NULL OR
         pntipodefraudador IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vcursor  := pac_md_siniestros.f_get_personas_defraudadores(psseguro,
                                                                 pnsinies,
                                                                 pntipodefraudador,
                                                                 mensajes);
      vpasexec := 3;
      RETURN vcursor;
   EXCEPTION
      WHEN e_param_error THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN e_object_error THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN vcursor;
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_get_personas_defraudadores;

   /***********************************************************************
      FUNCTION f_get_tramitador
       Esta funcion devuelve el tramitador que toca, a la hora de dar de alta un tramite o
       una tramitacion. Para ello busca en el movimiento anterior (o en el tramite si lo hay
       y estamos dando de alta una tramitacion)
       Cuando se trate de un alta de tramite/tramitacion invocara la funcion que obtiene automaticamente
       el tramitador a partir de las condiciones parametrizadas.
       p_nsinies IN numero de siniestro
       p_ntramte IN numero de tramite
       p_ntramit IN numero de tramitacion
       p_cunitra   OUT unidad de tramitacion
       p_ctramitad OUT tramitador
   *************************************************************************/
   FUNCTION f_get_tramitador(pnsinies   IN NUMBER,
                             pntramte   IN NUMBER,
                             pntramit   IN NUMBER,
                             pcunitra   OUT VARCHAR2,
                             pctramitad OUT VARCHAR2,
                             mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_MD_SINIESTROS.f_get_tramitador';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' pntramte:' || pntramte || ' pntramit:' ||
                                   pntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      vnumerr := pac_md_siniestros.f_get_tramitador(pnsinies,
                                                    pntramte,
                                                    pntramit,
                                                    pcunitra,
                                                    pctramitad,
                                                    mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_tramitador;

   /***********************************************************************
      FUNCTION f_valida_tramitador
         Compara el limite de autonomia del tramitador con la provision de la tramitacion
         param in pnsinies          : nÃºmero de siniestro
         param in pntramit          : tramitacion
         param in pctramtad         : tramitador
         param in pccausin          : causa
         param in pcmotsin          : motivo
         param out mensajes         : mensajes de error
         return                     : 0 - OK ; 1 - Error
   *************************************************************************/
   FUNCTION f_valida_tramitador(pnsinies   IN VARCHAR2,
                                pntramit   IN NUMBER,
                                pctramitad IN VARCHAR2,
                                pccausin   IN NUMBER,
                                pcmotsin   IN NUMBER,
                                mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec NUMBER(8) := 1;
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_valida_tramitador';
      vparam   VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                ' pntramit:' || pntramit || ' pctramitad:' ||
                                pctramitad || ' pccausin: ' || pccausin ||
                                ' pcmotsin: ' || pcmotsin;
      num_err  NUMBER(10);
   BEGIN
      vpasexec := 2;
      num_err  := pac_md_siniestros.f_valida_tramitador(pnsinies,
                                                        pntramit,
                                                        pctramitad,
                                                        pccausin,
                                                        pcmotsin,
                                                        mensajes);
      vpasexec := 3;

      IF mensajes IS NOT NULL
      THEN
         IF mensajes.count > 0
         THEN
            vpasexec := 4;
            RAISE e_object_error;
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         RETURN 1;
   END f_valida_tramitador;

   /*************************************************************************
    funciÃ³n graba en una variable global de la capa IAX los valores del objeto
    ob_iax_siniestros.tramites(i).movimientos
   pNSINIES        VARCHAR2(14),   --NÃºmero Siniestro
   pNTRAMTE        NUMBER(3),   --NÃºmero TramitaciÃ³n Siniestro
   pNMOVTTE        NUMBER(3),   --NÃºmero Movimiento TramitaciÃ³n
   pCUNITRA        VARCHAR2(4),   --CÃ³digo Unidad TramitaciÃ³n
   pCTRAMITAD      VARCHAR2(4),   --CÃ³digo Tramitador
   pCESTTTE        NUMBER(3),   --CÃ³digo Estado TramitaciÃ³n
   pFESTTRA        DATE,   --Fecha Estado TramitaciÃ³n
   -- Bug 0022108 - 19/06/2012 - JMF
   *************************************************************************/
   FUNCTION f_set_objeto_sinmovtramte(pnsinies   IN VARCHAR2,
                                      pntramte   IN NUMBER,
                                      pnmovtte   IN NUMBER,
                                      pcunitra   IN VARCHAR2,
                                      pctramitad IN VARCHAR2,
                                      pcesttte   IN NUMBER,
                                      pfesttra   IN DATE,
                                      pccauest   IN NUMBER,
                                      mensajes   OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_objeto_sinmovtramte';
      vparam      VARCHAR2(500) := 'pNSINIES:' || pnsinies || ' pNTRAMTE:' ||
                                   pntramte || ' pNMOVTTE:' || pnmovtte ||
                                   ' pCUNITRA:' || pcunitra ||
                                   ' pCTRAMITAD=' || pctramitad ||
                                   ' pCESTTTE=' || pcesttte || ' pFESTTRA=' ||
                                   pfesttra || ' pCCAUEST=' || pccauest;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vntramit    NUMBER(8);
      v_index     NUMBER(8);
      vnmovtra    NUMBER(8);
   BEGIN
      --ComprovaciÃƒÂ³ dels parÃƒÂ¡metres d'entrada
      IF pntramte IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      IF vgobsiniestro.tramites IS NOT NULL AND
         vgobsiniestro.tramites.count > 0
      THEN
         FOR i IN vgobsiniestro.tramites.first .. vgobsiniestro.tramites.last
         LOOP
            IF vgobsiniestro.tramites.exists(i)
            THEN
               IF vgobsiniestro.tramites(i).ntramte = pntramte
               THEN
                  vnumerr := pac_iax_validaciones_sin.f_movtramte(pnsinies,
                                                                  pntramte,
                                                                  pcesttte,
                                                                  mensajes);

                  IF vnumerr <> 0
                  THEN
                     RAISE e_object_error;
                  END IF;

                  /************** joan
                                 IF pCESTTTE <> 0 THEN
                                    vnerror := pac_siniestros.f_estado_tramitacion(pnsinies, pNTRAMTE, pCESTTTE);
                                    IF vnerror <> 0 THEN
                                       RETURN vnerror;
                                    END IF;
                                 END IF;
                  ***************joan */

                  -- 22108:ASN:23/05/2012 fin
                  IF pnmovtte IS NOT NULL
                  THEN
                     vpasexec := 5;

                     IF vgobsiniestro.tramites(i)
                      .movimientos IS NOT NULL AND
                        vgobsiniestro.tramites(i).movimientos.count > 0
                     THEN
                        vpasexec := 6;

                        FOR j IN vgobsiniestro.tramites(i).movimientos.first .. vgobsiniestro.tramites(i)
                                                                                .movimientos.last
                        LOOP
                           IF vgobsiniestro.tramites(i).movimientos(j)
                            .nmovtte = pnmovtte AND
                              vgobsiniestro.tramites(i).movimientos(j)
                              .ntramte = pntramte
                           THEN
                              -- Si el trobem, el modifiquem
                              vnumerr := pac_md_sin_tramite.f_set_obj_sintramite_mov(pnsinies,
                                                                                     pntramte,
                                                                                     pnmovtte,
                                                                                     pcesttte,
                                                                                     pccauest,
                                                                                     pcunitra,
                                                                                     pctramitad,
                                                                                     pfesttra,
                                                                                     NULL,
                                                                                     NULL,
                                                                                     vgobsiniestro.tramites(i)
                                                                                     .movimientos(j),
                                                                                     mensajes);

                              IF vnumerr <> 0
                              THEN
                                 RAISE e_object_error;
                              END IF;
                           END IF;
                        END LOOP;
                     END IF;
                  ELSE
                     vnmovtra := 0;

                     IF vgobsiniestro.tramites(i).movimientos IS NULL
                     THEN
                        vgobsiniestro.tramites(i).movimientos := t_iax_sin_tramite_mov();
                     ELSIF vgobsiniestro.tramites(i).movimientos.count > 0
                     THEN
                        vnmovtra := NVL(vgobsiniestro.tramites(i).movimientos(vgobsiniestro.tramites(i).movimientos.last)
                                        .nmovtte,
                                        0) + 1;
                     END IF;

                     vpasexec := 7;
                     vgobsiniestro.tramites(i).movimientos.extend;
                     v_index := vgobsiniestro.tramites(i).movimientos.last;
                     vgobsiniestro.tramites(i).movimientos(v_index) := ob_iax_sin_tramite_mov();
                     vnumerr := pac_md_sin_tramite.f_set_obj_sintramite_mov(pnsinies,
                                                                            pntramte,
                                                                            vnmovtra,
                                                                            pcesttte,
                                                                            pccauest,
                                                                            pcunitra,
                                                                            pctramitad,
                                                                            pfesttra,
                                                                            NULL,
                                                                            NULL,
                                                                            vgobsiniestro.tramites(i)
                                                                            .movimientos(v_index),
                                                                            mensajes);

                     IF vnumerr <> 0
                     THEN
                        RAISE e_object_error;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;

      --grabem a taules i tornem a recuperar l'objecte
      vnumerr := pac_md_sin_tramite.f_set_tramites(vgobsiniestro.tramites,
                                                   pnsinies,
                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_sin_tramite.f_get_tramites(pnsinies,
                                                   vgobsiniestro.tramites,
                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_objeto_sinmovtramte;

   /*************************************************************************
      FUNCTION f_post_siniestro
         Acciones automaticas para ejecutar al dar de alta un siniestro
         param in pnsinies  : nÃºmero del siniestro
         return             : codigo error
   *************************************************************************/
   FUNCTION f_post_siniestro(pnsinies sin_siniestro.nsinies%TYPE,
                             mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_post_siniestro';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies:' || pnsinies;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_repetido(pnsinies, mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      vpasexec := 3;
      vnumerr  := pac_md_siniestros.f_post_siniestro(pnsinies, mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      vpasexec := 4;
      vnumerr  := pac_md_siniestros.f_estado_final(pnsinies, mensajes);

      IF vnumerr <> 0
      THEN
         RETURN 1;
      END IF;

      vpasexec := 5;
      COMMIT;
      vpasexec := 6;
      vnumerr  := pac_md_siniestros.f_gestion_asignada(pnsinies, mensajes);
      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_post_siniestro;

   /***********************************************************************
      Recupera la colecciÃ³n de documentos de una tramitacion de siniestros
      param in  pnsinies  : nÃºmero de siniestro
      param in  pntramit  : nÃºmero de tramitaciÃ³n o todos si esta vacio
      param out t_iax_sin_trami_documento :  t_iax_sin_trami_documento
      param out mensajes  : mensajes de error
      return              : 0 OK
                            1 Error
   -- Bug 0022153 - 19/07/2012 - JMF
   ***********************************************************************/
   FUNCTION f_get_sintradoc(pnsinies IN VARCHAR2,
                            pntramit IN NUMBER,
                            t_docume OUT t_iax_sin_trami_documento,
                            mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_sintradoc';
      vparam      VARCHAR2(500) := 'pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vcursor     SYS_REFCURSOR;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      vpasexec := 1;

      IF pnsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;
      vnumerr  := pac_md_siniestros.f_get_sintradoc(pnsinies,
                                                    pntramit,
                                                    t_docume,
                                                    mensajes);
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_sintradoc;

   /***********************************************************************
      Sustituye a f_grabar_siniestro para su uso al inicio del proceso
      (cuando el siniestro esta incompleto) sin mensajes ni asignacion de tramitador
      param out mensajes  : mensajes de error
      return              : 1 -> Todo correcto
                            0 -> Se ha producido un error
   ***********************************************************************/
   FUNCTION f_grabar_sin_primera_vez(pnsinies OUT VARCHAR2,
                                     mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname   VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_grabar_sin_primera_vez';
      vparam        VARCHAR2(500) := 'parÃ¡metros - ';
      vpasexec      NUMBER(5) := 1;
      vnumerr       NUMBER(8) := 0;
      vnsinies      sin_siniestro.nsinies%TYPE;
      vtmotsin      VARCHAR2(1000);
      vtcausin      VARCHAR2(1000);
      vtevento      VARCHAR2(1000);
      vtmsg         VARCHAR2(1000);
      vtramitadores NUMBER;
   BEGIN
      vnumerr  := pac_md_siniestros.f_grabar_siniestro(vgobsiniestro,
                                                       mensajes);
      pnsinies := vgobsiniestro.nsinies;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_grabar_sin_primera_vez;

   -- Ini Bug 23805 - MDS - 03/10/2012

   /*************************************************************************
    FunciÃ³n que indica si alguna de las garantÃ­as contratadas y
    seleccionadas segÃºn pccausin, pcmotsin, pfsinies tiene asistencia.

      phay_asistencia OUT --> 0 : No , 1 : Si

      RETURN  0 : OK
              1 : Error

   *************************************************************************/
   FUNCTION f_hay_asistencia(psseguro        IN NUMBER,
                             pnriesgo        IN NUMBER,
                             pccausin        IN NUMBER,
                             pcmotsin        IN NUMBER,
                             pfsinies        IN DATE,
                             phay_asistencia OUT NUMBER,
                             mensajes        OUT t_iax_mensajes) RETURN NUMBER IS
      vnumerr  NUMBER;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := 'psseguro :' || psseguro || ' pnriesgo :' ||
                                pnriesgo || ' pccausin :' || pccausin ||
                                ' pcmotsin :' || pcmotsin || ' pfsinies :' ||
                                pfsinies;
      vobject  VARCHAR2(200) := 'PAC_MD_siniestros.F_hay_asistencia';
   BEGIN
      vpasexec := 1;

      -- ComprobaciÃ³n de parÃ¡metros
      IF psseguro IS NULL OR
         pnriesgo IS NULL OR
         pccausin IS NULL OR
         pcmotsin IS NULL OR
         pfsinies IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_hay_asistencia(psseguro,
                                                     pnriesgo,
                                                     pccausin,
                                                     pcmotsin,
                                                     pfsinies,
                                                     phay_asistencia,
                                                     mensajes);

      IF phay_asistencia > 0
      THEN
         phay_asistencia := 1;
      END IF;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000005,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         RETURN 1;
   END f_hay_asistencia;

   -- Fin Bug 23805 - MDS - 03/10/2012

   /*************************************************************************
      Devuelve los siniestros que cumplan con el criterio de selecciÃ³n
      param in pnpoliza     : nÃºmero de pÃ³liza
      param in pncert       : nÃºmero de cerificado por defecto 0
      param in pnsinies     : nÃºmero del siniestro
      param in cestsin      : cÃ³digo situaciÃ³n del siniestro
      param in pnnumide     : nÃºmero identidad persona
      param in psnip        : nÃºmero identificador externo
      param in pbuscar      : nombre+apellidos a buscar de la persona
      param in ptipopersona : tipo de persona
                               1 tomador
                               2 asegurado
      param out mensajes    : mensajes de error
      return                : ref cursor

      Bug 23740/123618 - 08/10/2012 - AMC
   *************************************************************************/
   FUNCTION f_consultasini2(pcramo    IN NUMBER,
                            psproduc  IN NUMBER,
                            pnpoliza  IN NUMBER,
                            pncertif  IN NUMBER DEFAULT -1,
                            pnsinies  IN VARCHAR2,
                            pcestsin  IN NUMBER,
                            pnnumide  IN VARCHAR2,
                            psnip     IN VARCHAR2,
                            pbuscar   IN VARCHAR2,
                            ptipopers IN NUMBER,
                            pnsubest  IN NUMBER,
                            pnsincia  IN VARCHAR2,
                            pfalta    IN DATE,  --IAXIS-2169 AABC Adicion fecha de alta modificacion de consulta
                            pccompani IN NUMBER,
                            pnpresin  IN VARCHAR2,
                            pcsiglas  IN NUMBER,
                            ptnomvia  IN VARCHAR2,
                            pnnumvia  IN NUMBER,
                            ptcomple  IN VARCHAR2,
                            pcpostal  IN VARCHAR2,
                            pcpoblac  IN NUMBER,
                            pcprovin  IN NUMBER,
                            pfgisx    IN FLOAT,
                            pfgisy    IN FLOAT,
                            pfgisz    IN FLOAT,
                            ptdescri  IN VARCHAR2,
                            pctipmat  IN NUMBER,
                            pcmatric  IN VARCHAR2,
                            ptiporisc IN NUMBER,
                            pcpolcia  IN VARCHAR2,
                            pcactivi  IN NUMBER,
                            pfiltro   IN NUMBER,
                            pcagente  IN NUMBER,
                            ptrefext  IN VARCHAR2, --  16/06/2015  CJMR  Bug: 0036232/207513
                            pctipref  IN NUMBER, --  16/06/2015  CJMR  Bug: 0036232/207513
                            ptdescrie IN VARCHAR2, -- BUG CONF_309 - 10/09/2016 - JAEG
          pncontrato IN VARCHAR2 DEFAULT NULL,
                            mensajes  OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.ConsultaSini2';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnpoliza: ' || pnpoliza ||
                                   ' - pncertif: ' || pncertif ||
                                   ' - pnsinies: ' || pnsinies ||
                                   ' - pcestsin: ' || pcestsin ||
                                   ' - pnnumide: ' || pnnumide ||
                                   ' - psnip: ' || psnip || ' - pbuscar: ' ||
                                   pbuscar || ' - ptipopers: ' || ptipopers ||
                                   ' - pnsubest:' || pnsubest ||
                                   ' - pcramo: ' || pcramo ||
                                   ' - psproduc:' || psproduc ||
                                   '- pnsincia: ' || pnsincia ||
                                   '- pfalta  : ' || pfalta ||      --IAXIS-2169 AABC Adicion fecha de alta modificacion de consulta
                                   '- pccompani: ' || pccompani ||
                                   '- pnpresin: ' || pnpresin ||
                                   '- pcsiglas: ' || pcsiglas ||
                                   '- ptnomvia: ' || ptnomvia ||
                                   '- pnnumvia: ' || pnnumvia ||
                                   '- ptcomple: ' || ptcomple ||
                                   '- pcpostal: ' || pcpostal ||
                                   '- pcpoblac: ' || pcpoblac ||
                                   '- pcprovin: ' || pcprovin ||
                                   '- pfgisx: ' || pfgisx || '- pfgisy: ' ||
                                   pfgisy || '- pfgisz: ' || pfgisz ||
                                   '- ptdescri: ' || ptdescri ||
                                   '- pctipmat: ' || pctipmat ||
                                   '- pcmatric: ' || pcmatric ||
                                   '- ptiporisc: ' || ptiporisc ||
                                   '- pcpolcia : ' || pcpolcia ||
                                   '- pcactivi : ' || pcactivi ||
                                   ' pcagente=' || pcagente ||
                                   '- ptrefext: ' || ptrefext ||
                                   '- pctipref: ' || pctipref; --  16/06/2015  CJMR  Bug: 0036232/207513
      vcursor     SYS_REFCURSOR;
   BEGIN
      vcursor := pac_md_siniestros.f_consultasini2(pcramo,
                                                   psproduc,
                                                   pnpoliza,
                                                   pncertif,
                                                   pnsinies,
                                                   pcestsin,
                                                   pnnumide,
                                                   psnip,
                                                   pbuscar,
                                                   ptipopers,
                                                   pnsubest,
                                                   pnsincia,
                                                   pfalta,    --IAXIS-2169 AABC Adicion fecha de alta modificacion de consulta
                                                   pccompani,
                                                   pnpresin,
                                                   pcsiglas,
                                                   ptnomvia,
                                                   pnnumvia,
                                                   ptcomple,
                                                   pcpostal,
                                                   pcpoblac,
                                                   pcprovin,
                                                   pfgisx,
                                                   pfgisy,
                                                   pfgisz,
                                                   ptdescri,
                                                   pctipmat,
                                                   pcmatric,
                                                   ptiporisc,
                                                   pcpolcia,
                                                   pcactivi,
                                                   pfiltro,
                                                   pcagente,
                                                   ptrefext,
                                                   pctipref, --  16/06/2015  CJMR  Bug: 0036232/207513
                                                   ptdescrie, -- BUG CONF_309 - 10/09/2016 - JAEG
               pncontrato,
                                                   mensajes);
      RETURN vcursor;
   EXCEPTION
      WHEN OTHERS THEN
         IF vcursor%ISOPEN
         THEN
            CLOSE vcursor;
         END IF;

         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           1,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN vcursor;
   END f_consultasini2;

   /***********************************************************************
      FUNCTION f_mensajes_axissin049
          Pregunta si realmente quieren guardar en una variable global de la capa IAX los valores del objeto ob_iax_siniestros.tramitacion.juzgado
            nsinies        VARCHAR2(14),   --NÃºmero Siniestro
            ntramit        NUMBER(3),      --NÃºmero TramitaciÃ³n Siniestro
            nlinjuz        NUMBER(6),      --NÃºmero LÃ­nea
         ...
         ...
         ...

         return               : 0 -> Todo correcto
                                1 -> Se ha producido un error
      Bug 25204 - 19/12/2012 - NSS
   ***********************************************************************/
   FUNCTION f_mensajes_axissin049(pnsinies  IN VARCHAR2,
                                  pntramit  IN NUMBER,
                                  pnlinjuz  IN NUMBER,
                                  pcorgjud  IN NUMBER,
                                  pnorgjud  IN VARCHAR2,
                                  ptrefjud  IN VARCHAR2,
                                  pcsiglas  IN NUMBER,
                                  ptnomvia  IN VARCHAR2,
                                  pnnumvia  IN NUMBER,
                                  ptcomple  IN VARCHAR2,
                                  ptdirec   IN VARCHAR2,
                                  pcpais    IN NUMBER,
                                  pcprovin  IN NUMBER,
                                  pcpoblac  IN NUMBER,
                                  pcpostal  IN VARCHAR2,
                                  ptasunto  IN VARCHAR2,
                                  pnclasede IN NUMBER,
                                  pntipopro IN NUMBER,
                                  pnprocedi IN VARCHAR2,
                                  pfnotiase IN DATE,
                                  pfrecpdem IN DATE,
                                  pfnoticia IN DATE,
                                  pfcontase IN DATE,
                                  pfcontcia IN DATE,
                                  pfaudprev IN DATE,
                                  pfjuicio  IN DATE,
                                  pcmonjuz  IN VARCHAR2,
                                  pcpleito  IN NUMBER,
                                  pipleito  IN NUMBER,
                                  piallana  IN NUMBER,
                                  pisentenc IN NUMBER,
                                  pisentcap IN NUMBER,
                                  pisentind IN NUMBER,
                                  pisentcos IN NUMBER,
                                  pisentint IN NUMBER,
                                  pisentotr IN NUMBER,
                                  pcargudef IN NUMBER,
                                  pcresplei IN NUMBER,
                                  pcapelant IN NUMBER,
                                  pthipoase IN VARCHAR2,
                                  pthipoter IN VARCHAR2,
                                  pttipresp IN VARCHAR2,
                                  pcopercob IN NUMBER,
                                  ptreasmed IN VARCHAR2,
                                  pcestproc IN NUMBER,
                                  pcetaproc IN NUMBER,
                                  ptconcjur IN VARCHAR2,
                                  ptestrdef IN VARCHAR2,
                                  ptrecomen IN VARCHAR2,
                                  ptobserv  IN VARCHAR2,
                                  pfcancel  IN DATE,
                                  otexto    OUT VARCHAR2,
                                  mensajes  OUT t_iax_mensajes) RETURN NUMBER IS
      numerr NUMBER := 0;
   BEGIN
      numerr := pac_md_siniestros.f_mensajes_axissin049(pnsinies,
                                                        pntramit,
                                                        pnlinjuz,
                                                        pcorgjud,
                                                        pnorgjud,
                                                        ptrefjud,
                                                        pcsiglas,
                                                        ptnomvia,
                                                        pnnumvia,
                                                        ptcomple,
                                                        ptdirec,
                                                        pcpais,
                                                        pcprovin,
                                                        pcpoblac,
                                                        pcpostal,
                                                        ptasunto,
                                                        pnclasede,
                                                        pntipopro,
                                                        pnprocedi,
                                                        pfnotiase,
                                                        pfrecpdem,
                                                        pfnoticia,
                                                        pfcontase,
                                                        pfcontcia,
                                                        pfaudprev,
                                                        pfjuicio,
                                                        pcmonjuz,
                                                        pcpleito,
                                                        pipleito,
                                                        piallana,
                                                        pisentenc,
                                                        pisentcap,
                                                        pisentind,
                                                        pisentcos,
                                                        pisentint,
                                                        pisentotr,
                                                        pcargudef,
                                                        pcresplei,
                                                        pcapelant,
                                                        pthipoase,
                                                        pthipoter,
                                                        pttipresp,
                                                        pcopercob,
                                                        ptreasmed,
                                                        pcestproc,
                                                        pcetaproc,
                                                        ptconcjur,
                                                        ptestrdef,
                                                        ptrecomen,
                                                        ptobserv,
                                                        pfcancel,
                                                        otexto,
                                                        mensajes);
      RETURN numerr;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           'PAC_IAX_SINIESTROS.f_mensajes_axissin049',
                                           1000001,
                                           1,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_mensajes_axissin049;

   FUNCTION f_get_agente_npol(psseguro IN NUMBER,
                              pcagente OUT NUMBER,
                              mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      pp          NUMBER := 0;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_agente_npol';
   BEGIN
      pp := pac_md_siniestros.f_get_agente_npol(psseguro,
                                                pcagente,
                                                mensajes);
      RETURN pp;
   END f_get_agente_npol;

   -- BUG 25800:NSS:21/02/2013
   FUNCTION f_get_preg_siniestro(psproduc IN NUMBER,
                                 pcactivi IN NUMBER,
                                 pcgarant IN VARCHAR2,
                                 pccausin IN NUMBER, --27354:NSS:18/06/2013
                                 pcmotsin IN NUMBER, --27354:NSS:18/06/2013
                                 mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_preg_siniestro ';
   BEGIN
      cur := pac_md_siniestros.f_get_preg_siniestro(psproduc,
                                                    pcactivi,
                                                    pcgarant,
                                                    pccausin,
                                                    pcmotsin, --27354:NSS:18/06/2013
                                                    mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_preg_siniestro;

   FUNCTION f_get_resp_siniestro(pcpregun IN VARCHAR2,
                                 mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_resp_siniestro ';
   BEGIN
      cur := pac_md_siniestros.f_get_resp_siniestro(pcpregun, mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_resp_siniestro;

   FUNCTION f_set_obj_preguntas(pnsinies   IN NUMBER,
                                psproduc   IN NUMBER,
                                pcactivi   IN NUMBER,
                                ppreguntas IN VARCHAR2,
                                mensajes   OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname       VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_obj_preguntas';
      vparam            VARCHAR2(4000) := 's=' || pnsinies || ' preguntas=' ||
                                          ppreguntas;
      vpasexec          NUMBER(5) := 1;
      vnumerr           NUMBER(8) := 0;
      lv_appendstring   VARCHAR2(4000);
      lv_resultstring_r VARCHAR2(4000);
      lv_resultstring   VARCHAR2(4000);
      lv_count          NUMBER;
      lv_count_r        NUMBER;
      vcpregun          NUMBER;
      vtpregun          VARCHAR2(4000);
      vrespuestas       VARCHAR2(4000);
      vcrespue          NUMBER;
      vtrespue          VARCHAR2(4000);
      vresto            VARCHAR2(4000);
      t_preguntas       t_iax_sin_preguntas := t_iax_sin_preguntas();
      vopregunta        ob_iax_sin_preguntas;
      t_respuestas      t_iax_sin_respuestas := t_iax_sin_respuestas();
      vorespuesta       ob_iax_sin_respuestas;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR
         ppreguntas IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 3;

      IF ppreguntas IS NOT NULL
      THEN
         lv_appendstring := ppreguntas;

         BEGIN
            LOOP
               EXIT WHEN NVL(INSTR(lv_appendstring, ','), -99) < 0;
               lv_resultstring := SUBSTR(lv_appendstring,
                                         1,
                                         (INSTR(lv_appendstring, ',') - 1));
               lv_count        := INSTR(lv_appendstring, ',') + 1;
               lv_appendstring := SUBSTR(lv_appendstring,
                                         lv_count,
                                         length(lv_appendstring));
               vpasexec        := 2;

               SELECT to_number(SUBSTR(lv_resultstring,
                                       1,
                                       INSTR(lv_resultstring, '#') - 1))
                 INTO vcpregun
                 FROM dual;

               vpasexec := 3;

               SELECT SUBSTR(lv_resultstring,
                             INSTR(lv_resultstring, '#') + 1)
                 INTO vresto
                 FROM dual;

               vpasexec := 4;

               SELECT SUBSTR(vresto, 1, INSTR(vresto, '#') - 1)
                 INTO vtpregun
                 FROM dual;

               vpasexec := 5;

               SELECT SUBSTR(vresto, INSTR(vresto, '#') + 1)
                 INTO vresto
                 FROM dual;

               vpasexec := 6;

               SELECT SUBSTR(vresto, 1, INSTR(vresto, '#') - 1)
                 INTO vrespuestas
                 FROM dual;

               IF vrespuestas <> '_/'
               THEN
                  t_respuestas := t_iax_sin_respuestas();

                  LOOP
                     EXIT WHEN NVL(INSTR(vrespuestas, '/'), -99) < 0;
                     lv_resultstring_r := SUBSTR(vrespuestas,
                                                 1,
                                                 (INSTR(vrespuestas, '/') - 1));
                     lv_count_r        := INSTR(vrespuestas, '/') + 1;
                     vrespuestas       := SUBSTR(vrespuestas,
                                                 lv_count_r,
                                                 length(vrespuestas));
                     vpasexec          := 7;

                     SELECT to_number(SUBSTR(lv_resultstring_r,
                                             1,
                                             INSTR(lv_resultstring_r, '*') - 1),
                                      '9G999D99')
                       INTO vcrespue
                       FROM dual;

                     IF (SUBSTR(lv_resultstring_r,
                                1,
                                INSTR(lv_resultstring_r, '*') - 1) LIKE
                        '%.%')
                     THEN
                        vcrespue := vcrespue / 10;
                     END IF;

                     vpasexec := 8;

                     SELECT SUBSTR(lv_resultstring_r,
                                   INSTR(lv_resultstring_r, '*') + 1)
                       INTO vresto
                       FROM dual;

                     vpasexec := 9;

                     SELECT SUBSTR(vresto, 1, INSTR(vresto, '*') - 1)
                       INTO vtrespue
                       FROM dual;

                     vpasexec            := 10;
                     vorespuesta         := ob_iax_sin_respuestas();
                     vorespuesta.crespue := vcrespue;
                     vorespuesta.trespue := vtrespue;
                     t_respuestas.extend;
                     t_respuestas(t_respuestas.last) := vorespuesta;
                  END LOOP;
               END IF;

               vopregunta             := ob_iax_sin_preguntas();
               vopregunta.nsinies     := pnsinies;
               vopregunta.cpregun     := vcpregun;
               vopregunta.tpregun     := vtpregun;
               vopregunta.trespuestas := t_respuestas;
               t_preguntas.extend;
               t_preguntas(t_preguntas.last) := vopregunta;
            END LOOP;
         END;
      END IF;

      vgobsiniestro.preguntas := t_preguntas;
      vnumerr                 := pac_md_siniestros.f_ins_preguntas(vgobsiniestro.preguntas,
                                                                   psproduc,
                                                                   pcactivi,
                                                                   mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_obj_preguntas;

   -- FI BUG 25800:NSS:21/02/2013

   -- BUG 25607:NSS:07/05/2013
   FUNCTION f_set_obj_garantias(pnsinies  IN VARCHAR2,
                                pcgarant  IN NUMBER,
                                picapital IN NUMBER,
                                ptgarant  IN VARCHAR2,
                                mensajes  OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_set_obj_garantias';
      vparam      VARCHAR2(4000) := 's=' || pnsinies || ' pcgarant=' ||
                                    pcgarant || ' picapital=' || picapital;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vogarantia  ob_iax_garansini;
   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pcgarant IS NULL OR
         picapital IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec            := 3;
      vogarantia          := ob_iax_garansini();
      vogarantia.nsinies  := pnsinies;
      vogarantia.cgarant  := pcgarant;
      vogarantia.icaprisc := picapital;
      vogarantia.tgarant  := ptgarant;

      IF vgobsiniestro.garantias IS NULL
      THEN
         vgobsiniestro.garantias := t_iax_garansini();
      END IF;

      vgobsiniestro.garantias.extend;
      vgobsiniestro.garantias(vgobsiniestro.garantias.last) := vogarantia;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_set_obj_garantias;

   -- FI BUG 25607:NSS:07/05/2013
   FUNCTION f_get_lstlocaliza(pnsinies IN sin_siniestro.nsinies%TYPE,
                              pntramit IN NUMBER,
                              mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_lstlocaliza ';
   BEGIN
      cur := pac_md_siniestros.f_get_lstlocaliza(pnsinies,
                                                 pntramit,
                                                 mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_lstlocaliza;

   FUNCTION f_get_localiza(pnsinies IN sin_siniestro.nsinies%TYPE,
                           pntramit IN NUMBER,
                           pnlocali IN NUMBER,
                           mensajes OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_localiza ';
   BEGIN
      cur := pac_md_siniestros.f_get_localiza(pnsinies,
                                              pntramit,
                                              pnlocali,
                                              mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_localiza;

   FUNCTION f_get_vehiculo_asegurado(psseguro IN sin_siniestro.sseguro%TYPE,
                                     pnriesgo IN sin_siniestro.sseguro%TYPE,
                                     mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_vehiculo_asegurado ';
   BEGIN
      cur := pac_md_siniestros.f_get_vehiculo_asegurado(psseguro,
                                                        pnriesgo,
                                                        mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_vehiculo_asegurado;

   --Ini Bug 24708:NSS:10/10/2013
   FUNCTION f_get_lstoficinas(pcbanco  IN NUMBER,
                              pcofici  IN NUMBER,
                              ptofici  IN VARCHAR2,
                              mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_lstoficinas ';
   BEGIN
      cur := pac_md_siniestros.f_get_lstoficinas(pcbanco,
                                                 pcofici,
                                                 ptofici,
                                                 mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_lstoficinas;

   FUNCTION f_get_beneficiario_designado(pnsinies IN VARCHAR2,
                                         psseguro IN NUMBER,
                                         mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_get_beneficiario_designado ';
   BEGIN
      cur := pac_md_siniestros.f_get_beneficiario_designado(pnsinies,
                                                            psseguro,
                                                            mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_beneficiario_designado;

   --Fin Bug 24708:NSS:10/10/2013

   --Ini Bug 28506:NSS:16/10/2013
   FUNCTION f_get_garantias_dependientes(pgarantias IN VARCHAR2,
                                         mensajes   OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_get_garantias_dependientes ';
   BEGIN
      cur := pac_md_siniestros.f_get_garantias_dependientes(pgarantias,
                                                            mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_garantias_dependientes;

   --Fin Bug 28506:NSS:16/10/2013

   --Ini Bug 28506:NSS:28/10/2013
   FUNCTION f_get_inf_reaseguro(pnsinies IN VARCHAR2,
                                mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_get_inf_reaseguro';
   BEGIN
      cur := pac_md_siniestros.f_get_inf_reaseguro(pnsinies, mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_inf_reaseguro;

   --Fin Bug 28506:NSS:28/10/2013

   --Ini Bug 29177/160128:NSS:13/01/2014
   FUNCTION f_ins_pago_contrato(psidepag  IN NUMBER,
                                pcdp      IN VARCHAR2,
                                ppospres  IN VARCHAR2,
                                pcrp      IN VARCHAR2,
                                pposcrp   IN VARCHAR2,
                                pcontrato IN VARCHAR2,
                                pcgestor  IN VARCHAR2,
                                mensajes  OUT t_iax_mensajes) RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_ins_pago_contrato';
      vparam      VARCHAR2(4000) := 'psidepag=' || psidepag || ' pcdp=' || pcdp ||
                                    ' ppospres=' || ppospres || ' pcrp=' || pcrp ||
                                    ' pposcrp=' || pposcrp || ' pcontrato=' ||
                                    pcontrato || ' pcgestor=' || pcgestor;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vogarantia  ob_iax_garansini;
   BEGIN
      vnumerr := pac_md_siniestros.f_ins_pago_contrato(psidepag,
                                                       pcdp,
                                                       ppospres,
                                                       pcrp,
                                                       pposcrp,
                                                       pcontrato,
                                                       pcgestor,
                                                       mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_ins_pago_contrato;

   --Fin Bug 29177/160128:NSS:13/01/2014

   -- BUG 28830:NSS:06/11/2013 - CompensaciÃ³n de siniestros contra cartera.
   FUNCTION f_valida_compensacion(psseguro IN seguros.sseguro%TYPE,
                                  pnriesgo IN sin_siniestro.nriesgo%TYPE,
                                  pnsinies IN sin_siniestro.nsinies%TYPE,
                                  psidepag IN sin_tramita_pago.sidepag%TYPE,
                                  ptlitera OUT axis_literales.tlitera%TYPE,
                                  mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      /*********************************************************************************************************************
       Validar si hay recibos pendientes, para que posteriormente se compensen dividendo el pago de siniestro en uno por cada recibo
      *********************************************************************************************************************/
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_valida_compensacion';
      vparam         VARCHAR2(4000) := 'psseguro:' || psseguro ||
                                       ' pnriesgo:' || pnriesgo ||
                                       ' pnsinies: ' || pnsinies ||
                                       ' psidepag:' || psidepag;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      vtotal_cartera NUMBER := 0;
      vexisten       NUMBER := 0;
   BEGIN
      vnumerr := pac_md_sin_compensaciones.f_valida_siniestro_muerte(pnsinies,
                                                                     vexisten,
                                                                     mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      IF NVL(vexisten, 0) > 0
      THEN
         vnumerr := pac_md_siniestros.f_valida_exist_res_noindem(psidepag,
                                                                 vexisten,
                                                                 mensajes);

         IF vnumerr <> 0
         THEN
            pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
            RAISE e_object_error;
         END IF;

         IF NVL(vexisten, 0) = 0
         THEN
            vnumerr := pac_md_siniestros.f_valida_exist_recib_remesados(psseguro,
                                                                        vexisten,
                                                                        mensajes);

            IF vnumerr <> 0
            THEN
               pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
               RAISE e_object_error;
            END IF;

            IF NVL(vexisten, 0) = 0
            THEN
               /** BÃºsqueda de recibos pendientes **/
               vnumerr := pac_md_siniestros.f_get_cartera_pendiente(psseguro,
                                                                    pnriesgo,
                                                                    pnsinies,
                                                                    psidepag,
                                                                    vtotal_cartera,
                                                                    mensajes);

               IF vnumerr <> 0
               THEN
                  RAISE e_object_error;
               END IF;
            END IF;
         END IF;

         IF vtotal_cartera > 0
         THEN
            ptlitera := f_axis_literales(9906504,
                                         pac_md_common.f_get_cxtidioma());
         END IF;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_valida_compensacion;

   FUNCTION f_compensa_cartera(psseguro IN seguros.sseguro%TYPE,
                               pnriesgo IN sin_siniestro.nriesgo%TYPE,
                               pnsinies IN sin_siniestro.nsinies%TYPE,
                               psidepag IN sin_tramita_pago.sidepag%TYPE,
                               mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      /*********************************************************************************************************************
       Si hay recibos pendientes, se compensan dividendo el pago de siniestro en uno por cada recibo
      *********************************************************************************************************************/
      vobjectname    VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_compensa_cartera';
      vparam         VARCHAR2(4000) := 'psseguro:' || psseguro ||
                                       ' pnriesgo:' || pnriesgo ||
                                       ' pnsinies: ' || pnsinies ||
                                       ' psidepag:' || psidepag;
      vpasexec       NUMBER(5) := 1;
      vnumerr        NUMBER(8) := 0;
      vtotal_cartera NUMBER := 0;
   BEGIN
      /** BÃºsqueda de recibos pendientes **/
      vnumerr := pac_md_siniestros.f_get_cartera_pendiente(psseguro,
                                                           pnriesgo,
                                                           pnsinies,
                                                           psidepag,
                                                           vtotal_cartera,
                                                           mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      vpasexec := 2;

      IF vtotal_cartera > 0
      THEN
         /** Se compensan los recibos pendientes con el importe del pago inicial.
         Se devuelve lo que quede de ese importe una vez pagados los recibos en la variable vresto_pago. **/
         vnumerr := pac_md_siniestros.f_compensa_recibos_gar(psseguro,
                                                             pnriesgo,
                                                             pnsinies,
                                                             psidepag,
                                                             mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         /** EnvÃ­o a SAP de cada uno de los pagos registrados en SIN_RECIBOS_COMPENSADOS **/
         vnumerr := pac_md_siniestros.f_cobpag_compensados(pnsinies,
                                                           psidepag,
                                                           mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         vpasexec := 6;
         COMMIT;
         vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                          vgobsiniestro.tramitaciones,
                                                          mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
         -- BUG 11929 - 15/01/2010 - XPL - AGA - Bajar a base de datos la alta completa de siniestros FI
      END IF;

      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_compensa_cartera;

   -- FIN BUG 28830:NSS:06/11/2013 - CompensaciÃ³n de siniestros contra cartera.

   -- BUG 30342:DEV:12/03/2014 - Modulo de Autorizaciones para pagos de Siniestros
   FUNCTION f_get_lst_pagos(pcramo   IN NUMBER,
                            psproduc IN NUMBER,
                            pnsinies IN VARCHAR2,
                            psidepag IN NUMBER,
                            pcconcep IN NUMBER,
                            pimpmin  IN NUMBER,
                            pcestval IN NUMBER,
                            pcespag  IN NUMBER,
                            psperson IN NUMBER,
                            mensajes OUT t_iax_mensajes) RETURN SYS_REFCURSOR IS
      /*************************************************************************
          Devuelve el servicio seleccionado o la lista, si es un servicio empaquetado
      *************************************************************************/
      cur         SYS_REFCURSOR;
      vquery      VARCHAR2(100);
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.F_GET_LST_PAGOS';
      vparam      VARCHAR2(500) := 'pcramo=' || pcramo || ' psproduc=' ||
                                   psproduc || ' pnsinies=' || pnsinies ||
                                   ' psidepag=' || psidepag || ' pcconcep=' ||
                                   pcconcep || ' pimpmin=' || pimpmin ||
                                   ' pcestval' || pcestval || ' pcespag=' ||
                                   pcespag || ' psperson=' || psperson;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vnerror     NUMBER;
   BEGIN
      cur := pac_md_siniestros.f_get_lst_pagos(pcramo,
                                               psproduc,
                                               pnsinies,
                                               psidepag,
                                               pcconcep,
                                               pimpmin,
                                               pcestval,
                                               pcespag,
                                               psperson,
                                               mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode     => SQLCODE,
                                           psqerrm     => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_lst_pagos;

   FUNCTION f_tratar_pagos(ptblpago  IN VARCHAR2,
                           pcestval2 IN NUMBER,
                           pcestpag2 IN NUMBER,
                           pcestpag1 IN NUMBER,
                           mensajes  OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_tratar_pagos';
      vparam      VARCHAR2(500) := 'ptblpago=' || ptblpago || ' pcestval2=' ||
                                   pcestval2 || ' pcestpag2=' || pcestpag2 ||
                                   ' pcestpag1=' || pcestpag1;
      vnerror     NUMBER;
   BEGIN
      IF pcestpag2 IS NULL OR
         pcestval2 IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;
      vnumerr  := pac_md_siniestros.f_tratar_pagos(ptblpago,
                                                   pcestval2,
                                                   pcestpag2,
                                                   pcestpag1,
                                                   mensajes);
      vpasexec := 3;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           9906620,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_tratar_pagos;

   -- fin BUG 30342:DEV:12/03/2014 - Modulo de Autorizaciones para pagos de Siniestros

   -- BUG 30935:NSS:10/04/2014 - POSPG500-Control de alta de siniestros duplicados segÃºn garantÃ­a
   FUNCTION f_inicializa_garantias(mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_inicializa_garantias';
   BEGIN
      vgobsiniestro.garantias := t_iax_garansini();
      vpasexec                := 2;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           9906620,
                                           vpasexec,
                                           '');
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           '',
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_inicializa_garantias;

   -- FIN BUG 30935:NSS:10/04/2014 - POSPG500-Control de alta de siniestros duplicados segÃºn garantÃ­a

   -- BUG 31040:NSS:15/04/2014 -
   FUNCTION f_get_tomadores(psseguro IN NUMBER,
                            mensajes OUT t_iax_mensajes)
      RETURN t_iax_tomadores IS
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_get_tomadores';
      vparam      VARCHAR2(500) := 'psseguro=' || psseguro;
      vnerror     NUMBER;
      vtomadores  t_iax_tomadores;
      vcertif0    NUMBER;
   BEGIN
      IF psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      IF pac_parametros.f_parempresa_n(pac_md_common.f_get_cxtempresa,
                                       'DESTI_TOM_CERT0') = 1
      THEN
         vpasexec := 2;
         vnumerr  := pac_md_siniestros.f_get_certif_0(psseguro,
                                                      vcertif0,
                                                      mensajes);
         vpasexec := 3;

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;

         IF vcertif0 IS NOT NULL
         THEN
            vtomadores := pac_iax_anulaciones.f_get_tomadores(vcertif0,
                                                              mensajes);
         ELSE
            vtomadores := pac_iax_anulaciones.f_get_tomadores(psseguro,
                                                              mensajes);
         END IF;

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      ELSE
         vtomadores := pac_iax_anulaciones.f_get_tomadores(psseguro,
                                                           mensajes);

         IF vnumerr <> 0
         THEN
            RAISE e_object_error;
         END IF;
      END IF;

      RETURN vtomadores;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           9906620,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN NULL;
   END f_get_tomadores;

   -- FIN BUG 31040:NSS:15/04/2014
   /***********************************************************************
     FUNCTION f_set_campo_plantilla:
      Cambia el estado de un siniestro
      param in  pnsinies   : NÃºmero Siniestro
      param in pcestsin    : codi estat sinistre
      param in pccauest    : codi causa estat sinistre
      param in pcunitra    : codi unitat tramitaciÃ³
      param in pctramitad  : codi tramitador
      param in pcsubtra    : codi subestat tramitaciÃ³
      param  out  mensajes : Mensajes de error
      return               : 0 -> Tot correcte
                             1 -> S'ha produit un error
      31/11/2014   FRC                 Sinistres.
   ***********************************************************************/
   FUNCTION f_set_campo_plantilla(pnsinies IN VARCHAR2,
                                  pttipo   IN VARCHAR2,
                                  psproduc IN NUMBER,
                                  pndocume IN VARCHAR2,
                                  pccampo  IN VARCHAR2,
                                  ptcampo  IN VARCHAR2,
                                  mensajes OUT t_iax_mensajes) RETURN NUMBER IS
      vobject   VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_set_campo_plantilla';
      vnumerr   NUMBER := 0;
      vtraza    NUMBER := 1;
      vccodplan VARCHAR2(200);
      vparam    VARCHAR2(1000) := 'pnsinies = ' || pnsinies || ' pttipo: ' ||
                                  pttipo || ' pndocume: ' || pndocume ||
                                  ' pccampo: ' || pccampo || ' ptcampo: ' ||
                                  ptcampo || ' psproduc: ' || psproduc;
      vpasexec  NUMBER := 1;
   BEGIN
      IF psproduc IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      SELECT p.ccodplan
        INTO vccodplan
        FROM cfg_plantillas_tipos f,
             prod_plant_cab       p,
             sin_plantillas       s
       WHERE f.ttipo = pttipo
         AND p.sproduc = psproduc
         AND p.ctipo = f.ctipo
         AND s.ccodplan = p.ccodplan
         AND s.ccampo = pccampo;

      vpasexec := 3;
      vnumerr  := pac_md_siniestros.f_set_campo_plantilla(pnsinies,
                                                          vccodplan,
                                                          pndocume,
                                                          pccampo,
                                                          ptcampo,
                                                          mensajes);

      IF vnumerr <> 0
      THEN
         pac_iobj_mensajes.crea_nuevo_mensaje(mensajes, 1, vnumerr);
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN vnumerr;
      WHEN no_data_found THEN
         -- BUG 41416.05/04/29016.JAJG
         RETURN 0;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_set_campo_plantilla;

   /***********************************************************************
     f_comprobar_necesidad_impresion
      Comprueba documentos a imprimir
      param in  sproduc   : producto.
      param  out  mensajes : Mensajes de error
      return               : Numero de documentos.
      26/11/2014  FRC .
   ***********************************************************************/
   FUNCTION f_comprobar_impresion(psproduc IN NUMBER,
                                  pttipo   IN cfg_plantillas_tipos.ttipo%TYPE)
      RETURN NUMBER IS
      vobject VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_comprobar_impresion';
      vparam  VARCHAR2(200) := 'psproduc = ' || psproduc || ', pttipo= ' ||
                               pttipo;
      v_cont  NUMBER := 0;
      vtraza  NUMBER := 1;
   BEGIN
      SELECT COUNT(p.ccodplan)
        INTO v_cont
        FROM prod_plant_cab       p,
             cfg_plantillas_tipos c
       WHERE p.sproduc = psproduc
         AND p.ctipo = c.ctipo
         AND c.ttipo = pttipo;

      RETURN v_cont;
   EXCEPTION
      WHEN OTHERS THEN
         p_tab_error(f_sysdate,
                     f_user,
                     vobject,
                     vtraza,
                     vparam,
                     'SQLERROR: ' || SQLCODE || ' - ' || SQLERRM);
         RETURN NULL;
   END f_comprobar_impresion;

   /***********************************************************************
     FUNCTION F_GET_DOCUMENTACION_PENDIENTE:
      Obtiene una lista con los nombres de los documentos pendientes de recibir (AXISSIN061)
      param in pnsinies   : NÃºmero Siniestro
      param in pntramit    : codi subestat tramitaciÃ³
      param  out  ptlisdoc : Lista de documentos
      param  out  mensajes : Mensajes de error
      return               : 0 -> Tot correcte
                             1 -> S'ha produit un error
   ***********************************************************************/
   FUNCTION f_get_documentacion_pendiente(pnsinies IN sin_siniestro.nsinies%TYPE,
                                          pntramit IN sin_tramitacion.ntramit%TYPE,
                                          ptlisdoc OUT VARCHAR2,
                                          mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_get_documentacion_pendiente';
      vparam   VARCHAR2(1000) := 'pnsinies = ' || pnsinies || ' pntramit: ' ||
                                 pntramit;
      vnumerr  NUMBER := 0;
      vpasexec NUMBER := 1;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_get_documentacion_pendiente(pnsinies,
                                                                 pntramit,
                                                                 ptlisdoc,
                                                                 mensajes);

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN vnumerr;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_get_documentacion_pendiente;

   FUNCTION ff_hay_lista_innominados(psproduc IN productos.sproduc%TYPE,
                                     psseguro IN seguros.sseguro%TYPE,
                                     pnriesgo IN riesgos.nriesgo%TYPE,
                                     pnasegur OUT NUMBER,
                                     mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.ff_hay_lista_innominados';
      vparam   VARCHAR2(1000) := 'sproduc = ' || psproduc || ' sseguro: ' ||
                                 psseguro || ' nriesgo: ' || pnriesgo;
      vnumerr  NUMBER;
      vpasexec NUMBER := 1;
   BEGIN
      IF psproduc IS NULL OR
         psseguro IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_hay_lista_innominados(psproduc,
                                                           psseguro,
                                                           pnriesgo,
                                                           pnasegur,
                                                           mensajes);

      IF vnumerr > 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN vnumerr;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END ff_hay_lista_innominados;


   FUNCTION f_del_sin_trami_doc(pnsinies IN sin_siniestro.nsinies%TYPE,
                                pntramit IN sin_tramitacion.ntramit%TYPE,
                                pndocume IN NUMBER,
                                mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS

      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_del_sin_trami_doc';
      vparam   VARCHAR2(1000) := 'pnsinies = ' || pnsinies || ' pntramit: ' ||
                                 pntramit || ' pndocume: ' || pndocume ;
      vnumerr  NUMBER := 0;
      vpasexec NUMBER := 1;
   BEGIN
      IF pnsinies IS NULL OR
         pntramit IS NULL OR
         pndocume IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vnumerr := pac_md_siniestros.f_del_sin_trami_doc(pnsinies, pntramit, pndocume, mensajes);

      IF vnumerr > 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam);
         RETURN 1;
      WHEN e_object_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         RETURN 1;
      WHEN OTHERS THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         RETURN 1;
   END f_del_sin_trami_doc;

    /***********************************************************************
       FUNCTION f_get_tramitaciones:
      obtiene las tramitaciones de un siniestro

   ***********************************************************************/
   FUNCTION f_get_tramitaciones(pnsinies IN VARCHAR2,
                            mensajes OUT t_iax_mensajes)
          RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS. f_get_tramitaciones ';
   BEGIN
      cur := pac_md_siniestros.f_get_tramitaciones(pnsinies,  mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_tramitaciones;

   /***********************************************************************
       FUNCTION f_get_reservas:
      obtiene las tramitaciones de un siniestro

   ***********************************************************************/
   FUNCTION f_get_reservas(pnsinies IN VARCHAR2,
                            mensajes OUT t_iax_mensajes)
          RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_get_reservas ';
   BEGIN
      cur := pac_md_siniestros.f_get_reservas(pnsinies,  mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_reservas;


     /***********************************************************************
     FUNCTION f_pagos_avion:
          f_pagos_avion

   ***********************************************************************/
   FUNCTION f_pagos_avion(pnsinies in varchar2, -- NÃšMERO DE SINIESTRO
                          pntramit in number, -- NÃšMERO DE TRAMITACIÃ“N
                          pnmovres in number, -- NÃšMERO MOVIMIENTO RESERVA
                          pctipres in number, -- CÃ“DIGO DE TIPO DE RESERVA
                          pctipgas in number, -- CÃ“DIGO DE TIPO DE GASTO
                          pcgarant in number, -- CÃ“DIGO DE GARANTÃ¿A
                          pcmonres in varchar2, -- MONEDA DE LA RESERVA
                          pnnumide_agencia in varchar2, -- NÃšMERO DE IDENTIFICACIÃ“N DE LA AGENCIA DE VIAJES
                          psperson_agencia in number,
                          pnnumide_aero in varchar2, -- NÃšMERO DE IDENTIFICACIÃ“N DE LA COMPAÃ‘Ã¿A AÃ‰REA
                          psperson_aero  in number,
                          pnfacref in varchar2,-- NÃšMERO DE FACTURA
                          pffacref in date, -- FECHA DE FACTURA
                          ptobserva in varchar2, -- OBSERVACIONES
                          pisinret_aero in number, -- IMPORTE BRUTO PASAJE AÃ‰REO
                          ppiva_aero in number, -- PORCENTAJE DE IVA PASAJE AÃ‰REO
                          piiva_aero in number, -- IMPORTE IVA PASAJE AÃ‰REO
                          piotrosgas_aero in number, -- IMPORTE DE OTROS GASTOS / TASA AEROPORTUARIA DEL PASAJE AÃ‰REO
                          pineto_aero in number, -- IMPORTE NETO PASAJE AÃ‰REO
                          pisinret_agencia in number, -- IMPORTE BRUTO AGENCIA
                          ppiva_agencia in number, -- PORCENTAJE IVA AGENCIA
                          piiva_agencia in number, -- IMPORTE IVA AGENCIA
                          pineto_agencia in number,-- IMPORTE NETO AGENCIA
                          --IAXIS 7655 AABC CONCEPTO DE PAGO
                          pcconpag  IN NUMBER,
                          --IAXIS 7655 AABC CONCEPTO DE PAGO
                          mensajes out t_iax_mensajes )
          RETURN NUMBER IS
      cerror      NUMBER;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_pagos_avion ';
      --IAXIS 7654 AABC cambio de cargas masivas pagos de siniestros
      vidres   NUMBER;
      vcmovres NUMBER;
      --IAXIS-4555_2 AABC Cambios en pantalla de tiquetes 
      vcconpag_agen NUMBER;
      --IAXIS 7654 AABC cambio de cargas masivas pagos de siniestros 
   BEGIN
      --IAXIS 7654 AABC cambio de cargas masivas pagos de siniestros  
      BEGIN 
        --
        SELECT idres, cmovres
          INTO vidres , vcmovres
          FROM sin_tramita_reserva sr
         WHERE sr.nsinies = pnsinies
           AND sr.ntramit = pntramit
           AND sr.ctipres = pctipres
           AND sr.nmovres = pnmovres
           AND sr.cgarant  = pcgarant
           AND sr.idres   = (SELECT MAX (idres)
                               FROM sin_tramita_reserva sr1
                              WHERE sr1.nsinies = sr.nsinies
                                AND sr1.ntramit = sr.ntramit
                                AND sr1.ctipres = sr.ctipres
                                AND sr1.nmovres = sr.nmovres
                                AND sr1.cgarant = sr.cgarant);
        --
      END;  
      --IAXIS-4555_2 AABC Cambios en pantalla de tiquetes
      BEGIN
         --
         SELECT nval1
           INTO vcconpag_agen 
           FROM sgt_subtabs_det 
          WHERE csubtabla = 9000023 
            AND ccla1 = pcconpag;
      EXCEPTION WHEN no_data_found THEN 
         --
         vcconpag_agen := pcconpag; 
         --
      END;      
      --IAXIS-4555_2 AABC Cambios en pantalla de tiquetes  
      cerror := pac_md_siniestros.f_pagos_avion(pnsinies,  pntramit, pnmovres, pctipres, pctipgas, pcgarant, pcmonres, pnnumide_agencia, psperson_agencia, pnnumide_aero, psperson_aero, pnfacref, pffacref, ptobserva, pisinret_aero,
                                              ppiva_aero, piiva_aero, piotrosgas_aero, pineto_aero, pisinret_agencia, ppiva_agencia, piiva_agencia, pineto_agencia,pcconpag,vcconpag_agen,vcmovres,vidres, mensajes);

      --IAXIS-4555_2 AABC Cambios en pantalla de tiquetes
      --IAXIS 7654 AABC cambio de cargas masivas pagos de siniestros 
      IF cerror > 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_object_error THEN
         ROLLBACK;
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           cerror);
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);

         RETURN 1;
   END f_pagos_avion;



  /***********************************************************************
    FUNCTION f_get_sin_tramita_apoyo:
         obtener los datos de una solicitud de apoyo tecnico

  ***********************************************************************/
  FUNCTION f_get_sin_tramita_apoyo (psintapoy IN NUMBER,
                                    pnsinies  IN VARCHAR2,
                                    pntramit  IN NUMBER,
                                    mensajes  OUT t_iax_mensajes)
     RETURN SYS_REFCURSOR IS
     v_cursor SYS_REFCURSOR;
     vnumerr  NUMBER(8) := 0;
     vpasexec NUMBER(8) := 1;
     vparam   VARCHAR2(500) := 'psintapoy: ' || psintapoy || 'pnsinies = ' ||
                               pnsinies || ' pntramit: ' || pntramit;
     vobject  VARCHAR2(200) := 'PAC_IAX_siniestros.f_get_sin_tramita_apoyo';
  BEGIN
     v_cursor := pac_md_siniestros.f_get_sin_tramita_apoyo (psintapoy,
                                                            pnsinies,
                                                            pntramit,
                                                            mensajes);
     RETURN v_cursor;
  EXCEPTION
     WHEN OTHERS THEN
        pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                          vobject,
                                          1000001,
                                          vpasexec,
                                          vparam,
                                          psqcode  => SQLCODE,
                                          psqerrm  => SQLERRM);
        RETURN NULL;
  END f_get_sin_tramita_apoyo;

  /***********************************************************************
       FUNCTION f_set_sin_tramita_apoyo:
            guardar una solicitud de apoyo tecnico

     ***********************************************************************/
  FUNCTION f_set_sin_tramita_apoyo(psintapoy  IN NUMBER,
                                    pnsinies   IN VARCHAR2,
                                    pntramit   IN NUMBER,
                                    pnapoyo    IN NUMBER,
                                    pcunitra   IN VARCHAR2,
                                    pctramitad IN VARCHAR2,
                                    pfingreso  IN DATE,
                                    pftermino  IN DATE,
                                    pfsalida   IN DATE,
                                    ptobserva  IN VARCHAR2,
                                    ptlocali   IN VARCHAR2,
                                    pcsiglas   IN NUMBER,
                                    ptnomvia   IN VARCHAR2,
                                    pnnumvia   IN NUMBER,
                                    ptcomple   IN VARCHAR2,
                                    pcpais     IN NUMBER,
                                    pcprovin   IN NUMBER,
                                    pcpoblac   IN NUMBER,
                                    pcpostal   IN VARCHAR2,
                                    pcviavp    IN NUMBER,
                                    pclitvp    IN NUMBER,
                                    pcbisvp    IN NUMBER,
                                    pcorvp     IN NUMBER,
                                    pnviaadco  IN NUMBER,
                                    pclitco    IN NUMBER,
                                    pcorco     IN NUMBER,
                                    pnplacaco  IN NUMBER,
                                    pcor2co    IN NUMBER,
                                    pcdet1ia   IN NUMBER,
                                    ptnum1ia   IN VARCHAR2,
                                    pcdet2ia   IN NUMBER,
                                    ptnum2ia   IN VARCHAR2,
                                    pcdet3ia   IN NUMBER,
                                    ptnum3ia   IN VARCHAR2,
                                    plocalidad IN VARCHAR2,
                                    pfalta     IN DATE,
                                    pcusualt   IN VARCHAR2,
                                    pfmodifi   IN DATE,
                                    pcusumod   IN VARCHAR2,
                                    ptobserva2 IN VARCHAR2,
                                    pcagente   IN NUMBER,
                                    psperson   IN NUMBER,
                                    mensajes   OUT t_iax_mensajes)
     RETURN NUMBER IS
     vnumerr  NUMBER(8) := 0;
     vpasexec NUMBER(8) := 1;
     vparam   VARCHAR2(500) := '';
     vobject  VARCHAR2(200) := 'PAC_IAX_siniestros.f_set_sin_tramita_apoyo';
     cont     NUMBER;
  BEGIN
     vnumerr := pac_md_siniestros.f_set_sin_tramita_apoyo (psintapoy,
                                                       pnsinies,
                                                       pntramit,
                                                       pnapoyo,
                                                       pcunitra,
                                                       pctramitad,
                                                       pfingreso,
                                                       pftermino,
                                                       pfsalida,
                                                       ptobserva,
                                                       ptlocali,
                                                       pcsiglas,
                                                       ptnomvia,
                                                       pnnumvia,
                                                       ptcomple,
                                                       pcpais,
                                                       pcprovin,
                                                       pcpoblac,
                                                       pcpostal,
                                                       pcviavp,
                                                       pclitvp,
                                                       pcbisvp,
                                                       pcorvp,
                                                       pnviaadco,
                                                       pclitco,
                                                       pcorco,
                                                       pnplacaco,
                                                       pcor2co,
                                                       pcdet1ia,
                                                       ptnum1ia,
                                                       pcdet2ia,
                                                       ptnum2ia,
                                                       pcdet3ia,
                                                       ptnum3ia,
                                                       plocalidad,
                                                       pfalta,
                                                       pcusualt,
                                                       pfmodifi,
                                                       pcusumod,
                                                       ptobserva2,
                                                       pcagente,
                                                       psperson,
                                                       mensajes);
      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      RETURN vnumerr;
  EXCEPTION
     WHEN OTHERS THEN
        pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                          vobject,
                                          1000001,
                                          vpasexec,
                                          vparam,
                                          psqcode  => SQLCODE,
                                          psqerrm  => SQLERRM);
        RETURN 1;
  END f_set_sin_tramita_apoyo;

  /***********************************************************************
       FUNCTION f_del_sin_tramita_apoyo:
            eliminar una solicitud de apoyo tecnico
            autor: andres Betancourt 05/06/2019

     ***********************************************************************/
  FUNCTION f_del_sin_tramita_apoyo (psintapoy IN NUMBER,
                                    pnsinies  IN VARCHAR2,
                                    pntramit  IN NUMBER,
                                    mensajes  OUT t_iax_mensajes)
     RETURN NUMBER IS
     vnumerr  NUMBER(8) := 0;
     vpasexec NUMBER(8) := 1;
     vparam   VARCHAR2(500) := 'psintapoy: ' || psintapoy || 'pnsinies = ' ||
                               pnsinies || ' pntramit: ' || pntramit;
     vobject  VARCHAR2(200) := 'PAC_IAX_siniestros.f_del_sin_tramita_apoyo';
  BEGIN
     vnumerr := pac_md_siniestros.f_del_sin_tramita_apoyo (psintapoy,
                                                       pnsinies,
                                                       pntramit,
                                                       mensajes);

     IF vnumerr <> 0
     THEN
        RAISE e_object_error;
     END IF;

     COMMIT;
     RETURN vnumerr;
  EXCEPTION
     WHEN OTHERS THEN
        pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                          vobject,
                                          1000001,
                                          vpasexec,
                                          vparam,
                                          psqcode  => SQLCODE,
                                          psqerrm  => SQLERRM);
        RETURN 1;
  END f_del_sin_tramita_apoyo;
   /***********************************************************************
       BUG:3609
	   FUNCTION f_get_clasificasiniestro:
            clasificacion de siniestros
            autor: A.B - 05/06/2019
  
     ***********************************************************************/
  FUNCTION f_get_clasificasiniestro (pnsinies IN VARCHAR2, pnpagos  IN NUMBER,  pntramita  IN NUMBER,  mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
      cur      SYS_REFCURSOR;
      vpasexec NUMBER(8) := 1;
      vparam   VARCHAR2(100) := '';
      vobject  VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_get_clasificasiniestro';
   BEGIN
      cur := pac_md_siniestros.f_get_clasificasiniestro(pnsinies,pnpagos, pntramita, mensajes);
      RETURN cur;
   EXCEPTION
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobject,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           psqcode  => SQLCODE,
                                           psqerrm  => SQLERRM);
         IF cur%ISOPEN
         THEN
            CLOSE cur;
         END IF;

         RETURN cur;
   END f_get_clasificasiniestro;
   
   /*************************************************************************
      FUNCTION f_ins_estimasini
         Inserta a la tabla sin_tramita_estsiniestro.
         param in pnsinies : numero de siniestro
         param in ntramit  : numero de tramitacion
         param in nmovimi  : numero de movimiento
         param in nmaxpp   : maxima perdida probable
         param in ncontin   : valor de la contingencia
         param in nriesgo   : valor del riesgo
         param in cobserv   : observaciones
         param in pnclasepro valor Clase de proceso
         param in pninstproc valor Instancia del Proceso
         param in pnfallocp valor Fallo
         param in pncalmot valor Calificación Motivos
         param in pfcontingen valor Fecha
         param in ptobsfallo valor Observación de Fallo
         return            : 0 -> correcto
                             1 -> error
      IAXIS 3603 AABC 10/05/2019
   *************************************************************************/
   
   FUNCTION f_ins_estimasini(
      pnsinies IN NUMBER,
      pntramit  IN NUMBER,
      pnmovimi  IN NUMBER,
      pnmaxpp  IN NUMBER,
      pncontin  IN NUMBER,
      pnriesgo  IN NUMBER,
      pcobserv IN VARCHAR2
    ,pnclasepro IN NUMBER
    ,pninstproc IN NUMBER
    ,pnfallocp IN NUMBER
    ,pncalmot IN NUMBER
    ,pfcontingen IN DATE
    ,ptobsfallo IN VARCHAR2,
      mensajes OUT t_iax_mensajes)
	  RETURN NUMBER 
   IS
      vobjectname VARCHAR2(500) := 'pac_md_siniestros.f_ins_estimasini';
      vparam      VARCHAR2(500) := 'parametros IAX - pnsinies:' || pnsinies || ' pntramit: ' || pntramit || ' pnmovimi: ' || pnmovimi || ' pnmaxpp: ' || pnmaxpp || ' pncontin: ' || pncontin || ' pnriesgo: ' || pnriesgo || ' nclasepro:' || pnclasepro || ' ninstproc:' || pninstproc || ' nfallocp:' || pnfallocp || ' ncalmot:' || pncalmot || ' fcontingen:' || pfcontingen ;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;
   BEGIN
     vnumerr    := pac_md_siniestros.f_ins_estimasini(pnsinies, pntramit, pnmovimi, pnmaxpp, pncontin, pnriesgo, pcobserv,pnclasepro,pninstproc,pnfallocp,pncalmot,pfcontingen,ptobsfallo,mensajes);
      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;
      vpasexec := 6;
      RETURN vnumerr;
   EXCEPTION
      WHEN e_param_error THEN
	  pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam, NULL, SQLCODE, SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_ins_estimasini;
   
   /*************************************************************************
    f_get_tramita_estsini
    Traspasa los valores de los parámetros a los atributos del objeto f_get_tramita_estsini.
    param in pnsinies                : número de siniestro
    param in pntramte                : número de trámite
    return                           : cursor
   ************************************************************************/
   FUNCTION f_get_tramita_estsini(
      pnsinies IN VARCHAR2,
      pntramit IN NUMBER,
      mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
        vparam      VARCHAR2(500) := 'pnsinies: ' || pnsinies || ' - pntramit: ' || pntramit;
        vpasexec    NUMBER(5) := 1;
        vobjectname VARCHAR2(100):= 'PAC_IAX_SINIESTROS.f_get_tramita_estsini';
        numerr NUMBER;
    BEGIN
   
      IF pnsinies IS NULL OR
        pntramit IS NULL
      THEN
        RAISE e_param_error;
      END IF;
      RETURN pac_md_siniestros.f_get_tramita_estsini(pnsinies, pntramit, mensajes);

   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam,
                                           NULL, SQLCODE, SQLERRM);
         RETURN NULL;
   END f_get_tramita_estsini;
   
--Inico IAXIS 4184 07/06/2019 MOS Incluir Cambios Cargue Masivo para pagos
  /***********************************************************************
     FUNCTION f_cargue masivo:
          realiza el cargue masivo de pagos
          autor: Marcelo Ozawa de Sousa - 03/06/2019
   ***********************************************************************/
FUNCTION f_cargue_masivo (pnsinies in varchar2, -- NUMERO DE SINIESTRO
                          pntramit in number, -- NUMERO DE TRAMITACION
                          pnmovres in number, -- NUMERO MOVIMIENTO RESERVA
                          pctipres in number, -- CODIGO DE TIPO DE RESERVA
                          pctipgas in number, -- CODIGO DE TIPO DE GASTO                    
                          pcmonres in varchar2, -- MONEDA DE LA RESERVA            
                          pnnumide in varchar2, -- NUMERO DE IDENTIFICACION
                          psperson in number,
                          pnfacref in varchar2, -- NUMERO DE FACTURA
                          pffacref in date, -- FECHA DE FACTURA
                          ptobserva in varchar2, -- OBSERVACIONES
                          pisinret in number, -- IMPORTE BRUTO PASAJE AEREO
                          ppiva in number, -- PORCENTAJE DE IVA PASAJE AEREO
                          piiva in number, -- IMPORTE IVA PASAJE AEREO
                          piotrosgas in number, -- IMPORTE DE OTROS GASTOS
                          pineto in number, -- IMPORTE NETO PASAJE AEREO 
                          pcconpag in number, -- CONCEPTO DE PAGO
                          psproces in number, -- Porceso IAXIS4184 aabc  
                          mensajes out t_iax_mensajes) RETURN NUMBER IS
    cerror      NUMBER;
    vpasexec    NUMBER(8) := 1;
    vparam      VARCHAR2(100) := '';
    vobject     VARCHAR2(200) := 'PAC_IAX_SINIESTROS.f_cargue_masivo ';
BEGIN
    cerror := pac_md_siniestros.f_cargue_masivo(pnsinies, pntramit, pnmovres, pctipres, pctipgas, pcmonres, pnnumide, psperson,
                                               pnfacref, pffacref, ptobserva, pisinret, ppiva, piiva, NULL, piotrosgas, pineto, pcconpag,psproces,NULL, mensajes);
    IF cerror > 0 THEN
        RAISE e_object_error;
    END IF;
    RETURN 0;
    EXCEPTION
        WHEN e_object_error THEN
            ROLLBACK;
            pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                              vobject,
                                              1000006,
                                              vpasexec,
                                              vparam,
                                              cerror);
            RETURN 1;
        WHEN OTHERS THEN
            pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                              vobject,
                                              1000001,
                                              vpasexec,
                                              vparam,
                                              psqcode  => SQLCODE,
                                              psqerrm  => SQLERRM);
            RETURN 1;
END f_cargue_masivo;   
--Fin IAXIS 4184 07/06/2019 MOS Incluir Cambios Cargue Masivo para pagos

/*************************************************************************
    f_get_max_tramita_estsini bug 3603
    obtener el maximo movimiento de la tabla sin_tramita_estsiniestro de acuerdo a un siniestro
    param in pnsinies                : no de siniestro
    param in pntramte                : no de tramite
    return                           : cursor
   ************************************************************************/
   
    FUNCTION f_get_max_tramita_estsini( pnsinies IN VARCHAR2,
      mensajes OUT t_iax_mensajes)
      RETURN SYS_REFCURSOR IS
        vparam      VARCHAR2(500) := 'pnsinies: ' || pnsinies;
        vpasexec    NUMBER(5) := 1;
        vobjectname VARCHAR2(100):= 'PAC_MD_SINIESTROS.f_get_max_tramita_estsini';
        numerr NUMBER;
    BEGIN
      IF pnsinies IS NULL 
      THEN
        RAISE e_param_error;
      END IF;
      RETURN pac_md_siniestros.f_get_max_tramita_estsini(pnsinies, mensajes);

   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000005, vpasexec, vparam);
         RETURN NULL;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000006, vpasexec, vparam);
         RETURN NULL;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes, vobjectname, 1000001, vpasexec, vparam,
                                           NULL, SQLCODE, SQLERRM);
         RETURN NULL;
   END f_get_max_tramita_estsini;
   /*************************************************************************
    funcion borra localizacion de tramitacion
    ob_iax_siniestros.localizacion
      param in pnsinies : numero de siniestro
    param in pntramit : numero de siniestro
       nlocali        NUMBER(3),   --Numero Localizacion Siniestro

   *************************************************************************/
   FUNCTION f_del_localizacion(pnsinies IN VARCHAR2,
                           pntramit IN NUMBER,
                           pnlocali IN NUMBER,
                           mensajes OUT t_iax_mensajes)
      RETURN NUMBER IS
      vobjectname VARCHAR2(500) := 'PAC_IAX_SINIESTROS.f_del_localizacion';
      vparam      VARCHAR2(500) := 'parÃ¡metros - pnsinies: ' || pnsinies ||
                                   ' - pntramit: ' || pntramit ||
                                   ' - pnlocali: ' || pnlocali;
      vpasexec    NUMBER(5) := 1;
      vnumerr     NUMBER(8) := 0;

   BEGIN
      --ComprovaciÃ³ dels parÃ¡metres d'entrada
      IF pnsinies IS NULL OR pntramit IS NULL OR pnlocali IS NULL
      THEN
         RAISE e_param_error;
      END IF;

      vpasexec := 2;

      vnumerr := pac_md_siniestros.f_del_localizacion(pnsinies,
                                                  pntramit,
                                                  pnlocali,
                                                  mensajes);

      vpasexec := 3;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      COMMIT;
      vnumerr := pac_md_siniestros.f_get_tramitaciones(pnsinies,
                                                       vgobsiniestro.tramitaciones,
                                                       mensajes);
      vpasexec := 4;

      IF vnumerr <> 0
      THEN
         RAISE e_object_error;
      END IF;

      RETURN 0;
   EXCEPTION
      WHEN e_param_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000005,
                                           vpasexec,
                                           vparam);
         ROLLBACK;
         RETURN 1;
      WHEN e_object_error THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000006,
                                           vpasexec,
                                           vparam,
                                           vnumerr);
         ROLLBACK;
         RETURN 1;
      WHEN OTHERS THEN
         pac_iobj_mensajes.p_tratarmensaje(mensajes,
                                           vobjectname,
                                           1000001,
                                           vpasexec,
                                           vparam,
                                           NULL,
                                           SQLCODE,
                                           SQLERRM);
         ROLLBACK;
         RETURN 1;
   END f_del_localizacion;
END pac_iax_siniestros;
/