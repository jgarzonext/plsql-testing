--------------------------------------------------------
--  DDL for Function F_SOLCONSORCI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "AXIS"."F_SOLCONSORCI" (PSPROCES IN  NUMBER, PSSOLICIT   IN NUMBER, PNRECIBO IN NUMBER,
                       PNRIESGO IN  NUMBER, PFEFECTO    IN DATE,   PFVENCIM IN DATE,
                       PCRAMO   IN  NUMBER, PCMODALI    IN NUMBER,
                       PCACTIVI IN  NUMBER, PCCOLECT    IN NUMBER, PCTIPSEG IN NUMBER,
                       PCDURACI IN  NUMBER, PNDURACI    IN NUMBER,
                       PGRABAR  OUT NUMBER, PFACCONSOR  IN NUMBER)
               RETURN NUMBER authid current_user IS
/* ***************************
	CÁLCULO DEL CONSORCIO PARA LA IMPRESIÓN DE SOLICITUDES.
**************************** */
	ERROR		      NUMBER := 0;
	XMESES	      NUMBER;
	XRESULT	      NUMBER;
	XCCLARIE	      NUMBER;
	XSEGTEMPORADA	BOOLEAN;
	XSEGTEMP1		NUMBER;
	XCTIPCLA		NUMBER;
	XIVALNOR		NUMBER;
	XVALORCONSORCIO	NUMBER;
	XCAPITALTROBAT	NUMBER;
	XCAPITALTOTAL	NUMBER;
	XPERCENT		NUMBER;
	XTOTCAPITAL		NUMBER;
	XNVALOR1		NUMBER;
	XNVALOR2		NUMBER;
	ICONCEP0		NUMBER;
	XCGARANT		NUMBER;
	XNRIESGO		NUMBER;
	XCGARANTANT		NUMBER;
	XTOTCAPITALANT	NUMBER;
	XCAPITALTOTALANT	NUMBER;
	XNRIESGOANT		NUMBER;
	XCGARANTSEG		NUMBER;
	XNRIESGOSEG		NUMBER;
	XGRABAR		NUMBER := 0;
	XNMOVIMIANT		NUMBER;
	XNMOVIMISEG		NUMBER;
	XFEFECTOANT		DATE;
	XFEFECTOSEG		DATE;
	DECIMALS		NUMBER := 0;
	EXISTANT		BOOLEAN := TRUE;
	XINNOMIN		BOOLEAN;
	XNASEGUR1		NUMBER;
	XNASEGUR2		NUMBER;
	XCOBJASE		NUMBER;
	XINSERT		BOOLEAN;
	XNMOVIMA		NUMBER;
-- COASEGURO
      XCTIPCOA          NUMBER:=0;   -- INICIALIZADO A "NO COASEGURO"
      XNCUACOA          NUMBER;
      XPLOCCOA          NUMBER;
      XSUMANETA         NUMBER;
      XHAY_PR           BOOLEAN := FALSE;
      XICONSOR          NUMBER;
      XCIMPCON          NUMBER;
      XDIFDIASEVE       NUMBER;
      CURSOR CUR_GARANSEGXRISC IS
		SELECT NRIESGO, CGARANT
		FROM SOLGARANSEG
		WHERE SSOLICIT = PSSOLICIT
              AND NRIESGO  = NVL(PNRIESGO, NRIESGO);
FUNCTION F_ESCONSORCIABLE (PFCGARANT IN NUMBER, PFCRAMO IN NUMBER,   PFCMODALI IN NUMBER,
                           PFCCOLECT IN NUMBER, PFCTIPSEG IN NUMBER, PFCACTIVI IN NUMBER,
                           PFNERROR OUT NUMBER) RETURN NUMBER IS
--
-- COMPROBACIÓN DE SI UNA GARANTÍA ES CONSORCIABLE
--
XFCIMPCON	NUMBER;
BEGIN
  BEGIN
    SELECT CIMPCON
      INTO XFCIMPCON
      FROM GARANPRO
     WHERE CRAMO   = PFCRAMO   AND
	     CMODALI = PFCMODALI AND
	     CCOLECT = PFCCOLECT AND
	     CTIPSEG = PFCTIPSEG AND
	     CGARANT = PFCGARANT AND
	     CACTIVI = NVL(PFCACTIVI, 0);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      BEGIN
        SELECT NVL(CIMPCON, 0)
	  INTO XFCIMPCON
	  FROM GARANPRO
	 WHERE CRAMO   = PFCRAMO   AND
	       CMODALI = PFCMODALI AND
	       CCOLECT = PFCCOLECT AND
	       CTIPSEG = PFCTIPSEG AND
	       CGARANT = PFCGARANT AND
      	 CACTIVI = 0;
      EXCEPTION
	WHEN NO_DATA_FOUND THEN
	  PFNERROR := 104110;	-- PRODUCTE NO TROBAT A GARANPRO
	  RETURN 0;
	WHEN OTHERS THEN
	  PFNERROR := 103503;  -- ERROR AL LLEGIR DE LA TAULA GARANPRO
	  RETURN 0;
      END;
    WHEN OTHERS THEN
      PFNERROR := 103503;	 -- ERROR AL LLEGIR DE LA TAULA GARANPRO
      RETURN 0;
  END;
  PFNERROR := 0;
  RETURN XFCIMPCON;
END;    -- F_ESCONSORCIABLE
--
-- CONSORCIO A PRIMER RIESGO
--
FUNCTION F_SOLCONSOR_PR (PNRECIBO IN NUMBER) RETURN NUMBER IS
-- ELIMINA LAS LINEAS DE CONSORCIO DE DETRECIBOSCAR QUE SOBRAN EN FUNCIÓN DE SI NOS QUEDAMOS
-- CON EL PRIMER RIESGO O EL RESTO.
XSUMA_NOPR NUMBER;
XPERCENT   NUMBER;
XNVALOR1   NUMBER;
XNVALOR2   NUMBER;
ERROR      NUMBER;
CURSOR SUM_CONSOR_PR_CAR IS
SELECT NRECIBO C_RECIBO, NRIESGO C_RIESGO, SUM(ICONCEP) C_SUMA_PR
  FROM DETRECIBOSCAR
 WHERE NRECIBO = PNRECIBO
   AND CCONCEP IN (2,52)
   AND CGARANT = 212
 GROUP BY NRECIBO, NRIESGO;
BEGIN
 FOR SCPR_CAR IN SUM_CONSOR_PR_CAR
 LOOP
   BEGIN
     SELECT SUM(ICONCEP)
       INTO XSUMA_NOPR
       FROM DETRECIBOSCAR
      WHERE NRECIBO = SCPR_CAR.C_RECIBO
        AND CCONCEP IN (2,52)
        AND CGARANT <> 212
        AND NRIESGO = SCPR_CAR.C_RIESGO;
   EXCEPTION
     WHEN NO_DATA_FOUND THEN
       RETURN  103470;	-- REBUT NO TROBAT
     WHEN OTHERS THEN
       RETURN 103516;     -- ERROR AL LLEGIR
   END;
   XPERCENT := (SCPR_CAR.C_SUMA_PR / XSUMA_NOPR ) * 100;  -- PORCENTAJE
   IF XPERCENT IS NOT NULL THEN
     BEGIN
       SELECT NVALOR1, NVALOR2
         INTO XNVALOR1, XNVALOR2
         FROM LIMITES
        WHERE CLIMITE = 1
          AND XPERCENT >= NMINIMO
          AND(XPERCENT < NMAXIMO OR NMAXIMO IS NULL);
     EXCEPTION
       WHEN NO_DATA_FOUND THEN
         RETURN 103834;	--LÍMIT NO TROBAT A LIMITES
       WHEN OTHERS THEN
         RETURN 103514;     -- ERROR AL LLEGIR DE LA TAULA
     END;
     XSUMA_NOPR := XSUMA_NOPR * XNVALOR2 /100 ;   -- RESTA
     SCPR_CAR.C_SUMA_PR := SCPR_CAR.C_SUMA_PR * XNVALOR1; -- PRIMER RISC
     IF XSUMA_NOPR < SCPR_CAR.C_SUMA_PR THEN
        -- NOS QUEDAMOS CON EL CONSORCIO DEL PRIMER RIESGO Y APLICAMOS LA REDUCCION
        -- AL RESTO
         BEGIN
           DELETE FROM DETRECIBOSCAR
            WHERE NRECIBO = SCPR_CAR.C_RECIBO
              AND NRIESGO = SCPR_CAR.C_RIESGO
              AND CCONCEP IN (2,52)
              AND CGARANT <> 212;
         EXCEPTION
           WHEN NO_DATA_FOUND THEN
		   ERROR := 103470;	-- REBUT NO TROBAT
		   RETURN ERROR;
	     WHEN OTHERS THEN
		   ERROR := 105159;     -- ERROR A L'ESBORRAR
		   RETURN ERROR;
         END;
         BEGIN
           UPDATE DETRECIBOSCAR
              SET ICONCEP = ICONCEP * XNVALOR1
            WHERE NRECIBO = SCPR_CAR.C_RECIBO
              AND NRIESGO = SCPR_CAR.C_RIESGO
              AND CCONCEP IN (2,52)
              AND CGARANT = 212;
         EXCEPTION
           WHEN NO_DATA_FOUND THEN
		   ERROR := 103470;	-- REBUT NO TROBAT
		   RETURN ERROR;
	     WHEN OTHERS THEN
		   ERROR := 104378;     -- ERROR A L'ACTUALITZAR
		   RETURN ERROR;
         END;
	ELSE
	  -- NOS QUEDAMOS CON EL RESTO Y APLICAMOS LA REDUCCION
        -- AL PRIMER RIESGO
         BEGIN
           DELETE FROM DETRECIBOSCAR
            WHERE NRECIBO = SCPR_CAR.C_RECIBO
              AND NRIESGO = SCPR_CAR.C_RIESGO
              AND CCONCEP IN (2,52)
              AND CGARANT = 212;
         EXCEPTION
           WHEN NO_DATA_FOUND THEN
		   ERROR := 103470;	-- REBUT NO TROBAT
		   RETURN ERROR;
	     WHEN OTHERS THEN
		   ERROR := 105159;     -- ERROR A L'ESBORRAR
		   RETURN ERROR;
         END;
         BEGIN
           UPDATE DETRECIBOSCAR
              SET ICONCEP = ICONCEP * XNVALOR2 / 100
            WHERE NRECIBO = SCPR_CAR.C_RECIBO
              AND NRIESGO = SCPR_CAR.C_RIESGO
              AND CCONCEP IN (2,52)
              AND CGARANT <> 212;
         EXCEPTION
           WHEN NO_DATA_FOUND THEN
		   ERROR := 103470;	-- REBUT NO TROBAT
		   RETURN ERROR;
	     WHEN OTHERS THEN
		   ERROR := 104378;     -- ERROR A L'ACTUALITZAR
		   RETURN ERROR;
         END;
     END IF;
  END IF;
 END LOOP;
RETURN 0;
END;
--
-- INICIO CUERPO PRINCIPAL
--
BEGIN
  PGRABAR := 0;	-- EN UN PRINCIPI, NO HEM GRABAT RES
  BEGIN
    SELECT COBJASE
      INTO XCOBJASE
      FROM PRODUCTOS
     WHERE CRAMO = PCRAMO AND
           CMODALI = PCMODALI AND
           CTIPSEG = PCTIPSEG AND
           CCOLECT = PCCOLECT;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
	RETURN 104347;		-- PRODUCTE NO TROBAT A PRODUCTOS
    WHEN OTHERS THEN
	RETURN 102705;		-- ERROR AL LLEGIR DE PRODUCTOS
  END;
  IF XCOBJASE = 4 THEN		-- PRODUCTE INNOMINAT
    XINNOMIN := TRUE;
  ELSE
    XINNOMIN := FALSE;
  END IF;
  -- MIREM SI ÉS UNA ASSEGURANÇA DE TEMPORADA, I QUIN ÉS EL PERCENTATGE QUE
  -- LI CORRESPON, SI HO ÉS.
  IF PCDURACI = 2 THEN
    XMESES        := PNDURACI;
    XSEGTEMPORADA := TRUE;
  ELSIF PCDURACI = 3 THEN
    ERROR := F_DIFDATA(PFEFECTO, PFVENCIM, 1, 2, XRESULT);
    IF ERROR = 0 THEN
	XMESES        := XRESULT;
      XSEGTEMPORADA := TRUE;
    ELSE
	RETURN ERROR;
    END IF;
  ELSE
    XSEGTEMPORADA := FALSE;
  END IF;
  IF XSEGTEMPORADA THEN
    BEGIN
	SELECT MIN(NVALOR1)   -- SIEMPRE ES CRECIENTE
	  INTO XSEGTEMP1
	  FROM LIMITES
	 WHERE CLIMITE = 2
         AND XMESES >= NMINIMO
         AND(XMESES <= NMAXIMO OR NMAXIMO IS NULL);
    EXCEPTION
	WHEN NO_DATA_FOUND THEN
	  ERROR := 103834;	-- LÍMIT NO TROBAT A LA TAULA LIMITES
	  RETURN ERROR;
	WHEN OTHERS THEN
	  ERROR := 103514;	-- ERROR AL LLEGIR DE LA TAULA LIMITES
	  RETURN ERROR;
    END;
    IF XSEGTEMP1 IS NOT NULL THEN
	XSEGTEMP1 := XSEGTEMP1 / 100;
    ELSE
	RETURN 103835;		-- AQUEST CAMP NO POT SER NUL
    END IF;
  END IF;
/* ******** -- DE MOMENTO NO HAY COASEGURO
  -- BUSCAMOS EL PORCENTAJE LOCAL SI ES UN COASEGURO.
  SELECT CTIPCOA, NCUACOA
    INTO XCTIPCOA, XNCUACOA
    FROM SOLSEGUROS
   WHERE SSOLICIT = PSSOLICIT;
  IF XCTIPCOA!= 0 THEN
    SELECT PLOCCOA
      INTO XPLOCCOA
      FROM SOLCOACUADRO
     WHERE NCUACOA  = XNCUACOA
       AND SSOLICIT = PSSOLICIT;
  END IF;
*****************/
  FOR GAR IN CUR_GARANSEGXRISC
  LOOP
    XNASEGUR1 := 0;
    XNASEGUR2 := 0;
    XCIMPCON := F_ESCONSORCIABLE(GAR.CGARANT, PCRAMO, PCMODALI, PCCOLECT,
                                      PCTIPSEG,    PCACTIVI, ERROR);
    IF ERROR <> 0 THEN
      RETURN ERROR;
    END IF;
    IF XCIMPCON = 1 THEN  -- LA GARANTÍA NO ES CONSORCIABLE
                          -- NO REALIZAMOS NINGÚN CÁLCULO
      BEGIN
        SELECT DECODE(NASEGUR, NULL, 1, NASEGUR)
          INTO XNASEGUR1
          FROM SOLRIESGOS
         WHERE SSOLICIT = PSSOLICIT
           AND NRIESGO  = GAR.NRIESGO;
	EXCEPTION
	  WHEN NO_DATA_FOUND THEN
	    RETURN 103836;     -- RISC NO TROBAT A LA TAULA RIESGOS
	  WHEN OTHERS THEN
	    RETURN 103509;	-- ERROR AL LLEGIR DE LA TAULA RIESGOS
      END;
      BEGIN
        SELECT CCLARIE
          INTO XCCLARIE
          FROM CODIACTSEG
         WHERE CRAMO   = PCRAMO
           AND CACTIVI = PCACTIVI;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          RETURN 103837;     -- RAM I ACTIVITAT NO TROBADES A CODIACTSEG
        WHEN OTHERS THEN
          RETURN 103510;	-- ERROR AL LLEGIR DE LA TAULA CODIACTSEG
      END;
      IF XCCLARIE IS NOT NULL THEN
        BEGIN
          SELECT CTIPCLA, IVALNOR
            INTO XCTIPCLA, XIVALNOR
            FROM CODICLARIE
           WHERE CCLARIE = XCCLARIE;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            RETURN 103838;    -- CLASSE DE RISC NO TROBADA A CODICLARIE
          WHEN OTHERS THEN
            RETURN 103511;	-- ERROR AL LLEGIR DE LA TAULA CODICLARIE
        END;
        IF XCTIPCLA IS NOT NULL THEN
          IF XCTIPCLA = 2 THEN    -- CONSORCIO FIJO POR ACTIVIDAD
            XVALORCONSORCIO := XIVALNOR;
            IF XINNOMIN THEN		-- ES INNOMINAT
              XVALORCONSORCIO := NVL(XVALORCONSORCIO, 0) * XNASEGUR1;
            END IF;
          ELSIF XCTIPCLA = 1 THEN  -- CONSORCI SOBRE EL CAPITAL
            BEGIN
--              SELECT NVL(ICAPTOT, 0)  -- SI HAY COASEGURO DEBE PONERSE EL ICAPTOT
              SELECT NVL(ICAPITAL, 0)
                INTO XTOTCAPITAL
                FROM SOLGARANSEG
               WHERE SSOLICIT = PSSOLICIT
                 AND NRIESGO  = GAR.NRIESGO
                 AND CGARANT  = GAR.CGARANT;
            EXCEPTION
              WHEN NO_DATA_FOUND THEN
                XTOTCAPITAL :=0;
                NULL;
              WHEN OTHERS THEN
                RETURN 103500;  -- ERROR AL LLEGIR DE LA TAULA GARANSEG
            END;
            IF ERROR = 0 THEN
              IF XINNOMIN THEN		-- ES INNOMINAT
                XTOTCAPITAL := NVL(XTOTCAPITAL, 0) * XNASEGUR1;
              END IF;
              XCAPITALTROBAT := NVL(XTOTCAPITAL, 0) * (XIVALNOR / 1000); -- CONSORCIO(VT)
              IF GAR.CGARANT = 212 THEN	 -- ES LA GARANTIA DE PRIMER RIESGO
                XHAY_PR := TRUE;
              END IF;
              XVALORCONSORCIO := XCAPITALTROBAT;
            ELSE
              RETURN ERROR;
            END IF;
          ELSIF XCTIPCLA = 3 THEN     -- CONSORCI SOBRE LA PRIMA
            BEGIN
              SELECT SUM(ICONCEP)
                INTO ICONCEP0
                FROM DETRECIBOS
               WHERE NRECIBO = PNRECIBO
                 AND NRIESGO = GAR.NRIESGO
                 AND CGARANT = GAR.CGARANT
                 AND (CCONCEP = 0 OR CCONCEP = 50)  -- LOCAL +  CEDIDA
               GROUP BY NRIESGO, CGARANT;
            EXCEPTION
              WHEN NO_DATA_FOUND THEN
                NULL;
              WHEN OTHERS THEN
                RETURN 103512;	-- ERROR AL LLEGIR DE DETRECIBOS
            END;
		XVALORCONSORCIO := NVL(ICONCEP0, 0) * (XIVALNOR / 100);
          END IF;
          IF XVALORCONSORCIO IS NOT NULL AND XVALORCONSORCIO <> 0 THEN
            IF XSEGTEMPORADA THEN
              XVALORCONSORCIO := XVALORCONSORCIO * XSEGTEMP1;
              IF XMESES > 12 THEN  -- ES HASTA EL VENCIMIENTO Y SUPERIOR AL AÑO
                ERROR := F_DIFDATA(PFEFECTO, PFVENCIM, 3, 3, XRESULT);
                IF ERROR = 0 THEN
                  IF XCTIPCLA = 2 THEN -- ES IMPORTE FIJO
                    XVALORCONSORCIO := XVALORCONSORCIO * CEIL(XRESULT/360);
			-- REDONDEA SIEMPRE POR ENCIMA
                  ELSIF XCTIPCLA = 1 THEN -- ES SOBRE EL CAPITAL
                    XVALORCONSORCIO := XVALORCONSORCIO * XRESULT/360;
                  ELSE
	-- SI ES SOBRE LA PRIMA NO DEBE HACERSE NADA PORQUE YA ES POR LA TOTALIDAD.
                    NULL;
                  END IF;
                ELSE
                  RETURN ERROR;
                END IF;
              END IF;
            ELSE
              XVALORCONSORCIO := XVALORCONSORCIO * PFACCONSOR;
            END IF;
            IF NVL(XVALORCONSORCIO, 0) <> 0 THEN
              XVALORCONSORCIO := ROUND(XVALORCONSORCIO, DECIMALS);
              ERROR := F_INSDETRECCAR(PSPROCES, PNRECIBO, 2, XVALORCONSORCIO,
                                      XPLOCCOA, GAR.CGARANT, GAR.NRIESGO, XCTIPCOA);
              IF ERROR = 0 THEN
                PGRABAR := 1;
              ELSE
                RETURN ERROR;
              END IF;
            END IF;
          END IF;
        END IF;
      END IF; -- CLASSE DE RISC NOT NULL
    END IF;
  END LOOP;
   -- EL.LIMINAR LES LINIES DE CONSORCI QUE SOBREN SI HI HA LA GARANTIA 212
  IF XHAY_PR THEN
    ERROR := F_SOLCONSOR_PR(PNRECIBO);
    IF ERROR <> 0 THEN
      RETURN ERROR;
    END IF;
  END IF;
  RETURN 0;
END;
 
 

/

  GRANT EXECUTE ON "AXIS"."F_SOLCONSORCI" TO "R_AXIS";
  GRANT EXECUTE ON "AXIS"."F_SOLCONSORCI" TO "CONF_DWH";
  GRANT EXECUTE ON "AXIS"."F_SOLCONSORCI" TO "PROGRAMADORESCSI";
