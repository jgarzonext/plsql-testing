--------------------------------------------------------
--  DDL for Function F_FISCALIDAD_PP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "AXIS"."F_FISCALIDAD_PP" ( PSSEGURO IN NUMBER, PANO IN NUMBER ) RETURN NUMBER IS

	  PRAGMA autonomous_transaction;

	  RETENPLAN NUMBER;
	  SP NUMBER;
	  APORPROMOTOR NUMBER;
	  APORPARTICIPE NUMBER;
	  SALDO NUMBER;
	  FECHA DATE;

      ANO NUMBER := PANO;
BEGIN
      SELECT SUM(IRETENC)
	  INTO RETENPLAN
	  FROM IRPF_PRESTACIONES, PRESTAPLAN -- > Retenciones de pagos de prestaciones de planes de pensiones
	  WHERE IRPF_PRESTACIONES.SPRESTAPLAN = PRESTAPLAN.SPRESTAPLAN
	  AND PRESTAPLAN.SSEGURO = PSSEGURO
	  AND TO_CHAR(FPAGO,'YYYY') = ANO;

	  SELECT SUM(DECODE(CTIPAPOR,'SP',IMOVIMI,0) )
                        ,SUM(DECODE(CMOVIMI,1,DECODE(CTASEGURO.SPERMIN,PROMOTORES.SPERSON,
						                                                                     DECODE(CTIPAPOR,'SP',0,IMOVIMI),0)
						                                                    ,2,DECODE(CTASEGURO.SPERMIN,PROMOTORES.SPERSON,
																			                 DECODE(CTIPAPOR,'SP',0,IMOVIMI),0),0) )
						,SUM(DECODE(CTASEGURO.SPERMIN,NULL,DECODE(CMOVIMI,1,IMOVIMI,2,IMOVIMI,0),0) )
	   INTO SP, APORPROMOTOR,APORPARTICIPE
	  FROM CTASEGURO, RIESGOS, SEGUROS, PROPLAPEN, PROMOTORES
	  WHERE RIESGOS.SSEGURO = CTASEGURO.SSEGURO
	  AND RIESGOS.SSEGURO = PSSEGURO
	  AND RIESGOS.FANULAC IS NULL
	  AND RIESGOS.SSEGURO = SEGUROS.SSEGURO
	  AND SEGUROS.SPRODUC = PROPLAPEN.SPRODUC
	  AND SEGUROS.CAGRPRO = 11
	  AND PROPLAPEN.CCODPLA = PROMOTORES.CCODPLA
	  AND TO_CHAR(FVALMOV,'YYYY')  = ANO
	  AND CMOVANU = 0
	  AND CMOVIMI NOT IN ( 0,54 ) ;

	  SELECT MAX(FVALORA) INTO FECHA
	  FROM SEGUROS, VALPARPLA , PROPLAPEN
	  WHERE SEGUROS.SSEGURO = PSSEGURO
	  AND SEGUROS.SPRODUC = PROPLAPEN.SPRODUC
	  AND VALPARPLA.CCODPLA = PROPLAPEN.CCODPLA;

	  IF FECHA > TO_DATE('31/12/' || TO_CHAR(PANO),'DD/MM/YYYY') THEN
            FECHA := TO_DATE('31/12/' || TO_CHAR(PANO),'DD/MM/YYYY');
	  END IF;
	 SALDO := 	F_Saldo_Pp ( PSSEGURO,FECHA,1 );

	  DELETE PLANFISCAL WHERE SSEGURO = PSSEGURO AND NANO = ANO;

	  INSERT INTO PLANFISCAL ( SSEGURO, NANO, DERECHOS
	                                                            ,APORPROM, APORSP, APORPARTI
																, RETENCION )
      VALUES ( PSSEGURO, ANO ,SALDO
	                      ,APORPROMOTOR,SP,APORPARTICIPE, NVL(RETENPLAN,0) );

	  COMMIT;

      RETURN 0;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
   RETURN -2; --> No se han encontrado datos.
  WHEN OTHERS THEN
   DBMS_OUTPUT.PUT_LINE ( 'ERROR -1 ' || SQLERRM );
   RETURN -1; --> Error
END F_Fiscalidad_Pp;

 
 

/

  GRANT EXECUTE ON "AXIS"."F_FISCALIDAD_PP" TO "R_AXIS";
  GRANT EXECUTE ON "AXIS"."F_FISCALIDAD_PP" TO "CONF_DWH";
  GRANT EXECUTE ON "AXIS"."F_FISCALIDAD_PP" TO "PROGRAMADORESCSI";
