--------------------------------------------------------
--  DDL for Function F_FORMAT_NNUMIDE
--------------------------------------------------------

CREATE OR REPLACE FUNCTION "F_FORMAT_NNUMIDE" ( PNNUMIDE IN VARCHAR2, PDIGITOIDE IN VARCHAR2)RETURN VARCHAR2 IS
  FORMATNUMBER        VARCHAR2(100) := '';
BEGIN
 IF LENGTH(PNNUMIDE) = 10 THEN
 
	IF PDIGITOIDE IS NOT NULL THEN
		IF SUBSTR(PNNUMIDE, LENGTH(PNNUMIDE), 1) = PDIGITOIDE THEN
			FORMATNUMBER := to_char(SUBSTR(PNNUMIDE, 0, LENGTH(PNNUMIDE)-1),'FM999G999G999G999G999G999', 'NLS_NUMERIC_CHARACTERS = '',.''') || '-' || PDIGITOIDE;
		ELSE
			FORMATNUMBER := to_char(PNNUMIDE,'FM999G999G999G999G999G999', 'NLS_NUMERIC_CHARACTERS = '',.''') || '-' || PDIGITOIDE;
		END IF;
	ELSE
		FORMATNUMBER := to_char(SUBSTR(PNNUMIDE, 0, LENGTH(PNNUMIDE)-1),'FM999G999G999G999G999G999', 'NLS_NUMERIC_CHARACTERS = '',.''') || '-' ||  SUBSTR(PNNUMIDE, LENGTH(PNNUMIDE), 1);
	END IF;
	
 ELSE
	IF PDIGITOIDE IS NOT NULL THEN
		IF SUBSTR(PNNUMIDE, LENGTH(PNNUMIDE), 1) = PDIGITOIDE THEN
			FORMATNUMBER := to_char(SUBSTR(PNNUMIDE, 0, LENGTH(PNNUMIDE)-1),'FM999G999G999G999G999G999', 'NLS_NUMERIC_CHARACTERS = '',.''') || '-' || PDIGITOIDE;
		ELSE
			FORMATNUMBER := to_char(PNNUMIDE,'FM999G999G999G999G999G999', 'NLS_NUMERIC_CHARACTERS = '',.''') || '-' || PDIGITOIDE;
		END IF;
	ELSE
		FORMATNUMBER := to_char(PNNUMIDE,'FM999G999G999G999G999G999', 'NLS_NUMERIC_CHARACTERS = '',.''');
	END IF;
	
 END IF;
    
	RETURN FORMATNUMBER;
EXCEPTION
  WHEN OTHERS THEN
    RETURN ('');
END F_FORMAT_NNUMIDE;
/
